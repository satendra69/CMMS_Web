{"version":3,"file":"static/js/7650.87be47b9.chunk.js","mappings":"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","sources":["sections/_examples/extra/multi-language-view.js","pages/components/extra/multi-language.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Radio from '@mui/material/Radio';\nimport Stack from '@mui/material/Stack';\nimport Tooltip from '@mui/material/Tooltip';\nimport Container from '@mui/material/Container';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport TablePagination from '@mui/material/TablePagination';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// routes\nimport { paths } from 'src/routes/paths';\n// locales\nimport { useLocales } from 'src/locales';\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nexport default function MultiLanguageView() {\n  const { allLangs, currentLang, t, onChangeLang } = useLocales();\n\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => setMounted(true), []);\n\n  const [page, setPage] = useState(2);\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = useCallback((event, newPage) => {\n    setPage(newPage);\n  }, []);\n\n  const handleChangeRowsPerPage = useCallback((event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }, []);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Multi Language\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Multi Language' },\n            ]}\n            moreLink={[\n              'https://react.i18next.com',\n              'https://mui.com/guides/localization/#main-content',\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Flexible\" />\n\n            <Box sx={{ p: 3 }}>\n              <RadioGroup\n                row\n                value={currentLang.value}\n                onChange={(event) => onChangeLang(event.target.value)}\n              >\n                {allLangs.map((lang) => (\n                  <FormControlLabel\n                    key={lang.label}\n                    value={lang.value}\n                    label={lang.label}\n                    control={<Radio />}\n                  />\n                ))}\n              </RadioGroup>\n\n              <Tooltip title={currentLang.label}>\n                <Stack direction=\"row\" alignItems=\"center\" sx={{ typography: 'h2', my: 3 }}>\n                  <Iconify icon={currentLang.icon} width={32} sx={{ mr: 1, borderRadius: 1 }} />\n                  {t('demo.title')}\n                </Stack>\n              </Tooltip>\n\n              <Typography>\n                Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n                hymenaeos. Praesent ac massa at ligula laoreet iaculis. Vivamus in erat ut urna\n                cursus vestibulum. In ac felis quis tortor malesuada pretium. Nulla porta dolor. Sed\n                consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi\n                a libero. Vestibulum rutrum, mi nec elementum vehicula, eros quam gravida nisl, id\n                fringilla neque ante vel mi. Cras varius. Nunc nec neque. Phasellus tempus.\n              </Typography>\n            </Box>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"System\" sx={{ pb: 2 }} />\n\n            <TablePagination\n              component=\"div\"\n              count={100}\n              page={page}\n              onPageChange={handleChangePage}\n              rowsPerPage={rowsPerPage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport MultiLanguageView from 'src/sections/_examples/extra/multi-language-view';\n\n// ----------------------------------------------------------------------\n\nexport default function MultiLanguagePage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra: Multi Language</title>\n      </Helmet>\n\n      <MultiLanguageView />\n    </>\n  );\n}\n"],"names":["MultiLanguageView","allLangs","currentLang","t","onChangeLang","useLocales","mounted","setMounted","useState","useEffect","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","useCallback","event","newPage","handleChangeRowsPerPage","parseInt","target","value","_jsxs","_Fragment","children","_jsx","Box","sx","py","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","moreLink","my","Stack","spacing","Card","CardHeader","title","p","RadioGroup","row","onChange","map","lang","FormControlLabel","label","control","Radio","Tooltip","direction","alignItems","typography","Iconify","icon","width","mr","borderRadius","Typography","pb","TablePagination","component","count","onPageChange","onRowsPerPageChange","MultiLanguagePage","Helmet"],"sourceRoot":""}