{"version":3,"file":"static/js/2832.a9cd54d5.chunk.js","mappings":"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","sources":["sections/Preventive_setup/Preventive-table-row.js","sections/Preventive_setup/PreventiveMaintenanceTableFiltersResult.js","sections/Preventive_setup/PreventiveMaintenance.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\n\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PreventiveTableRow({\r\n \r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onDeleteRow,\r\n  onEditRow,\r\n  onViewRow,\r\n}) {\r\n  \r\n  const {\r\n    prm_mst_pm_no,\r\n    prm_mst_type,\r\n    prm_mst_pm_grp,\r\n    prm_mst_assetno,\r\n    prm_mst_freq_code,\r\n    prm_mst_lpm_date,\r\n    prm_mst_lpm_closed_date,\r\n    prm_mst_next_create,\r\n    prm_mst_next_due,\r\n    prm_mst_lead_day,\r\n    prm_mst_closed_loop,\r\n    prm_mst_cal_startdate,\r\n    prm_mst_disable_flag,\r\n    prm_mst_curr_wo,\r\n    prm_mst_flt_code,\r\n    prm_mst_desc,\r\n    prm_mst_meter_id,\r\n    prm_mst_lpm_usg,\r\n    prm_mst_lpm_uom,\r\n    ast_grp_descs,\r\n    prm_mst_shadow_grp,\r\n    prm_mst_dflt_status,\r\n    prm_mst_plan_priority,\r\n    prm_det_chg_costcenter,\r\n    prm_mst_assetlocn,\r\n    prm_det_originator,\r\n    prm_det_approver,\r\n    prm_det_planner,\r\n    prm_det_crd_costcenter,\r\n    prm_det_l_account,\r\n    prm_det_m_account,\r\n    prm_det_c_account,\r\n    prm_det_project_id,\r\n    prm_det_safety,\r\n    prm_det_varchar20,\r\n    prm_det_cause_code,\r\n    prm_det_act_code,\r\n    prm_det_work_area,\r\n    prm_det_work_locn,\r\n    prm_det_work_grp,\r\n    prm_det_work_type,\r\n    prm_det_work_class,\r\n    prm_mst_create_by,\r\n    prm_mst_create_date,\r\n    \r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-indexed, so add 1\r\n    const year = date.getFullYear();\r\n    const hours = date.getHours().toString().padStart(2, '0');\r\n    const minutes = date.getMinutes().toString().padStart(2, '0');\r\n    return `${day}-${month}-${year} ${hours}:${minutes}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell> */}\r\n\r\n        <TableCell align=\"right\">\r\n          <IconButton color={popover.open ? 'primary' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n\r\n        <TableCell>{prm_mst_pm_no}</TableCell>\r\n        <TableCell>\r\n          {(() => {\r\n            if (prm_mst_type === 'G') {\r\n              return (\r\n                <div>\r\n                  {' '}\r\n                  <span\r\n                    style={{\r\n                      backgroundColor: '#2196F3',\r\n                      color: 'white',\r\n                      padding: '2px 7px 6px 7px',\r\n                      borderRadius: '5px',\r\n                      fontSize: '13px',\r\n                      fontWeight: 'bold',\r\n                    }}\r\n                  >\r\n                    Group ({prm_mst_type})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (prm_mst_type === 'A') {\r\n              return (\r\n                <div>\r\n                  {' '}\r\n                  <span\r\n                    style={{\r\n                      backgroundColor: '#19D895',\r\n                      color: 'white',\r\n                      padding: '2px 7px 6px 7px',\r\n                      borderRadius: '5px',\r\n                      fontSize: '13px',\r\n                      fontWeight: 'bold',\r\n                    }}\r\n                  >\r\n                   Asset ({prm_mst_type})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            return null; // Return null if none of the conditions match\r\n          })()}\r\n        </TableCell>\r\n        <TableCell>{prm_mst_pm_grp}</TableCell>\r\n        <TableCell>{prm_mst_assetno}</TableCell>\r\n        <TableCell>{prm_mst_freq_code}</TableCell>\r\n        <TableCell>{formatDate(prm_mst_lpm_date)}</TableCell>\r\n        <TableCell>{formatDate(prm_mst_lpm_closed_date)}</TableCell>\r\n        <TableCell>{formatDate(prm_mst_next_create)}</TableCell>\r\n        <TableCell>{formatDate(prm_mst_next_due)}</TableCell>\r\n        <TableCell>{prm_mst_lead_day}</TableCell>\r\n        <TableCell>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          {(() => {\r\n            if (prm_mst_closed_loop === '0') {\r\n              return (\r\n                <div>\r\n                 \r\n                  <span\r\n    \r\n                  >\r\n                      <FormControlLabel disabled control={<Checkbox />} />\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (prm_mst_closed_loop === '1') {\r\n              return (\r\n                <div className='CheckBoxColor'>\r\n                 \r\n                  <span\r\n                  >\r\n                  <FormControlLabel disabled  control={<Checkbox defaultChecked /> } />\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            return null; // Return null if none of the conditions match\r\n          })()}\r\n          </div>\r\n        </TableCell>\r\n        <TableCell>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          {(() => {\r\n            if (prm_mst_cal_startdate === '0') {\r\n              return (\r\n                <div>\r\n                 \r\n                  <span\r\n    \r\n                  >\r\n                      <FormControlLabel disabled control={<Checkbox />} />\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (prm_mst_cal_startdate === '1') {\r\n              return (\r\n                <div className='CheckBoxColor'>\r\n                 \r\n                  <span\r\n                  >\r\n                  <FormControlLabel disabled  control={<Checkbox defaultChecked /> } />\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            return null; // Return null if none of the conditions match\r\n          })()}\r\n          </div>\r\n        </TableCell>\r\n        <TableCell>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          {(() => {\r\n            if (prm_mst_disable_flag === '0') {\r\n              return (\r\n                <div>\r\n                 \r\n                  <span\r\n    \r\n                  >\r\n                      <FormControlLabel disabled control={<Checkbox />} />\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (prm_mst_disable_flag === '1') {\r\n              return (\r\n                <div className='CheckBoxColor'>\r\n                 \r\n                  <span\r\n                  >\r\n                  <FormControlLabel disabled  control={<Checkbox defaultChecked /> } />\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            return null; // Return null if none of the conditions match\r\n          })()}\r\n          </div>\r\n        </TableCell>\r\n        <TableCell>{prm_mst_curr_wo}</TableCell>\r\n        <TableCell>{prm_mst_flt_code}</TableCell>\r\n        <TableCell>{prm_mst_desc}</TableCell>\r\n        <TableCell>{prm_mst_meter_id}</TableCell>\r\n        <TableCell>{prm_mst_lpm_usg}</TableCell>\r\n        <TableCell>{prm_mst_lpm_uom}</TableCell>\r\n        <TableCell>{ast_grp_descs}</TableCell>\r\n        <TableCell>{prm_mst_shadow_grp}</TableCell>\r\n        <TableCell>{prm_mst_dflt_status}</TableCell>\r\n        <TableCell>{prm_mst_plan_priority}</TableCell>\r\n        <TableCell>{prm_det_chg_costcenter}</TableCell>\r\n        <TableCell>{prm_mst_assetlocn}</TableCell>\r\n        <TableCell>{prm_det_originator}</TableCell>\r\n        <TableCell>{prm_det_approver}</TableCell>\r\n        <TableCell>{prm_det_planner}</TableCell>\r\n     \r\n        <TableCell>{prm_det_crd_costcenter}</TableCell>\r\n        <TableCell>{prm_det_l_account}</TableCell>\r\n        <TableCell>{prm_det_m_account}</TableCell>\r\n        <TableCell>{prm_det_c_account}</TableCell>\r\n        <TableCell>{prm_det_project_id}</TableCell>\r\n        <TableCell>{prm_det_safety}</TableCell>\r\n        <TableCell>{prm_det_varchar20}</TableCell>\r\n        <TableCell>{prm_det_cause_code}</TableCell>\r\n        <TableCell>{prm_det_act_code}</TableCell>\r\n        <TableCell>{prm_det_work_area}</TableCell>\r\n        <TableCell>{prm_det_work_locn}</TableCell>\r\n        <TableCell>{prm_det_work_grp}</TableCell>\r\n        <TableCell>{prm_det_work_type}</TableCell>\r\n        <TableCell>{prm_det_work_class}</TableCell>\r\n        <TableCell>{prm_mst_create_by}</TableCell>\r\n        <TableCell>{formatDate(prm_mst_create_date)}</TableCell>\r\n       \r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:pen-bold\" />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onDeleteRow();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nPreventiveTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PreventivemaintenanceTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const handleRemoveStock = (inputValue) => {\r\n    const newValue = filters.stock.filter((item) => item !== inputValue);\r\n    onFilters('stock', newValue);\r\n  };\r\n\r\n  const handleRemovePublish = (inputValue) => {\r\n    const newValue = filters.publish.filter((item) => item !== inputValue);\r\n    onFilters('publish', newValue);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {!!filters.stock.length && (\r\n          <Block label=\"Stock:\">\r\n            {filters.stock.map((item) => (\r\n              <Chip key={item} label={item} size=\"small\" onDelete={() => handleRemoveStock(item)} />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        {!!filters.publish.length && (\r\n          <Block label=\"Publish:\">\r\n            {filters.publish.map((item) => (\r\n              <Chip\r\n                key={item}\r\n                label={item}\r\n                size=\"small\"\r\n                onDelete={() => handleRemovePublish(item)}\r\n              />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nPreventivemaintenanceTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import isEqual from 'lodash/isEqual';\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport React from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// @mui\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Stack from '@mui/material/Stack';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\n// Toastfy\r\nimport { ToastContainer, toast, Bounce } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// _mock\r\n\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\n\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableSkeleton,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport httpCommon from 'src/http-common';\r\nimport Swal from 'sweetalert2';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport { Icon } from '@iconify/react';\r\n\r\n \r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport { styled } from \"@mui/material/styles\";\r\n//import loderImg from \"../../../src/assets/img/Work_order.gif\";\r\nimport loderImg from \"../../../src/assets/img/Work_order.gif\";\r\n//\r\n\r\nimport PreventiveTableRow from './Preventive-table-row';\r\nimport PreventivemaintenanceTableFiltersResult from './PreventiveMaintenanceTableFiltersResult';\r\nimport ExportAssetlistToExcel from \"../Asset/ExportFIle/ExportAssetlistToExcel\";\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: '', label: 'Action', width: 60 },\r\n  { id: 'prm_mst_pm_no', label: 'PM ID', width: 100 },\r\n  { id: 'prm_mst_type', label: 'PM Type', width: 110, padding: 10 },\r\n  { id: 'prm_mst_pm_grp', label: 'PM Group', width: 140 },\r\n  { id: 'prm_mst_assetno', label: 'Asset No', width: 125 },\r\n  { id: 'prm_mst_freq_code', label: 'Frequency Code', width: 160 },\r\n  { id: 'prm_mst_lpm_date', label: 'LPM Date', width: 130 },\r\n  { id: 'prm_mst_lpm_closed_date', label: 'LPM Closed Date', width: 160 },\r\n  { id: 'prm_mst_next_create', label: 'Next Create Date', width: 160 },\r\n  { id: 'prm_mst_next_due', label: 'Next Due', width: 150 },\r\n  { id: 'prm_mst_lead_day', label: 'Lead Day', width: 110 },\r\n  { id: 'prm_mst_closed_loop', label: 'Closed Loop?', width: 150 },\r\n  { id: 'prm_mst_cal_startdate', label: 'PM Schedule Date?', width: 180 },\r\n  { id: 'prm_mst_disable_flag', label: 'Disable Flag', width: 120 },\r\n  { id: 'prm_mst_curr_wo', label: 'Current Work Order', width: 180 },\r\n  { id: 'prm_mst_flt_code', label: 'Fault Code', width: 120 },\r\n  { id: 'prm_mst_desc', label: 'Description', width: 300 },\r\n  { id: 'prm_mst_meter_id', label: 'Meter ID', width: 120 },\r\n  { id: 'prm_mst_lpm_usg', label: 'LPM Usage', width: 130 },\r\n  { id: 'prm_mst_lpm_uom', label: 'LPM UOM', width: 120 },\r\n  { id: 'ast_grp_descs', label: 'Asset/PM Group Description', width: 300 },\r\n  { id: 'prm_mst_shadow_grp', label: 'Shadow Group', width: 150 },\r\n  { id: 'prm_mst_dflt_status', label: 'Default WO Status', width: 160 },\r\n  { id: 'prm_mst_plan_priority', label: 'Plan Priority', width: 150 },\r\n  { id: 'prm_det_chg_costcenter', label: 'Charge Cost Center', width: 180 },\r\n  { id: 'prm_mst_assetlocn', label: 'Asset Location', width: 160 },\r\n  { id: 'prm_det_originator', label: 'Originator', width: 140 },\r\n  { id: 'prm_det_approver', label: 'Approver', width: 140 },\r\n  { id: 'prm_det_planner', label: 'Planner', width: 140 },\r\n  { id: 'prm_det_crd_costcenter', label: 'Credit Cost Center', width: 180 },\r\n  { id: 'prm_det_l_account', label: 'Labor Account', width: 160 },\r\n  { id: 'prm_det_m_account', label: 'Material Account', width: 180 },\r\n  { id: 'prm_det_c_account', label: 'Contract Account', width: 190 },\r\n  { id: 'prm_det_project_id', label: 'Project ID', width: 160 },\r\n  { id: 'prm_det_safety', label: 'Safety', width: 120 },\r\n  { id: 'prm_det_varchar20', label: 'Varchar20', width: 120 },\r\n  { id: 'prm_det_cause_code', label: 'Cause Code', width: 120 },\r\n  { id: 'prm_det_act_code', label: 'Action Code', width: 130 },\r\n  { id: 'prm_det_work_area', label: 'Work Area', width: 120 },\r\n  { id: 'prm_det_work_locn', label: 'Work Location', width: 160 },\r\n  { id: 'prm_det_work_grp', label: 'Work Group', width: 140 },\r\n  { id: 'prm_det_work_type', label: 'Work Type', width: 155 },\r\n  { id: 'prm_det_work_class', label: 'Work Class', width: 130 },\r\n  { id: 'prm_mst_create_by', label: 'Created By', width: 130 },\r\n  { id: 'prm_mst_create_date', label: 'Created date', width: 140 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  col1: '',\r\n  publish: [],\r\n  stock: [],\r\n};\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PreventiveMaintenance() {\r\n  const site_ID = localStorage.getItem('site_ID');\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const AuditUser = localStorage.getItem(\"emp_mst_login_id\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const popover = usePopover();\r\n  const router = useRouter();\r\n  const navigate = useNavigate();\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n  const [maxHeight, setMaxHeight] = useState(\"400px\");\r\n  const [tableData, setTableData] = useState([]);\r\n  const [totalRow, setTotalRow] = useState();\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  const confirm = useBoolean();\r\n  const location = useLocation();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const inputRef = useRef(null);\r\n  const numberOfColumns = \"71\";\r\n  const [FilterShow, setFilterShow] = useState(false);\r\n  const [ResponceStats, setResponceStats] = useState(\"\");\r\n // const FilterhandleClose = () => setFilterShow(false);\r\n  const [showSave, setShowSave] = useState(false);\r\n  \r\n  //const [AssetFiledname, setAssetFiledname] = useState([]);\r\n  const [PreMaintFiledname, setPreMaintFiledname] = useState([]);\r\n\r\n  const [selectedOptionEmptyError, setSelectedOptionEmptyError] =\r\n  useState(false);\r\n  const [selectedOptionEmptyErrorShort, setSelectedOptionEmptyErrorShort] =\r\n  useState(false);\r\n  const [valueptEmptyError, setValueptEmptyError] = useState(false);\r\n  const [logicalEmptyError, setLogicalEmptyError] = useState(false);\r\n\r\n  const [PreventiveTitle , setPreventiveTitle] = useState(\"\");\r\n  const [preventiveFilterDpd, setPreventiveFilterDpd] = useState([]);\r\n  const [DropListIdGet, setDropListIdGet] = useState(\r\n    location.state?.DropListId || []\r\n  );\r\n  const [selectedOptionValue, setselectedOptionValue] = useState();\r\n  const [showWordOrderQryList, setShowWordOrderQryList] = useState(false);\r\n  const handleShowWorkOrderQryList = () => setShowWordOrderQryList(true);\r\n  const [showSaveAs, setShowSaveAs] = useState(false);\r\n  const [isChecked, setIsChecked] = useState(true);\r\n  const [selectedOptionEmptyErrorQtr, setSelectedOptionEmptyErrorQtr] =\r\n  useState(false);\r\n  const [valueptEmptyErrorQtr, setValueptEmptyErrorQtr] = useState(false);\r\n  const [logicalEmptyErrorQtr, setLogicalEmptyErrorQtr] = useState(false);\r\n  const [\r\n    selectedOptionEmptyErrorShortQtr,\r\n    setSelectedOptionEmptyErrorShortQtr,\r\n  ] = useState(false);\r\n  const [ExportExcelId, setExportExcelId] = useState(\"\");\r\n  const [selectDropRowID, setselectDropRowID] = useState(\"\");\r\n  const [isInputFocused, setInputFocused] = useState(false);\r\n  const [TableSearchData, setTableSearchData] = useState([]);\r\n  \r\n \r\n  // Get Api data useEffect\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_preventiveMaintenanceTableData.php?site_cd=${site_ID}&page=${currentPage}`\r\n      );\r\n        // console.log(\"response_____fetcha___\",response);\r\n      setTableData(response.data.data.result);\r\n      setTotalRow(response.data.total_count);\r\n      setIsLoading(false);\r\n    \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }, [site_ID, currentPage]);\r\n\r\n  const fetchFilterSubPopupSavedropdon = async () => {\r\n    // Get dropdown value using api\r\n    \r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_preventiveMaintenanceFilterDropDown.php?site_cd=${site_ID}&auditUser=${AuditUser}`\r\n      );\r\n       // console.log(\"check__-asset__\",response);\r\n     // setAssetFilterDpd(response.data);\r\n      setPreventiveFilterDpd(response.data);\r\n  // Swal.close();\r\n      if (DropListIdGet !== \"\" && DropListIdGet !== null) {\r\n        const matchedItem = response.data.find(\r\n          (item) => item.RowID === DropListIdGet\r\n        );\r\n        if (matchedItem) {\r\n          const cfQueryDescValue = matchedItem.cf_query_title;\r\n\r\n          setPreventiveTitle(cfQueryDescValue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  const handleOptionChange = async (event,responseData) => {\r\n   \r\n    const selectedValue = event?.target?.value || selectedOption;\r\n    setCurrentPage(1);\r\n  \r\n    const selectedOptionObjectFilter = preventiveFilterDpd.find(\r\n      (item) => item.cf_query_title === selectedValue\r\n    );\r\n\r\n    let selectedOptionObject;\r\n\r\n    if (Array.isArray(responseData) && responseData.length > 0) {\r\n      selectedOptionObject = responseData.find(\r\n        (item) => item.cf_query_title === selectedValue\r\n      );\r\n    }\r\n\r\n    if (selectedOptionObjectFilter) {\r\n      const GetRowID = selectedOptionObjectFilter.RowID;\r\n      setExportExcelId(GetRowID);\r\n      setselectDropRowID(GetRowID);\r\n      setCurrentPage(1);\r\n      setDropListIdGet([]);\r\n      setPreventiveTitle(\"\");\r\n    }else{\r\n      const GetRowID = selectedOptionObject.RowID;\r\n      setExportExcelId(GetRowID);\r\n      setselectDropRowID(GetRowID);\r\n      setCurrentPage(1);\r\n      setDropListIdGet([]);\r\n      setPreventiveTitle(\"\");\r\n    }\r\n    setSelectedOption(selectedValue);\r\n  };\r\n\r\n  const getb = useCallback(async () => {\r\n  \r\n    setIsLoading(true);\r\n    try {\r\n     \r\n      const response = await httpCommon.post(\r\n        `/getPreventiveListSelectOptionData.php?site_cd=${site_ID}&ItemID=${selectDropRowID}&page=${currentPage}&EmpId=${emp_owner}`\r\n      );\r\n     //  console.log(\"check___api__data__\",response);\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.DashbrdCount);\r\n       // Swal.close();\r\n        setIsLoading(false);\r\n      } else {\r\n        setTableData(\"\");\r\n        setTotalRow(\"\");\r\n        setIsLoading(false);\r\n        toast.success(\"No Record found for the current Selection Criteria\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            transition: Bounce,\r\n            style: {\r\n                textAlign: 'center'\r\n              }\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [site_ID, currentPage, selectDropRowID]);\r\n  useEffect(() => {\r\n    \r\n    if (selectDropRowID != \"\" && selectDropRowID != null) {\r\n      getb();\r\n    }else if(TableSearchData !=\"\" && TableSearchData != null){\r\n      handelSearchButton();\r\n    }else {\r\n      fetchData();\r\n    }\r\n    fetchFilterSubPopupSavedropdon();\r\n  }, [site_ID, currentPage, selectDropRowID,fetchData,getb]);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: Array.isArray(tableData) ? tableData : [],\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 60 : 80;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  \r\n  const handleDeleteRow = useCallback(async (id, row) => {\r\n  //  console.log(\"row++++++____\", row.col1);\r\n   // console.log(\"row++++++____\", id);\r\n    const Rowid = id;\r\n    const AstNo = row.col1;\r\n    if (Rowid !== '' && AstNo !== '') {\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\"\r\n      }).then(async (result) => { // Add async here if you want to use await inside then\r\n        if (result.isConfirmed) {\r\n          setIsLoading(true);\r\n    \r\n          try {\r\n            const response = await httpCommon.get(\r\n              `/asset_list_delete_record.php?site_cd=${site_ID}&mst_id=${Rowid}&ast_no=${AstNo}`\r\n            );\r\n         //   console.log(\"response_____delete___\",response);\r\n            if(response.data.status = \"SUCCESS\"){\r\n              Swal.fire({\r\n              title: \"Deleted!\",\r\n              text: response.data.message,\r\n              icon: \"success\"\r\n              });\r\n            }\r\n            if(response.data.status = \"ERROR\"){\r\n              Swal.fire({\r\n              title: \"Oops!\",\r\n              text: response.data.message,\r\n              icon: \"error\"\r\n              });\r\n            }\r\n            setIsLoading(false);\r\n          \r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n          \r\n        }\r\n      });\r\n    }\r\n  }, [tableData, router, site_ID]);\r\n  \r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (row) => {\r\n    // console.log(\"row______Edit\",row);\r\n      const Rowid = row.RowID;\r\n      const PMID = row.prm_mst_pm_no;\r\n      if (Rowid !== '' && PMID !== '') {\r\n        // React Router v6 pass data\r\n        navigate(`/dashboard/PreventiveSetup/newpmform`, {\r\n          state: {\r\n            RowID: Rowid,\r\n            PM_no: PMID,\r\n            currentPage,\r\n            selectedOption,\r\n          },\r\n        });\r\n      }\r\n    \r\n    },\r\n    [router,currentPage, selectedOption]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.product.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n    inputRef.current.value = '';\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleFilterName = (e) => {\r\n    const value = e.target.value;\r\n    setFilters({ ...filters, name: value });\r\n\r\n    const filteredData = tableData.filter((item) =>\r\n      item.col1.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setTableData(filteredData);\r\n  };\r\n \r\n\r\n  // set screen revolation set\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const windowHeight = window.innerHeight;\r\n      // Adjust maxHeight based on window height\r\n      const newMaxHeight = Math.floor(windowHeight * 0.6) + \"px\"; // Adjust this value as needed\r\n      setMaxHeight(newMaxHeight);\r\n    };\r\n\r\n    // Call handleResize on initial mount\r\n    handleResize();\r\n\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Remove event listener on component unmount\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Filter funcation\r\n  const [rows, setRows] = useState([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"Like\",\r\n      logical: \"AND\",\r\n      prompt: \"0\",\r\n      valuept: \"\",\r\n      siteCd: site_ID,\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  // Short By State\r\n  const [rowsort, setRowsort] = useState([\r\n    {\r\n      selectedOptionShort: \"\",\r\n      promptAsd: \"ASC\",\r\n      siteCd: site_ID,\r\n      queryType: \"S\",\r\n    },\r\n  ]);\r\n\r\n  const isButtonDisabled = rows.some((row) => row.selectedOption === \"\");\r\n  const Openbracket = [\r\n    { value: \"(\", label: \"(\" },\r\n    { value: \"\", label: \"\" },\r\n  ];\r\n\r\n  const Closebracket = [\r\n    { value: \"(\", label: \")\" },\r\n    { value: \"\", label: \"\" },\r\n  ];\r\n\r\n  const oprt = [\r\n    { value: \"like\", label: \"Like\" },\r\n    { value: \"not like\", label: \"Not Like\" },\r\n    { value: \"I=\", label: \"Is\" },\r\n    { value: \"!=\", label: \"Is not\" },\r\n    { value: \"=\", label: \"Equal to\" },\r\n    { value: \">\", label: \"Greater than\" },\r\n    { value: \"<\", label: \"Less than\" },\r\n    { value: \">=\", label: \"Greater than or equal to\" },\r\n    { value: \"<=\", label: \"Less than or equal to\" },\r\n    { value: \"<>\", label: \"Not equal to\" },\r\n  ];\r\n\r\n  const Logcl = [\r\n    { value: \"And\", label: \"And\" },\r\n    { value: \"Or\", label: \"Or\" },\r\n  ];\r\n\r\n  const handleOptionChange1 = (index, selectedOption) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].selectedOption = selectedOption;\r\n    setSelectedOptionEmptyError(false);\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  const handleOptionChangeOprter = (index, operator) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].operator = operator;\r\n    setRows(updatedRows);\r\n  };\r\n  const handleSelectChange = (index, checked) => {\r\n    const newRows = [...rows];\r\n    newRows[index].prompt = checked ? \"1\" : \"0\";\r\n    setRows(newRows);\r\n  };\r\n\r\n  const handleInputValueChangeQtr = (index, newValue) => {\r\n    const updatedRowsQtr = [...rows];\r\n    updatedRowsQtr[index].valuept = newValue;\r\n    setValueptEmptyError(false);\r\n    setRows(updatedRowsQtr);\r\n    // Check if the selectedOption and valuept are empty\r\n    if (!newValue && !updatedRowsQtr[index].selectedOption) {\r\n      //  setSelectedOptionEmptyErrorQtr(true);\r\n      //  setValueptEmptyErrorQtr(true);\r\n    } else {\r\n      // setSelectedOptionEmptyErrorQtr(false);\r\n      //  setValueptEmptyErrorQtr(false);\r\n    }\r\n  };\r\n\r\n  const handleIncludeChangeLogcil = (index, logical) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].logical = logical.target.value;\r\n    setLogicalEmptyError(false);\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const isLastRowEmpty =\r\n      rows.length > 0 &&\r\n      (!rows[rows.length - 1].selectedOption ||\r\n        rows[rows.length - 1].selectedOption === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyError(!isLastRowEmpty.selectedOption);\r\n      setValueptEmptyError(!isLastRowEmpty.valuept);\r\n      setLogicalEmptyError(!isLastRowEmpty.logical);\r\n    } else {\r\n      // Add a new row\r\n      setRows((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOption: \"\",\r\n          operator: \"Like\",\r\n          logical: \"\",\r\n          prompt: \"0\",\r\n          valuept: \"\",\r\n          siteCd: site_ID,\r\n          queryTypedd: \"F\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyError(false);\r\n      setValueptEmptyError(false);\r\n      setLogicalEmptyError(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRowPopup = (index) => {\r\n    if (rows.length > 1) {\r\n      const newRows = [...rows];\r\n      newRows.splice(index, 1);\r\n      setRows(newRows);\r\n    }\r\n  };\r\n\r\n  const FilterhandleClose = () => {\r\n    // Call your custom logic here before closing the filter\r\n    if (rows.length > 1) {\r\n      const newRows = [rows[0]]; // Keep only the first row\r\n      setRows(newRows);\r\n    }\r\n  \r\n    // Call handleDeleteRowShort to remove all rowsort except the first one\r\n    if (rowsort.length > 1) {\r\n      const newRowsort = [rowsort[0]]; // Keep only the first row\r\n      setRowsort(newRowsort);\r\n    }\r\n    \r\n    // Close the filter\r\n    setFilterShow(false);\r\n  };\r\n  const handelFilterAction = () => {\r\n    if (rows.length > 1) {\r\n      const newRows = [rows[0]]; // Keep only the first row\r\n      setRows(newRows);\r\n    }\r\n  \r\n    // Call handleDeleteRowShort to remove all rowsort except the first one\r\n    if (rowsort.length > 1) {\r\n      const newRowsort = [rowsort[0]]; // Keep only the first row\r\n      setRowsort(newRowsort);\r\n    }\r\n    setFilterShow(true);\r\n    getPreventMaintListLebel();\r\n  };\r\n  const rowOptions = PreMaintFiledname.map((row) => ({\r\n    value: row.column_name,\r\n    label: `${row.default_label}`,\r\n  }));\r\n    /* Filter dropdown value */\r\n    const getPreventMaintListLebel = async () => {\r\n      try {\r\n        const response = await httpCommon.get(\"/getPreventiveMaintenanceFilterFileName.php\");\r\n        //  console.log(\"response___assetList\",response);\r\n        if (response.data.status == \"SUCCESS\") {\r\n            setPreMaintFiledname(response.data.data);\r\n          //setAstdetLabel(response.data.data.ast_det);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n      // Retrive button  funcation,setTableData\r\n  const RetriveData = async () => {\r\n    setCurrentPage(1);\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/RetriveAllPreventiveMaintinceRegData.php?page=\" + currentPage,\r\n        {\r\n          rows: rows,\r\n          rowsort: rowsort,\r\n          SiteCD: site_ID,\r\n          admin: emp_owner,\r\n        }\r\n      );\r\n       //console.log(\"response____asset__\",response);\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        setPreventiveTitle(response.data.titleName);\r\n       \r\n        Swal.close();\r\n        FilterhandleClose();\r\n        const updatedEmptyRows = rows.map((row) => ({\r\n          // empty state data\r\n          ...row,\r\n          selectedOption: \"\",\r\n          logical: \"\",\r\n          valuept: \"\",\r\n        }));\r\n        setRows(updatedEmptyRows);\r\n\r\n      const updatedEmptyRowsort = rows.map((rowsort) => ({\r\n          // empty state data\r\n          ...rowsort,\r\n          selectedOptionShort: \"\",\r\n        }));\r\n        setRowsort(updatedEmptyRowsort);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n    const retriveBtn = () => {\r\n      if (rows.some((row) => row.selectedOption !== \"\")) {\r\n        RetriveData();\r\n      }\r\n    };\r\n\r\n    const SaveRegTbl = () => {\r\n      setShowSave(true);\r\n      fetchFilterSubPopupSavedropdon();\r\n    };\r\n\r\n  // Short By code\r\n  const handleOptionChange2 = (index, selectedOptionShort) => {\r\n    const updatedRows = [...rowsort];\r\n    updatedRows[index].selectedOptionShort = selectedOptionShort;\r\n    setSelectedOptionEmptyErrorShort(false);\r\n    setRowsort(updatedRows);\r\n  };\r\n  const handleSelectChangeshort = (index, checked) => {\r\n    const newRows = [...rowsort];\r\n    newRows[index].promptAsd = checked ? \"ASC\" : \"DESC\";\r\n    setRowsort(newRows);\r\n  };\r\n  const handleAddRowShort = () => {\r\n    if (rowsort[rowsort.length - 1].selectedOptionShort === \"\") {\r\n      setSelectedOptionEmptyErrorShort(\r\n        rowsort[rowsort.length - 1].selectedOptionShort === \"\"\r\n      );\r\n    } else {\r\n      const newRow = {\r\n        selectedOptionShort: \"\",\r\n        promptAsd: \"ASC\",\r\n      };\r\n      setRowsort([...rowsort, newRow]);\r\n    }\r\n  };\r\n  const handleDeleteRowShort = (index) => {\r\n    if (rowsort.length > 1) {\r\n      const newRows = [...rowsort];\r\n      newRows.splice(index, 1);\r\n      setRowsort(newRows);\r\n    }\r\n  };\r\n  const handleCloseSave = () => {\r\n    setShowSave(false);\r\n    setFormDataSv({\r\n      queryName: \"\",\r\n      description: \"\",\r\n    });\r\n  };\r\n  \r\n  const [formDataSv, setFormDataSv] = useState([\r\n    {\r\n      queryName: \"\",\r\n      description: \"\",\r\n      availability: \"G\",\r\n      site_cd: site_ID,\r\n      owner: emp_owner,\r\n    },\r\n  ]);\r\n  const handleInputChangeSav = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormDataSv((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Insert Cf_query Api with Query List popup data\r\n  const InsertCf_queryListData = async () => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      formDataSv: formDataSv,\r\n      rowsQrtData: rows,\r\n      rowsortQrtData: rowsort,\r\n      site_cd: site_ID,\r\n      owner: emp_owner,\r\n      availability: \"G\",\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/InsertPreventiveMaintenanceFilterQueryListData.php\",\r\n        combinedData\r\n      );\r\n    // console.log(\"response_____saveButton_res___\",response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setPreventiveTitle(response.data.Title);\r\n        fetchFilterSubPopupSavedropdon();\r\n        RetriveData();\r\n        handleDeleteRowPopup();\r\n        handleDeleteRowShort();\r\n        Swal.close();\r\n        handleCloseSave();\r\n        FilterhandleClose();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // Filter Save button funcation click to\r\n    const handleCFQrySave = () => {\r\n     \r\n      if (formDataSv.queryName.trim() !== \"\") {\r\n        const inputValue = formDataSv.queryName;\r\n        const matchingOption = preventiveFilterDpd.find(\r\n          (option) => option.cf_query_title === inputValue\r\n        );\r\n        if (matchingOption) {\r\n          //setMessage('Input value matches an option in the list.');\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to overwrite the query\" + \" \" + inputValue,\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes!\",\r\n            cancelButtonText: \"No\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              if (\r\n                rows?.selectedOption?.trim() !== \"\" &&\r\n                rows?.logical?.trim() !== \"\" &&\r\n                rows?.valuept?.trim() !== \"\" &&\r\n                rowsort?.selectedOptionShort?.trim() !== \"\"\r\n              ) {\r\n                InsertCf_queryListData();\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          InsertCf_queryListData();\r\n        }\r\n      } else {\r\n        console.log(\"empty__\");\r\n      }\r\n    };\r\n  // Query button click to funcatio start\r\n    // Handel Query List popup\r\n    const [rowsQrt, setRowsQrt] = useState([\r\n      {\r\n        selectedOption: \"\",\r\n        operator: \"\",\r\n        logical: \"\",\r\n        prompt: \"\",\r\n        valuept: \"\",\r\n        siteCd: site_ID,\r\n        queryTypedd: \"F\",\r\n      },\r\n    ]);\r\n    //Sorting data append rowsQrt rowsortQrt\r\n    const [rowsortQrt, setRowsortQrt] = useState([\r\n      {\r\n        selectedOptionShort: \"\",\r\n        promptAsd: \"\",\r\n        siteCd: site_ID,\r\n        queryType: \"S\",\r\n      },\r\n    ]);\r\n    const handleCloseWorkQryList = () => {\r\n      setShowWordOrderQryList(false);\r\n      FilterhandleClose();\r\n      handleCloseSave();\r\n      setselectedOptionValue(\"\");\r\n      setRowsQrt([]);\r\n      setRowsortQrt([]);\r\n    };\r\n    const RetriveDataQueryList = async () => {\r\n      Swal.fire({\r\n        title: \"Please Wait !\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/RetriveAllPreventiveMaintinceRegData.php?page=\" + currentPage,\r\n          {\r\n            rows: rowsQrt,\r\n            rowsort: rowsortQrt,\r\n            SiteCD:site_ID,\r\n            admin:emp_owner\r\n          }\r\n        );\r\n      // console.log(\"response____fliter___\",response);\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        Swal.close();\r\n        FilterhandleClose();\r\n        const updatedEmptyRows = rowsQrt.map((row) => ({\r\n          // empty state data\r\n          ...row,\r\n          selectedOption: \"\",\r\n          logical: \"\",\r\n          valuept: \"\",\r\n        }));\r\n        setRows(updatedEmptyRows);\r\n  \r\n        const updatedEmptyRowsort = rowsortQrt.map((rowsort) => ({\r\n          // empty state data\r\n          ...rowsort,\r\n          selectedOptionShort: \"\",\r\n        }));\r\n        setRowsort(updatedEmptyRowsort);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const DeletePMRegQryList = async () => {\r\n      const [cf_query_title, RowID] = selectedOptionValue.split(\"-\");\r\n  \r\n      if (selectedOptionValue && RowID !== \"\") {\r\n        try {\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"You want to delete \" + cf_query_title + \" query!\",\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\",\r\n          }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n              const response = await httpCommon.get(\r\n                \"/PreventiveMaintenanceRegQueryListDataDelete.php?value=\" +\r\n                  RowID +\r\n                  \"&siteId=\" +\r\n                  site_ID\r\n              );\r\n  \r\n              if (response.data.status == \"SUCCESS\") {\r\n                fetchFilterSubPopupSavedropdon();\r\n                //  setErrord(null);\r\n                setselectedOptionValue(\"\");\r\n                setRowsQrt([]);\r\n                setRowsortQrt([]);\r\n                //setSelectedRow([]);\r\n                Swal.fire(\"Deleted!\", \"Your query has been deleted.\", \"success\");\r\n              }\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"empty\");\r\n      }\r\n    };\r\n    const SavePMQryList = async () => {\r\n      const [cf_query_title, RowID] = selectedOptionValue.split(\"-\");\r\n      const isAnySelectedOptionShortEmpty = rowsortQrt.some(\r\n        (row) => !row.selectedOptionShort\r\n      );\r\n      if (isAnySelectedOptionShortEmpty && RowID != \"\") {\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Please Wait !\",\r\n          allowOutsideClick: false,\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        Swal.showLoading();\r\n        const combinedData = {\r\n          rowsQrtData: rowsQrt,\r\n          siteCd: site_ID,\r\n          owner: emp_owner,\r\n          mst_RowID: RowID,\r\n          rowsortQrtData: rowsortQrt,\r\n        };\r\n        try {\r\n          const response = await httpCommon.post(\r\n            \"/InsertPreventiveMaintenanceQueryListSaveData.php\",\r\n            combinedData\r\n          );\r\n           // console.log(\"response__SaveBytncf__\",response);\r\n          if (response.data.status == \"SUCCESS\") {\r\n            Swal.close();\r\n            Swal.fire({\r\n              title: \"Success!\",\r\n              text: \"Your query update successfully.\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n              customClass: {\r\n                container: \"swalcontainercustom\",\r\n              },\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                RetriveDataQueryList();\r\n                setRowsQrt([]);\r\n                setselectedOptionValue(\"\");\r\n                setRowsortQrt([]);\r\n                setRowsort([]);\r\n                setRows([]);\r\n               \r\n                handleCloseWorkQryList();\r\n              }\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    };\r\n    const SaveAsPMTbl = () => {\r\n      setShowSaveAs(true);\r\n    };\r\n\r\n    const handleCloseSaveAs = () => {\r\n      setShowSaveAs(false);\r\n      setFormDataSv({\r\n        queryName: \"\",\r\n        description: \"\",\r\n      });\r\n    };\r\n    const handleCFQrySaveAsBtn = () => {\r\n      if (formDataSv.queryName.trim() !== \"\") {\r\n        const inputValue = formDataSv.queryName;\r\n        const matchingOption = preventiveFilterDpd.find(\r\n          (option) => option.cf_query_title === inputValue\r\n        );\r\n        if (matchingOption) {\r\n          //setMessage('Input value matches an option in the list.');\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to overwrite the query\" + \" \" + inputValue,\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes!\",\r\n            cancelButtonText: \"No\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              if (\r\n                rowsQrt?.selectedOption?.trim() !== \"\" &&\r\n                rowsQrt?.logical?.trim() !== \"\" &&\r\n                rowsQrt?.valuept?.trim() !== \"\" &&\r\n                rowsortQrt?.selectedOptionShort?.trim() !== \"\"\r\n              ) {\r\n                InsertCf_queryListDataSavaAs();\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          InsertCf_queryListDataSavaAs();\r\n        }\r\n      } else {\r\n        console.log(\"empty__\");\r\n      }\r\n    };\r\n    // fetch data using dropdon\r\n  const handleClickOption = async (selectedOption) => {\r\n    setselectedOptionValue(selectedOption);\r\n\r\n    let cf_query_title, RowID;\r\n\r\n    const hyphenCount = selectedOption.split(\"-\").length - 1;\r\n\r\n    if(hyphenCount === 1){\r\n       [cf_query_title, RowID] = selectedOption.split(\"-\")\r\n    }else{\r\n      const parts = selectedOption.split(\"-\");\r\n      cf_query_title = parts[0].trim();\r\n      RowID = parts[parts.length - 1].trim();\r\n    }\r\n \r\n    setPreventiveTitle(cf_query_title);\r\n\r\n    setRowsQrt([]);\r\n    setRowsortQrt([]);\r\n    if (selectedOption !== \"\") {\r\n      Swal.fire({\r\n        title: \"Please Wait !\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_work_order_filter_query_data.php?site_cd=\" +\r\n            site_ID +\r\n            \"&RowID=\" +\r\n            RowID\r\n        );\r\n        //  console.log(\"response____fluter___\",response);\r\n        if (response.data.data && response.data.data.list_typeF && response.data.data.list_typeF.length > 0) {\r\n          const newRows = response.data.data.list_typeF.map((item) => ({\r\n            selectedOption: item.cf_query_list_column,\r\n            operator: item.cf_query_list_operator,\r\n            prompt: item.cf_query_list_prompt,\r\n            valuept: item.cf_query_list_value,\r\n            logical: item.cf_query_list_logical,\r\n            siteCd: site_ID,\r\n            queryTypedd: \"F\",\r\n          }));\r\n          const timeoutId = setTimeout(() => {\r\n            Swal.close();\r\n            setRowsQrt((prevrowsQrt) => [...prevrowsQrt, ...newRows]);\r\n          }, 3000);\r\n          //setShowAssetByDescp(false);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: \"Oops...\",\r\n            text: \"No record found Please try again !\",\r\n          });\r\n        }\r\n        if (response.data.data && response.data.data.list_typeS.length > 0) {\r\n          const newRows = response.data.data.list_typeS.map((item) => ({\r\n            selectedOptionShort: item.cf_query_list_column,\r\n            promptAsd: item.cf_query_list_order_by,\r\n            queryType: \"S\",\r\n            siteCd: site_ID,\r\n          }));\r\n\r\n          // Append newRows to the existing tableData\r\n\r\n          const timeoutId = setTimeout(() => {\r\n            Swal.close();\r\n            setRowsortQrt((rowsortQrt) => [...rowsortQrt, ...newRows]);\r\n          }, 3000);\r\n          //setShowAssetByDescp(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n  };\r\n \r\nconst handelQuryListpopup = () => {\r\n  fetchFilterSubPopupSavedropdon();\r\n  handleShowWorkOrderQryList();\r\n};\r\n\r\nconst handleCheckboxClick = () => {\r\n  setIsChecked(!isChecked);\r\n};\r\nconst handleOptionChangeQtr = (index, selectedOption) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].selectedOption = selectedOption;\r\n  setSelectedOptionEmptyErrorQtr(false);\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\n\r\nconst handleOptionChangeOprterQtr = (index, operator) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].operator = operator;\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\nconst handleSelectChangeQtr = (index, checked) => {\r\n  const newRows = [...rowsQrt];\r\n  newRows[index].prompt = checked ? \"1\" : \"0\";\r\n  setRowsQrt(newRows);\r\n};\r\nconst handleInputValueChangeQtr2 = (index, newValue) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].valuept = newValue;\r\n  //setValueptEmptyErrorQtr(false);\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\n  const handleDeleteRowQrt = (index) => {\r\n    if (rowsQrt.length > 1) {\r\n      const newRows = [...rowsQrt];\r\n      newRows.splice(index, 1);\r\n      setRowsQrt(newRows);\r\n    }\r\n  };\r\n  const handleAddRowQrt = () => {\r\n    const isLastRowEmpty =\r\n      rowsQrt.length > 0 &&\r\n      (!rowsQrt[rowsQrt.length - 1].selectedOption ||\r\n        rowsQrt[rowsQrt.length - 1].selectedOption === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyErrorQtr(!isLastRowEmpty.selectedOption);\r\n      setValueptEmptyErrorQtr(!isLastRowEmpty.valuept);\r\n      setLogicalEmptyErrorQtr(!isLastRowEmpty.logical);\r\n    } else {\r\n      // Add a new row\r\n      setRowsQrt((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOption: \"\",\r\n          operator: \"Like\",\r\n          logical: \"\",\r\n          prompt: \"0\",\r\n          valuept: \"\",\r\n          siteCd: site_ID,\r\n          queryTypedd: \"F\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyErrorQtr(false);\r\n      setValueptEmptyErrorQtr(false);\r\n      setLogicalEmptyErrorQtr(false);\r\n    }\r\n  };\r\n  const handleOptionChangeSrtQtr = (index, selectedOptionShort) => {\r\n    const updatedRowsQtr = [...rowsortQrt];\r\n    updatedRowsQtr[index].selectedOptionShort = selectedOptionShort;\r\n    setSelectedOptionEmptyErrorShortQtr(false);\r\n    setRowsortQrt(updatedRowsQtr);\r\n  };\r\n  const handleSelectChangeshortQtr = (index, checked) => {\r\n    const newRows = [...rowsortQrt];\r\n    newRows[index].promptAsd = checked ? \"ASC\" : \"DESC\";\r\n    setRowsortQrt(newRows);\r\n  };\r\n  const handleDeleteRowShortQrt = (index) => {\r\n    if (rowsortQrt.length > 1) {\r\n      const newRows = [...rowsortQrt];\r\n      newRows.splice(index, 1);\r\n      setRowsortQrt(newRows);\r\n    }\r\n  };\r\n  const handleAddRowShortQrt = () => {\r\n    const isLastRowEmpty =\r\n      rowsortQrt.length > 0 &&\r\n      (!rowsortQrt[rowsortQrt.length - 1].selectedOptionShort ||\r\n        rowsortQrt[rowsortQrt.length - 1].selectedOptionShort === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyErrorShortQtr(!isLastRowEmpty.selectedOptionShort);\r\n      //  setSelectedCheckEmptyErrorShortQtr(!isLastRowEmpty.promptAsd);\r\n    } else {\r\n      // Add a new row\r\n      setRowsortQrt((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOptionShort: \"\",\r\n          promptAsd: \"\",\r\n          siteCd: site_ID,\r\n          queryType: \"S\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyErrorShortQtr(false);\r\n      // setSelectedCheckEmptyErrorShortQtr(false);\r\n    }\r\n  };\r\n  const InsertCf_queryListDataSavaAs = async () => {\r\n    const site_ID = localStorage.getItem(\"site_ID\");\r\n    const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      formDataSv: formDataSv,\r\n      rowsQrtData: rowsQrt,\r\n      rowsortQrtData: rowsortQrt,\r\n      SITE_CD: site_ID,\r\n      OWNER_ID: emp_owner,\r\n      availability: \"G\",\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/InsertPreventiveMaintenanceQueryListSaveAsData.php\",\r\n        combinedData\r\n      );\r\n\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setPreventiveTitle(response.data.Title);\r\n        fetchFilterSubPopupSavedropdon();\r\n        RetriveDataQueryList();\r\n        setRowsQrt([]);\r\n        setselectedOptionValue(\"\");\r\n        setRowsortQrt([]);\r\n        Swal.close();\r\n        handleCloseSave();\r\n        FilterhandleClose();\r\n        handleCloseSaveAs();\r\n        handleCloseWorkQryList();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n \r\n// Search Button Click funcation\r\nconst handelSearchButton = async () => {\r\n  const inputValueGet = inputRef.current.value;\r\n  \r\n  if (inputValueGet !== \"\" && inputValueGet !== null) {\r\n    Swal.fire({ title: \"Please Wait!\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n   // console.log(\"call_again___\");\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_SearchPreventiveMaintenanceModule.php?site_cd=${site_ID}&searchTerm=${inputValueGet}&page=${currentPage}`\r\n      );\r\n        // console.log(\"responseSerach_____\",response);\r\n      if (response.data.data.result.length > 0) {\r\n        setTableSearchData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n\r\n        const filteredData = response.data.data.result.filter((item) => {\r\n          const searchString = inputValueGet.toLowerCase();\r\n          const col1 = (item.prm_mst_pm_no || \"\").toLowerCase();\r\n          const col2 = (item.prm_mst_type || \"\").toLowerCase();\r\n          const col3 = (item.prm_mst_pm_no || \"\").toLowerCase();\r\n          const col4 = (item.prm_mst_pm_grp || \"\").toLowerCase();\r\n          const col5 = (item.prm_mst_freq_code || \"\").toLowerCase();\r\n          const col6 = (item.prm_mst_meter_id || \"\").toLowerCase();\r\n          const col7 = (item.prm_mst_lpm_usg || \"\").toLowerCase();\r\n          const col8 = (item.prm_mst_lpm_uom || \"\").toLowerCase();\r\n          const col9 = (item.prm_mst_flt_code || \"\").toLowerCase();\r\n          const col10 = (item.prm_mst_curr_wo || \"\").toLowerCase();\r\n          const col11 = (item.prm_mst_shadow_grp || \"\").toLowerCase();\r\n          const col12 = (item.prm_mst_assetlocn || \"\").toLowerCase();\r\n          const col58 = (item.prm_mst_desc || \"\").toLowerCase();\r\n          \r\n          return (\r\n            col1.includes(searchString) ||\r\n            col2.includes(searchString) ||\r\n            col3.includes(searchString) ||\r\n            col4.includes(searchString) ||\r\n            col5.includes(searchString) ||\r\n            col6.includes(searchString) ||\r\n            col7.includes(searchString) ||\r\n            col8.includes(searchString) ||\r\n            col9.includes(searchString) ||\r\n            col10.includes(searchString) ||\r\n            col11.includes(searchString) ||\r\n            col12.includes(searchString) ||\r\n            col58.includes(searchString)\r\n          );\r\n        });\r\n        setTableData(filteredData);\r\n       // setTableData(filteredData);\r\n     //   setCurrentPage(1);\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"No Record Found!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleKeyDown = (event) => {\r\n  if (event.key === \"Backspace\") {\r\n    event.preventDefault();\r\n    const inputValue2 = inputRef.current.value;\r\n    const newValue = inputValue2.slice(0, -1);\r\n    inputRef.current.value = newValue;\r\n    if (newValue === \"\") {\r\n      handleResetFilters();\r\n    }\r\n  }\r\n};\r\nconst handleInputFocus = () => {\r\n  setInputFocused(true);\r\n};\r\n\r\nconst handleInputBlur = () => {\r\n  setInputFocused(false);\r\n};\r\nconst handleExportClick = async () => {\r\n//   if (ExportExcelId !== \"\") {\r\n//     Swal.fire({\r\n//       title: \"Please Wait!\",\r\n//       allowOutsideClick: false,\r\n//       customClass: {\r\n//         container: \"swalcontainercustom\",\r\n//       },\r\n//     });\r\n//     Swal.showLoading();\r\n//     try {\r\n//       const response = await httpCommon.post(\r\n//         `/getAssetListExcelData.php?site_cd=${site_ID}&ItemID=${ExportExcelId}`\r\n//       );\r\n//        // console.log(\"response_____first\",response);\r\n//       Swal.close();\r\n//       if (\r\n//         response.data.data &&\r\n//         response.data.data.result &&\r\n//         response.data.data.result.length > 0\r\n//       ) {\r\n//         ExportAssetlistToExcel({ resultData: response.data.data.result });\r\n//         popover.onClose();\r\n//         Swal.close();\r\n//       } else {\r\n//         setTableData(\"\");\r\n//         Swal.fire({\r\n//           title: \"Opps..!\",\r\n//           text: \"No Record Found!\",\r\n//           icon: \"success\",\r\n//           customClass: {\r\n//             container: \"swalcontainercustom\",\r\n//           },\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   } else {\r\n//     Swal.fire({\r\n//       title: \"Please Wait!\",\r\n//       allowOutsideClick: false,\r\n//       customClass: {\r\n//         container: \"swalcontainercustom\",\r\n//       },\r\n//     });\r\n//     Swal.showLoading();\r\n//     try {\r\n      \r\n//       const response = await httpCommon.get(\r\n//         `/getAssetListAllDataExcelsheet.php?site_cd=${site_ID}`\r\n//       );\r\n//      // console.log(\"response_____second\",response);\r\n//       if (\r\n//         response.data.data &&\r\n//         response.data.data.result &&\r\n//         response.data.data.result.length > 0\r\n//       ) {\r\n//         ExportAssetlistToExcel({ resultData: response.data.data.result });\r\n//         popover.onClose();\r\n//         Swal.close();\r\n//       } else {\r\n//         setTableData(\"\");\r\n//         Swal.fire({\r\n//           title: \"Opps..!\",\r\n//           text: \"No Record Found!\",\r\n//           icon: \"success\",\r\n//           customClass: {\r\n//             container: \"swalcontainercustom\",\r\n//           },\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   }\r\n};\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Preventive Maintenance</title>\r\n        <meta name=\"description\" content=\"Asset List\" />\r\n      </Helmet>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <div className=\"CustomBreadAsset\">\r\n          <CustomBreadcrumbs\r\n            heading=\"Preventive Maintenance\"\r\n            links={[]}\r\n            action={\r\n              <Button\r\n                component={RouterLink}\r\n                // href={paths.dashboard.product.new}\r\n                variant=\"contained\"\r\n                startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                to={{\r\n                  pathname: \"/dashboard/PreventiveSetup/newpmform\",\r\n                  state: { select: \"New_PMFom\" },\r\n                }}\r\n              >\r\n                New\r\n              </Button>\r\n              \r\n            }\r\n            sx={{ mb: { xs: 3, md: 5 } }}\r\n          />\r\n        </div>\r\n        <div className=\"workReqpage\">\r\n\r\n          <Card>\r\n            \r\n            <Stack\r\n              spacing={2}\r\n              alignItems={{ xs: 'flex-end', md: 'center' }}\r\n              direction={{\r\n                xs: 'column',\r\n                md: 'row',\r\n              }}\r\n              sx={{\r\n                p: 2.5,\r\n                pr: { xs: 2.5, md: 1 },\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"AssetFilterBtn\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  flexShrink: 0,\r\n                }}\r\n                onClick={handelFilterAction}\r\n              >\r\n                <Icon icon=\"fluent:filter-12-filled\" style={{ marginRight: '5px' }} /> Filter\r\n              </Button>\r\n              <FormControl\r\n                sx={{\r\n                  flexShrink: 0,\r\n                  width: { xs: 1, md: 300 },\r\n                }}\r\n                className=\"selectOptioncls\"\r\n              >\r\n                <InputLabel id=\"select-label\">Select an Option</InputLabel>\r\n                <Select\r\n                  labelId=\"select-label\"\r\n                  id=\"select\"\r\n                  input={<OutlinedInput label=\"Select an option\" />}\r\n                  value={PreventiveTitle !== \"\" ? PreventiveTitle : selectedOption}\r\n                  onChange={handleOptionChange}\r\n                  sx={{ textTransform: 'capitalize' }}\r\n                >\r\n                \r\n                  {preventiveFilterDpd.map((item) => (\r\n                      <MenuItem key={item.RowID} value={item.cf_query_title}>\r\n                        <Iconify\r\n                          icon=\"mdi:sql-query\"\r\n                          style={{\r\n                            display: \"inline-flex\",\r\n                            verticalAlign: \"middle\",\r\n                            marginRight: \"6px\",\r\n                            marginTop: \"-5px\",\r\n                            width: \"16px\",\r\n                            height: \"16px\",\r\n                          }}\r\n                        />\r\n                        <span style={{ verticalAlign: \"middle\" }}>\r\n                          {item.cf_query_title}\r\n                        </span>\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n                  <div\r\n                    className=\"wordkOrdersearchInput\"\r\n                    style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"Seachrinput\"\r\n                      placeholder=\"Search..\"\r\n                      ref={inputRef}\r\n                      onKeyDown={handleKeyDown}\r\n                      onFocus={handleInputFocus}\r\n                      onBlur={handleInputBlur}\r\n                    />\r\n                    <div>\r\n                    \r\n                      <IconButton\r\n                        onClick={handelSearchButton}\r\n                        className=\"customsearchbutton\"\r\n                      >\r\n                        <Iconify icon=\"eva:search-fill\" />\r\n                      </IconButton>\r\n                    </div>\r\n                  </div>\r\n                <IconButton onClick={popover.onOpen}>\r\n                  <Iconify icon=\"eva:more-vertical-fill\" />\r\n                </IconButton>\r\n              </Stack>\r\n            </Stack>\r\n\r\n            <CustomPopover\r\n              open={popover.open}\r\n              onClose={popover.onClose}\r\n              arrow=\"right-top\"\r\n              sx={{ width: 180 }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleExportClick();\r\n                }}\r\n              >\r\n                <Iconify icon=\"solar:export-bold\" />\r\n                Export to Excel\r\n              </MenuItem>\r\n\r\n            </CustomPopover>\r\n            {canReset && (\r\n              <PreventivemaintenanceTableFiltersResult\r\n                filters={filters}\r\n                onFilters={handleFilters}\r\n                //\r\n                onResetFilters={handleResetFilters}\r\n                //\r\n                results={dataFiltered.length}\r\n                sx={{ p: 2.5, pt: 0 }}\r\n              />\r\n            )}\r\n\r\n            <TableContainer sx={{ position: 'relative'}}>\r\n              <TableSelectedAction\r\n                dense={table.dense}\r\n                numSelected={table.selected.length}\r\n                rowCount={tableData.length}\r\n                onSelectAllRows={(checked) =>\r\n                  table.onSelectAllRows(\r\n                    checked,\r\n                    tableData.map((row) => row.id)\r\n                  )\r\n                }\r\n                action={\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              />\r\n\r\n              <Scrollbar sx={{ overflowX: \"auto\", maxHeight: maxHeight }}>  \r\n                <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                  <TableHeadCustom\r\n                    order={table.order}\r\n                    orderBy={table.orderBy}\r\n                    headLabel={TABLE_HEAD}\r\n                    rowCount={tableData.length}\r\n                    numSelected={table.selected.length}\r\n                    onSort={table.onSort}\r\n                    className=\"stickyheader\"\r\n                  />\r\n                 \r\n                  <TableBody className=\"AssetTable\">\r\n                        {isLoading ? ( // Assuming isLoading is a boolean state indicating whether data is loading\r\n                          <TableRow>\r\n                            <TableCell colSpan={numberOfColumns} className=\"NoRecodcls\" >\r\n                            <Dialog open={isLoading} aria-labelledby=\"loading-dialog-title\">\r\n                            <DialogTitle id=\"loading-dialog-title\" style={{ textAlign: 'center' }}>Please Wait!</DialogTitle>\r\n                              <DialogContent>\r\n                                <img src={loderImg} width=\"120px\" alt=\"Loader\" className=\"loadrImgCls\" />\r\n                              </DialogContent>\r\n                            </Dialog>\r\n                             \r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ) : (\r\n                          <>\r\n                            {tableData.length === 0 ? (\r\n                              <TableRow>\r\n                                <TableCell colSpan={numberOfColumns} className=\"NoRecodcls\" >\r\n                                  No Record Found\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ) : (\r\n                              <>\r\n                           \r\n                                {dataFiltered.map((row) => (\r\n\r\n                                  <PreventiveTableRow\r\n                                    key={row.id}\r\n                                    row={row}\r\n                                    rowStats={ResponceStats}\r\n                                    selected={table.selected.includes(row.col61)}\r\n                                    onSelectRow={() => table.onSelectRow(row.col61)}\r\n                                    onDeleteRow={() => handleDeleteRow(row.col61,row)}\r\n                                    onEditRow={() => handleEditRow(row)}\r\n                                  //   onCompleteRow={() => handleCompleteRow(row.col71)}\r\n                                  //  onCloseRow={() => handleCloseRow(row.col71)}\r\n                                  />\r\n                                ))}\r\n                               \r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        <TableEmptyRows\r\n                          emptyRows={emptyRows(\r\n                            table.page,\r\n                            table.rowsPerPage,\r\n                            tableData.length\r\n                          )}\r\n                        />\r\n                      </TableBody>\r\n\r\n                </Table>\r\n              </Scrollbar>\r\n            </TableContainer>\r\n\r\n              <TablePaginationCustom\r\n                count={totalRow > 0 ? totalRow : dataFiltered.length}\r\n                page={currentPage - 1}\r\n                rowsPerPage={table.rowsPerPage}\r\n                onPageChange={(event, newPage) => {\r\n                  setCurrentPage(newPage + 1);\r\n\r\n                  table.onChangePage(event, newPage);\r\n                }}\r\n                currentPage={currentPage}\r\n                //  onRowsPerPageChange={table.onChangeRowsPerPage}\r\n                onRowsPerPageChange={(rowsPerPage) => {\r\n                  table.onChangeRowsPerPage(rowsPerPage);\r\n                }}\r\n                // dense={table.dense}\r\n                //  onChangeDense={table.onChangeDense}\r\n              />\r\n          </Card>\r\n        </div>\r\n\r\n   \r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n      {/* =============================== filter model  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={FilterhandleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={FilterShow}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"mdi:sql-query\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Define Query</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={FilterhandleClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"queryBtn\">\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={handelQuryListpopup}>\r\n                  <Iconify icon=\"carbon:query-queue\" /> Query List\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  disabled={isButtonDisabled}\r\n                  onClick={retriveBtn}\r\n                >\r\n                  <Iconify icon=\"carbon:data-base\" /> Retrive\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                 onClick={SaveRegTbl}\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Iconify icon=\"mingcute:save-fill\" />\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className=\"filterByorder\">\r\n            <fieldset className=\"short-by-fieldset2\">\r\n              <legend>Filter By</legend>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ textAlign: \"center\" }}> ( </th>\r\n                    <th>Field Name</th>\r\n                    <th>Operator</th>\r\n                    <th>Prompt</th>\r\n                    <th>Value</th>\r\n                    <th>Logical</th>\r\n                    <th style={{ textAlign: \"center\" }}> ) </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <Select\r\n                          className=\"custom-Astselect\"\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          {Openbracket.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"25%\" }}>\r\n                        <Select\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 &&\r\n                            selectedOptionEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          style={{ width: \"100%\" }}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(event) =>\r\n                            handleOptionChange1(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {rowOptions.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n\r\n                      <td style={{ width: \"17%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className=\"custom-Astselect\"\r\n                          onChange={(event) =>\r\n                            handleOptionChangeOprter(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {oprt.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"8%\" }}>\r\n                        <input\r\n                          style={{ width: \"100%\" }}\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckChecked\"\r\n                          onChange={(e) =>\r\n                            handleSelectChange(index, e.target.checked)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"26%\" }}>\r\n                        <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          onChange={(event) =>\r\n                            handleInputValueChangeQtr(index, event.target.value)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"10%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && logicalEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(logical) =>\r\n                            handleIncludeChangeLogcil(index, logical)\r\n                          }\r\n                        >\r\n                          {Logcl.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className=\"custom-Astselect\"\r\n                          // value={/* add the corresponding value from your state */}\r\n                          //  onChange={(event) => handleOptionChange1(index, event.target.value)}\r\n                        >\r\n                          {Closebracket.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td>\r\n                        <IconButton\r\n                          className=\"clsBtn\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          onClick={() => handleDeleteRowPopup(index)}\r\n                        >\r\n                          <Iconify icon=\"carbon:close\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <Button onClick={handleAddRow} className=\"AddFilterBtn\">\r\n                  <Iconify\r\n                    icon=\"material-symbols:add\"\r\n                    style={{\r\n                      verticalAlign: \"0px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"2px\",\r\n                    }}\r\n                  />\r\n                  Add new filter\r\n                </Button>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n          <div className=\"filterShort\">\r\n            <fieldset className=\"short-by-fieldset2\">\r\n              <legend>Sort By</legend>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Field Name</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th>Ascending?</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rowsort.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"60%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect shrt ${\r\n                            index === rowsort.length - 1 &&\r\n                            selectedOptionEmptyErrorShort\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(event) =>\r\n                            handleOptionChange2(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {rowOptions.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n\r\n                      <td style={{ width: \"15%\" }}></td>\r\n                      <td style={{ width: \"15%\" }}></td>\r\n                      <td style={{ width: \"10%\" }}>\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          checked={rowsort[index].promptAsd === \"ASC\"}\r\n                          onChange={(e) =>\r\n                            handleSelectChangeshort(index, e.target.checked)\r\n                          }\r\n                          id=\"flexCheckDefault\"\r\n                          style={{\r\n                            width: \"65px\",\r\n                            height: \"15px\",\r\n                            marginTop: \"-5px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td></td>\r\n                      <td>\r\n                        <IconButton\r\n                          className=\"clsBtn\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          onClick={() => handleDeleteRowShort(index)}\r\n                        >\r\n                          <Iconify icon=\"carbon:close\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <Button onClick={handleAddRowShort} className=\"AddFilterBtn\">\r\n                  <Iconify\r\n                    icon=\"material-symbols:add\"\r\n                    style={{\r\n                      verticalAlign: \"0px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"2px\",\r\n                    }}\r\n                  />\r\n                  Add new filter\r\n                </Button>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n       {/* =============================== filter model Save Button  =================================  */}\r\n       <BootstrapDialog\r\n        onClose={handleCloseSave}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showSave}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Save Query</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseSave}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Query name:</legend>\r\n              <div className=\"form-group \">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"customInput\"\r\n                  name=\"queryName\"\r\n                  value={formDataSv.queryName}\r\n                  onChange={handleInputChangeSav}\r\n                  className=\"bsc_sav\"\r\n                  list=\"options\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n\r\n                <datalist id=\"options\">\r\n                  {preventiveFilterDpd.map((option, index) => (\r\n                    <option key={index.RowID} value={option.cf_query_title} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Description:</legend>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"w3review\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  value={formDataSv.description}\r\n                  onChange={handleInputChangeSav}\r\n                  cols=\"70\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Availability:</legend>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"G\"\r\n                  checked\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Global(available to everyone)\r\n                </label>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"P\"\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Personal\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleCFQrySave}>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n      {/* =============================== filter model Query List Button  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseWorkQryList}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showWordOrderQryList}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"mdi:sql-query\" />\r\n          <span style={{ marginLeft: \"2px\" }}> Query List</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseWorkQryList}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"queryBtn\">\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={DeletePMRegQryList}>\r\n                  <Iconify icon=\"fluent:delete-48-regular\" /> Delete\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={SavePMQryList}>\r\n                  <Iconify icon=\"ic:outline-save-as\" /> Save\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={SaveAsPMTbl}>\r\n                  <Iconify icon=\"fad:saveas\" />\r\n                  Save As\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div>\r\n            <div className=\"shortBydd list mt-4\">\r\n              <div className=\"table-containeR\">\r\n                <fieldset className=\"Query-by-fieldset\">\r\n                  <legend>Query Name</legend>\r\n                  <table className=\"custom-tablE\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ width: \"100%\" }}>Query Title</th>\r\n\r\n                        <th style={{ width: \"10%\" }}>Default?</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                     \r\n                      <Select\r\n                        id=\"select\"\r\n                        style={{ width: \"60%\" }}\r\n                        value={selectedOptionValue}\r\n                        // onChange={handleClickOption}\r\n                        onChange={(event) =>\r\n                          handleClickOption(event.target.value)\r\n                        }\r\n                        sx={{ textTransform: \"capitalize\" }}\r\n                      >\r\n                       \r\n                        {preventiveFilterDpd.map((item) => (\r\n                          <MenuItem\r\n                            key={item.RowID}\r\n                            value={`${item.cf_query_title}-${item.RowID}`}\r\n                          >\r\n                            {item.cf_query_title}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                      <td>\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckDefault\"\r\n                          checked={isChecked}\r\n                          onChange={handleCheckboxClick}\r\n                          style={{\r\n                            width: \"65px\",\r\n                            height: \"15px\",\r\n                            marginTop: \"-5px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tbody>\r\n                  </table>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n            <div className=\"FiltrBydd mt-2\">\r\n              <div>\r\n                <fieldset className=\"short-by-fieldset2\">\r\n                  <legend>Filter By</legend>\r\n                  <table style={{ borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ textAlign: \"center\", width: \"7%\" }}>(</th>\r\n                        <th style={{ width: \"25%\" }}>Field Name</th>\r\n                        <th style={{ width: \"17%\" }}>Operator</th>\r\n                        <th style={{ width: \"8%\" }}>Prompt</th>\r\n                        <th style={{ width: \"26%\" }}>Value</th>\r\n                        <th style={{ width: \"10%\" }}>Logical</th>\r\n                        <th style={{ textAlign: \"center\", width: \"7%\" }}>)</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                     \r\n                      {rowsQrt.map((row, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <tr key={index}>\r\n                            <td style={{ width: \"7%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n                              >\r\n                                {Openbracket.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"25%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  selectedOptionEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.selectedOption || \"\"}\r\n                                onChange={(event) =>\r\n                                  handleOptionChangeQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {rowOptions.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"17%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n                                value={row.operator || \"Like\"}\r\n                                onChange={(event) =>\r\n                                  handleOptionChangeOprterQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {oprt.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"8%\" }}>\r\n                              <input\r\n                                class=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                onChange={(e) =>\r\n                                  handleSelectChangeQtr(index, e.target.checked)\r\n                                }\r\n                                checked={row.prompt === \"1\"}\r\n                                id=\"flexCheckDefault\"\r\n                                style={{\r\n                                  width: \"65px\",\r\n                                  height: \"15px\",\r\n                                  marginTop: \"-5px\",\r\n                                }}\r\n                              />\r\n                            </td>\r\n                            <td style={{ width: \"26%\" }}>\r\n                              <input\r\n                                type=\"text\"\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  valueptEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.valuept || \"\"}\r\n                                oninput=\"handleInput(event)\"\r\n                                onChange={(event) =>\r\n                                  handleInputValueChangeQtr2(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </td>\r\n\r\n                            <td style={{ width: \"10%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  logicalEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.logical || \"\"}\r\n                                // value={/* add the corresponding value from your state */}\r\n                                // onChange={(logical) =>\r\n                                //   handleIncludeChangeLogcilQtr(index, logical)\r\n                                // }\r\n                              >\r\n                                {Logcl.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n\r\n                            <td style={{ width: \"7%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n\r\n                                // value={rowOptions.find(option => option.value === row.selectedOption)}\r\n                                //onChange={(selectedOption) => handleOptionChange1(index, selectedOption)}\r\n                              >\r\n                                {Closebracket.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n\r\n                            <td>\r\n                              <IconButton\r\n                                className=\"clsBtn\"\r\n                                aria-label=\"delete\"\r\n                                size=\"small\"\r\n                                onClick={() => handleDeleteRowQrt(index)}\r\n                              >\r\n                                <Iconify icon=\"carbon:close\" />\r\n                              </IconButton>\r\n                            </td>\r\n                          </tr>\r\n                        </React.Fragment>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button onClick={handleAddRowQrt} className=\"AddFilterBtn\">\r\n                      <Iconify\r\n                        icon=\"material-symbols:add\"\r\n                        style={{\r\n                          verticalAlign: \"0px\",\r\n                          fontSize: \"16px\",\r\n                          marginRight: \"2px\",\r\n                        }}\r\n                      />\r\n                      Add new filter\r\n                    </Button>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n            <div className=\"shortBydd mt-4 shtQtr\">\r\n              <div>\r\n                <fieldset className=\"short-by-fieldset\">\r\n                  <legend>Sort By</legend>\r\n                  <table style={{ borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Field Name</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th>Ascending?</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {rowsortQrt.map((row, index) => (\r\n                        <tr key={index}>\r\n                          <td style={{ width: \"60%\" }}>\r\n                            <Select\r\n                              style={{ width: \"100%\" }}\r\n                              className={`custom-Astselect sht ${\r\n                                index === rowsortQrt.length - 1 &&\r\n                                selectedOptionEmptyErrorShortQtr\r\n                                  ? \"error-border\"\r\n                                  : \"mammama\"\r\n                              }`}\r\n                              // value={/* add the corresponding value from your state */}\r\n                              onChange={(event) =>\r\n                                handleOptionChangeSrtQtr(\r\n                                  index,\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                              value={row.selectedOptionShort || \"\"}\r\n                            >\r\n                              {rowOptions.map((option, index) => (\r\n                                <MenuItem key={index} value={option.value}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </Select>\r\n                          </td>\r\n                          <td style={{ width: \"15%\" }}></td>\r\n                          <td style={{ width: \"15%\" }}></td>\r\n                          <td style={{ width: \"8%\" }}>\r\n                            <input\r\n                              class=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              //checked={row.prompt === '1'}\r\n                              checked={rowsortQrt[index].promptAsd === \"ASC\"}\r\n                              onChange={(e) =>\r\n                                handleSelectChangeshortQtr(\r\n                                  index,\r\n                                  e.target.checked\r\n                                )\r\n                              }\r\n                              id=\"flexCheckDefault\"\r\n                              style={{\r\n                                width: \"65px\",\r\n                                height: \"15px\",\r\n                                marginTop: \"-5px\",\r\n                              }}\r\n                            />\r\n                          </td>\r\n                          <td></td>\r\n                          <td>\r\n                            <IconButton\r\n                              className=\"clsBtn\"\r\n                              aria-label=\"delete\"\r\n                              size=\"small\"\r\n                              onClick={() => handleDeleteRowShortQrt(index)}\r\n                            >\r\n                              <Iconify icon=\"carbon:close\" />\r\n                            </IconButton>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      onClick={handleAddRowShortQrt}\r\n                      className=\"AddFilterBtn\"\r\n                    >\r\n                      <Iconify\r\n                        icon=\"material-symbols:add\"\r\n                        style={{\r\n                          verticalAlign: \"0px\",\r\n                          fontSize: \"16px\",\r\n                          marginRight: \"2px\",\r\n                        }}\r\n                      />\r\n                      Add new filter\r\n                    </Button>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n         {/* =============================== filter model Save As Button  =================================  */}\r\n         <BootstrapDialog\r\n        onClose={handleCloseSaveAs}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showSaveAs}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Save Query As</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseSaveAs}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Query name:</legend>\r\n              <div className=\"form-group \">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"customInput\"\r\n                  name=\"queryName\"\r\n                  value={formDataSv.queryName}\r\n                  onChange={handleInputChangeSav}\r\n                  className=\"bsc_sav\"\r\n                  list=\"options\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n\r\n                <datalist id=\"options\">\r\n                  {preventiveFilterDpd.map((option, index) => (\r\n                    <option key={index.RowID} value={option.cf_query_title} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Description:</legend>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"w3review\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  value={formDataSv.description}\r\n                  onChange={handleInputChangeSav}\r\n                  cols=\"70\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Availability:</legend>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"G\"\r\n                  checked\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Global(available to everyone)\r\n                </label>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"P\"\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Personal\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid item>\r\n            <Button variant=\"outlined\" onClick={handleCFQrySaveAsBtn}>\r\n              <Iconify icon=\"mingcute:save-line\" /> Save\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n\r\n  const { name } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  //   if (name) {\r\n  //     inputData = inputData.filter(\r\n  //       (tableData) => tableData.col2.toLowerCase().indexOf(col2.toLowerCase()) !== -1\r\n  //     );\r\n  //   }\r\n  return inputData;\r\n}\r\n"],"names":["PreventiveTableRow","_ref","row","selected","onSelectRow","onDeleteRow","onEditRow","onViewRow","prm_mst_pm_no","prm_mst_type","prm_mst_pm_grp","prm_mst_assetno","prm_mst_freq_code","prm_mst_lpm_date","prm_mst_lpm_closed_date","prm_mst_next_create","prm_mst_next_due","prm_mst_lead_day","prm_mst_closed_loop","prm_mst_cal_startdate","prm_mst_disable_flag","prm_mst_curr_wo","prm_mst_flt_code","prm_mst_desc","prm_mst_meter_id","prm_mst_lpm_usg","prm_mst_lpm_uom","ast_grp_descs","prm_mst_shadow_grp","prm_mst_dflt_status","prm_mst_plan_priority","prm_det_chg_costcenter","prm_mst_assetlocn","prm_det_originator","prm_det_approver","prm_det_planner","prm_det_crd_costcenter","prm_det_l_account","prm_det_m_account","prm_det_c_account","prm_det_project_id","prm_det_safety","prm_det_varchar20","prm_det_cause_code","prm_det_act_code","prm_det_work_area","prm_det_work_locn","prm_det_work_grp","prm_det_work_type","prm_det_work_class","prm_mst_create_by","prm_mst_create_date","confirm","useBoolean","popover","usePopover","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","concat","_jsxs","_Fragment","children","TableRow","hover","_jsx","TableCell","align","IconButton","color","open","onClick","onOpen","Iconify","icon","style","backgroundColor","padding","borderRadius","fontSize","fontWeight","display","justifyContent","FormControlLabel","disabled","control","Checkbox","className","defaultChecked","CustomPopover","onClose","arrow","sx","width","MenuItem","ConfirmDialog","value","onFalse","title","content","action","Button","variant","PreventivemaintenanceTableFiltersResult","filters","onFilters","onResetFilters","results","other","Stack","spacing","Box","typography","component","ml","flexGrow","direction","flexWrap","alignItems","stock","length","Block","label","map","item","Chip","size","onDelete","inputValue","newValue","filter","handleRemoveStock","publish","handleRemovePublish","startIcon","_ref2","Paper","p","overflow","borderStyle","BootstrapDialog","styled","Dialog","theme","TABLE_HEAD","id","defaultFilters","col1","PreventiveMaintenance","_location$state","site_ID","localStorage","getItem","emp_owner","AuditUser","isLoading","setIsLoading","useState","router","useRouter","navigate","useNavigate","table","useTable","settings","useSettingsContext","maxHeight","setMaxHeight","tableData","setTableData","totalRow","setTotalRow","setFilters","selectedOption","setSelectedOption","location","useLocation","currentPage","setCurrentPage","inputRef","useRef","FilterShow","setFilterShow","ResponceStats","setResponceStats","showSave","setShowSave","PreMaintFiledname","setPreMaintFiledname","selectedOptionEmptyError","setSelectedOptionEmptyError","selectedOptionEmptyErrorShort","setSelectedOptionEmptyErrorShort","valueptEmptyError","setValueptEmptyError","logicalEmptyError","setLogicalEmptyError","PreventiveTitle","setPreventiveTitle","preventiveFilterDpd","setPreventiveFilterDpd","DropListIdGet","setDropListIdGet","state","DropListId","selectedOptionValue","setselectedOptionValue","showWordOrderQryList","setShowWordOrderQryList","showSaveAs","setShowSaveAs","isChecked","setIsChecked","selectedOptionEmptyErrorQtr","setSelectedOptionEmptyErrorQtr","valueptEmptyErrorQtr","setValueptEmptyErrorQtr","logicalEmptyErrorQtr","setLogicalEmptyErrorQtr","selectedOptionEmptyErrorShortQtr","setSelectedOptionEmptyErrorShortQtr","ExportExcelId","setExportExcelId","selectDropRowID","setselectDropRowID","isInputFocused","setInputFocused","TableSearchData","setTableSearchData","fetchData","useCallback","async","response","httpCommon","get","data","result","total_count","error","console","fetchFilterSubPopupSavedropdon","matchedItem","find","RowID","cfQueryDescValue","cf_query_title","getb","post","DashbrdCount","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","Bounce","textAlign","useEffect","handelSearchButton","dataFiltered","inputData","comparator","name","stabilizedThis","el","index","sort","a","b","order","applyFilter","Array","isArray","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","canReset","dense","isEqual","handleFilters","onResetPage","prevState","handleDeleteRow","Rowid","AstNo","Swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","status","message","handleDeleteRows","deleteRows","includes","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","PMID","PM_no","handleResetFilters","push","paths","dashboard","product","details","current","handleResize","windowHeight","window","innerHeight","newMaxHeight","Math","floor","addEventListener","removeEventListener","rows","setRows","operator","logical","prompt","valuept","siteCd","queryTypedd","rowsort","setRowsort","selectedOptionShort","promptAsd","queryType","isButtonDisabled","some","Openbracket","Closebracket","oprt","Logcl","handleDeleteRowPopup","newRows","splice","FilterhandleClose","newRowsort","rowOptions","column_name","default_label","getPreventMaintListLebel","RetriveData","allowOutsideClick","customClass","container","SiteCD","admin","titleName","updatedEmptyRows","updatedEmptyRowsort","handleDeleteRowShort","handleCloseSave","setFormDataSv","queryName","description","formDataSv","availability","site_cd","owner","handleInputChangeSav","event","target","prevData","InsertCf_queryListData","combinedData","rowsQrtData","rowsortQrtData","Title","rowsQrt","setRowsQrt","rowsortQrt","setRowsortQrt","handleCloseWorkQryList","RetriveDataQueryList","handleCloseSaveAs","InsertCf_queryListDataSavaAs","SITE_CD","OWNER_ID","inputValueGet","filteredData","searchString","toLowerCase","col2","col3","col4","col5","col6","col7","col8","col9","col10","col11","col12","col58","Helmet","Container","maxWidth","themeStretch","CustomBreadcrumbs","heading","links","RouterLink","to","pathname","select","mb","xs","md","Card","pr","marginTop","flexShrink","handelFilterAction","Icon","marginRight","FormControl","InputLabel","Select","labelId","input","OutlinedInput","onChange","responseData","_event$target","selectedValue","selectedOptionObjectFilter","selectedOptionObject","GetRowID","textTransform","verticalAlign","height","type","placeholder","ref","onKeyDown","key","preventDefault","onFocus","handleInputFocus","onBlur","handleInputBlur","handleExportClick","pt","TableContainer","TableSelectedAction","numSelected","rowCount","onSelectAllRows","checked","Tooltip","onTrue","Scrollbar","overflowX","Table","minWidth","TableHeadCustom","headLabel","onSort","TableBody","colSpan","DialogTitle","DialogContent","src","loderImg","alt","rowStats","col61","TableEmptyRows","emptyRows","TablePaginationCustom","count","onPageChange","newPage","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","fullWidth","m","marginLeft","right","top","palette","grey","dividers","Grid","handelQuryListpopup","retriveBtn","SaveRegTbl","option","handleOptionChange1","updatedRows","handleOptionChangeOprter","class","e","handleSelectChange","oninput","handleInputValueChangeQtr","updatedRowsQtr","handleIncludeChangeLogcil","handleAddRow","isLastRowEmpty","prevRows","handleOptionChange2","handleSelectChangeshort","handleAddRowShort","newRow","list","cols","for","DialogActions","handleCFQrySave","trim","cancelButtonText","_rows$selectedOption","_rows$logical","_rows$valuept","_rowsort$selectedOpti","log","split","mst_RowID","SaveAsPMTbl","parts","list_typeF","cf_query_list_column","cf_query_list_operator","cf_query_list_prompt","cf_query_list_value","cf_query_list_logical","setTimeout","prevrowsQrt","list_typeS","cf_query_list_order_by","handleClickOption","handleCheckboxClick","borderCollapse","React","handleOptionChangeQtr","handleOptionChangeOprterQtr","handleSelectChangeQtr","handleInputValueChangeQtr2","handleDeleteRowQrt","handleAddRowQrt","handleOptionChangeSrtQtr","handleSelectChangeshortQtr","handleDeleteRowShortQrt","handleAddRowShortQrt","handleCFQrySaveAsBtn","_rowsQrt$selectedOpti","_rowsQrt$logical","_rowsQrt$valuept","_rowsortQrt$selectedO","ToastContainer"],"sourceRoot":""}