{"version":3,"file":"static/js/3487.fd417e87.chunk.js","mappings":"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","sources":["sections/_examples/mui/popover-view.js","pages/components/mui/popover.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Radio from '@mui/material/Radio';\nimport Button from '@mui/material/Button';\nimport Popover from '@mui/material/Popover';\nimport FormLabel from '@mui/material/FormLabel';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n//\nimport ComponentBlock from '../component-block';\n\n// ----------------------------------------------------------------------\n\nexport default function PopoverView() {\n  const [arrow, setArrow] = useState('top-left');\n\n  const clickPopover = usePopover();\n\n  const hoverPopover = usePopover();\n\n  const customizedPopover = usePopover();\n\n  const handleChangeArrow = useCallback((event) => {\n    setArrow(event.target.value);\n  }, []);\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Popover\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Popover' },\n            ]}\n            moreLink={['https://mui.com/components/popover']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Box\n          gap={3}\n          display=\"grid\"\n          gridTemplateColumns={{\n            xs: 'repeat(1, 1fr)',\n            md: 'repeat(2, 1fr)',\n          }}\n          sx={{ mb: 3 }}\n        >\n          <ComponentBlock title=\"Click\">\n            <Button variant=\"contained\" onClick={clickPopover.onOpen}>\n              Open Popover\n            </Button>\n            <Popover\n              open={Boolean(clickPopover.open)}\n              anchorEl={clickPopover.open}\n              onClose={clickPopover.onClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n            >\n              <Box sx={{ p: 2, maxWidth: 280 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Etiam feugiat lorem non metus\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                  Fusce vulputate eleifend sapien. Curabitur at lacus ac velit ornare lobortis.\n                </Typography>\n              </Box>\n            </Popover>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Hover\">\n            <Typography\n              aria-owns={hoverPopover.open ? 'mouse-over-popover' : undefined}\n              aria-haspopup=\"true\"\n              onMouseEnter={hoverPopover.onOpen}\n              onMouseLeave={hoverPopover.onClose}\n            >\n              Hover with a Popover.\n            </Typography>\n            <Popover\n              id=\"mouse-over-popover\"\n              open={Boolean(hoverPopover.open)}\n              anchorEl={hoverPopover.open}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              onClose={hoverPopover.onClose}\n              disableRestoreFocus\n              sx={{\n                pointerEvents: 'none',\n              }}\n            >\n              <Box sx={{ p: 2, maxWidth: 280 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Etiam feugiat lorem non metus\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                  Fusce vulputate eleifend sapien. Curabitur at lacus ac velit ornare lobortis.\n                </Typography>\n              </Box>\n            </Popover>\n          </ComponentBlock>\n        </Box>\n\n        <ComponentBlock title=\"Customized\">\n          <Button variant=\"contained\" onClick={customizedPopover.onOpen} sx={{ mr: 5 }}>\n            Open Customized\n          </Button>\n\n          <FormControl>\n            <FormLabel sx={{ typography: 'body2' }}>Arrow</FormLabel>\n            <RadioGroup value={arrow} onChange={handleChangeArrow}>\n              {[\n                'top-left',\n                'top-center',\n                'top-right',\n                'bottom-left',\n                'bottom-center',\n                'bottom-right',\n                'left-top',\n                'left-center',\n                'left-bottom',\n                'right-top',\n                'right-center',\n                'right-bottom',\n              ].map((position) => (\n                <FormControlLabel\n                  key={position}\n                  value={position}\n                  control={<Radio />}\n                  label={position}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n\n          <CustomPopover\n            open={customizedPopover.open}\n            onClose={customizedPopover.onClose}\n            arrow={arrow}\n          >\n            <Box sx={{ p: 2, maxWidth: 280 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Etiam feugiat lorem non metus\n              </Typography>\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                Fusce vulputate eleifend sapien. Curabitur at lacus ac velit ornare lobortis.\n              </Typography>\n            </Box>\n          </CustomPopover>\n        </ComponentBlock>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport PopoverView from 'src/sections/_examples/mui/popover-view';\n\n// ----------------------------------------------------------------------\n\nexport default function PopoverPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: Popover</title>\n      </Helmet>\n\n      <PopoverView />\n    </>\n  );\n}\n"],"names":["PopoverView","arrow","setArrow","useState","clickPopover","usePopover","hoverPopover","customizedPopover","handleChangeArrow","useCallback","event","target","value","_jsxs","_Fragment","children","_jsx","Box","sx","py","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","moreLink","my","gap","display","gridTemplateColumns","xs","md","mb","ComponentBlock","title","Button","variant","onClick","onOpen","Popover","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","p","maxWidth","Typography","gutterBottom","color","undefined","onMouseEnter","onMouseLeave","id","disableRestoreFocus","pointerEvents","mr","FormControl","FormLabel","typography","RadioGroup","onChange","map","position","FormControlLabel","control","Radio","label","CustomPopover","PopoverPage","Helmet"],"sourceRoot":""}