{"version":3,"file":"static/js/4465.afd34493.chunk.js","mappings":"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","sources":["sections/Asset/Asset_List.js"],"sourcesContent":["import isEqual from 'lodash/isEqual';\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport React from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// @mui\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Stack from '@mui/material/Stack';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\n\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// _mock\r\n\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\n\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableSkeleton,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport httpCommon from 'src/http-common';\r\nimport Swal from 'sweetalert2';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport { Icon } from '@iconify/react';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\n\r\nimport { ThreeCircles } from 'react-loader-spinner';\r\n// Toastfy\r\nimport { ToastContainer, toast, Bounce } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\n//\r\nimport AssetTableRow from './asset-table-row';\r\nimport AssetTableFiltersResult from './AssetTableFiltersResult';\r\nimport ExportAssetlistToExcel from \"./ExportFIle/ExportAssetlistToExcel\";\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n// ----------------------------------------------------------------------\r\n\r\n\r\nconst defaultFilters = {\r\n  col1: '',\r\n  publish: [],\r\n  stock: [],\r\n};\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Asset_List() {\r\n  const site_ID = localStorage.getItem('site_ID');\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const AuditUser = localStorage.getItem(\"emp_mst_login_id\");\r\n  const location = useLocation();\r\n  const [DashbordDataGauge, setDashbordDataGauge] = useState(\r\n    location.state?.GaugeDashbordData\r\n  );\r\n  \r\n  const DashbordDataSrt = location.state?.GaugeDashbordDataSort || [];\r\n\r\n  const [DropListIdGet, setDropListIdGet] = useState(\r\n    location.state?.DropListId || []\r\n  );\r\n \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const popover = usePopover();\r\n  const router = useRouter();\r\n  const navigate = useNavigate();\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n  const [maxHeight, setMaxHeight] = useState(\"400px\");\r\n  const [tableData, setTableData] = useState([]);\r\n  const [totalRow, setTotalRow] = useState();\r\n  const [Headerdata, setheaderData] = useState([]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const inputRef = useRef(null);\r\n  const numberOfColumns = \"71\";\r\n  const [FilterShow, setFilterShow] = useState(false);\r\n  const [ResponceStats, setResponceStats] = useState(\"\");\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [initialChecked, setInitialChecked] = useState(false); \r\n\r\n  const [showSave, setShowSave] = useState(false);\r\n  const [AssetFiledname, setAssetFiledname] = useState([]);\r\n  const [selectedOptionEmptyError, setSelectedOptionEmptyError] =\r\n  useState(false);\r\n  const [selectedOptionEmptyErrorShort, setSelectedOptionEmptyErrorShort] =\r\n  useState(false);\r\n  const [valueptEmptyError, setValueptEmptyError] = useState(false);\r\n  const [logicalEmptyError, setLogicalEmptyError] = useState(false);\r\n  const [TitleAstReg, setTitleAstReg] = useState(\"\");\r\n  const [assetFilterDpd, setAssetFilterDpd] = useState([]);\r\n \r\n  const [selectedOptionValue, setselectedOptionValue] = useState();\r\n  \r\n  const [showWordOrderQryList, setShowWordOrderQryList] = useState(false);\r\n  const handleShowWorkOrderQryList = () => setShowWordOrderQryList(true);\r\n  const [showSaveAs, setShowSaveAs] = useState(false);\r\n \r\n  const [selectedOptionEmptyErrorQtr, setSelectedOptionEmptyErrorQtr] =\r\n  useState(false);\r\n  const [valueptEmptyErrorQtr, setValueptEmptyErrorQtr] = useState(false);\r\n  const [logicalEmptyErrorQtr, setLogicalEmptyErrorQtr] = useState(false);\r\n  const [\r\n    selectedOptionEmptyErrorShortQtr,\r\n    setSelectedOptionEmptyErrorShortQtr,\r\n  ] = useState(false);\r\n  const [ExportExcelId, setExportExcelId] = useState(\"\");\r\n  const [selectDropRowID, setselectDropRowID] = useState(\"\");\r\n  const [isInputFocused, setInputFocused] = useState(false);\r\n  const [TableSearchData, setTableSearchData] = useState([]);\r\n  const [UserPermission, setUserPermission] = useState([]);\r\n  const [DefineQueryBtn, setDefineQueryBtn] = useState(\"\");\r\n  const [showQrModel, setshowQrModel] = useState(false);\r\n  const [availabilityQRCode, setAvailabilityQRCode] = useState('selected1');\r\n  const [QrCodeRowId, setQrCodeRowId] = useState(\"\");\r\n\r\n  const [QueryTitleRowId, setQueryTitleRowID] = useState(\"\");\r\n\r\n  const [showPromt, setShowPromt] = useState(false);\r\n  const [rowsDropdownPrompt, setRowsDropdownPrompt] = useState([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"\",\r\n      logical: \"\",\r\n      valuept: \"\",\r\n      RowId:\"\",\r\n      prompt:\"\",\r\n      siteCd: site_ID,\r\n      Column:\"\",\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  \r\n  // Get Api data useEffect\r\n  \r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_asset_master_table_data.php?site_cd=${site_ID}&page=${currentPage}`\r\n      );\r\n     // console.log(\"response_____fetcha___\",response);\r\n      setheaderData(response.data.data.header);\r\n      setTableData(response.data.data.result);\r\n      setTotalRow(response.data.total_count);\r\n     // Swal.close();\r\n      setIsLoading(false);\r\n    \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }, [site_ID, currentPage]);\r\n\r\n  const fetchFilterSubPopupSavedropdon = async () => {\r\n    // Get dropdown value using api\r\n    \r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_asset_filter_dropdown.php?site_cd=${site_ID}&auditUser=${AuditUser}`\r\n      );\r\n      setAssetFilterDpd(response.data);\r\n  // Swal.close();\r\n      if (DropListIdGet !== \"\" && DropListIdGet !== null) {\r\n        const matchedItem = response.data.find(\r\n          (item) => item.RowID === DropListIdGet\r\n        );\r\n        if (matchedItem) {\r\n          const cfQueryDescValue = matchedItem.cf_query_title;\r\n\r\n          setTitleAstReg(cfQueryDescValue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n    //  fetch the data Gauge dashbord\r\n    const fetchDataGaugeDSB = useCallback(async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/get_gauge_dashbord_asset_data.php?page=\" + currentPage,\r\n          {\r\n            rows: DashbordDataGauge,\r\n            rowsort: DashbordDataSrt,\r\n           // rowsPrm: DashbordDataPrmMst,\r\n            site_cd: site_ID,\r\n            emp_ID:emp_owner,\r\n          }\r\n        );\r\n        console.log(\"response_____using _dashbord\",response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          if (response.data.data.result.length > 0) {\r\n            setheaderData(response.data.data.header);\r\n            setTableData(response.data.data.result);\r\n            setTotalRow(response.data.total_count);\r\n           // setResponceStats(response.data.StatusPRM);\r\n           // setTotalCount(response.data.TotalCountPRM);\r\n          }\r\n         \r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }, [site_ID, currentPage]);\r\n  \r\n  const handleOptionChange = async (event,responseData) => {\r\n    const selectedValue = event?.target?.value || selectedOption;\r\n    \r\n    setCurrentPage(1);\r\n  \r\n    const selectedOptionObjectFilter = assetFilterDpd.find(\r\n      (item) => item.cf_query_title === selectedValue\r\n    );\r\n\r\n    let selectedOptionObject;\r\n\r\n    if (Array.isArray(responseData) && responseData.length > 0) {\r\n      selectedOptionObject = responseData.find(\r\n        (item) => item.cf_query_title === selectedValue\r\n      );\r\n    }\r\n\r\n    if (selectedOptionObjectFilter) {\r\n      const GetRowID = selectedOptionObjectFilter.RowID;\r\n      const GetPrompt = selectedOptionObjectFilter.cf_query_list_prompt;\r\n      if(GetPrompt == '1'){\r\n        setShowPromt(true);\r\n        Swal.fire({\r\n          title: \"Please Wait !\",\r\n          allowOutsideClick: false,\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        Swal.showLoading();\r\n        try {\r\n          const response = await httpCommon.get(\r\n            \"/get_work_order_filter_query_data.php?site_cd=\" +\r\n              site_ID +\r\n              \"&RowID=\" +\r\n              GetRowID\r\n          );\r\n          \r\n          if (response.data.data && response.data.data.list_typeF && response.data.data.list_typeF.length > 0) {\r\n            const newRows = response.data.data.list_typeF.map((item) => ({\r\n              selectedOption: item.cf_query_list_column,\r\n              operator: item.cf_query_list_operator,\r\n              valuept: item.cf_query_list_value,\r\n              logical: item.cf_query_list_logical,\r\n              siteCd: site_ID,\r\n              RowId: GetRowID,\r\n              prompt:GetPrompt,\r\n              Column:item.customize_header,\r\n              queryTypedd: \"F\",\r\n            }));\r\n            const timeoutId = setTimeout(() => {\r\n              Swal.close();\r\n              setRowsDropdownPrompt(newRows);\r\n            }, 3000);\r\n            //setShowAssetByDescp(false);\r\n          } else {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              customClass: {\r\n                container: \"swalcontainercustom\",\r\n              },\r\n              title: \"Oops...\",\r\n              text: \"No record found Please try again !\",\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n        return;\r\n      }\r\n      setExportExcelId(GetRowID);\r\n      setselectDropRowID(GetRowID);\r\n      setCurrentPage(1);\r\n      setDropListIdGet([]);\r\n      setDashbordDataGauge([]);\r\n      setTitleAstReg(\"\");\r\n    }else{\r\n      const GetRowID = selectedOptionObject.RowID;\r\n      setExportExcelId(GetRowID);\r\n      setselectDropRowID(GetRowID);\r\n      setCurrentPage(1);\r\n      setDropListIdGet([]);\r\n      setDashbordDataGauge([]);\r\n      setTitleAstReg(\"\");\r\n    }\r\n    setSelectedOption(selectedValue);\r\n  };\r\n  \r\n  const getb = useCallback(async () => {\r\n  \r\n    setIsLoading(true);\r\n    try {\r\n     \r\n      const response = await httpCommon.post(\r\n        `/get_asset_list_selectoption_data.php?site_cd=${site_ID}&ItemID=${selectDropRowID}&page=${currentPage}&EmpId=${emp_owner}`\r\n      );\r\n     //  console.log(\"check___api__data__\",response);\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.DashbrdCount);\r\n       // Swal.close();\r\n        setIsLoading(false);\r\n      } else {\r\n        setTableData(\"\");\r\n        setTotalRow(\"\");\r\n        setIsLoading(false);\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [site_ID, currentPage, selectDropRowID]);\r\n\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: Array.isArray(tableData) ? tableData : [],\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 60 : 80;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  // const handleDeleteRow = useCallback((id) => {\r\n  //   console.log(\"crow_______\",id);\r\n  //   //   const deleteRow = tableData.filter((row) => row.id !== id);\r\n  //   //   setTableData(deleteRow);\r\n\r\n  //   //   table.onUpdatePageDeleteRow(dataInPage.length);\r\n  //    },\r\n  //   [dataInPage.length, table, tableData]\r\n  // );\r\n\r\n  const handleDeleteRow = useCallback(async (id, row) => {\r\n \r\n    const Rowid = id;\r\n    const AstNo = row.col1;\r\n    if (Rowid !== '' && AstNo !== '') {\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\"\r\n      }).then(async (result) => { // Add async here if you want to use await inside then\r\n        if (result.isConfirmed) {\r\n          setIsLoading(true);\r\n    \r\n          try {\r\n            const response = await httpCommon.get(\r\n              `/asset_list_delete_record.php?site_cd=${site_ID}&mst_id=${Rowid}&ast_no=${AstNo}`\r\n            );\r\n           // console.log(\"response_____delete___\",response);\r\n            if(response.data.status == \"SUCCESS\"){\r\n              Swal.fire({\r\n              title: \"Deleted!\",\r\n              text: \"Asset Record Delete Successfully\",\r\n              icon: \"success\"\r\n              });\r\n              fetchData();\r\n            }\r\n            if(response.data.status == \"ERROR\"){\r\n              Swal.fire({\r\n              title: \"Oops!\",\r\n              text: response.data.message,\r\n              icon: \"error\"\r\n              });\r\n            }\r\n            setIsLoading(false);\r\n          \r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n          \r\n        }\r\n      });\r\n    }\r\n  }, [tableData, router, site_ID]);\r\n  \r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id,row) => {\r\n\r\n      const Rowid = id;\r\n      const AstNo = row.col1;\r\n     \r\n      if (Rowid !== '' && AstNo !== '') {\r\n        navigate(`/dashboard/asset/newasset`, {\r\n          state: {\r\n            RowID:Rowid,\r\n            Ast_no:AstNo,\r\n            currentPage,\r\n            selectedOption,\r\n          },\r\n        });\r\n      }\r\n\r\n    },\r\n    [router,currentPage, selectedOption]\r\n  );\r\n  const handleDuplicateRow = useCallback(\r\n    (id,row) => {\r\n     \r\n      const DuplicatRowid = id;\r\n      const AstNo = row.col1;\r\n      if (DuplicatRowid !== '' ) {\r\n        navigate(`/dashboard/asset/newasset`, {\r\n          state: {\r\n            DuplicatRowid:DuplicatRowid,\r\n            DupRowID:DuplicatRowid,\r\n            DupAst_no:AstNo,\r\n            currentPage,\r\n            selectedOption,\r\n          },\r\n        });\r\n      }\r\n    \r\n    },\r\n    [router,currentPage, selectedOption]\r\n  );\r\n\r\n  const handlePrintQr = useCallback((id) => {\r\n    setshowQrModel(true);\r\n    const Rowid = id;\r\n    setQrCodeRowId(Rowid);\r\n   \r\n  });\r\n\r\n  const handleQRCodePrintBtn = () => {\r\n   \r\n    if (QrCodeRowId !== '' && availabilityQRCode !== null) {\r\n        navigate(`/dashboard/asset/assetPrintQr`, {\r\n          state: {\r\n            RowID:QrCodeRowId,\r\n            selectedVlue:availabilityQRCode,\r\n            ItemID:selectDropRowID,\r\n          },\r\n        });\r\n      }\r\n   }\r\n\r\n  const handleCloseQrCode = () => {\r\n    setshowQrModel(false);\r\n  };\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.product.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n    inputRef.current.value = '';\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n\r\n  // set screen revolation set\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const windowHeight = window.innerHeight;\r\n      // Adjust maxHeight based on window height\r\n      const newMaxHeight = Math.floor(windowHeight * 0.6) + \"px\"; // Adjust this value as needed\r\n      setMaxHeight(newMaxHeight);\r\n    };\r\n\r\n    // Call handleResize on initial mount\r\n    handleResize();\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Remove event listener on component unmount\r\n    return () => window.removeEventListener('resize', handleResize);\r\n   \r\n  }, []);\r\n\r\n  // Filter funcation\r\n  const [rows, setRows] = useState([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"\",\r\n      logical: \"AND\",\r\n      prompt: \"0\",\r\n      valuept: \"\",\r\n      siteCd: site_ID,\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  // Short By State\r\n  const [rowsort, setRowsort] = useState([\r\n    {\r\n      selectedOptionShort: \"\",\r\n      promptAsd: \"ASC\",\r\n      siteCd: site_ID,\r\n      queryType: \"S\",\r\n    },\r\n  ]);\r\n\r\n  const isButtonDisabled = rows.some((row) => row.selectedOption === \"\");\r\n  const Openbracket = [\r\n    { value: \"(\", label: \"(\" },\r\n    { value: \"\", label: \"\" },\r\n  ];\r\n\r\n  const Closebracket = [\r\n    { value: \"(\", label: \")\" },\r\n    { value: \"\", label: \"\" },\r\n  ];\r\n\r\n  const oprt = [\r\n    { value: \"like\", label: \"Like\" },\r\n    { value: \"not like\", label: \"Not Like\" },\r\n    { value: \"I=\", label: \"Is\" },\r\n    { value: \"!=\", label: \"Is not\" },\r\n    { value: \"=\", label: \"Equal to\" },\r\n    { value: \">\", label: \"Greater than\" },\r\n    { value: \"<\", label: \"Less than\" },\r\n    { value: \">=\", label: \"Greater than or equal to\" },\r\n    { value: \"<=\", label: \"Less than or equal to\" },\r\n    { value: \"<>\", label: \"Not equal to\" },\r\n  ];\r\n\r\n  const Logcl = [\r\n    { value: \"And\", label: \"And\" },\r\n    { value: \"Or\", label: \"Or\" },\r\n  ];\r\n\r\n  const handleOptionChange1 = (index, selectedOption) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].selectedOption = selectedOption;\r\n    setSelectedOptionEmptyError(false);\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  const handleOptionChangeOprter = (index, operator) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].operator = operator;\r\n    setRows(updatedRows);\r\n  };\r\n  const handleSelectChange = (index, checked) => {\r\n    const newRows = [...rows];\r\n    newRows[index].prompt = checked ? \"1\" : \"0\";\r\n    setRows(newRows);\r\n  };\r\n\r\n  const handleInputValueChangeQtr = (index, newValue) => {\r\n    const updatedRowsQtr = [...rows];\r\n    updatedRowsQtr[index].valuept = newValue;\r\n    setValueptEmptyError(false);\r\n    setRows(updatedRowsQtr);\r\n    // Check if the selectedOption and valuept are empty\r\n    if (!newValue && !updatedRowsQtr[index].selectedOption) {\r\n      //  setSelectedOptionEmptyErrorQtr(true);\r\n      //  setValueptEmptyErrorQtr(true);\r\n    } else {\r\n      // setSelectedOptionEmptyErrorQtr(false);\r\n      //  setValueptEmptyErrorQtr(false);\r\n    }\r\n  };\r\n\r\n  const handleIncludeChangeLogcil = (index, logical) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].logical = logical.target.value;\r\n    setLogicalEmptyError(false);\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const isLastRowEmpty =\r\n      rows.length > 0 &&\r\n      (!rows[rows.length - 1].selectedOption ||\r\n        rows[rows.length - 1].selectedOption === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyError(!isLastRowEmpty.selectedOption);\r\n      setValueptEmptyError(!isLastRowEmpty.valuept);\r\n      setLogicalEmptyError(!isLastRowEmpty.logical);\r\n    } else {\r\n      // Add a new row\r\n      setRows((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOption: \"\",\r\n          operator: \"\",\r\n          logical: \"\",\r\n          prompt: \"0\",\r\n          valuept: \"\",\r\n          siteCd: site_ID,\r\n          queryTypedd: \"F\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyError(false);\r\n      setValueptEmptyError(false);\r\n      setLogicalEmptyError(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRowPopup = (index) => {\r\n    if (rows.length > 1) {\r\n      const newRows = [...rows];\r\n      newRows.splice(index, 1);\r\n      setRows(newRows);\r\n    }\r\n  };\r\n\r\n  const FilterhandleClose = () => {\r\n    // Call your custom logic here before closing the filter\r\n    if (rows.length > 1) {\r\n      const newRows = [rows[0]]; // Keep only the first row\r\n      setRows(newRows);\r\n    }\r\n  \r\n    // Call handleDeleteRowShort to remove all rowsort except the first one\r\n    if (rowsort.length > 1) {\r\n      const newRowsort = [rowsort[0]]; // Keep only the first row\r\n      setRowsort(newRowsort);\r\n    }\r\n    \r\n    // Close the filter\r\n    setFilterShow(false);\r\n  };\r\n\r\n  const handelFilterAction = () => {\r\n    setCurrentPage(1);\r\n      const updatedEmptyRows = rows.map((row) => ({\r\n          // empty state data\r\n          ...row,\r\n          selectedOption: \"\",\r\n          logical: \"\",\r\n          operator:\"\",\r\n          valuept: \"\",\r\n          logical:\"\",\r\n        }));\r\n        setRows(updatedEmptyRows);\r\n\r\n      const updatedEmptyRowsort = rows.map((rowsort) => ({\r\n          // empty state data\r\n          ...rowsort,\r\n          selectedOptionShort: \"\",\r\n        }));\r\n        setRowsort(updatedEmptyRowsort);\r\n      setDefineQueryBtn(\"\");\r\n    if (rows.length > 1) {\r\n      const newRows = [rows[0]]; // Keep only the first row\r\n      setRows(newRows);\r\n    }\r\n  \r\n    // Call handleDeleteRowShort to remove all rowsort except the first one\r\n    if (rowsort.length > 1) {\r\n      const newRowsort = [rowsort[0]]; // Keep only the first row\r\n      setRowsort(newRowsort);\r\n    }\r\n    setFilterShow(true);\r\n    getAssetListLebel();\r\n  };\r\n  const rowOptions = AssetFiledname.map((row) => ({\r\n    value: row.column_name,\r\n    label: `${row.default_label}`,\r\n  }));\r\n    /* Filter dropdown value */\r\n    const getAssetListLebel = async () => {\r\n      try {\r\n        const response = await httpCommon.get(\"/getAssetFilterFileName.php\");\r\n       // console.log(\"response___assetList\",response);\r\n        if (response.data.status == \"SUCCESS\") {\r\n          setAssetFiledname(response.data.data);\r\n          //setAstdetLabel(response.data.data.ast_det);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n// Retrive button  funcation,setTableData\r\n\r\n//console.log(\"rowsort____\",rowsort);\r\n\r\n  const RetriveData = useCallback(async () => {\r\n    let hasEmptyOperator = false;\r\n    let hasEmptyValuept = false;\r\n    let hasEmptyLogical  = false;\r\n       // console.log(\"rowrowrow___\",rows);\r\n    for (const row of rows) {\r\n      \r\n        if (!row.operator) {\r\n            hasEmptyOperator = true;\r\n        }\r\n        if (!row.valuept) {\r\n            hasEmptyValuept = true;\r\n        }\r\n       \r\n    }\r\n    if(DefineQueryBtn === \"\"){\r\n      //console.log(\"Enter this code_____\");\r\n      if (hasEmptyOperator || hasEmptyValuept) {\r\n        let fieldName = '';\r\n        if (hasEmptyOperator && hasEmptyValuept && hasEmptyLogical) {\r\n            fieldName = \"Operator and Value\";\r\n        } else if (hasEmptyOperator) {\r\n            fieldName = \"Operator\";\r\n        } else if (hasEmptyValuept) {\r\n            fieldName = \"Value\";\r\n        }\r\n        Swal.close();\r\n        toast.error(`Please fill the required field: ${fieldName}`, {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            transition: Bounce,\r\n            style: {\r\n                width: \"400px\", \r\n            }\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n  //  console.log(\"currentPage____\",currentPage);\r\n   // setCurrentPage(1);\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_retrive_popup_asset_filed_data.php?page=\" + currentPage,\r\n        {\r\n          rows: rows,\r\n          rowsort: rowsort,\r\n          SiteCD: site_ID,\r\n          admin: emp_owner,\r\n        }\r\n      );\r\n     // console.log(\"response_____Asset_filter__\",response);\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        setTitleAstReg(response.data.titleName);\r\n        setDefineQueryBtn(\"RetriveData\");\r\n     \r\n        Swal.close();\r\n        FilterhandleClose();\r\n      //   const updatedEmptyRows = rows.map((row) => ({\r\n      //     // empty state data\r\n      //     ...row,\r\n      //     selectedOption: \"\",\r\n      //     logical: \"\",\r\n      //     valuept: \"\",\r\n      //   }));\r\n      //   setRows(updatedEmptyRows);\r\n\r\n      // const updatedEmptyRowsort = rows.map((rowsort) => ({\r\n      //     // empty state data\r\n      //     ...rowsort,\r\n      //     selectedOptionShort: \"\",\r\n      //   }));\r\n      //   setRowsort(updatedEmptyRowsort);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [site_ID, currentPage,rows,rowsort]);\r\n\r\n  const RetriveDataAllData = useCallback(async () => {\r\n    \r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_retrive_asset_all_data.php?page=\" + currentPage,\r\n        {\r\n          SiteCD: site_ID,\r\n          admin: emp_owner,\r\n        }\r\n      );\r\n     \r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        setTitleAstReg(response.data.titleName);\r\n        // setDefineQueryBtn(\"RetriveData\");\r\n     \r\n        Swal.close();\r\n        FilterhandleClose();\r\n    \r\n      } else {\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [site_ID, currentPage]);\r\n\r\n    const retriveBtn = () => {\r\n      if (rows.some((row) => row.selectedOption !== \"\")) {\r\n        RetriveData();\r\n      }else{\r\n       \r\n          RetriveDataAllData();\r\n      }\r\n    };\r\n\r\n    const SaveRegTbl = () => {\r\n      setShowSave(true);\r\n      fetchFilterSubPopupSavedropdon();\r\n    };\r\n\r\n  // Short By code\r\n  const handleOptionChange2 = (index, selectedOptionShort) => {\r\n    const updatedRows = [...rowsort];\r\n    updatedRows[index].selectedOptionShort = selectedOptionShort;\r\n    setSelectedOptionEmptyErrorShort(false);\r\n    setRowsort(updatedRows);\r\n  };\r\n  const handleSelectChangeshort = (index, checked) => {\r\n    const newRows = [...rowsort];\r\n    newRows[index].promptAsd = checked ? \"ASC\" : \"DESC\";\r\n    setRowsort(newRows);\r\n  };\r\n  const handleAddRowShort = () => {\r\n    if (rowsort[rowsort.length - 1].selectedOptionShort === \"\") {\r\n      setSelectedOptionEmptyErrorShort(\r\n        rowsort[rowsort.length - 1].selectedOptionShort === \"\"\r\n      );\r\n    } else {\r\n      const newRow = {\r\n        selectedOptionShort: \"\",\r\n        promptAsd: \"ASC\",\r\n      };\r\n      setRowsort([...rowsort, newRow]);\r\n    }\r\n  };\r\n  const handleDeleteRowShort = (index) => {\r\n    if (rowsort.length > 1) {\r\n      const newRows = [...rowsort];\r\n      newRows.splice(index, 1);\r\n      setRowsort(newRows);\r\n    }\r\n  };\r\n  const handleCloseSave = () => {\r\n    setShowSave(false);\r\n    setFormDataSv({\r\n      queryName: \"\",\r\n      description: \"\",\r\n    });\r\n  };\r\n  \r\n  const [formDataSv, setFormDataSv] = useState([\r\n    {\r\n      queryName: \"\",\r\n      description: \"\",\r\n      availability: \"G\",\r\n      site_cd: site_ID,\r\n      owner: emp_owner,\r\n    },\r\n  ]);\r\n  const handleInputChangeSav = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormDataSv((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleInputChangeQRCode = (event) => {\r\n    setAvailabilityQRCode(event.target.value);\r\n  }\r\n\r\n  // Insert Cf_query Api with Query List popup data\r\n  const InsertCf_queryListData = async () => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      formDataSv: formDataSv,\r\n      rowsQrtData: rows,\r\n      rowsortQrtData: rowsort,\r\n      site_cd: site_ID,\r\n      owner: emp_owner,\r\n      availability: \"G\",\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_asset_filter_query_list_data.php\",\r\n        combinedData\r\n      );\r\n    // console.log(\"response_____saveButton_res___\",response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setTitleAstReg(response.data.Title);\r\n        fetchFilterSubPopupSavedropdon();\r\n        RetriveData();\r\n        handleDeleteRowPopup();\r\n        handleDeleteRowShort();\r\n        Swal.close();\r\n        handleCloseSave();\r\n        FilterhandleClose();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // Filter Save button funcation click to\r\n    const handleCFQrySave = () => {\r\n     \r\n      if (formDataSv.queryName.trim() !== \"\") {\r\n        const inputValue = formDataSv.queryName;\r\n        const matchingOption = assetFilterDpd.find(\r\n          (option) => option.cf_query_title === inputValue\r\n        );\r\n        if (matchingOption) {\r\n          //setMessage('Input value matches an option in the list.');\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to overwrite the query\" + \" \" + inputValue,\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes!\",\r\n            cancelButtonText: \"No\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              if (\r\n                rows?.selectedOption?.trim() !== \"\" &&\r\n                rows?.logical?.trim() !== \"\" &&\r\n                rows?.valuept?.trim() !== \"\" &&\r\n                rowsort?.selectedOptionShort?.trim() !== \"\"\r\n              ) {\r\n                InsertCf_queryListData();\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          InsertCf_queryListData();\r\n        }\r\n      } else {\r\n        console.log(\"empty__\");\r\n      }\r\n    };\r\n  // Query button click to funcatio start\r\n    // Handel Query List popup\r\n    const [rowsQrt, setRowsQrt] = useState([\r\n      {\r\n        selectedOption: \"\",\r\n        operator: \"\",\r\n        logical: \"\",\r\n        prompt: \"\",\r\n        valuept: \"\",\r\n        siteCd: site_ID,\r\n        queryTypedd: \"F\",\r\n      },\r\n    ]);\r\n    //Sorting data append rowsQrt rowsortQrt\r\n    const [rowsortQrt, setRowsortQrt] = useState([\r\n      {\r\n        selectedOptionShort: \"\",\r\n        promptAsd: \"\",\r\n        siteCd: site_ID,\r\n        queryType: \"S\",\r\n      },\r\n    ]);\r\n    const handleCloseWorkQryList = () => {\r\n      setShowWordOrderQryList(false);\r\n      FilterhandleClose();\r\n      handleCloseSave();\r\n      setselectedOptionValue(\"\");\r\n      setRowsQrt([]);\r\n      setRowsortQrt([]);\r\n    };\r\n    const RetriveDataQueryList = async () => {\r\n      Swal.fire({\r\n        title: \"Please Wait !\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/get_retrive_popup_asset_filed_data.php?page=\" + currentPage,\r\n          {\r\n            rows: rowsQrt,\r\n            rowsort: rowsortQrt,\r\n            SiteCD:site_ID,\r\n            admin:emp_owner\r\n          }\r\n        );\r\n      // console.log(\"response____fliter___\",response);\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        Swal.close();\r\n        FilterhandleClose();\r\n        const updatedEmptyRows = rowsQrt.map((row) => ({\r\n          // empty state data\r\n          ...row,\r\n          selectedOption: \"\",\r\n          logical: \"\",\r\n          valuept: \"\",\r\n        }));\r\n        setRows(updatedEmptyRows);\r\n  \r\n        const updatedEmptyRowsort = rowsortQrt.map((rowsort) => ({\r\n          // empty state data\r\n          ...rowsort,\r\n          selectedOptionShort: \"\",\r\n        }));\r\n        setRowsort(updatedEmptyRowsort);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const DeleteAssetRegQryList = async () => {\r\n      const [cf_query_title, RowID] = selectedOptionValue.split(\"-\");\r\n  \r\n      if (selectedOptionValue && RowID !== \"\") {\r\n        try {\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"You want to delete \" + cf_query_title + \" query!\",\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\",\r\n          }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n              const response = await httpCommon.get(\r\n                \"/AssetsRegQueryListDataDelete.php?value=\" +\r\n                  RowID +\r\n                  \"&siteId=\" +\r\n                  site_ID\r\n              );\r\n  \r\n              if (response.data.status == \"SUCCESS\") {\r\n                fetchFilterSubPopupSavedropdon();\r\n                //  setErrord(null);\r\n                setselectedOptionValue(\"\");\r\n                setRowsQrt([]);\r\n                setRowsortQrt([]);\r\n                //setSelectedRow([]);\r\n                Swal.fire(\"Deleted!\", \"Your query has been deleted.\", \"success\");\r\n              }\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"empty\");\r\n      }\r\n    };\r\n    const SaveWorkOrderQryList = async () => {\r\n      const [cf_query_title, RowID] = selectedOptionValue.split(\"-\");\r\n      const isAnySelectedOptionShortEmpty = rowsortQrt.some(\r\n        (row) => !row.selectedOptionShort\r\n      );\r\n      if (isAnySelectedOptionShortEmpty && RowID != \"\") {\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Please Wait !\",\r\n          allowOutsideClick: false,\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n       // Swal.showLoading();\r\n        const combinedData = {\r\n          rowsQrtData: rowsQrt,\r\n          siteCd: site_ID,\r\n          owner: emp_owner,\r\n          mst_RowID: RowID,\r\n          defaultFlag:isChecked,\r\n          rowsortQrtData: rowsortQrt,\r\n        };\r\n       \r\n        try {\r\n          const response = await httpCommon.post(\r\n            \"/insert_asset_query_list_save_data.php\",\r\n            combinedData\r\n          );\r\n            console.log(\"response__SaveBytncf__\",response);\r\n          if (response.data.status == \"SUCCESS\") {\r\n            Swal.close();\r\n            Swal.fire({\r\n              title: \"Success!\",\r\n              text: \"Your query update successfully.\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n              customClass: {\r\n                container: \"swalcontainercustom\",\r\n              },\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                setIsChecked(false);\r\n                RetriveDataQueryList();\r\n                setRowsQrt([]);\r\n                setselectedOptionValue(\"\");\r\n                setRowsortQrt([]);\r\n                setRowsort([]);\r\n                setRows([]);\r\n               \r\n                handleCloseWorkQryList();\r\n              }\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    };\r\n    const SaveAsworkorderTbl = () => {\r\n      setShowSaveAs(true);\r\n    };\r\n\r\n    const handleCloseSaveAs = () => {\r\n      setShowSaveAs(false);\r\n      setFormDataSv({\r\n        queryName: \"\",\r\n        description: \"\",\r\n      });\r\n    };\r\n    const handleCFQrySaveAsBtn = () => {\r\n      if (formDataSv.queryName.trim() !== \"\") {\r\n        const inputValue = formDataSv.queryName;\r\n        const matchingOption = assetFilterDpd.find(\r\n          (option) => option.cf_query_title === inputValue\r\n        );\r\n        if (matchingOption) {\r\n          //setMessage('Input value matches an option in the list.');\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to overwrite the query\" + \" \" + inputValue,\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes!\",\r\n            cancelButtonText: \"No\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              if (\r\n                rowsQrt?.selectedOption?.trim() !== \"\" &&\r\n                rowsQrt?.logical?.trim() !== \"\" &&\r\n                rowsQrt?.valuept?.trim() !== \"\" &&\r\n                rowsortQrt?.selectedOptionShort?.trim() !== \"\"\r\n              ) {\r\n                InsertCf_queryListDataSavaAs();\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          InsertCf_queryListDataSavaAs();\r\n        }\r\n      } else {\r\n        console.log(\"empty__\");\r\n      }\r\n    };\r\n    // fetch data using dropdon\r\n  const handleClickOption = async (selectedOption) => {\r\n    setselectedOptionValue(selectedOption);\r\n    \r\n    let cf_query_title, RowID;\r\n\r\n    const hyphenCount = selectedOption.split(\"-\").length - 1;\r\n\r\n    if(hyphenCount === 1){\r\n       [cf_query_title, RowID] = selectedOption.split(\"-\")\r\n    }else{\r\n      const parts = selectedOption.split(\"-\");\r\n      cf_query_title = parts[0].trim();\r\n      RowID = parts[parts.length - 1].trim();\r\n    }\r\n \r\n    setTitleAstReg(cf_query_title);\r\n    if(RowID !== \"\" && cf_query_title !==\"\"){\r\n      setQueryTitleRowID(RowID);\r\n   // setIsChecked(true);\r\n    const initialCheckedState = assetFilterDpd.some(\r\n      item => item.RowID === RowID && item.cf_query_title === cf_query_title && item.cf_query_default_flag === \"1\"\r\n    );\r\n  \r\n    setIsChecked(initialCheckedState);\r\n\r\n  }else{\r\n    setIsChecked(false);\r\n  }\r\n\r\n    setRowsQrt([]);\r\n    setRowsortQrt([]);\r\n    if (selectedOption !== \"\") {\r\n      Swal.fire({\r\n        title: \"Please Wait !\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_work_order_filter_query_data.php?site_cd=\" +\r\n            site_ID +\r\n            \"&RowID=\" +\r\n            RowID\r\n        );\r\n       \r\n        if (response.data.data && response.data.data.list_typeF && response.data.data.list_typeF.length > 0) {\r\n          const newRows = response.data.data.list_typeF.map((item) => ({\r\n            selectedOption: item.cf_query_list_column,\r\n            operator: item.cf_query_list_operator,\r\n            prompt: item.cf_query_list_prompt,\r\n            valuept: item.cf_query_list_value,\r\n            logical: item.cf_query_list_logical,\r\n            siteCd: site_ID,\r\n            queryTypedd: \"F\",\r\n          }));\r\n          const timeoutId = setTimeout(() => {\r\n            Swal.close();\r\n            setRowsQrt((prevrowsQrt) => [...prevrowsQrt, ...newRows]);\r\n          }, 3000);\r\n          //setShowAssetByDescp(false);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: \"Oops...\",\r\n            text: \"No record found Please try again !\",\r\n          });\r\n        }\r\n        if (response.data.data && response.data.data.list_typeS.length > 0) {\r\n          const newRows = response.data.data.list_typeS.map((item) => ({\r\n            selectedOptionShort: item.cf_query_list_column,\r\n            promptAsd: item.cf_query_list_order_by,\r\n            queryType: \"S\",\r\n            siteCd: site_ID,\r\n          }));\r\n\r\n          // Append newRows to the existing tableData\r\n\r\n          const timeoutId = setTimeout(() => {\r\n            Swal.close();\r\n            setRowsortQrt((rowsortQrt) => [...rowsortQrt, ...newRows]);\r\n          }, 3000);\r\n          //setShowAssetByDescp(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n  };\r\n \r\nconst handelQuryListpopup = () => {\r\n  fetchFilterSubPopupSavedropdon();\r\n  handleShowWorkOrderQryList();\r\n};\r\n\r\nconst handleCheckboxClick = () => {\r\n  \r\n    setIsChecked(!isChecked);\r\n};\r\n\r\n\r\nconst handleOptionChangeQtr = (index, selectedOption) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].selectedOption = selectedOption;\r\n  setSelectedOptionEmptyErrorQtr(false);\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\n\r\nconst handleOptionChangeOprterQtr = (index, operator) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].operator = operator;\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\nconst handleSelectChangeQtr = (index, checked) => {\r\n  const newRows = [...rowsQrt];\r\n  newRows[index].prompt = checked ? \"1\" : \"0\";\r\n  setRowsQrt(newRows);\r\n};\r\nconst handleInputValueChangeQtr2 = (index, newValue) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].valuept = newValue;\r\n  //setValueptEmptyErrorQtr(false);\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\n  const handleDeleteRowQrt = (index) => {\r\n    if (rowsQrt.length > 1) {\r\n      const newRows = [...rowsQrt];\r\n      newRows.splice(index, 1);\r\n      setRowsQrt(newRows);\r\n    }\r\n  };\r\n  const handleAddRowQrt = () => {\r\n    const isLastRowEmpty =\r\n      rowsQrt.length > 0 &&\r\n      (!rowsQrt[rowsQrt.length - 1].selectedOption ||\r\n        rowsQrt[rowsQrt.length - 1].selectedOption === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyErrorQtr(!isLastRowEmpty.selectedOption);\r\n      setValueptEmptyErrorQtr(!isLastRowEmpty.valuept);\r\n      setLogicalEmptyErrorQtr(!isLastRowEmpty.logical);\r\n    } else {\r\n      // Add a new row\r\n      setRowsQrt((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOption: \"\",\r\n          operator: \"Like\",\r\n          logical: \"\",\r\n          prompt: \"0\",\r\n          valuept: \"\",\r\n          siteCd: site_ID,\r\n          queryTypedd: \"F\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyErrorQtr(false);\r\n      setValueptEmptyErrorQtr(false);\r\n      setLogicalEmptyErrorQtr(false);\r\n    }\r\n  };\r\n  const handleOptionChangeSrtQtr = (index, selectedOptionShort) => {\r\n    const updatedRowsQtr = [...rowsortQrt];\r\n    updatedRowsQtr[index].selectedOptionShort = selectedOptionShort;\r\n    setSelectedOptionEmptyErrorShortQtr(false);\r\n    setRowsortQrt(updatedRowsQtr);\r\n  };\r\n  const handleSelectChangeshortQtr = (index, checked) => {\r\n    const newRows = [...rowsortQrt];\r\n    newRows[index].promptAsd = checked ? \"ASC\" : \"DESC\";\r\n    setRowsortQrt(newRows);\r\n  };\r\n  const handleDeleteRowShortQrt = (index) => {\r\n    if (rowsortQrt.length > 1) {\r\n      const newRows = [...rowsortQrt];\r\n      newRows.splice(index, 1);\r\n      setRowsortQrt(newRows);\r\n    }\r\n  };\r\n  const handleAddRowShortQrt = () => {\r\n    const isLastRowEmpty =\r\n      rowsortQrt.length > 0 &&\r\n      (!rowsortQrt[rowsortQrt.length - 1].selectedOptionShort ||\r\n        rowsortQrt[rowsortQrt.length - 1].selectedOptionShort === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyErrorShortQtr(!isLastRowEmpty.selectedOptionShort);\r\n      //  setSelectedCheckEmptyErrorShortQtr(!isLastRowEmpty.promptAsd);\r\n    } else {\r\n      // Add a new row\r\n      setRowsortQrt((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOptionShort: \"\",\r\n          promptAsd: \"\",\r\n          siteCd: site_ID,\r\n          queryType: \"S\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyErrorShortQtr(false);\r\n      // setSelectedCheckEmptyErrorShortQtr(false);\r\n    }\r\n  };\r\n  const InsertCf_queryListDataSavaAs = async () => {\r\n    const site_ID = localStorage.getItem(\"site_ID\");\r\n    const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      formDataSv: formDataSv,\r\n      rowsQrtData: rowsQrt,\r\n      rowsortQrtData: rowsortQrt,\r\n      SITE_CD: site_ID,\r\n      OWNER_ID: emp_owner,\r\n      availability: \"G\",\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_asset_query_list_save_as_data.php\", \r\n        combinedData\r\n      );\r\n      console.log(\"saveAsQuery_____\",response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setTitleAstReg(response.data.Title);\r\n        fetchFilterSubPopupSavedropdon();\r\n        RetriveDataQueryList();\r\n        setRowsQrt([]);\r\n        setselectedOptionValue(\"\");\r\n        setRowsortQrt([]);\r\n        Swal.close();\r\n        handleCloseSave();\r\n        FilterhandleClose();\r\n        handleCloseSaveAs();\r\n        handleCloseWorkQryList();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n \r\n// Search Button Click funcation\r\nconst handelSearchButton = async () => {\r\n  const inputValueGet = inputRef.current.value;\r\n  //console.log(\"inputValueGet_____\",inputValueGet);\r\n  \r\n  if (inputValueGet !== \"\" && inputValueGet !== null) {\r\n    Swal.fire({ title: \"Please Wait!\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n   // console.log(\"call_again___\");\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_search_asset_module.php?site_cd=${site_ID}&searchTerm=${inputValueGet}&page=${currentPage}`\r\n      );\r\n      //  console.log(\"responseSerach_____\",response);\r\n      if (response.data.data.result.length > 0) {\r\n        setTableSearchData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n\r\n        const filteredData = response.data.data.result.filter((item) => {\r\n          const searchString = inputValueGet.toLowerCase();\r\n          const col1 = (item.col1 || \"\").toLowerCase();\r\n          const col2 = (item.col2 || \"\").toLowerCase();\r\n          const col3 = (item.col3 || \"\").toLowerCase();\r\n          const col4 = (item.col4 || \"\").toLowerCase();\r\n          const col5 = (item.col5 || \"\").toLowerCase();\r\n          const col6 = (item.col6 || \"\").toLowerCase();\r\n          const col7 = (item.col7 || \"\").toLowerCase();\r\n          const col8 = (item.col8 || \"\").toLowerCase();\r\n          const col9 = (item.col9 || \"\").toLowerCase();\r\n          const col10 = (item.col10 || \"\").toLowerCase();\r\n          const col11 = (item.col11 || \"\").toLowerCase();\r\n          const col12 = (item.col12 || \"\").toLowerCase();\r\n          const col58 = (item.col58 || \"\").toLowerCase();\r\n          \r\n          return (\r\n            col1.includes(searchString) ||\r\n            col2.includes(searchString) ||\r\n            col3.includes(searchString) ||\r\n            col4.includes(searchString) ||\r\n            col5.includes(searchString) ||\r\n            col6.includes(searchString) ||\r\n            col7.includes(searchString) ||\r\n            col8.includes(searchString) ||\r\n            col9.includes(searchString) ||\r\n            col10.includes(searchString) ||\r\n            col11.includes(searchString) ||\r\n            col12.includes(searchString) ||\r\n            col58.includes(searchString)\r\n          );\r\n        });\r\n        setTableData(filteredData);\r\n        setTableData(filteredData);\r\n     //   setCurrentPage(1);\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"No Record Found!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleKeyDown = (event) => {\r\n  if (event.key === \"Backspace\") {\r\n    event.preventDefault();\r\n    const inputValue2 = inputRef.current.value;\r\n    const newValue = inputValue2.slice(0, -1);\r\n    inputRef.current.value = newValue;\r\n    if (newValue === \"\") {\r\n      handleResetFilters();\r\n    }\r\n  }\r\n    if (event.key === 'Enter' && inputRef.current.value.trim() !== '') {\r\n\r\n      handelSearchButton();\r\n\r\n    }\r\n};\r\nconst handleInputFocus = () => {\r\n  setInputFocused(true);\r\n};\r\n\r\nconst handleInputBlur = () => {\r\n  setInputFocused(false);\r\n};\r\nconst handleExportClick = async () => {\r\n  if (ExportExcelId !== \"\") {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.post(\r\n        `/getAssetListExcelData.php?site_cd=${site_ID}&ItemID=${ExportExcelId}`\r\n      );\r\n       // console.log(\"response_____first\",response);\r\n      Swal.close();\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        ExportAssetlistToExcel({ resultData: response.data.data.result });\r\n        popover.onClose();\r\n        Swal.close();\r\n      } else {\r\n        setTableData(\"\");\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  } else {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      \r\n      const response = await httpCommon.get(\r\n        `/getAssetListAllDataExcelsheet.php?site_cd=${site_ID}`\r\n      );\r\n     // console.log(\"response_____second\",response);\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        ExportAssetlistToExcel({ resultData: response.data.data.result });\r\n        popover.onClose();\r\n        Swal.close();\r\n      } else {\r\n        setTableData(\"\");\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleClosePromt = (event, reason) => {\r\n  if (reason === \"backdropClick\" || reason === \"escapeKeyDown\") {\r\n    return; // Do nothing on backdrop click or escape key press\r\n  }\r\n  setRowsDropdownPrompt([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"\",\r\n      logical: \"\",\r\n      valuept: \"\",\r\n      RowId:\"\",\r\n      prompt:\"\",\r\n      siteCd: site_ID,\r\n      Column:\"\",\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  setShowPromt(false);\r\n};\r\n\r\nconst handleInputValueChangePrompt = (index, newValue) => {\r\n  setRowsDropdownPrompt((prevRows) =>\r\n    prevRows.map((row, idx) =>\r\n      idx === index ? { ...row, valuept: newValue } : row\r\n    )\r\n  );\r\n};\r\n\r\nconst fetchDataResponse = async (hasRowIdValuept) => {\r\n  try {\r\n\r\n    const response = await httpCommon.post(\r\n      \"/get_asset_dropdown_prompt_data.php?page=\" + currentPage,\r\n      {\r\n        rows: rowsDropdownPrompt,\r\n        rowsort: \"\",\r\n        SiteCD:site_ID,\r\n        admin:emp_owner,\r\n        RowId:hasRowIdValuept\r\n      }\r\n    );\r\n    setTableData(response.data.data.result);\r\n    setTotalRow(response.data.total_count);\r\n    setTitleAstReg(response.data.titleName);\r\n    Swal.close();\r\n  \r\n    handleClosePromt();\r\n\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n\r\n}\r\n\r\nconst handleDropDownPromptSaveAsBtn = async () => {\r\n  const hasEmptyValuept = rowsDropdownPrompt.some(row => !row.valuept.trim());\r\n  const hasRowIdValuept = rowsDropdownPrompt.length > 0 ? rowsDropdownPrompt[0].RowId : null;\r\n\r\n  if (hasEmptyValuept) {\r\n    // Show error message if any valuept field is empty\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: \"Validation Error !\",\r\n      text: 'Please fill in value field before saving.',\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    return; // Exit the function if validation fails\r\n  }else{\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      rowsQrtData: rowsDropdownPrompt,\r\n      siteCd: site_ID,\r\n      RowId:  hasRowIdValuept,\r\n      owner: emp_owner,\r\n    };\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_asset_query_list_prompt_save_data.php\",\r\n        combinedData\r\n      );\r\n        \r\n      if (response.data.status == \"SUCCESS\") {\r\n        Swal.close();\r\n        Swal.fire({\r\n          title: \"Success!\",\r\n          text: \"Your query update successfully.\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n           \r\n            fetchDataResponse(hasRowIdValuept);\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n\r\n};\r\n\r\nconst fetchDataCallback = useCallback(fetchData, [site_ID, currentPage]);\r\nconst getbCallback = useCallback(getb, [selectDropRowID]);\r\nconst retriveDataCallback = useCallback(RetriveData, [DefineQueryBtn,currentPage]);\r\n\r\nuseEffect(() => {\r\n  if (selectDropRowID != \"\" && selectDropRowID != null) {\r\n  // getb();\r\n  getbCallback();\r\n  }else if(TableSearchData !=\"\" && TableSearchData != null){\r\n    handelSearchButton();\r\n  }else if(DefineQueryBtn !== \"\" && DefineQueryBtn === \"RetriveData\"){\r\n\r\n     retriveDataCallback();\r\n\r\n  }else if(Array.isArray(DashbordDataGauge) && DashbordDataGauge.length > 0){\r\n      console.log(\"Enter____here___\");\r\n    fetchDataGaugeDSB();\r\n\r\n }else {\r\n\r\n    fetchDataCallback();\r\n  }\r\n  fetchFilterSubPopupSavedropdon();\r\n}, [site_ID, currentPage, selectDropRowID, fetchDataCallback, getbCallback, retriveDataCallback,fetchDataGaugeDSB]);\r\n\r\n// Add Table Header Daynamic value pass\r\nconst TABLE_HEAD = Headerdata.map((item, index) => {\r\n  const width = [115, 170, 120, 125, 150, 160,125,130,170,170,120,145,80,145,125,120,180,180,130,155,170,180,160,170,170,160,170,170,160,160,180,160,160,170,195,140,80,80,100,140,155,100,85,125,125,150,150,150,150,150,150,150,150,150,150,150,150,150,150,130][index]; \r\n  return {\r\n    id: item.accessor,\r\n    label: item.Header,\r\n    width\r\n  };\r\n});\r\nTABLE_HEAD.unshift({ id: '', label: 'Action', width: 60 });\r\n\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>CMMS System</title>\r\n        <meta name=\"description\" content=\"CMMS System\" />\r\n      </Helmet>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <div className=\"CustomBreadAsset\">\r\n          <CustomBreadcrumbs\r\n            heading=\"CMMS System\"\r\n            links={[]}\r\n            action={\r\n              <Button\r\n                component={RouterLink}\r\n                // href={paths.dashboard.product.new}\r\n                variant=\"contained\"\r\n                className='AddNewButton'\r\n                startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                to={{\r\n                  pathname: \"/dashboard/asset/newasset\",\r\n                  state: { select: \"New_Asset\" },\r\n                }}\r\n              >\r\n             \r\n                New\r\n              </Button>\r\n              \r\n            }\r\n            sx={{ mb: { xs: 3, md: 5 } }}\r\n          />\r\n        </div>\r\n        <div className=\"workReqpage\">\r\n          <Card>\r\n         \r\n            <Stack\r\n              spacing={2}\r\n              alignItems={{ xs: 'flex-end', md: 'center' }}\r\n              direction={{\r\n                xs: 'column',\r\n                md: 'row',\r\n              }}\r\n              sx={{\r\n                p: 2.5,\r\n                pr: { xs: 2.5, md: 1 },\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"AssetFilterBtn\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  flexShrink: 0,\r\n                }}\r\n                onClick={handelFilterAction}\r\n              >\r\n                <Icon icon=\"fluent:filter-12-filled\" style={{ marginRight: '5px' }} /> Filter\r\n              </Button>\r\n              <FormControl\r\n                sx={{\r\n                  flexShrink: 0,\r\n                  width: { xs: 1, md: 300 },\r\n                }}\r\n                className=\"selectOptioncls\"\r\n              >\r\n               <InputLabel id=\"select-label\" className={(TitleAstReg!== \"\" || selectedOption)? \"selectedcss\" : \"\"}>Select an Query</InputLabel>\r\n                <Select\r\n                  labelId=\"select-label\"\r\n                  id=\"select\"\r\n                  input={<OutlinedInput label=\"Select an option\" />}\r\n                  value={TitleAstReg !== \"\" ? TitleAstReg : selectedOption}\r\n                  onChange={handleOptionChange}\r\n                  sx={{ textTransform: 'capitalize' }}\r\n                >\r\n                \r\n                  {assetFilterDpd.map((item) => (\r\n                      <MenuItem key={item.RowID} value={item.cf_query_title}>\r\n                        <Iconify\r\n                          icon=\"mdi:sql-query\"\r\n                          style={{\r\n                            display: \"inline-flex\",\r\n                            verticalAlign: \"middle\",\r\n                            marginRight: \"6px\",\r\n                            marginTop: \"-5px\",\r\n                            width: \"16px\",\r\n                            height: \"16px\",\r\n                          }}\r\n                        />\r\n                        <span style={{ verticalAlign: \"middle\" }}>\r\n                          {item.cf_query_title}\r\n                        </span>\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n              <Tooltip title=\"Refresh\" placement=\"top\" arrow >\r\n                  <span\r\n                    className=\"ListDataRefBtn\"\r\n                    onClick={fetchData}\r\n                    style={{ border: '0px' }}\r\n                  >\r\n                    <Icon icon=\"iconoir:refresh-double\" style={{ width:'20px', height:'20px' }} /> \r\n                  </span>\r\n                </Tooltip>\r\n\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n                  <div\r\n                    className=\"wordkOrdersearchInput\"\r\n                    style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"Seachrinput\"\r\n                      placeholder=\"Search..\"\r\n                      ref={inputRef}\r\n                      onKeyDown={handleKeyDown}\r\n                      onFocus={handleInputFocus}\r\n                      onBlur={handleInputBlur}\r\n                    />\r\n                    <div>\r\n                    \r\n                      <IconButton\r\n                        onClick={handelSearchButton}\r\n                        className=\"customsearchbutton\"\r\n                      >\r\n                        <Iconify icon=\"eva:search-fill\" />\r\n                      </IconButton>\r\n                    </div>\r\n                  </div>\r\n                 \r\n                <IconButton onClick={popover.onOpen}>\r\n                  <Iconify icon=\"eva:more-vertical-fill\" />\r\n                </IconButton>\r\n              </Stack>\r\n             \r\n            </Stack>\r\n\r\n            <CustomPopover\r\n              open={popover.open}\r\n              onClose={popover.onClose}\r\n              arrow=\"right-top\"\r\n              sx={{ width: 180 }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleExportClick();\r\n                }}\r\n              >\r\n                <Iconify icon=\"solar:export-bold\" />\r\n                Export to Excel\r\n              </MenuItem>\r\n\r\n            </CustomPopover>\r\n            {canReset && (\r\n              <AssetTableFiltersResult\r\n                filters={filters}\r\n                onFilters={handleFilters}\r\n                //\r\n                onResetFilters={handleResetFilters}\r\n                //\r\n                results={dataFiltered.length}\r\n                sx={{ p: 2.5, pt: 0 }}\r\n              />\r\n            )}\r\n\r\n            <TableContainer sx={{ position: 'relative'}}>\r\n              <TableSelectedAction\r\n                dense={table.dense}\r\n                numSelected={table.selected?.length || 0}\r\n                rowCount={tableData?.length || 0}\r\n                onSelectAllRows={(checked) =>\r\n                  table.onSelectAllRows(\r\n                    checked,\r\n                    tableData.map((row) => row.id)\r\n                  )\r\n                }\r\n                action={\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              />\r\n\r\n              <Scrollbar sx={{ overflowX: \"auto\", maxHeight: maxHeight }}>  \r\n                <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                  <TableHeadCustom\r\n                    order={table.order}\r\n                    orderBy={table.orderBy}\r\n                    headLabel={TABLE_HEAD}\r\n                    rowCount={tableData.length}\r\n                    numSelected={table.selected.length}\r\n                    onSort={table.onSort}\r\n                    className=\"stickyheader\"\r\n                  />\r\n                 \r\n                  <TableBody className=\"AssetTable\">\r\n                  \r\n                        {isLoading ? ( // Assuming isLoading is a boolean state indicating whether data is loading\r\n                          <TableRow>\r\n                            <TableCell colSpan={numberOfColumns} className=\"NoRecodcls\" >\r\n                            <Dialog open={isLoading} aria-labelledby=\"loading-dialog-title\"  PaperProps={{\r\n                                    style: {\r\n                                        backgroundColor: \"transparent\", // Set your desired background color here\r\n                                    },\r\n                                }}\r\n                                BackdropProps={{\r\n                                  className: \"yourbackdropclass\",\r\n                                }}\r\n                                >\r\n                            <DialogTitle id=\"loading-dialog-title\"  style={{ textAlign: 'center' }}></DialogTitle>\r\n                              <DialogContent>\r\n                              \r\n                                <div style={{ textAlign: 'center', paddingTop: '10px' }}>\r\n                                <ThreeCircles\r\n                                  radius=\"9\"\r\n                                  visible={true}\r\n                                  ariaLabel=\"three-circles-loading\"\r\n                                  color=\"green\"\r\n                               \r\n                                />\r\n                                  \r\n                                </div>\r\n                              </DialogContent>\r\n                            </Dialog>\r\n                             \r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ) : (\r\n                          <>\r\n                            {tableData.length === 0 ? (\r\n                              <TableRow>\r\n                                <TableCell colSpan={numberOfColumns} className=\"NoRecodcls\" >\r\n                                  No Record Found\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ) : (\r\n                              <>\r\n                            \r\n                                {dataFiltered.map((row) => (\r\n\r\n                                  <AssetTableRow\r\n                                    key={row.id}\r\n                                    row={row}\r\n                                    rowStats={ResponceStats}\r\n                                    selected={table.selected.includes(row.col61)}\r\n                                    onSelectRow={() => table.onSelectRow(row.col61)}\r\n                                    onDeleteRow={() => handleDeleteRow(row.col61,row)}\r\n                                    onEditRow={() => handleEditRow(row.col61,row)}\r\n                                    onDuplicateRow = {() => handleDuplicateRow(row.col61,row)} \r\n                                    onPrintQrCode = {() => handlePrintQr(row.col61,row)} \r\n                                 //   onCompleteRow={() => handleCompleteRow(row.col71)}\r\n                                  //  onCloseRow={() => handleCloseRow(row.col71)}\r\n                                  />\r\n                                ))}\r\n                               \r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        <TableEmptyRows\r\n                          emptyRows={emptyRows(\r\n                            table.page,\r\n                            table.rowsPerPage,\r\n                            tableData.length\r\n                          )}\r\n                        />\r\n                      </TableBody>\r\n\r\n                </Table>\r\n              </Scrollbar>\r\n            </TableContainer>\r\n\r\n              <TablePaginationCustom\r\n                count={totalRow > 0 ? totalRow : dataFiltered.length}\r\n                page={currentPage - 1}\r\n                rowsPerPage={table.rowsPerPage}\r\n                onPageChange={(event, newPage) => {\r\n                  setCurrentPage(newPage + 1);\r\n                  table.onChangePage(event, newPage);\r\n                }}\r\n                currentPage={currentPage}\r\n                //  onRowsPerPageChange={table.onChangeRowsPerPage}\r\n                onRowsPerPageChange={(rowsPerPage) => {\r\n                  table.onChangeRowsPerPage(rowsPerPage);\r\n                }}\r\n                // dense={table.dense}\r\n                //  onChangeDense={table.onChangeDense}\r\n              />\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n      {/* =============================== filter model  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={FilterhandleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={FilterShow}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"mdi:sql-query\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Define Query</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={FilterhandleClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"queryBtn\">\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={handelQuryListpopup}>\r\n                  <Iconify icon=\"carbon:query-queue\" /> Query List\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                 // disabled={isButtonDisabled}\r\n                  onClick={retriveBtn}\r\n                >\r\n                  <Iconify icon=\"carbon:data-base\" /> Retrive\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                 onClick={SaveRegTbl}\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Iconify icon=\"mingcute:save-fill\" />\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className=\"filterByorder\">\r\n            <fieldset className=\"short-by-fieldset2\">\r\n              <legend>Filter By</legend>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ textAlign: \"center\" }}> ( </th>\r\n                    <th>Field Name</th>\r\n                    <th>Operator</th>\r\n                    <th>Prompt</th>\r\n                    <th>Value</th>\r\n                    <th>Logical</th>\r\n                    <th style={{ textAlign: \"center\" }}> ) </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <Select\r\n                          className=\"custom-Astselect\"\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          {Openbracket.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"25%\" }}>\r\n                        <Select\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 &&\r\n                            selectedOptionEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          style={{ width: \"100%\" }}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(event) =>\r\n                            handleOptionChange1(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {rowOptions.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n\r\n                      <td style={{ width: \"17%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className=\"custom-Astselect\"\r\n                          onChange={(event) =>\r\n                            handleOptionChangeOprter(index, event.target.value)\r\n                          }\r\n                        >\r\n                          \r\n                          {oprt.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"8%\" }}>\r\n                        <input\r\n                          style={{ width: \"100%\" }}\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckChecked\"\r\n                          onChange={(e) =>\r\n                            handleSelectChange(index, e.target.checked)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"26%\" }}>\r\n                        <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          onChange={(event) =>\r\n                            handleInputValueChangeQtr(index, event.target.value)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"10%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && logicalEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(logical) =>\r\n                            handleIncludeChangeLogcil(index, logical)\r\n                          }\r\n                        >\r\n                          {Logcl.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className=\"custom-Astselect\"\r\n                          // value={/* add the corresponding value from your state */}\r\n                          //  onChange={(event) => handleOptionChange1(index, event.target.value)}\r\n                        >\r\n                          {Closebracket.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td>\r\n                        <IconButton\r\n                          className=\"clsBtn\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          onClick={() => handleDeleteRowPopup(index)}\r\n                        >\r\n                          <Iconify icon=\"carbon:close\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <Button onClick={handleAddRow} className=\"AddFilterBtn\">\r\n                  <Iconify\r\n                    icon=\"material-symbols:add\"\r\n                    style={{\r\n                      verticalAlign: \"0px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"2px\",\r\n                    }}\r\n                  />\r\n                  Add new filter\r\n                </Button>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n          <div className=\"filterShort\">\r\n            <fieldset className=\"short-by-fieldset2\">\r\n              <legend>Sort By</legend>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Field Name</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th>Ascending?</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rowsort.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"60%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect shrt ${\r\n                            index === rowsort.length - 1 &&\r\n                            selectedOptionEmptyErrorShort\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(event) =>\r\n                            handleOptionChange2(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {rowOptions.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n\r\n                      <td style={{ width: \"15%\" }}></td>\r\n                      <td style={{ width: \"15%\" }}></td>\r\n                      <td style={{ width: \"10%\" }}>\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          checked={rowsort[index].promptAsd === \"ASC\"}\r\n                          onChange={(e) =>\r\n                            handleSelectChangeshort(index, e.target.checked)\r\n                          }\r\n                          id=\"flexCheckDefault\"\r\n                          style={{\r\n                            width: \"65px\",\r\n                            height: \"15px\",\r\n                            marginTop: \"-5px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td></td>\r\n                      <td>\r\n                        <IconButton\r\n                          className=\"clsBtn\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          onClick={() => handleDeleteRowShort(index)}\r\n                        >\r\n                          <Iconify icon=\"carbon:close\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <Button onClick={handleAddRowShort} className=\"AddFilterBtn\">\r\n                  <Iconify\r\n                    icon=\"material-symbols:add\"\r\n                    style={{\r\n                      verticalAlign: \"0px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"2px\",\r\n                    }}\r\n                  />\r\n                  Add new filter\r\n                </Button>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n       {/* =============================== filter model Save Button  =================================  */}\r\n       <BootstrapDialog\r\n        onClose={handleCloseSave}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showSave}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Save Query</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseSave}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Query name:</legend>\r\n              <div className=\"form-group \">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"customInput\"\r\n                  name=\"queryName\"\r\n                  value={formDataSv.queryName}\r\n                  onChange={handleInputChangeSav}\r\n                  className=\"bsc_sav\"\r\n                  list=\"options\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n\r\n                <datalist id=\"options\">\r\n                  {assetFilterDpd.map((option, index) => (\r\n                    <option key={index.RowID} value={option.cf_query_title} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Description:</legend>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"w3review\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  value={formDataSv.description}\r\n                  onChange={handleInputChangeSav}\r\n                  cols=\"70\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Availability:</legend>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"G\"\r\n                  checked\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Global(available to everyone)\r\n                </label>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"P\"\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Personal\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleCFQrySave}>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n      {/* =============================== filter model Query List Button  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseWorkQryList}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showWordOrderQryList}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"mdi:sql-query\" />\r\n          <span style={{ marginLeft: \"2px\" }}> Query List</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseWorkQryList}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"queryBtn\">\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={DeleteAssetRegQryList}>\r\n                  <Iconify icon=\"fluent:delete-48-regular\" /> Delete\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={SaveWorkOrderQryList}>\r\n                  <Iconify icon=\"ic:outline-save-as\" /> Save\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={SaveAsworkorderTbl}>\r\n                  <Iconify icon=\"fad:saveas\" />\r\n                  Save As\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div>\r\n            <div className=\"shortBydd list mt-4\">\r\n              <div className=\"table-containeR\">\r\n                <fieldset className=\"Query-by-fieldset\">\r\n                  <legend>Query Name</legend>\r\n                  <table className=\"custom-tablE\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ width: \"100%\" }}>Query Title</th>\r\n\r\n                        <th style={{ width: \"10%\" }}>Default?</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    \r\n                      <Select\r\n                        id=\"select\"\r\n                        style={{ width: \"60%\" }}\r\n                        value={selectedOptionValue}\r\n                        // onChange={handleClickOption}\r\n                        onChange={(event) =>\r\n                          handleClickOption(event.target.value)\r\n                        }\r\n                        sx={{ textTransform: \"capitalize\" }}\r\n                      >\r\n                      \r\n                        {assetFilterDpd.map((item) => (\r\n                          <MenuItem\r\n                            key={item.RowID}\r\n                            value={`${item.cf_query_title}-${item.RowID}`}\r\n                          >\r\n                            {item.cf_query_title}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                      <td>\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckDefault\"\r\n                          checked={isChecked}\r\n                          onChange={handleCheckboxClick}\r\n                          style={{\r\n                            width: \"65px\",\r\n                            height: \"15px\",\r\n                            marginTop: \"-5px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tbody>\r\n                  </table>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n            <div className=\"FiltrBydd mt-2\">\r\n              <div>\r\n                <fieldset className=\"short-by-fieldset2\">\r\n                  <legend>Filter By</legend>\r\n                  <table style={{ borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ textAlign: \"center\", width: \"7%\" }}>(</th>\r\n                        <th style={{ width: \"25%\" }}>Field Name</th>\r\n                        <th style={{ width: \"17%\" }}>Operator</th>\r\n                        <th style={{ width: \"8%\" }}>Prompt</th>\r\n                        <th style={{ width: \"26%\" }}>Value</th>\r\n                        <th style={{ width: \"10%\" }}>Logical</th>\r\n                        <th style={{ textAlign: \"center\", width: \"7%\" }}>)</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                     \r\n                      {rowsQrt.map((row, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <tr key={index}>\r\n                            <td style={{ width: \"7%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n                              >\r\n                                {Openbracket.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"25%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  selectedOptionEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.selectedOption || \"\"}\r\n                                onChange={(event) =>\r\n                                  handleOptionChangeQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {rowOptions.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"17%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n                                value={row.operator || \"Like\"}\r\n                                onChange={(event) =>\r\n                                  handleOptionChangeOprterQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {oprt.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"8%\" }}>\r\n                              <input\r\n                                class=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                onChange={(e) =>\r\n                                  handleSelectChangeQtr(index, e.target.checked)\r\n                                }\r\n                                checked={row.prompt === \"1\"}\r\n                                id=\"flexCheckDefault\"\r\n                                style={{\r\n                                  width: \"65px\",\r\n                                  height: \"15px\",\r\n                                  marginTop: \"-5px\",\r\n                                }}\r\n                              />\r\n                            </td>\r\n                            <td style={{ width: \"26%\" }}>\r\n                              <input\r\n                                type=\"text\"\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  valueptEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.valuept || \"\"}\r\n                                oninput=\"handleInput(event)\"\r\n                                onChange={(event) =>\r\n                                  handleInputValueChangeQtr2(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </td>\r\n\r\n                            <td style={{ width: \"10%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  logicalEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.logical || \"\"}\r\n                                // value={/* add the corresponding value from your state */}\r\n                                // onChange={(logical) =>\r\n                                //   handleIncludeChangeLogcilQtr(index, logical)\r\n                                // }\r\n                              >\r\n                                {Logcl.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n\r\n                            <td style={{ width: \"7%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n\r\n                                // value={rowOptions.find(option => option.value === row.selectedOption)}\r\n                                //onChange={(selectedOption) => handleOptionChange1(index, selectedOption)}\r\n                              >\r\n                                {Closebracket.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n\r\n                            <td>\r\n                              <IconButton\r\n                                className=\"clsBtn\"\r\n                                aria-label=\"delete\"\r\n                                size=\"small\"\r\n                                onClick={() => handleDeleteRowQrt(index)}\r\n                              >\r\n                                <Iconify icon=\"carbon:close\" />\r\n                              </IconButton>\r\n                            </td>\r\n                          </tr>\r\n                        </React.Fragment>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button onClick={handleAddRowQrt} className=\"AddFilterBtn\">\r\n                      <Iconify\r\n                        icon=\"material-symbols:add\"\r\n                        style={{\r\n                          verticalAlign: \"0px\",\r\n                          fontSize: \"16px\",\r\n                          marginRight: \"2px\",\r\n                        }}\r\n                      />\r\n                      Add new filter\r\n                    </Button>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n            <div className=\"shortBydd mt-4 shtQtr\">\r\n              <div>\r\n                <fieldset className=\"short-by-fieldset\">\r\n                  <legend>Sort By</legend>\r\n                  <table style={{ borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Field Name</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th>Ascending?</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {rowsortQrt.map((row, index) => (\r\n                        <tr key={index}>\r\n                          <td style={{ width: \"60%\" }}>\r\n                            <Select\r\n                              style={{ width: \"100%\" }}\r\n                              className={`custom-Astselect sht ${\r\n                                index === rowsortQrt.length - 1 &&\r\n                                selectedOptionEmptyErrorShortQtr\r\n                                  ? \"error-border\"\r\n                                  : \"mammama\"\r\n                              }`}\r\n                              // value={/* add the corresponding value from your state */}\r\n                              onChange={(event) =>\r\n                                handleOptionChangeSrtQtr(\r\n                                  index,\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                              value={row.selectedOptionShort || \"\"}\r\n                            >\r\n                              {rowOptions.map((option, index) => (\r\n                                <MenuItem key={index} value={option.value}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </Select>\r\n                          </td>\r\n                          <td style={{ width: \"15%\" }}></td>\r\n                          <td style={{ width: \"15%\" }}></td>\r\n                          <td style={{ width: \"8%\" }}>\r\n                            <input\r\n                              class=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              //checked={row.prompt === '1'}\r\n                              checked={rowsortQrt[index].promptAsd === \"ASC\"}\r\n                              onChange={(e) =>\r\n                                handleSelectChangeshortQtr(\r\n                                  index,\r\n                                  e.target.checked\r\n                                )\r\n                              }\r\n                              id=\"flexCheckDefault\"\r\n                              style={{\r\n                                width: \"65px\",\r\n                                height: \"15px\",\r\n                                marginTop: \"-5px\",\r\n                              }}\r\n                            />\r\n                          </td>\r\n                          <td></td>\r\n                          <td>\r\n                            <IconButton\r\n                              className=\"clsBtn\"\r\n                              aria-label=\"delete\"\r\n                              size=\"small\"\r\n                              onClick={() => handleDeleteRowShortQrt(index)}\r\n                            >\r\n                              <Iconify icon=\"carbon:close\" />\r\n                            </IconButton>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      onClick={handleAddRowShortQrt}\r\n                      className=\"AddFilterBtn\"\r\n                    >\r\n                      <Iconify\r\n                        icon=\"material-symbols:add\"\r\n                        style={{\r\n                          verticalAlign: \"0px\",\r\n                          fontSize: \"16px\",\r\n                          marginRight: \"2px\",\r\n                        }}\r\n                      />\r\n                      Add new filter\r\n                    </Button>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n         {/* =============================== filter model Save As Button  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseSaveAs}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showSaveAs}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Save Query As</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseSaveAs}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Query name:</legend>\r\n              <div className=\"form-group \">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"customInput\"\r\n                  name=\"queryName\"\r\n                  value={formDataSv.queryName}\r\n                  onChange={handleInputChangeSav}\r\n                  className=\"bsc_sav\"\r\n                  list=\"options\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n\r\n                <datalist id=\"options\">\r\n                  {assetFilterDpd.map((option, index) => (\r\n                    <option key={index.RowID} value={option.cf_query_title} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Description:</legend>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"w3review\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  value={formDataSv.description}\r\n                  onChange={handleInputChangeSav}\r\n                  cols=\"70\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Availability:</legend>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"G\"\r\n                  checked\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Global(available to everyone)\r\n                </label>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"P\"\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Personal\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid item>\r\n            <Button variant=\"outlined\" onClick={handleCFQrySaveAsBtn}>\r\n              <Iconify icon=\"mingcute:save-line\" /> Save\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n        {/* =============================== filter model Print Qr   =================================  */}\r\n        <BootstrapDialog\r\n        onClose={handleCloseQrCode}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showQrModel}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"fluent:print-48-regular\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Asset QRCode Printing Selection</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseQrCode}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n          \r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Asset Selection:</legend>\r\n              <div class=\"form-check\">\r\n                <div style={{ marginBottom : \"5px\" }}>\r\n                  <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"selected1\"\r\n                  checked={availabilityQRCode === \"selected1\"}\r\n                  onChange={handleInputChangeQRCode}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Print 1 Selected Asset QRCode.\r\n                </label>\r\n                </div>\r\n                <div>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"All\"\r\n                  checked={availabilityQRCode === \"All\"}\r\n                  onChange={handleInputChangeQRCode}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Print All {totalRow} Asset QRCode.\r\n                </label>\r\n              </div>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid item>\r\n            <Button className=\"SaveButton\" variant=\"outlined\" \r\n            style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                color: \"white\",\r\n                marginRight: \"10px\",\r\n              }}\r\n               onClick={handleQRCodePrintBtn}>\r\n              <Iconify icon=\"fluent:print-48-regular\" /> Print\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n\r\n      {/* =============================== filter DropDown Prompt  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleClosePromt}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showPromt}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        disableBackdropClick={true} \r\n        disableEscapeKeyDown={true}\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Query Prompter</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={() => handleClosePromt()}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Please Fill In The Value</legend>\r\n              <table style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <tr>\r\n                   \r\n                    <th>Column</th>\r\n                    <th>Operator</th>\r\n                    <th>Value</th>\r\n                    <th>Logical</th>\r\n                \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rowsDropdownPrompt.map((row, index) => {\r\n                    const isRowEmpty = !row.selectedOption && !row.operator && !row.valuept;\r\n                    return !isRowEmpty ? (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"25%\", textAlign: 'center' }}>\r\n                      <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\", textAlign: 'center' }}\r\n                          disabled\r\n                          value={row.Column || \"\"}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          \r\n                        />\r\n                      </td>\r\n\r\n                      <td style={{ width: \"25%\" ,textAlign: 'center' }}>\r\n                      <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\", textAlign: 'center' }}\r\n                          value={row.operator || \"\"}\r\n                          disabled\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          \r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"25%\",textAlign: 'center' }}>\r\n                      <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\", textAlign: 'center' }}\r\n                          value={row.valuept || \"\"}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                         \r\n                          onChange={(event) => handleInputValueChangePrompt(index, event.target.value)}\r\n                        />\r\n                       \r\n                      </td>\r\n                      <td style={{ width: \"25%\",textAlign: 'center' }}>\r\n                        <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\", textAlign: 'center' }}\r\n                          disabled\r\n                          value={row.logical || \"\"}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          \r\n                        />\r\n                      </td>\r\n                      \r\n                    </tr>\r\n                    ) : null;\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n             \r\n            </fieldset>\r\n\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid item>\r\n            <Button variant=\"outlined\" onClick={handleDropDownPromptSaveAsBtn}>\r\n              <Iconify icon=\"iconoir:submit-document\" /> Save\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n      <ToastContainer />\r\n      \r\n    </>\r\n  );\r\n}\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n\r\n  const { name } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  //   if (name) {\r\n  //     inputData = inputData.filter(\r\n  //       (tableData) => tableData.col2.toLowerCase().indexOf(col2.toLowerCase()) !== -1\r\n  //     );\r\n  //   }\r\n  return inputData;\r\n}\r\n"],"names":["BootstrapDialog","styled","Dialog","_ref","theme","padding","spacing","defaultFilters","col1","publish","stock","Asset_List","_location$state","_location$state2","_location$state3","_table$selected","site_ID","localStorage","getItem","emp_owner","AuditUser","location","useLocation","DashbordDataGauge","setDashbordDataGauge","useState","state","GaugeDashbordData","DashbordDataSrt","GaugeDashbordDataSort","DropListIdGet","setDropListIdGet","DropListId","isLoading","setIsLoading","popover","usePopover","router","useRouter","navigate","useNavigate","table","useTable","settings","useSettingsContext","maxHeight","setMaxHeight","tableData","setTableData","totalRow","setTotalRow","Headerdata","setheaderData","filters","setFilters","selectedOption","setSelectedOption","confirm","useBoolean","currentPage","setCurrentPage","inputRef","useRef","FilterShow","setFilterShow","ResponceStats","setResponceStats","isChecked","setIsChecked","initialChecked","setInitialChecked","showSave","setShowSave","AssetFiledname","setAssetFiledname","selectedOptionEmptyError","setSelectedOptionEmptyError","selectedOptionEmptyErrorShort","setSelectedOptionEmptyErrorShort","valueptEmptyError","setValueptEmptyError","logicalEmptyError","setLogicalEmptyError","TitleAstReg","setTitleAstReg","assetFilterDpd","setAssetFilterDpd","selectedOptionValue","setselectedOptionValue","showWordOrderQryList","setShowWordOrderQryList","showSaveAs","setShowSaveAs","selectedOptionEmptyErrorQtr","setSelectedOptionEmptyErrorQtr","valueptEmptyErrorQtr","setValueptEmptyErrorQtr","logicalEmptyErrorQtr","setLogicalEmptyErrorQtr","selectedOptionEmptyErrorShortQtr","setSelectedOptionEmptyErrorShortQtr","ExportExcelId","setExportExcelId","selectDropRowID","setselectDropRowID","isInputFocused","setInputFocused","TableSearchData","setTableSearchData","UserPermission","setUserPermission","DefineQueryBtn","setDefineQueryBtn","showQrModel","setshowQrModel","availabilityQRCode","setAvailabilityQRCode","QrCodeRowId","setQrCodeRowId","QueryTitleRowId","setQueryTitleRowID","showPromt","setShowPromt","rowsDropdownPrompt","setRowsDropdownPrompt","operator","logical","valuept","RowId","prompt","siteCd","Column","queryTypedd","fetchData","useCallback","async","response","httpCommon","get","concat","data","header","result","total_count","error","console","fetchFilterSubPopupSavedropdon","matchedItem","find","item","RowID","cfQueryDescValue","cf_query_title","fetchDataGaugeDSB","post","rows","rowsort","site_cd","emp_ID","log","status","length","getb","DashbrdCount","Swal","title","text","icon","customClass","container","dataFiltered","_ref2","inputData","comparator","name","stabilizedThis","map","el","index","sort","a","b","order","applyFilter","Array","isArray","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","canReset","dense","isEqual","handleFilters","value","onResetPage","prevState","handleDeleteRow","id","row","Rowid","AstNo","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","message","handleDeleteRows","deleteRows","filter","selected","includes","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","Ast_no","handleDuplicateRow","DuplicatRowid","DupRowID","DupAst_no","handlePrintQr","handleCloseQrCode","handleResetFilters","push","paths","dashboard","product","details","current","useEffect","handleResize","windowHeight","window","innerHeight","newMaxHeight","Math","floor","addEventListener","removeEventListener","setRows","setRowsort","selectedOptionShort","promptAsd","queryType","isButtonDisabled","some","Openbracket","label","Closebracket","oprt","Logcl","handleDeleteRowPopup","newRows","splice","FilterhandleClose","newRowsort","rowOptions","column_name","default_label","getAssetListLebel","RetriveData","hasEmptyOperator","hasEmptyValuept","fieldName","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","Bounce","style","width","allowOutsideClick","SiteCD","admin","titleName","RetriveDataAllData","handleDeleteRowShort","handleCloseSave","setFormDataSv","queryName","description","formDataSv","availability","owner","handleInputChangeSav","event","target","prevData","handleInputChangeQRCode","InsertCf_queryListData","combinedData","rowsQrtData","rowsortQrtData","Title","rowsQrt","setRowsQrt","rowsortQrt","setRowsortQrt","handleCloseWorkQryList","RetriveDataQueryList","updatedEmptyRows","updatedEmptyRowsort","handleCloseSaveAs","InsertCf_queryListDataSavaAs","SITE_CD","OWNER_ID","handelSearchButton","inputValueGet","filteredData","searchString","toLowerCase","col2","col3","col4","col5","col6","col7","col8","col9","col10","col11","col12","col58","handleClosePromt","reason","fetchDataCallback","getbCallback","retriveDataCallback","TABLE_HEAD","accessor","Header","unshift","_jsxs","_Fragment","children","Helmet","_jsx","content","Container","maxWidth","themeStretch","className","CustomBreadcrumbs","heading","links","action","Button","component","RouterLink","variant","startIcon","Iconify","to","pathname","select","sx","mb","xs","md","Card","Stack","alignItems","direction","p","pr","marginTop","flexShrink","onClick","handelFilterAction","Icon","marginRight","FormControl","InputLabel","Select","labelId","input","OutlinedInput","onChange","responseData","_event$target","selectedValue","selectedOptionObjectFilter","selectedOptionObject","GetRowID","GetPrompt","cf_query_list_prompt","list_typeF","cf_query_list_column","cf_query_list_operator","cf_query_list_value","cf_query_list_logical","customize_header","setTimeout","textTransform","MenuItem","display","verticalAlign","height","Tooltip","placement","arrow","border","flexGrow","type","placeholder","ref","onKeyDown","key","preventDefault","newValue","trim","onFocus","handleInputFocus","onBlur","handleInputBlur","IconButton","onOpen","CustomPopover","open","onClose","ExportAssetlistToExcel","resultData","handleExportClick","AssetTableFiltersResult","onFilters","onResetFilters","results","pt","TableContainer","TableSelectedAction","numSelected","rowCount","onSelectAllRows","checked","color","onTrue","Scrollbar","overflowX","Table","size","minWidth","TableHeadCustom","headLabel","onSort","TableBody","TableRow","TableCell","colSpan","PaperProps","backgroundColor","BackdropProps","DialogTitle","textAlign","DialogContent","paddingTop","ThreeCircles","radius","visible","ariaLabel","AssetTableRow","rowStats","col61","onSelectRow","onDeleteRow","onEditRow","onDuplicateRow","onPrintQrCode","TableEmptyRows","emptyRows","TablePaginationCustom","count","onPageChange","newPage","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","ConfirmDialog","onFalse","fullWidth","m","marginLeft","right","top","palette","grey","dividers","Grid","handelQuryListpopup","retriveBtn","SaveRegTbl","disabled","option","handleOptionChange1","updatedRows","handleOptionChangeOprter","class","e","handleSelectChange","oninput","handleInputValueChangeQtr","updatedRowsQtr","handleIncludeChangeLogcil","justifyContent","handleAddRow","isLastRowEmpty","prevRows","fontSize","handleOptionChange2","handleSelectChangeshort","handleAddRowShort","newRow","list","cols","for","DialogActions","handleCFQrySave","inputValue","cancelButtonText","_rows$selectedOption","_rows$logical","_rows$valuept","_rowsort$selectedOpti","split","mst_RowID","defaultFlag","SaveAsworkorderTbl","parts","initialCheckedState","cf_query_default_flag","prevrowsQrt","list_typeS","cf_query_list_order_by","handleClickOption","handleCheckboxClick","borderCollapse","React","handleOptionChangeQtr","handleOptionChangeOprterQtr","handleSelectChangeQtr","handleInputValueChangeQtr2","handleDeleteRowQrt","handleAddRowQrt","handleOptionChangeSrtQtr","handleSelectChangeshortQtr","handleDeleteRowShortQrt","handleAddRowShortQrt","handleCFQrySaveAsBtn","_rowsQrt$selectedOpti","_rowsQrt$logical","_rowsQrt$valuept","_rowsortQrt$selectedO","marginBottom","handleQRCodePrintBtn","selectedVlue","ItemID","disableBackdropClick","disableEscapeKeyDown","handleInputValueChangePrompt","idx","hasRowIdValuept","fetchDataResponse","ToastContainer"],"sourceRoot":""}