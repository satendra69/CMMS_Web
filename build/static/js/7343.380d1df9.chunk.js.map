{"version":3,"file":"static/js/7343.380d1df9.chunk.js","mappings":"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","sources":["sections/_examples/mui/transfer-list-view/simple-transfer-list.js","sections/_examples/mui/transfer-list-view/enhanced-transfer-list.js","sections/_examples/mui/transfer-list-view/index.js","pages/components/mui/transfer-list.js"],"sourcesContent":["import { useState } from 'react';\n// @mui\nimport List from '@mui/material/List';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\n// ----------------------------------------------------------------------\n\nexport default function SimpleTransferList() {\n  const [checked, setChecked] = useState([]);\n\n  const [left, setLeft] = useState([0, 1, 2, 3]);\n\n  const [right, setRight] = useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = (items) => (\n    <Card\n      sx={{\n        width: 200,\n        height: 220,\n        overflow: 'auto',\n        borderRadius: 1.5,\n      }}\n    >\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n          return (\n            <ListItemButton key={value} role=\"listitem\" onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItemButton>\n          );\n        })}\n      </List>\n    </Card>\n  );\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ width: 'auto', py: 3 }}>\n      <Grid>{customList(left)}</Grid>\n\n      <Grid container direction=\"column\" alignItems=\"center\" sx={{ p: 3 }}>\n        <Button\n          color=\"inherit\"\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleAllRight}\n          disabled={left.length === 0}\n          aria-label=\"move all right\"\n          sx={{ my: 1 }}\n        >\n          <Iconify icon=\"eva:arrowhead-right-fill\" width={18} />\n        </Button>\n        <Button\n          color=\"inherit\"\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleCheckedRight}\n          disabled={leftChecked.length === 0}\n          aria-label=\"move selected right\"\n          sx={{ my: 1 }}\n        >\n          <Iconify icon=\"eva:arrow-ios-forward-fill\" width={18} />\n        </Button>\n        <Button\n          color=\"inherit\"\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleCheckedLeft}\n          disabled={rightChecked.length === 0}\n          aria-label=\"move selected left\"\n          sx={{ my: 1 }}\n        >\n          <Iconify icon=\"eva:arrow-ios-back-fill\" width={18} />\n        </Button>\n        <Button\n          color=\"inherit\"\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleAllLeft}\n          disabled={right.length === 0}\n          aria-label=\"move all left\"\n          sx={{ my: 1 }}\n        >\n          <Iconify icon=\"eva:arrowhead-left-fill\" width={18} />\n        </Button>\n      </Grid>\n\n      <Grid>{customList(right)}</Grid>\n    </Grid>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport List from '@mui/material/List';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Checkbox from '@mui/material/Checkbox';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport CardHeader from '@mui/material/CardHeader';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemButton from '@mui/material/ListItemButton';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function EnhancedTransferList() {\n  const [checked, setChecked] = useState([]);\n\n  const [left, setLeft] = useState([0, 1, 2, 3]);\n\n  const [right, setRight] = useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = (items) => intersection(checked, items).length;\n\n  const handleToggleAll = (items) => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card sx={{ borderRadius: 1.5 }}>\n      <CardHeader\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\n            disabled={items.length === 0}\n            inputProps={{ 'aria-label': 'all items selected' }}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n        sx={{ p: 2 }}\n      />\n\n      <Divider />\n\n      <List\n        dense\n        component=\"div\"\n        role=\"list\"\n        sx={{\n          width: 200,\n          height: 220,\n          overflow: 'auto',\n        }}\n      >\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value}-label`;\n          return (\n            <ListItemButton key={value} role=\"listitem\" onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  disableRipple\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItemButton>\n          );\n        })}\n      </List>\n    </Card>\n  );\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ width: 'auto', p: 3 }}>\n      <Grid>{customList('Choices', left)}</Grid>\n\n      <Grid container direction=\"column\" alignItems=\"center\" sx={{ p: 3 }}>\n        <Button\n          color=\"inherit\"\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleCheckedRight}\n          disabled={leftChecked.length === 0}\n          aria-label=\"move selected right\"\n          sx={{ my: 1 }}\n        >\n          <Iconify icon=\"eva:arrow-ios-forward-fill\" width={18} />\n        </Button>\n\n        <Button\n          color=\"inherit\"\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleCheckedLeft}\n          disabled={rightChecked.length === 0}\n          aria-label=\"move selected left\"\n          sx={{ my: 1 }}\n        >\n          <Iconify icon=\"eva:arrow-ios-back-fill\" width={18} />\n        </Button>\n      </Grid>\n\n      <Grid>{customList('Chosen', right)}</Grid>\n    </Grid>\n  );\n}\n","// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport ComponentBlock from '../../component-block';\nimport SimpleTransferList from './simple-transfer-list';\nimport EnhancedTransferList from './enhanced-transfer-list';\n\n// ----------------------------------------------------------------------\n\nexport default function TransferListView() {\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Transfer List\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Transfer List' },\n            ]}\n            moreLink={['https://mui.com/components/transfer-list']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={3}>\n          <ComponentBlock title=\"Simple\">\n            <SimpleTransferList />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Enhanced\">\n            <EnhancedTransferList />\n          </ComponentBlock>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport TransferListView from 'src/sections/_examples/mui/transfer-list-view';\n\n// ----------------------------------------------------------------------\n\nexport default function TransferListPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: Transfer List</title>\n      </Helmet>\n\n      <TransferListView />\n    </>\n  );\n}\n"],"names":["not","a","b","filter","value","indexOf","intersection","SimpleTransferList","checked","setChecked","useState","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","customList","items","_jsx","Card","sx","width","height","overflow","borderRadius","children","List","dense","component","role","map","labelId","concat","_jsxs","ListItemButton","onClick","ListItemIcon","Checkbox","tabIndex","disableRipple","inputProps","ListItemText","id","primary","Grid","container","justifyContent","alignItems","py","direction","p","Button","color","variant","size","handleAllRight","disabled","length","my","Iconify","icon","handleCheckedRight","handleCheckedLeft","handleAllLeft","EnhancedTransferList","numberOfChecked","handleToggleAll","title","CardHeader","avatar","indeterminate","subheader","Divider","TransferListView","_Fragment","Box","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","moreLink","Stack","spacing","ComponentBlock","TransferListPage","Helmet"],"sourceRoot":""}