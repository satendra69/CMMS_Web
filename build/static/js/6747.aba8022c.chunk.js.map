{"version":3,"file":"static/js/6747.aba8022c.chunk.js","mappings":"utBAoBe,SAASA,GAAeC,GASnC,IAToC,IACtCC,EAAG,SACHC,EAAQ,YACRC,EAAW,YACXC,EAAW,UACXC,EAAS,UACTC,EAAS,UACTC,EAAS,aACTC,GACDR,EAEC,MAAM,cACJS,EAAa,iBACbC,EAAgB,kBAChBC,EAAiB,gBACjBC,EAAe,uBACfC,EAAsB,kBACtBC,EAAiB,kBACjBC,EAAiB,iBACjBC,EAAgB,mBAChBC,EAAkB,2BAClBC,EAA0B,kBAC1BC,EAAiB,mBACjBC,EAAkB,mBAClBC,EAAkB,kBAClBC,EAAiB,kBACjBC,EAAiB,mBACjBC,EAAkB,cAClBC,EAAa,WACbC,EAAU,iBACVC,EAAgB,cAChBC,EAAa,oBACbC,EAAmB,kBACnBC,EAAiB,gBACjBC,EAAe,sBACfC,EAAqB,iBACrBC,EAAgB,iBAChBC,EAAgB,mBAChBC,EAAkB,kBAClBC,EAAiB,oBACjBC,GACEpC,EAEEqC,GAAUC,EAAAA,EAAAA,KAEVC,GAAUC,EAAAA,EAAAA,KACVC,EAAcC,IAClB,IAAKA,EACH,MAAO,GAIT,GAAIA,EAAWC,WAAW,cACxB,MAAO,GAET,MAAMC,EAAO,IAAIC,KAAKH,GAChBI,EAAMF,EAAKG,UAAUC,WAAWC,SAAS,EAAG,KAC5CC,GAASN,EAAKO,WAAa,GAAGH,WAAWC,SAAS,EAAG,KACrDG,EAAOR,EAAKS,cACZC,EAAQV,EAAKW,WAAWP,WAAWC,SAAS,EAAG,KAC/CO,EAAUZ,EAAKa,aAAaT,WAAWC,SAAS,EAAG,KACzD,MAAM,GAANS,OAAUZ,EAAG,KAAAY,OAAIR,EAAK,KAAAQ,OAAIN,EAAI,KAAAM,OAAIJ,EAAK,KAAAI,OAAIF,EAAO,EAI9CG,EACNlD,GAAoBA,EAAiBmD,OAFT,GAEqC,GAAAF,OACxDjD,EAAiBoD,UAAU,EAHR,IAG+B,OACrDpD,EACN,OACEqD,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,GAAAA,MAACG,EAAAA,EAAQ,CAACC,OAAK,EAACjE,SAAUA,EAAS+D,SAAA,EACjCG,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAACC,MAAM,QAAOL,UACtBG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACTC,MAAOhC,EAAQiC,KAAO,UAAY,UAClCC,QAASlC,EAAQmC,OAAOV,UAExBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,gCAIlBT,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAExD,KACZ2D,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,UACVG,EAAAA,GAAAA,KAACU,EAAAA,EAAO,CAACC,MAAOrE,EAAkBsE,UAAU,MAAMC,OAAK,EAAAhB,UACjDG,EAAAA,GAAAA,KAAA,QAAAH,SAAOL,SAIbQ,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAEoB,MAAtBtD,GAEAyD,EAAAA,GAAAA,KAAA,OAAAH,UACEF,EAAAA,GAAAA,MAAA,QACEmB,MAAO,CACLC,gBAAiB,iBACjBX,MAAO,QACPY,QAAS,kBACTC,aAAc,MACdC,SAAU,OACVC,WAAY,QACZtB,SAAA,CACH,YACWtD,EAAkB,SAKV,MAAtBA,GAEAyD,EAAAA,GAAAA,KAAA,OAAAH,UACEF,EAAAA,GAAAA,MAAA,QACEmB,MAAO,CACLC,gBAAiB,UACjBX,MAAO,QACPY,QAAS,kBACTC,aAAc,MACdC,SAAU,OACVC,WAAY,QACZtB,SAAA,CACH,eACctD,EAAkB,SAKb,MAAtBA,GAEAyD,EAAAA,GAAAA,KAAA,OAAAH,UACEF,EAAAA,GAAAA,MAAA,QACEmB,MAAO,CACLC,gBAAiB,UACjBX,MAAO,QACPY,QAAS,kBACTC,aAAc,MACdC,SAAU,OACVC,WAAY,QACZtB,SAAA,CACH,aACYtD,EAAkB,SAK9B,QAIXyD,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAErD,KACZwD,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEpD,KACZuD,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEnD,KACZsD,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAElD,KACZqD,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEjD,KACZoD,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,UACRG,EAAAA,GAAAA,KAACoB,GAAAA,EAAQ,CACPC,QAAgC,MAAvBxE,EAETyE,WAAY,CAAE,aAAc,qBAC1BlB,MAAM,eAIZT,EAAAA,GAAAA,MAACM,EAAAA,EAAS,CAAAJ,SAAA,CAAC,KAACG,EAAAA,GAAAA,KAACoB,GAAAA,EAAQ,CACjBC,QAAwC,MAA/BvE,EAETwE,WAAY,CAAE,aAAc,qBAC1BlB,MAAM,gBAIZJ,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAE9C,KACZiD,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAE7C,KACZgD,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAE5C,KACZ+C,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAE3C,KACZ8C,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAE1C,KACZ6C,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEzC,KACZ4C,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAExC,KACZ2C,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEvC,KACZ0C,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEtC,KACZyC,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SACPrC,EAAgBc,EAAWd,EAAciB,MAAQ,MAEpDuB,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEpC,KACZuC,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEnC,KACZsC,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SACPlC,EAAkBW,EAAWX,GAAmB,MAEnDqC,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEjC,KAEZoC,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEvB,EAAWT,EAAiBY,SACxCuB,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEvB,EAAWR,EAAiBW,SACxCuB,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAE9B,KACZiC,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAE7B,KACZgC,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAAAJ,SAAEvB,EAAWL,EAAoBQ,YAG7CkB,EAAAA,GAAAA,MAAC4B,EAAAA,EAAa,CACZlB,KAAMjC,EAAQiC,KACdmB,QAASpD,EAAQoD,QACjBX,MAAM,YACNY,GAAI,CAAEC,MAAO,KAAM7B,SAAA,EAEnBF,EAAAA,GAAAA,MAACgC,EAAAA,EAAQ,CACPrB,QAASA,KACPnE,IACAiC,EAAQoD,SAAS,EAEnBC,GAAI,CAAErB,MAAO,SAAUP,SAAA,EAEvBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,mCAAmC,cAInDd,EAAAA,GAAAA,MAACgC,EAAAA,EAAQ,CACPrB,QAASA,KACPlE,IACAgC,EAAQoD,SAAS,EAEnBC,GAAI,CAAErB,MAAO,cAAeP,SAAA,EAE5BG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,wCAAwC,iBAIxDd,EAAAA,GAAAA,MAACgC,EAAAA,EAAQ,CACPrB,QAASA,KACPrE,IACAmC,EAAQoD,SAAS,EACjB3B,SAAA,EAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,mBAAmB,WAGnCd,EAAAA,GAAAA,MAACgC,EAAAA,EAAQ,CACPrB,QAASA,KACPtE,IACAoC,EAAQoD,SAAS,EAEnBC,GAAI,CAAErB,MAAO,cAAeP,SAAA,EAE5BG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,+BAA+B,gBAKjDT,EAAAA,GAAAA,KAAC4B,EAAAA,EAAa,CACZvB,KAAMnC,EAAQ2D,MACdL,QAAStD,EAAQ4D,QACjBnB,MAAM,SACNoB,QAAQ,+BACRC,QACEhC,EAAAA,GAAAA,KAACiC,EAAAA,EAAM,CAACC,QAAQ,YAAY9B,MAAM,QAAQE,QAAStE,EAAY6D,SAAC,eAO1E,C,uCC1Qe,SAASsC,GAAyBvG,GAQ7C,IAR8C,QAChDwG,EAAO,UACPC,EAAS,eAETC,EAAc,QAEdC,KACGC,GACJ5G,EAWC,OACE+D,EAAAA,GAAAA,MAAC8C,EAAAA,EAAK,CAACC,QAAS,OAASF,EAAK3C,SAAA,EAC5BF,EAAAA,GAAAA,MAACgD,GAAAA,EAAG,CAAClB,GAAI,CAAEmB,WAAY,SAAU/C,SAAA,EAC/BG,EAAAA,GAAAA,KAAA,UAAAH,SAAS0C,KACTvC,EAAAA,GAAAA,KAAC2C,GAAAA,EAAG,CAACE,UAAU,OAAOpB,GAAI,CAAErB,MAAO,iBAAkB0C,GAAI,KAAOjD,SAAC,sBAKnEF,EAAAA,GAAAA,MAAC8C,EAAAA,EAAK,CAACM,SAAU,EAAGL,QAAS,EAAGM,UAAU,MAAMC,SAAS,OAAOC,WAAW,SAAQrD,SAAA,GAC9EuC,EAAQe,MAAM1D,SACfO,EAAAA,GAAAA,KAACoD,GAAK,CAACC,MAAM,SAAQxD,SAClBuC,EAAQe,MAAMG,KAAKC,IAClBvD,EAAAA,GAAAA,KAACwD,GAAAA,EAAI,CAAYH,MAAOE,EAAME,KAAK,QAAQC,SAAUA,IAvBtCC,KACzB,MAAMC,EAAWxB,EAAQe,MAAMU,QAAQN,GAASA,IAASI,IACzDtB,EAAU,QAASuB,EAAS,EAqByCE,CAAkBP,IAAlEA,SAKdnB,EAAQ2B,QAAQtE,SACjBO,EAAAA,GAAAA,KAACoD,GAAK,CAACC,MAAM,WAAUxD,SACpBuC,EAAQ2B,QAAQT,KAAKC,IACpBvD,EAAAA,GAAAA,KAACwD,GAAAA,EAAI,CAEHH,MAAOE,EACPE,KAAK,QACLC,SAAUA,IA9BKC,KAC3B,MAAMC,EAAWxB,EAAQ2B,QAAQF,QAAQN,GAASA,IAASI,IAC3DtB,EAAU,UAAWuB,EAAS,EA4BFI,CAAoBT,IAH/BA,QASbvD,EAAAA,GAAAA,KAACiC,EAAAA,EAAM,CACL7B,MAAM,QACNE,QAASgC,EACT2B,WAAWjE,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,+BAAgCZ,SAC1D,eAMT,CAWA,SAASuD,GAAKc,GAAqC,IAApC,MAAEb,EAAK,SAAExD,EAAQ,GAAE4B,KAAOe,GAAO0B,EAC9C,OACEvE,EAAAA,GAAAA,MAAC8C,EAAAA,EAAK,CACJI,UAAWsB,GAAAA,EACXjC,QAAQ,WACRQ,QAAS,EACTM,UAAU,MACVvB,GAAI,CACF2C,EAAG,EACHnD,aAAc,EACdoD,SAAU,SACVC,YAAa,YACV7C,MAEDe,EAAK3C,SAAA,EAETG,EAAAA,GAAAA,KAAC2C,GAAAA,EAAG,CAACE,UAAU,OAAOpB,GAAI,CAAEmB,WAAY,aAAc/C,SACnDwD,KAGHrD,EAAAA,GAAAA,KAACyC,EAAAA,EAAK,CAACC,QAAS,EAAGM,UAAU,MAAMC,SAAS,OAAMpD,SAC/CA,MAIT,C,2BCzGA,MAiFA,GAjFiCjE,IAAqB,IAApB,WAAE2I,GAAY3I,EAE9C,GAAmB,KAAf2I,QAAoCC,IAAfD,EAA0B,CACjD,MAAME,EAAW,IAAIC,KAAAA,UACfC,EAAYF,EAASG,aAAa,cAGxCD,EAAUE,QAAU,CAClB,CAAEC,OAAQ,kBAAmBC,IAAK,gBAAiBrD,MAAO,IAC1D,CAAEoD,OAAQ,cAAeC,IAAK,mBAAoBrD,MAAO,IACzD,CAAEoD,OAAQ,kBAAmBC,IAAK,oBAAqBrD,MAAO,IAC9D,CAAEoD,OAAQ,WAAYC,IAAK,kBAAmBrD,MAAO,IACrD,CAAEoD,OAAQ,qBAAsBC,IAAK,yBAA0BrD,MAAO,IACtE,CAAEoD,OAAQ,YAAaC,IAAK,oBAAqBrD,MAAO,IACxD,CAAEoD,OAAQ,iBAAkBC,IAAK,oBAAqBrD,MAAO,IAC7D,CAAEoD,OAAQ,QAASC,IAAK,mBAAoBrD,MAAO,IACnD,CAAEoD,OAAQ,kBAAmBC,IAAK,qBAAsBrD,MAAO,IAC/D,CAAEoD,OAAQ,qBAAsBC,IAAK,6BAA8BrD,MAAO,IAC1E,CAAEoD,OAAQ,YAAaC,IAAK,oBAAqBrD,MAAO,IACxD,CAAEoD,OAAQ,aAAcC,IAAK,qBAAsBrD,MAAO,IAC1D,CAAEoD,OAAQ,aAAcC,IAAK,qBAAsBrD,MAAO,IAC1D,CAAEoD,OAAQ,YAAaC,IAAK,oBAAqBrD,MAAO,IACxD,CAAEoD,OAAQ,aAAcC,IAAK,oBAAqBrD,MAAO,IACzD,CAAEoD,OAAQ,YAAaC,IAAK,qBAAsBrD,MAAO,IACzD,CAAEoD,OAAQ,QAASC,IAAK,gBAAiBrD,MAAO,IAChD,CAAEoD,OAAQ,gBAAiBC,IAAK,aAAcrD,MAAO,IACrD,CAAEoD,OAAQ,cAAeC,IAAK,mBAAoBrD,MAAO,IACzD,CAAEoD,OAAQ,gBAAiBC,IAAK,oBAAqBrD,MAAO,IAC5D,CAAEoD,OAAQ,uBAAwBC,IAAK,sBAAuBrD,MAAO,IACrE,CAAEoD,OAAQ,cAAeC,IAAK,oBAAqBrD,MAAO,IAC1D,CAAEoD,OAAQ,gBAAiBC,IAAK,sBAAuBrD,MAAO,IAC9D,CAAEoD,OAAQ,oBAAqBC,IAAK,wBAAyBrD,MAAO,IACpE,CAAEoD,OAAQ,mBAAoBC,IAAK,mBAAoBrD,MAAO,IAC9D,CAAEoD,OAAQ,WAAYC,IAAK,mBAAoBrD,MAAO,IACtD,CAAEoD,OAAQ,aAAcC,IAAK,qBAAsBrD,MAAO,IAC1D,CAAEoD,OAAQ,aAAcC,IAAK,oBAAqBrD,MAAO,IACzD,CAAEoD,OAAQ,cAAeC,IAAK,sBAAuBrD,MAAO,KAO9D6C,EAAWS,SAASC,IAClBN,EAAUO,OAAOD,EAAQ,IAGTN,EAAUQ,OAAO,GAEnCR,EAAUQ,OAAO,GAAGC,UAAUC,IAC5BA,EAAKC,KAAO,CAAE7B,KAAM,GAAI8B,MAAM,EAAMnF,MAAO,CAAEoF,KAAM,WACnDH,EAAKI,KAAO,CACVC,KAAM,UACNC,QAAS,QACTC,QAAS,CAAEJ,KAAM,WAEnBH,EAAKQ,UAAY,CAAEC,WAAY,SAAUC,SAAU,SAAU,IAI/DpB,EAAUqB,SAAQ,CAACnK,EAAKoK,KAClBA,EAAY,IACdpK,EAAIyJ,KAAO,CAAE7B,KAAM,GAAIrD,MAAO,CAAEoF,KAAM,SACtC3J,EAAIgK,UAAY,CAAEC,WAAY,SAAUC,SAAU,UACpD,IAIFtB,EAASyB,KAAKC,cAAcC,MAAMC,IAChC,MAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9BX,KAAM,sEAEFc,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOC,OAAOC,IAAIC,gBAAgBR,GACvCE,EAAKO,SAAW,yBAChBP,EAAKQ,OAAO,GAEhB,CACA,OAAOhH,EAAAA,GAAAA,KAAA,SAA4C,ECC/CiH,IAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAetL,IAAA,IAAC,MAAEwL,GAAOxL,EAAA,MAAM,CACrD,2BAA4B,CAC1BoF,QAASoG,EAAM1E,QAAQ,IAEzB,2BAA4B,CAC1B1B,QAASoG,EAAM1E,QAAQ,IAE1B,IAGK2E,GAAa,CACjB,CAAEC,GAAI,GAAIjE,MAAO,SAAU3B,MAAO,IAClC,CAAE4F,GAAI,gBAAiBjE,MAAO,kBAAmB3B,MAAO,KACxD,CAAE4F,GAAI,mBAAoBjE,MAAO,cAAe3B,MAAO,IAAKV,QAAS,IACrE,CAAEsG,GAAI,oBAAqBjE,MAAO,kBAAmB3B,MAAO,KAC5D,CAAE4F,GAAI,kBAAmBjE,MAAO,WAAY3B,MAAO,KACnD,CAAE4F,GAAI,yBAA0BjE,MAAO,qBAAsB3B,MAAO,KACpE,CAAE4F,GAAI,oBAAqBjE,MAAO,YAAa3B,MAAO,KACtD,CAAE4F,GAAI,oBAAqBjE,MAAO,iBAAkB3B,MAAO,KAC3D,CAAE4F,GAAI,mBAAoBjE,MAAO,QAAS3B,MAAO,KACjD,CAAE4F,GAAI,qBAAsBjE,MAAO,kBAAmB3B,MAAO,KAC7D,CAAE4F,GAAI,6BAA8BjE,MAAO,qBAAsB3B,MAAO,KACxE,CAAE4F,GAAI,oBAAqBjE,MAAO,YAAa3B,MAAO,KACtD,CAAE4F,GAAI,qBAAsBjE,MAAO,aAAc3B,MAAO,KACxD,CAAE4F,GAAI,qBAAsBjE,MAAO,aAAc3B,MAAO,KACxD,CAAE4F,GAAI,oBAAqBjE,MAAO,YAAa3B,MAAO,KACtD,CAAE4F,GAAI,oBAAqBjE,MAAO,aAAc3B,MAAO,KACvD,CAAE4F,GAAI,qBAAsBjE,MAAO,YAAa3B,MAAO,KACvD,CAAE4F,GAAI,gBAAiBjE,MAAO,QAAS3B,MAAO,KAC9C,CAAE4F,GAAI,aAAcjE,MAAO,gBAAiB3B,MAAO,KACnD,CAAE4F,GAAI,mBAAoBjE,MAAO,cAAe3B,MAAO,KACvD,CAAE4F,GAAI,oBAAqBjE,MAAO,gBAAiB3B,MAAO,KAC1D,CAAE4F,GAAI,sBAAuBjE,MAAO,uBAAwB3B,MAAO,KACnE,CAAE4F,GAAI,oBAAqBjE,MAAO,cAAe3B,MAAO,KACxD,CAAE4F,GAAI,kBAAmBjE,MAAO,gBAAiB3B,MAAO,KACxD,CAAE4F,GAAI,wBAAyBjE,MAAO,oBAAqB3B,MAAO,KAClE,CAAE4F,GAAI,mBAAoBjE,MAAO,mBAAoB3B,MAAO,KAC5D,CAAE4F,GAAI,mBAAoBjE,MAAO,WAAY3B,MAAO,KACpD,CAAE4F,GAAI,qBAAsBjE,MAAO,aAAc3B,MAAO,KACxD,CAAE4F,GAAI,oBAAqBjE,MAAO,aAAc3B,MAAO,KACvD,CAAE4F,GAAI,sBAAuBjE,MAAO,eAAgB3B,MAAO,MAGvD6F,GAAiB,CACrBC,KAAM,GACNzD,QAAS,GACTZ,MAAO,IAIM,SAASsE,KAAmB,IAADC,EAAAC,EAAAC,EAAAC,EACxC,MAAMC,EAAUC,aAAaC,QAAQ,WAC/BC,EAAYF,aAAaC,QAAQ,mBACjCE,EAAYH,aAAaC,QAAQ,oBACjCG,IAAWC,EAAAA,EAAAA,OAEVC,GAAmBC,KAAwBC,EAAAA,EAAAA,UAClC,QAD0Cb,EACxDS,GAASK,aAAK,IAAAd,OAAA,EAAdA,EAAgBe,mBAGZC,IAAgC,QAAdf,EAAAQ,GAASK,aAAK,IAAAb,OAAA,EAAdA,EAAgBgB,wBAAyB,IAE1DC,GAAWC,KAAgBN,EAAAA,EAAAA,WAAS,GACrCnK,IAAUC,EAAAA,EAAAA,KACVyK,IAASC,EAAAA,EAAAA,MACTC,IAAWC,EAAAA,EAAAA,MACXC,IAAQC,EAAAA,EAAAA,MAERC,IAAWC,EAAAA,EAAAA,OACVC,GAAWC,KAAgBhB,EAAAA,EAAAA,UAAS,UACpCiB,GAAWC,KAAgBlB,EAAAA,EAAAA,UAAS,KACpCmB,GAAUC,KAAepB,EAAAA,EAAAA,aAEzBnG,GAASwH,KAAcrB,EAAAA,EAAAA,UAAShB,KAChCsC,GAAgBC,KAAqBvB,EAAAA,EAAAA,UAAS,IAE/CrK,IAAUC,EAAAA,EAAAA,MAET4L,GAAaC,KAAkBzB,EAAAA,EAAAA,UAAS,GACzC0B,IAAWC,EAAAA,EAAAA,QAAO,OAEjBC,GAAYC,KAAiB7B,EAAAA,EAAAA,WAAS,IACtC8B,GAAeC,KAAoB/B,EAAAA,EAAAA,UAAS,KAE5CgC,GAAUC,KAAejC,EAAAA,EAAAA,WAAS,IAClCkC,GAAgBC,KAAqBnC,EAAAA,EAAAA,UAAS,KAC9CoC,GAAkBC,KAAuBrC,EAAAA,EAAAA,UAAS,KAClDsC,GAA0BC,KACjCvC,EAAAA,EAAAA,WAAS,IACFwC,GAA+BC,KACtCzC,EAAAA,EAAAA,WAAS,IACF0C,GAAmBC,KAAwB3C,EAAAA,EAAAA,WAAS,IACpD4C,GAAmBC,KAAwB7C,EAAAA,EAAAA,WAAS,IACpD8C,GAAaC,KAAkB/C,EAAAA,EAAAA,UAAS,KAGxCgD,GAAkBC,KAAuBjD,EAAAA,EAAAA,UAAS,KAElDkD,GAAeC,KAAoBnD,EAAAA,EAAAA,WAC1B,QAAdX,EAAAO,GAASK,aAAK,IAAAZ,OAAA,EAAdA,EAAgB+D,aAAc,KAEzBC,GAAqBC,KAA0BtD,EAAAA,EAAAA,aAC/CuD,GAAsBC,KAA2BxD,EAAAA,EAAAA,WAAS,IAE1DyD,GAAYC,KAAiB1D,EAAAA,EAAAA,WAAS,IACtC2D,GAAWC,KAAgB5D,EAAAA,EAAAA,WAAS,IACpC6D,GAA6BC,KACpC9D,EAAAA,EAAAA,WAAS,IACF+D,GAAsBC,KAA2BhE,EAAAA,EAAAA,WAAS,IAC1DiE,GAAsBC,KAA2BlE,EAAAA,EAAAA,WAAS,IAE/DmE,GACAC,KACEpE,EAAAA,EAAAA,WAAS,IACNqE,GAAeC,KAAoBtE,EAAAA,EAAAA,UAAS,KAC5CuE,GAAiBC,KAAsBxE,EAAAA,EAAAA,UAAS,KAChDyE,GAAgBC,KAAmB1E,EAAAA,EAAAA,WAAS,IAC5C2E,GAAiBC,KAAsB5E,EAAAA,EAAAA,UAAS,KAChD6E,GAAOC,KAAY9E,EAAAA,EAAAA,UAAS,KAC5B+E,GAAaC,KAAkBhF,EAAAA,EAAAA,WAAS,GACzCiF,GAAqBA,IAAMD,IAAe,IACzCE,GAAQC,KAAanF,EAAAA,EAAAA,UAAS,KAC9BoF,GAAiBC,KAAsBrF,EAAAA,EAAAA,UAAS,KAChDsF,GAAYC,KAAiBvF,EAAAA,EAAAA,UAAS,KACtCwF,GAAqBC,KAA0BzF,EAAAA,EAAAA,UAAS,KACxD0F,GAAWC,KAAgB3F,EAAAA,EAAAA,UAAS,KACpC4F,GAAoBC,KAAyB7F,EAAAA,EAAAA,UAAS,KACtD8F,GAAaC,KAAkB/F,EAAAA,EAAAA,UAAS,KACxCgG,GAAcC,KAAmBjG,EAAAA,EAAAA,UAAS,KAE1CkG,GAAgBC,KAAqBnG,EAAAA,EAAAA,WAAS,GAC/CoG,GAAwBA,IAAMD,IAAkB,IAC/CE,GAAYC,KAAiBtG,EAAAA,EAAAA,UAAS,IAAI7J,OAC1CoQ,GAAqBC,KAA0BxG,EAAAA,EAAAA,UAAS,KAExDyG,GAAWC,KAAgB1G,EAAAA,EAAAA,WAAS,IACpC2G,GAAoBC,KAAyB5G,EAAAA,EAAAA,UAAS,CAC3D,CACEsB,eAAgB,GAChBuF,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,MAAM,GACNC,OAAO,GACPC,OAAQ3H,EACR4H,YAAa,OAKXC,IAAYC,EAAAA,EAAAA,cAAYC,UAG5BhH,IAAa,GAEb,IACE,MAAMiH,QAAiBC,EAAAA,EAAWC,IAAI,mDAADzQ,OACgBuI,EAAO,UAAAvI,OAASwK,KAGrEN,GAAaqG,EAASG,KAAKA,KAAKC,QAChCvG,GAAYmG,EAASG,KAAKE,aAE1BtH,IAAa,EAEf,CAAE,MAAOuH,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,IACC,CAACtI,EAASiC,KAEPuG,GAAiCT,UAGrC,IACE,MAAMC,QAAiBC,EAAAA,EAAWC,IAAI,4CAADzQ,OACSuI,EAAO,eAAAvI,OAAc2I,IAKnE,GAFAsD,GAAoBsE,EAASG,MAEP,KAAlBxE,IAA0C,OAAlBA,GAAwB,CAClD,MAAM8E,EAAcT,EAASG,KAAKO,MAC/BjN,GAASA,EAAKkN,QAAUhF,KAE3B,GAAI8E,EAAa,CACf,MAAMG,EAAmBH,EAAYI,eAErCrF,GAAeoF,EACjB,CACF,CACF,CAAE,MAAON,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAGQQ,IAAoBhB,EAAAA,EAAAA,cAAYC,UACpChH,IAAa,GACb,IACE,MAAMiH,QAAiBC,EAAAA,EAAWc,KAChC,kDAAoD9G,GACpD,CACE+G,KAAMzI,GACN0I,QAASrI,GAETsI,QAASlJ,EACTmJ,OAAOhJ,IAIkB,YAAzB6H,EAASG,KAAKiB,SACZpB,EAASG,KAAKA,KAAKC,OAAOzQ,OAAS,IACrCgK,GAAaqG,EAASG,KAAKA,KAAKC,QAChCvG,GAAYmG,EAASG,KAAKE,cAK5BtH,IAAa,GAEjB,CAAE,MAAOuH,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,IACC,CAACtI,EAASiC,KAwFXoH,IAAOvB,EAAAA,EAAAA,cAAYC,UAEvBhH,IAAa,GACb,IAEE,MAAMiH,QAAiBC,EAAAA,EAAWc,KAAK,yCAADtR,OACKuI,EAAO,YAAAvI,OAAWuN,GAAe,UAAAvN,OAASwK,GAAW,WAAAxK,OAAU0I,IAIxG6H,EAASG,KAAKA,MACdH,EAASG,KAAKA,KAAKC,QACnBJ,EAASG,KAAKA,KAAKC,OAAOzQ,OAAS,GAEnCgK,GAAaqG,EAASG,KAAKA,KAAKC,QAChCvG,GAAYmG,EAASG,KAAKmB,cAE1BvI,IAAa,KAEbY,GAAa,IACbE,GAAY,IACZd,IAAa,GACbwI,IAAAA,KAAU,CACR1Q,MAAO,UACP2Q,KAAM,mBACN7Q,KAAM,UACN8Q,YAAa,CACXC,UAAW,yBAInB,CAAE,MAAOpB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,IACC,CAACtI,EAASiC,GAAa+C,MA8C1B2E,EAAAA,EAAAA,YAAU,KAEe,IAAnB3E,IAA4C,MAAnBA,GAC3BqE,KACyB,IAAlBjE,IAA2C,MAAnBA,GAC/BwE,KACOC,MAAMC,QAAQvJ,KAAsBA,GAAkB5I,OAAS,EACtEmR,KAGAjB,KAEFW,KAxDmBT,WACnB,IACE,MAAMgC,QAAqB9B,EAAAA,EAAWc,KAAK,mCAADtR,OACLuI,IAGrC,GAAiC,YAA7B+J,EAAa5B,KAAKiB,OAAsB,CAIzC,IAAIzD,EAASoE,EAAa5B,KAAKA,KAAK6B,gBAAgBxO,KAAIC,IAAI,CACxDF,MAAQE,EAAKwO,aACblQ,MAAO0B,EAAKyO,eAAgB,MAAMzO,EAAKwO,iBAEvCrE,GAAUD,GAEd,IAAII,EAAagE,EAAa5B,KAAKA,KAAKgC,eAAe3O,KAAIC,IAAI,CAC7DF,MAAOE,EAAK2O,gBAAiB,MAAO3O,EAAK4O,aACzCtQ,MAAO0B,EAAK2O,oBAEZpE,GAAcD,GAEhB,IAAII,EAAY4D,EAAa5B,KAAKA,KAAKmC,eAAe9O,KAAIC,IAAI,CAC5DF,MAAOE,EAAK8O,eAAgB,MAAO9O,EAAK+O,aACxCzQ,MAAO0B,EAAK8O,mBAEZnE,GAAaD,GAEbK,GAAe,UAErB,MACI+C,IAAAA,QACAA,IAAAA,KAAU,CACN5Q,KAAM,QACNE,MAAO,UACP2Q,KAAMO,EAAa5B,KAAKsC,SAIjC,CAAE,MAAOnC,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAgBAoC,EAAc,GACb,CAAC1K,EAASiC,GAAa+C,GAAgB6C,GAAUwB,KAEpD,MAAMsB,GA6qGR,SAAoBvO,GAAsC,IAArC,UAAEwO,EAAS,WAAEC,EAAU,QAAEvQ,GAAS8B,EAErD,MAAM,KAAE0O,GAASxQ,EAEXyQ,EAAiBH,EAAUpP,KAAI,CAACwP,EAAIC,IAAU,CAACD,EAAIC,KAezD,OAbAF,EAAeG,MAAK,CAACC,EAAGC,KACtB,MAAMC,EAAQR,EAAWM,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVC,EAAoBA,EACjBF,EAAE,GAAKC,EAAE,EAAE,IAGpBR,EAAYG,EAAevP,KAAKwP,GAAOA,EAAG,KAOnCJ,CACT,CAjsGuBU,CAAY,CAC/BV,UAAWf,MAAMC,QAAQpI,IAAaA,GAAY,GAClDmJ,YAAYU,EAAAA,EAAAA,IAAcnK,GAAMiK,MAAOjK,GAAMoK,SAC7ClR,aAGImR,GAAad,GAAae,MAC9BtK,GAAMuK,KAAOvK,GAAMwK,YACnBxK,GAAMuK,KAAOvK,GAAMwK,YAAcxK,GAAMwK,aAKnCC,IAFczK,GAAM0K,OAERC,IAAQtM,GAAgBnF,KAEpC0R,IAAgBlE,EAAAA,EAAAA,cACpB,CAACgD,EAAM/Q,KACLqH,GAAM6K,cACNnK,IAAYoK,IAAS,IAChBA,EACH,CAACpB,GAAO/Q,KACP,GAEL,CAACqH,KAaG+K,IAAkBrE,EAAAA,EAAAA,cAAYC,MAAOvI,EAAIzL,KAE7C,MAAMqY,EAAQrY,EAAI4U,MAElB,GAAc,KAAVyD,EAAc,CAChB,GAA6B,MAA1BrY,EAAIU,kBAMH,YALF8U,IAAAA,KAAU,CACR1Q,MAAO,WACP2Q,KAAK,oEAAD/R,OAAsE1D,EAAIQ,cAAa,kBAC3FoE,KAAM,YAGJ,GAA6B,MAA1B5E,EAAIU,kBAMT,YALF8U,IAAAA,KAAU,CACR1Q,MAAO,WACP2Q,KAAK,oEAAD/R,OAAsE1D,EAAIQ,cAAa,qBAC3FoE,KAAM,YAIV4Q,IAAAA,KAAU,CACR1Q,MAAO,gBACP2Q,KAAM,oCACN7Q,KAAM,UACN0T,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBlO,MAAKyJ,UACN,GAAIK,EAAOqE,YAAa,CACtB1L,IAAa,GAEb,IACE,MAAMiH,QAAiBC,EAAAA,EAAWC,IAAI,2CAADzQ,OACQuI,EAAO,YAAAvI,OAAW2U,IAIpC,WAAxBpE,EAASG,KAAKiB,QACfG,IAAAA,KAAU,CACV1Q,MAAO,WACP2Q,KAAMxB,EAASG,KAAKsC,QACpB9R,KAAM,YAGmB,SAAxBqP,EAASG,KAAKiB,QACfG,IAAAA,KAAU,CACV1Q,MAAO,QACP2Q,KAAMxB,EAASG,KAAKsC,QACpB9R,KAAM,UAGRoI,IAAa,EAEf,CAAE,MAAOuH,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CAEF,IAEJ,IACC,CAAC5G,GAAWV,GAAQhB,IAEjB0M,IAAmB5E,EAAAA,EAAAA,cAAY,KACnC,MAAM6E,EAAajL,GAAU3F,QAAQhI,IAASqN,GAAMpN,SAAS4Y,SAAS7Y,EAAIyL,MAC1EmC,GAAagL,GAEbvL,GAAMyL,uBAAuB,CAC3BC,UAAWpL,GAAU/J,OACrBoV,gBAAiBtB,GAAW9T,OAC5BqV,kBAAmBrC,GAAahT,QAChC,GACD,CAACgT,GAAahT,OAAQ8T,GAAW9T,OAAQyJ,GAAOM,KAE7CuL,IAAgBnF,EAAAA,EAAAA,cACpB,CAACtI,EAAGzL,KAGF,MAAMqY,EAAQ5M,EACR0N,EAAQnZ,EAAIW,gBAUJ,KAAV0X,GAA0B,KAAVc,GAClBhM,GAAS,6BAA8B,CACrCR,MAAO,CACLiI,MAAMyD,EACNe,OAAOD,EACPjL,eACAF,oBAGN,GAGF,CAACf,GAAOiB,GAAaF,KAUjBqL,KAPgBtF,EAAAA,EAAAA,cACnBtI,IACCwB,GAAOqM,KAAKC,EAAAA,EAAMC,UAAUC,QAAQC,QAAQjO,GAAI,GAElD,CAACwB,MAGwB8G,EAAAA,EAAAA,cAAY,KACrChG,GAAWrC,IACX0C,GAASuL,QAAQ3T,MAAQ,GACzB8N,IAAW,GACV,CAACA,OAcJ8B,EAAAA,EAAAA,YAAU,KACR,MAAMgE,EAAeA,KACnB,MAAMC,EAAe9O,OAAO+O,YAEtBC,EAAeC,KAAKC,MAAqB,GAAfJ,GAAsB,KACtDnM,GAAaqM,EAAa,EAU5B,OANAH,IAGA7O,OAAOmP,iBAAiB,SAAUN,GAG3B,IAAM7O,OAAOoP,oBAAoB,SAAUP,EAAa,GAC9D,IAGH,MAAO3E,GAAMmF,KAAW1N,EAAAA,EAAAA,UAAS,CAC/B,CACEsB,eAAgB,GAChBuF,SAAU,OACVC,QAAS,MACTG,OAAQ,IACRF,QAAS,GACTG,OAAQ3H,EACR4H,YAAa,QAIVqB,GAASmF,KAAc3N,EAAAA,EAAAA,UAAS,CACrC,CACE4N,oBAAqB,GACrBC,UAAW,MACX3G,OAAQ3H,EACRuO,UAAW,OAITC,GAAmBxF,GAAKyF,MAAM1a,GAA+B,KAAvBA,EAAIgO,iBAC1C2M,GAAc,CAClB,CAAE3U,MAAO,IAAKwB,MAAO,KACrB,CAAExB,MAAO,GAAIwB,MAAO,KAGhBoT,GAAe,CACnB,CAAE5U,MAAO,IAAKwB,MAAO,KACrB,CAAExB,MAAO,GAAIwB,MAAO,KAGhBqT,GAAO,CACX,CAAE7U,MAAO,OAAQwB,MAAO,QACxB,CAAExB,MAAO,WAAYwB,MAAO,YAC5B,CAAExB,MAAO,KAAMwB,MAAO,MACtB,CAAExB,MAAO,KAAMwB,MAAO,UACtB,CAAExB,MAAO,IAAKwB,MAAO,YACrB,CAAExB,MAAO,IAAKwB,MAAO,gBACrB,CAAExB,MAAO,IAAKwB,MAAO,aACrB,CAAExB,MAAO,KAAMwB,MAAO,4BACtB,CAAExB,MAAO,KAAMwB,MAAO,yBACtB,CAAExB,MAAO,KAAMwB,MAAO,iBAGlBsT,GAAQ,CACZ,CAAE9U,MAAO,MAAOwB,MAAO,OACvB,CAAExB,MAAO,KAAMwB,MAAO,OAyElBuT,GAAwB7D,IAC5B,GAAIjC,GAAKrR,OAAS,EAAG,CACnB,MAAMoX,EAAU,IAAI/F,IACpB+F,EAAQC,OAAO/D,EAAO,GACtBkD,GAAQY,EACV,GAGIE,GAAoBA,KAExB,GAAIjG,GAAKrR,OAAS,EAAG,CACnB,MAAMoX,EAAU,CAAC/F,GAAK,IACtBmF,GAAQY,EACV,CAGA,GAAI9F,GAAQtR,OAAS,EAAG,CACtB,MAAMuX,EAAa,CAACjG,GAAQ,IAC5BmF,GAAWc,EACb,CAGA5M,IAAc,EAAM,EAgBhB6M,GAAatM,GAAiBrH,KAAKzH,IAAG,CAC1CgG,MAAOhG,EAAIqb,YACX7T,MAAM,GAAD9D,OAAK1D,EAAIsb,mBAGRC,GAAsBvH,UAC1B,IACE,MAAMC,QAAiBC,EAAAA,EAAWC,IAAI,6BAEV,WAAxBF,EAASG,KAAKiB,QAChBtG,GAAoBkF,EAASG,KAAKA,KAGtC,CAAE,MAAOG,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAIEiH,GAAcxH,UAClB7F,GAAe,GACfqH,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cAEA,IACE,MAAMvB,QAAiBC,EAAAA,EAAWc,KAChC,uDAAyD9G,GACzD,CACE+G,KAAMA,GACNC,QAASA,GACTwG,OAAQzP,EACR0P,MAAOvP,IAIX,GACE6H,EAASG,KAAKA,MACdH,EAASG,KAAKA,KAAKC,QACnBJ,EAASG,KAAKA,KAAKC,OAAOzQ,OAAS,EACnC,CACAgK,GAAaqG,EAASG,KAAKA,KAAKC,QAChCvG,GAAYmG,EAASG,KAAKE,aAC1B7E,GAAewE,EAASG,KAAKwH,WAE7BpG,IAAAA,QACA0F,KACA,MAAMW,EAAmB5G,GAAKxN,KAAKzH,IAAG,IAEjCA,EACHgO,eAAgB,GAChBwF,QAAS,GACTC,QAAS,OAEX2G,GAAQyB,GAEV,MAAMC,EAAsB7G,GAAKxN,KAAKyN,IAAO,IAEtCA,EACHoF,oBAAqB,OAEvBD,GAAWyB,EACb,MACEtG,IAAAA,KAAU,CACR1Q,MAAO,UACP2Q,KAAM,mBACN7Q,KAAM,UACN8Q,YAAa,CACXC,UAAW,wBAInB,CAAE,MAAOpB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAqGIwH,GAAwB7E,IAC5B,GAAIhC,GAAQtR,OAAS,EAAG,CACtB,MAAMoX,EAAU,IAAI9F,IACpB8F,EAAQC,OAAO/D,EAAO,GACtBmD,GAAWW,EACb,GAEIgB,GAAkBA,KACtBrN,IAAY,GACZsN,GAAc,CACZC,UAAW,GACXC,YAAa,IACb,GAGGC,GAAYH,KAAiBvP,EAAAA,EAAAA,UAAS,CAC3C,CACEwP,UAAW,GACXC,YAAa,GACbE,aAAc,IACdlH,QAASlJ,EACTqQ,MAAOlQ,KAGLmQ,GAAwBC,IAC5B,MAAM,KAAEzF,EAAI,MAAE/Q,GAAUwW,EAAMC,OAC9BR,IAAeS,IAAQ,IAClBA,EACH,CAAC3F,GAAO/Q,KACP,EAIC2W,GAAyB3I,UAC7BwB,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,MAAMoH,EAAe,CACnBR,WAAYA,GACZS,YAAa5H,GACb6H,eAAgB5H,GAChBC,QAASlJ,EACTqQ,MAAOlQ,EACPiQ,aAAc,KAGhB,IACE,MAAMpI,QAAiBC,EAAAA,EAAWc,KAChC,wCACA4H,GAELpI,QAAQuI,IAAI,cAAc9I,GACK,WAAxBA,EAASG,KAAKiB,SAChB5F,GAAewE,EAASG,KAAK4I,OAC7BvI,KACA+G,KACAT,KACAgB,KACAvG,IAAAA,QACAwG,KACAd,KAEJ,CAAE,MAAO3G,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,IA6CO0I,GAASC,KAAcxQ,EAAAA,EAAAA,UAAS,CACrC,CACEsB,eAAgB,GAChBuF,SAAU,GACVC,QAAS,GACTG,OAAQ,GACRF,QAAS,GACTG,OAAQ3H,EACR4H,YAAa,QAIVsJ,GAAYC,KAAiB1Q,EAAAA,EAAAA,UAAS,CAC3C,CACE4N,oBAAqB,GACrBC,UAAW,GACX3G,OAAQ3H,EACRuO,UAAW,OAGT6C,GAAyBA,KAC7BnN,IAAwB,GACxBgL,KACAc,KACAhM,GAAuB,IACvBkN,GAAW,IACXE,GAAc,GAAG,EAEbE,GAAuBtJ,UAC3BwB,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,IACE,MAAMvB,QAAiBC,EAAAA,EAAWc,KAChC,uDAAyD9G,GACzD,CACE+G,KAAMgI,GACN/H,QAASiI,GACTzB,OAAOzP,EACP0P,MAAMvP,IAIVwB,GAAaqG,EAASG,KAAKA,KAAKC,QAChCvG,GAAYmG,EAASG,KAAKE,aAC1BkB,IAAAA,QACA0F,KACA,MAAMW,EAAmBoB,GAAQxV,KAAKzH,IAAG,IAEpCA,EACHgO,eAAgB,GAChBwF,QAAS,GACTC,QAAS,OAEX2G,GAAQyB,GAER,MAAMC,EAAsBqB,GAAW1V,KAAKyN,IAAO,IAE9CA,EACHoF,oBAAqB,OAEvBD,GAAWyB,EACb,CAAE,MAAOvH,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GA0GIgJ,GAAoBA,KACxBnN,IAAc,GACd6L,GAAc,CACZC,UAAW,GACXC,YAAa,IACb,EA2OAqB,GAA+BxJ,UACnC,MAAM/H,EAAUC,aAAaC,QAAQ,WAC/BC,EAAYF,aAAaC,QAAQ,mBAEvCqJ,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,MAAMoH,EAAe,CACnBR,WAAYA,GACZS,YAAaI,GACbH,eAAgBK,GAChBM,QAASxR,EACTyR,SAAUtR,EACViQ,aAAc,KAGhB,IACE,MAAMpI,QAAiBC,EAAAA,EAAWc,KAChC,wCACA4H,GAG0B,WAAxB3I,EAASG,KAAKiB,SAChB5F,GAAewE,EAASG,KAAK4I,OAC7BvI,KACA6I,KACAJ,GAAW,IACXlN,GAAuB,IACvBoN,GAAc,IACd5H,IAAAA,QACAwG,KACAd,KACAqC,KACAF,KAEJ,CAAE,MAAO9I,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAIEsB,GAAqB7B,UACzB,MAAM2J,EAAgBvP,GAASuL,QAAQ3T,MAGvC,GAAsB,KAAlB2X,GAA0C,OAAlBA,EAAwB,CAClDnI,IAAAA,KAAU,CAAE1Q,MAAO,eAAgB2W,mBAAmB,IACtDjG,IAAAA,cAEA,IACE,MAAMvB,QAAiBC,EAAAA,EAAWC,IAAI,wCAADzQ,OACKuI,EAAO,gBAAAvI,OAAeia,EAAa,UAAAja,OAASwK,KAGtF,GAAI+F,EAASG,KAAKA,KAAKC,OAAOzQ,OAAS,EAAG,CACxC0N,GAAmB2C,EAASG,KAAKA,KAAKC,QACtCvG,GAAYmG,EAASG,KAAKE,aAE1B,MAAMsJ,EAAe3J,EAASG,KAAKA,KAAKC,OAAOrM,QAAQN,IACrD,MAAMmW,EAAeF,EAAcG,cAC7Btd,GAAiBkH,EAAKlH,eAAiB,IAAIsd,cAC3Crd,GAAoBiH,EAAKjH,kBAAoB,IAAIqd,cACjDpd,GAAqBgH,EAAKhH,mBAAqB,IAAIod,cACnDnd,GAAmB+G,EAAK/G,iBAAmB,IAAImd,cAC/Cld,GAA0B8G,EAAK9G,wBAA0B,IAAIkd,cAC7Djd,GAAqB6G,EAAK7G,mBAAqB,IAAIid,cACnDhd,GAAqB4G,EAAK5G,mBAAqB,IAAIgd,cACnD/c,GAAoB2G,EAAK3G,kBAAoB,IAAI+c,cACjDzc,GAAqBqG,EAAKrG,mBAAqB,IAAIyc,cACnDtc,GAAiBkG,EAAKlG,eAAiB,IAAIsc,cAC3Clc,GAAuB8F,EAAK9F,qBAAuB,IAAIkc,cACvD5b,GAAsBwF,EAAKxF,oBAAsB,IAAI4b,cACrD3b,GAAqBuF,EAAKvF,mBAAqB,IAAI2b,cAEzD,OACEtd,EAAcqY,SAASgF,IACvBpd,EAAiBoY,SAASgF,IAC1Bnd,EAAkBmY,SAASgF,IAC3Bld,EAAgBkY,SAASgF,IACzBjd,EAAuBiY,SAASgF,IAChChd,EAAkBgY,SAASgF,IAC3B/c,EAAkB+X,SAASgF,IAC3B9c,EAAiB8X,SAASgF,IAC1Bxc,EAAkBwX,SAASgF,IAC3Brc,EAAcqX,SAASgF,IACvBjc,EAAoBiX,SAASgF,IAC7B3b,EAAmB2W,SAASgF,IAC5B1b,EAAkB0W,SAASgF,EAAa,IAG5CjQ,GAAagQ,GACbhQ,GAAagQ,GAEbpI,IAAAA,OACF,MACEA,IAAAA,QACAA,IAAAA,KAAU,CACR5Q,KAAM,QACNE,MAAO,UACP2Q,KAAM,oBAGZ,CAAE,MAAOlB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,GA4JIwJ,GAAuB/J,UAC3B,IAIMpC,EAAQC,EASRG,EAAYC,EAYZG,EAAWC,EAzBbpG,EAAUC,aAAaC,QAAQ,WAC/B6R,EAAQ9R,aAAaC,QAAQ,mBAC7B8R,EAAU/R,aAAaC,QAAQ,gBAC/B+R,EAAUhS,aAAaC,QAAQ,oBAEX,IAAnB2F,IAA4C,MAAnBA,GACxBD,EAAU,IAEVD,EAASE,GAAgBqM,MAAM,KAC/BtM,EAAYD,EAAO,IAKG,IAAvBM,IAAoD,MAAvBA,GAE5BD,EAAc,IAGdD,EAAaE,GAAoB1K,MAAM2W,MAAM,KAC7ClM,EAAgBD,EAAW,GAC3BwC,QAAQuI,IAAI,cAAe/K,EAAW,KAKjB,IAAtBM,IAAkD,MAAtBA,GAE3BD,EAAa,IAGbD,EAAYE,GAAmB9K,MAAM2W,MAAM,KAC3C9L,EAAeD,EAAU,GACzBoC,QAAQuI,IAAI,aAAc3K,EAAU,KAE1C,IAAIgM,EAAkB,CAEpB,QAAWnS,EACX,eAAkB4F,EAAUwM,OAC5B,mBAAsBpM,EAAcoM,OACpC,mBAAqBhM,EAAagM,OAElC,MAAS9M,GACT,MAASyM,EACT,QAAWC,EACX,QAAWC,GAIb1I,IAAAA,KAAU,CAAG1Q,MAAO,gBAAiB2W,mBAAmB,IACxDjG,IAAAA,cACA,IAEE,MAAMQ,QAAqB9B,EAAAA,EAAWc,KACpC,oCACAsJ,KAAKC,UAAUH,IAGgB,YAA7BpI,EAAa5B,KAAKiB,QACpBG,IAAAA,QACA1B,KACE0B,IAAAA,KAAU,CACR5Q,KAAM,UACN8Q,YAAa,CACXC,UAAW,uBAEb7Q,MAAOkR,EAAa5B,KAAKiB,OACzBI,KAAMO,EAAa5B,KAAKsC,UACvBnM,MAAK,KACN4C,GAAS,uBAAuB,MAIpCqI,IAAAA,QACAA,IAAAA,KAAU,CACN5Q,KAAM,QACNE,MAAO,UACP2Q,KAAMO,EAAa5B,OAI3B,CAAE,MAAOG,GACPiB,IAAAA,QACAhB,QAAQD,MAAM,uBAAwBA,GACtCiB,IAAAA,KAAU,CACF5Q,KAAM,QACNE,MAAO,iCACP2Q,KAAMlB,GAEhB,GAuCMiK,GAA0BxK,UAE9B,IAAI/H,EAAUC,aAAaC,QAAQ,WAE/B6R,EAAQ9R,aAAaC,QAAQ,mBAE7B8R,EAAU/R,aAAaC,QAAQ,gBAC/B+R,EAAUhS,aAAaC,QAAQ,oBAG/BsS,EAAiB,GAGnBA,EAFgB,IAAd1L,IAAkC,MAAdA,GAEL,GAGA2L,IAAO3L,IAAY4L,OAAO,uBAAuBN,OAGtE,IAAID,EAAkB,CAElB,QAAWnS,EACX,kBAAqBiS,EACrB,oBAAuBjL,GAAoBoL,OAC3C,oBAAuBI,EAEvB,MAASlN,GACT,MAASyM,EACT,QAAWC,EACX,QAAWC,GAKf1I,IAAAA,KAAU,CAAG1Q,MAAO,gBAAiB2W,mBAAmB,IACxDjG,IAAAA,cACA,IAEE,MAAMQ,QAAqB9B,EAAAA,EAAWc,KACpC,uCACAsJ,KAAKC,UAAUH,IAEgB,YAA7BpI,EAAa5B,KAAKiB,QAEpBG,IAAAA,QACA1B,KACE0B,IAAAA,KAAU,CACR5Q,KAAM,UACN8Q,YAAa,CACXC,UAAW,uBAEb7Q,MAAOkR,EAAa5B,KAAKiB,OACzBI,KAAMO,EAAa5B,KAAKsC,UACvBnM,MAAK,KACN4C,GAAS,uBAAuB,MAIpCqI,IAAAA,QACAA,IAAAA,KAAU,CACN5Q,KAAM,QACNE,MAAO,UACP2Q,KAAMO,EAAa5B,OAK3B,CAAE,MAAOG,GACPiB,IAAAA,QACAhB,QAAQD,MAAM,uBAAwBA,GACtCiB,IAAAA,KAAU,CACF5Q,KAAM,QACNE,MAAO,iCACP2Q,KAAMlB,GAEhB,GAKIqK,GAAmBA,CAACpC,EAAOqC,KAChB,kBAAXA,GAAyC,kBAAXA,IAGlCvL,GAAsB,CACpB,CACEtF,eAAgB,GAChBuF,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,MAAM,GACNC,OAAO,GACPC,OAAQ3H,EACR4H,YAAa,OAGjBT,IAAa,GAAM,EAmGnB,OACEtP,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAAC,SAAA,EACGF,EAAAA,GAAAA,MAACgb,EAAAA,GAAM,CAAA9a,SAAA,EACNG,EAAAA,GAAAA,KAAA,SAAAH,SAAO,iBACPG,EAAAA,GAAAA,KAAA,QAAM4S,KAAK,cAAc7Q,QAAQ,0BAEnCpC,EAAAA,GAAAA,MAACib,EAAAA,EAAS,CAACC,UAAUzR,GAAS0R,cAAuB,KAAKjb,SAAA,EACxDG,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,mBAAkBlb,UAC/BG,EAAAA,GAAAA,KAACgb,EAAAA,EAAiB,CACfC,QAAQ,oBACTC,MAAO,GACPlZ,QACEhC,EAAAA,GAAAA,KAACiC,EAAAA,EAAM,CACLY,UAAWsY,EAAAA,EAEXjZ,QAAQ,YACR6Y,UAAU,eACV9W,WAAWjE,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,sBAEzB2a,GAAI,CACFC,SAAU,6BACV7S,MAAO,CAAE8S,OAAQ,oBACjBzb,SACH,QAOH4B,GAAI,CAAE8Z,GAAI,CAAEC,GAAI,EAAGC,GAAI,SAG3Bzb,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,cAAalb,UAC1BF,EAAAA,GAAAA,MAAC+b,EAAAA,EAAI,CAAA7b,SAAA,EAEHF,EAAAA,GAAAA,MAAC8C,EAAAA,EAAK,CACJC,QAAS,EACTQ,WAAY,CAAEsY,GAAI,WAAYC,GAAI,UAClCzY,UAAW,CACTwY,GAAI,SACJC,GAAI,OAENha,GAAI,CACF2C,EAAG,IACHuX,GAAI,CAAEH,GAAI,IAAKC,GAAI,GACnBG,UAAW,QACX/b,SAAA,EAEFF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CACL8Y,UAAU,iBACV7Y,QAAQ,WACRT,GAAI,CACFoa,WAAY,GAEdvb,QAx1Cawb,KACzB,GAAIhL,GAAKrR,OAAS,EAAG,CACnB,MAAMoX,EAAU,CAAC/F,GAAK,IACtBmF,GAAQY,EACV,CAGA,GAAI9F,GAAQtR,OAAS,EAAG,CACtB,MAAMuX,EAAa,CAACjG,GAAQ,IAC5BmF,GAAWc,EACb,CACA5M,IAAc,GACdgN,IAAqB,EA40CmBvX,SAAA,EAE5BG,EAAAA,GAAAA,KAAC+b,EAAAA,GAAI,CAACtb,KAAK,0BAA0BK,MAAO,CAAEkb,YAAa,SAAW,cAExErc,EAAAA,GAAAA,MAACsc,EAAAA,EAAW,CACVxa,GAAI,CACFoa,WAAY,EACZna,MAAO,CAAE8Z,GAAI,EAAGC,GAAI,MAEtBV,UAAU,kBAAiBlb,SAAA,EAE3BG,EAAAA,GAAAA,KAACkc,EAAAA,EAAU,CAAC5U,GAAG,eAAeyT,UAA2B,KAAf1P,IAAqBxB,GAAiB,cAAgB,GAAGhK,SAAC,sBACpGG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLC,QAAQ,eACR9U,GAAG,SACH+U,OAAOrc,EAAAA,GAAAA,KAACsc,EAAAA,EAAa,CAACjZ,MAAM,qBAC5BxB,MAAuB,KAAhBwJ,GAAqBA,GAAcxB,GAC1C0S,SAv2DW1M,MAAOwI,EAAMmE,KAAkB,IAADC,EACvD,MAAMC,GAAqB,OAALrE,QAAK,IAALA,GAAa,QAARoE,EAALpE,EAAOC,cAAM,IAAAmE,OAAR,EAALA,EAAe5a,QAASgI,GAC9CG,GAAe,GAEf,MAAM2S,EAA6BpR,GAAiBiF,MACjDjN,GAASA,EAAKoN,iBAAmB+L,IAGpC,IAAIE,EAQJ,GANIjL,MAAMC,QAAQ4K,IAAiBA,EAAa/c,OAAS,IACvDmd,EAAuBJ,EAAahM,MACjCjN,GAASA,EAAKoN,iBAAmB+L,KAIlCC,EAA4B,CAC9B,MAAME,EAAWF,EAA2BlM,MACtCqM,EAAYH,EAA2BI,qBAE7C,GAAgB,KAAbD,EAAiB,CAClB7N,IAAa,GACboC,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,IACE,MAAMvB,QAAiBC,EAAAA,EAAWC,IAChC,iDACElI,EACA,UACA+U,GAGJ,GAAI/M,EAASG,KAAKA,MAAQH,EAASG,KAAKA,KAAK+M,YAAclN,EAASG,KAAKA,KAAK+M,WAAWvd,OAAS,EAAG,CACnG,MAAMoX,EAAU/G,EAASG,KAAKA,KAAK+M,WAAW1Z,KAAKC,IAAI,CACrDsG,eAAgBtG,EAAK0Z,qBACrB7N,SAAU7L,EAAK2Z,uBACf5N,QAAS/L,EAAK4Z,oBACd9N,QAAS9L,EAAK6Z,sBACd3N,OAAQ3H,EACRyH,MAAOsN,EACPrN,OAAOsN,EACPpN,YAAa,QAEG2N,YAAW,KAC3BhM,IAAAA,QACAlC,GAAsB0H,EAAQ,GAC7B,IAEL,MACExF,IAAAA,KAAU,CACR5Q,KAAM,QACN8Q,YAAa,CACXC,UAAW,uBAEb7Q,MAAO,UACP2Q,KAAM,sCAGZ,CAAE,MAAOlB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACA,MACF,CAEAvD,GAAiBgQ,GACjB9P,GAAmB8P,GACnB7S,GAAe,GACf0B,GAAiB,IACjBJ,GAAe,GACjB,KAAK,CACH,MAAMuR,EAAWD,EAAqBnM,MACtC5D,GAAiBgQ,GACjB9P,GAAmB8P,GACnB7S,GAAe,GACf0B,GAAiB,IACjBJ,GAAe,GACjB,CACAxB,GAAkB4S,EAAc,EAqxDlBjb,GAAI,CAAE6b,cAAe,cAAezd,SAGnC0L,GAAiBjI,KAAKC,IACnB5D,EAAAA,GAAAA,MAACgC,EAAAA,EAAQ,CAAkBE,MAAO0B,EAAKoN,eAAe9Q,SAAA,EACpDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CACNC,KAAK,gBACLK,MAAO,CACLyc,QAAS,cACTC,cAAe,SACfxB,YAAa,MACbJ,UAAW,OACXla,MAAO,OACP+b,OAAQ,WAGZzd,EAAAA,GAAAA,KAAA,QAAMc,MAAO,CAAE0c,cAAe,UAAW3d,SACtC0D,EAAKoN,mBAbKpN,EAAKkN,eAmB5B9Q,EAAAA,GAAAA,MAAC8C,EAAAA,EAAK,CAACO,UAAU,MAAME,WAAW,SAASR,QAAS,EAAGK,SAAU,EAAGtB,GAAI,CAAEC,MAAO,GAAI7B,SAAA,EACjFF,EAAAA,GAAAA,MAAA,OACEob,UAAU,wBACVja,MAAO,CAAEyc,QAAS,OAAQra,WAAY,UAAWrD,SAAA,EAEjDG,EAAAA,GAAAA,KAAA,SACE0F,KAAK,OACLqV,UAAU,cACV2C,YAAY,WACZC,IAAK1T,GACL2T,UAvkBCvF,IACrB,GAAkB,cAAdA,EAAMtT,IAAqB,CAC7BsT,EAAMwF,iBACN,MACMja,EADcqG,GAASuL,QAAQ3T,MACR2R,MAAM,GAAI,GACvCvJ,GAASuL,QAAQ3T,MAAQ+B,EACR,KAAbA,GACFsR,IAEJ,CACkB,UAAdmD,EAAMtT,KAAqD,KAAlCkF,GAASuL,QAAQ3T,MAAMqY,QAElDxI,IAEF,EA0jBoBoM,QAxjBGC,KACvB9Q,IAAgB,EAAK,EAwjBD+Q,OArjBEC,KACtBhR,IAAgB,EAAM,KAsjBJjN,EAAAA,GAAAA,KAAA,OAAAH,UAEEG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACTG,QAASoR,GACTqJ,UAAU,qBAAoBlb,UAE9BG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,4BAItBT,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CAACG,QAASlC,GAAQmC,OAAOV,UAClCG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,oCAKpBT,EAAAA,GAAAA,KAACuB,EAAAA,EAAa,CACZlB,KAAMjC,GAAQiC,KACdmB,QAASpD,GAAQoD,QACjBX,MAAM,YACNY,GAAI,CAAEC,MAAO,KAAM7B,UAEnBF,EAAAA,GAAAA,MAACgC,EAAAA,EAAQ,CACPrB,QAASA,KA3kBCuP,WACxB,GAAsB,KAAlBjD,GAAsB,CACxByE,IAAAA,KAAU,CACR1Q,MAAO,eACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,IACE,MAAMvB,QAAiBC,EAAAA,EAAWc,KAAK,wCAADtR,OACIuI,EAAO,YAAAvI,OAAWqN,KAE5DyE,IAAAA,QAEEvB,EAASG,KAAKA,MACdH,EAASG,KAAKA,KAAKC,QACnBJ,EAASG,KAAKA,KAAKC,OAAOzQ,OAAS,GAEnCye,GAAyB,CAAE3Z,WAAYuL,EAASG,KAAKA,KAAKC,SAC1D9R,GAAQoD,UACR6P,IAAAA,UAEA5H,GAAa,IACb4H,IAAAA,KAAU,CACR1Q,MAAO,UACP2Q,KAAM,mBACN7Q,KAAM,UACN8Q,YAAa,CACXC,UAAW,yBAInB,CAAE,MAAOpB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,KAAO,CAELiB,IAAAA,KAAU,CACR1Q,MAAO,eACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,IAEE,MAAMvB,QAAiBC,EAAAA,EAAWC,IAAI,gDAADzQ,OACauI,IAIhDgI,EAASG,KAAKA,MACdH,EAASG,KAAKA,KAAKC,QACnBJ,EAASG,KAAKA,KAAKC,OAAOzQ,OAAS,GAEnCye,GAAyB,CAAE3Z,WAAYuL,EAASG,KAAKA,KAAKC,SAC1D9R,GAAQoD,UACR6P,IAAAA,UAEA5H,GAAa,IACb4H,IAAAA,KAAU,CACR1Q,MAAO,UACP2Q,KAAM,mBACN7Q,KAAM,UACN8Q,YAAa,CACXC,UAAW,yBAInB,CAAE,MAAOpB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,GAigBgB+N,EAAmB,EACnBte,SAAA,EAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,sBAAsB,uBAKvCkT,KACC3T,EAAAA,GAAAA,KAACmC,GAAyB,CACxBC,QAASA,GACTC,UAAWyR,GAEXxR,eAAgB4S,GAEhB3S,QAASkQ,GAAahT,OACtBgC,GAAI,CAAE2C,EAAG,IAAKga,GAAI,MAItBze,EAAAA,GAAAA,MAAC0e,EAAAA,EAAc,CAAC5c,GAAI,CAAE6c,SAAU,YAAYze,SAAA,EAC1CG,EAAAA,GAAAA,KAACue,EAAAA,GAAmB,CAClB3K,MAAO1K,GAAM0K,MAEb4K,aAA2B,QAAd3W,EAAAqB,GAAMpN,gBAAQ,IAAA+L,OAAA,EAAdA,EAAgBpI,SAAU,EACrCgf,UAAmB,OAATjV,SAAS,IAATA,QAAS,EAATA,GAAW/J,SAAU,EACjCif,gBAAkBrd,GAChB6H,GAAMwV,gBACJrd,EACAmI,GAAUlG,KAAKzH,GAAQA,EAAIyL,MAG/BtF,QACEhC,EAAAA,GAAAA,KAACU,EAAAA,EAAO,CAACC,MAAM,SAAQd,UACrBG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CAACC,MAAM,UAAUE,QAASpC,GAAQygB,OAAO9e,UAClDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,sCAMtBT,EAAAA,GAAAA,KAAC4e,EAAAA,EAAS,CAACnd,GAAI,CAAEod,UAAW,OAAQvV,UAAWA,IAAYzJ,UACzDF,EAAAA,GAAAA,MAACmf,EAAAA,EAAK,CAACrb,KAAMyF,GAAM0K,MAAQ,QAAU,SAAUnS,GAAI,CAAEsd,SAAU,KAAMlf,SAAA,EACnEG,EAAAA,GAAAA,KAACgf,EAAAA,EAAe,CACd7L,MAAOjK,GAAMiK,MACbG,QAASpK,GAAMoK,QACf2L,UAAW5X,GACXoX,SAAUjV,GAAU/J,OACpB+e,YAAatV,GAAMpN,SAAS2D,OAC5Byf,OAAQhW,GAAMgW,OACdnE,UAAU,kBAGZpb,EAAAA,GAAAA,MAACwf,EAAAA,EAAS,CAACpE,UAAU,aAAYlb,SAAA,CAC1B+I,IACC5I,EAAAA,GAAAA,KAACF,EAAAA,EAAQ,CAAAD,UACTG,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAACmf,QA7mEX,KA6mEqCrE,UAAU,aAAYlb,UAC3DF,EAAAA,GAAAA,MAACwH,EAAAA,EAAM,CAAC9G,KAAMuI,GAAW,kBAAgB,uBAAwByW,WAAY,CACrEve,MAAO,CACHC,gBAAiB,gBAGzBue,cAAe,CACbvE,UAAW,qBACXlb,SAAA,EAENG,EAAAA,GAAAA,KAACuf,EAAAA,EAAW,CAACjY,GAAG,uBAAwBxG,MAAO,CAAE0e,UAAW,aAC1Dxf,EAAAA,GAAAA,KAACyf,EAAAA,EAAa,CAAA5f,UAEZG,EAAAA,GAAAA,KAAA,OAAKc,MAAO,CAAE0e,UAAW,SAAUE,WAAY,QAAS7f,UACxDG,EAAAA,GAAAA,KAAC2f,EAAAA,GAAY,CACXC,OAAO,IACPC,SAAS,EACTC,UAAU,wBACV1f,MAAM,sBAWZJ,EAAAA,GAAAA,KAAAJ,GAAAA,SAAA,CAAAC,SACwB,IAArB2J,GAAU/J,QACTO,EAAAA,GAAAA,KAACF,EAAAA,EAAQ,CAAAD,UACPG,EAAAA,GAAAA,KAACC,EAAAA,EAAS,CAACmf,QA7oEjB,KA6oE2CrE,UAAU,aAAYlb,SAAE,uBAK/DG,EAAAA,GAAAA,KAAAJ,GAAAA,SAAA,CAAAC,SAEG4S,GAAanP,KAAKzH,IAEjBmE,EAAAA,GAAAA,KAACrE,GAAe,CAEdE,IAAKA,EACLkkB,SAAU1V,GACVvO,SAAUoN,GAAMpN,SAAS4Y,SAAS7Y,EAAImkB,WACtCjkB,YAAaA,IAAMmN,GAAMnN,YAAYF,EAAImkB,WACzChkB,YAAaA,IAAMiY,GAAgBpY,EAAImkB,UAAUnkB,GACjDI,UAAWA,IAAM8Y,GAAclZ,EAAI4U,MAAM5U,GACzCO,aAAcA,IApdlBP,KAEE,MAA1BA,EAAIU,kBAO2B,MAA1BV,EAAIU,mBAQb8Q,GAASxR,EAAI4U,OACb/B,IAAkB,IARhB2C,IAAAA,KAAU,CACR5Q,KAAM,UACNE,MAAO,UACP2Q,KAAK,uBAAD/R,OAAyB1D,EAAIQ,cAAa,uBAVhDgV,IAAAA,KAAU,CACR5Q,KAAM,UACNE,MAAO,UACP2Q,KAAK,uBAAD/R,OAAyB1D,EAAIQ,cAAa,yBAY3B,EAkc6B4jB,CAAqBpkB,GACzCM,UAAWA,IAvmBrB+jB,EAAC5Y,EAAGzL,KAEE,MAA1BA,EAAIU,kBAO2B,MAA1BV,EAAIU,mBAQX8Q,GAASxR,EAAI4U,OACblD,IAAe,IARf8D,IAAAA,KAAU,CACR5Q,KAAM,UACNE,MAAO,UACP2Q,KAAK,uBAAD/R,OAAyB1D,EAAIQ,cAAa,0BAVhDgV,IAAAA,KAAU,CACR5Q,KAAM,UACNE,MAAO,UACP2Q,KAAK,uBAAD/R,OAAyB1D,EAAIQ,cAAa,sBAalD,EAolBmD6jB,CAAkBrkB,EAAImkB,UAAUnkB,IAR5CA,EAAIyL,WAmBrBtH,EAAAA,GAAAA,KAACmgB,EAAAA,GAAc,CACbC,WAAWA,EAAAA,EAAAA,IACTlX,GAAMuK,KACNvK,GAAMwK,YACNlK,GAAU/J,sBASxBO,EAAAA,GAAAA,KAACqgB,EAAAA,GAAqB,CACpBC,MAAO5W,GAAW,EAAIA,GAAW+I,GAAahT,OAC9CgU,KAAM1J,GAAc,EACpB2J,YAAaxK,GAAMwK,YACnB6M,aAAcA,CAAClI,EAAOmI,KACpBxW,GAAewW,EAAU,GAEzBtX,GAAMuX,aAAapI,EAAOmI,EAAQ,EAEpCzW,YAAaA,GAEb2W,oBAAsBhN,IACpBxK,GAAMyX,oBAAoBjN,EAAY,aASlD1T,EAAAA,GAAAA,KAAC4B,EAAAA,EAAa,CACZvB,KAAMnC,GAAQ2D,MACdL,QAAStD,GAAQ4D,QACjBnB,MAAM,SACNoB,SACEpC,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAAC,SAAA,CAAE,gCAC4BF,EAAAA,GAAAA,MAAA,UAAAE,SAAA,CAAQ,IAAEqJ,GAAMpN,SAAS2D,OAAO,OAAU,aAG1EuC,QACEhC,EAAAA,GAAAA,KAACiC,EAAAA,EAAM,CACLC,QAAQ,YACR9B,MAAM,QACNE,QAASA,KACPkU,KACAtW,GAAQ4D,SAAS,EACjBjC,SACH,cAMLF,EAAAA,GAAAA,MAACsH,GAAe,CACdzF,QAASuV,GACT,kBAAgB,0BAChB1W,KAAM8J,GACN0Q,SAAS,KACT+F,WAAS,EAAA/gB,SAAA,EAETF,EAAAA,GAAAA,MAAC4f,EAAAA,EAAW,CACV9d,GAAI,CAAEof,EAAG,EAAGzc,EAAG,EAAGmZ,QAAS,OAAQra,WAAY,UAC/CoE,GAAG,0BACHyT,UAAU,gBAAelb,SAAA,EAEzBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,mBACdT,EAAAA,GAAAA,KAAA,QAAMc,MAAO,CAAEggB,WAAY,OAAQjhB,SAAC,qBAEtCG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT,aAAW,QACXG,QAASyW,GACTtV,GAAI,CACF6c,SAAU,WACVyC,MAAO,EACPC,IAAK,EACL5gB,MAAQgH,GAAUA,EAAM6Z,QAAQC,KAAK,MACrCrhB,UAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,8BAEhBd,EAAAA,GAAAA,MAAC8f,EAAAA,EAAa,CAAC0B,UAAQ,EAAAthB,SAAA,EACrBG,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,WAAUlb,UACvBF,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAE7C,SAAA,EACzBG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAACC,QAAQ,WAAW5B,QA9gCf+gB,KAC1B/Q,KA9tCyCvE,IAAwB,EA+tCrC,EA4gC0ClM,SAAA,EACtDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAAuB,oBAGzCT,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CACLC,QAAQ,WAER5B,QAj+CKghB,KACbxQ,GAAKyF,MAAM1a,GAA+B,KAAvBA,EAAIgO,iBACzBwN,KA7DqBxH,WACzBwB,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGbH,IAAAA,cACF,IACE,MAAMvB,QAAiBC,EAAAA,EAAWc,KAChC,+CAAiD9G,GACjD,CACEwN,OAAQzP,EACR0P,MAAOvP,IAIX,GACE6H,EAASG,KAAKA,MACdH,EAASG,KAAKA,KAAKC,QACnBJ,EAASG,KAAKA,KAAKC,OAAOzQ,OAAS,EACnC,CACAgK,GAAaqG,EAASG,KAAKA,KAAKC,QAChCvG,GAAYmG,EAASG,KAAKE,aAC1B7E,GAAewE,EAASG,KAAKwH,WAE7BpG,IAAAA,QACA0F,KACA,MAAMW,EAAmB5G,GAAKxN,KAAKzH,IAAG,IAEjCA,EACHgO,eAAgB,GAChBwF,QAAS,GACTC,QAAS,OAEX2G,GAAQyB,GAER,MAAMC,EAAsB7G,GAAKxN,KAAKyN,IAAO,IAExCA,EACHoF,oBAAqB,OAEvBD,GAAWyB,EACb,MACEtG,IAAAA,KAAU,CACR1Q,MAAO,UACP2Q,KAAM,mBACN7Q,KAAM,UACN8Q,YAAa,CACXC,UAAW,wBAInB,CAAE,MAAOpB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAQMmR,EACJ,EA29CgC1hB,SAAA,EAEpBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,qBAAqB,iBAGvCT,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CACLC,QAAQ,WACT5B,QAh+CMkhB,KACjBhX,IAAY,GACZ8F,IAAgC,EA+9CpBmR,SAAUnL,GAAiBzW,SAAA,EAE3BG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAAuB,kBAM7CT,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,gBAAelb,UAC5BF,EAAAA,GAAAA,MAAA,YAAUob,UAAU,qBAAoBlb,SAAA,EACtCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,eACRF,EAAAA,GAAAA,MAAA,SAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,SAAAH,UACEF,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAE0e,UAAW,UAAW3f,SAAC,SACpCG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,gBACJG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,cACJG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,YACJG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,WACJG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,aACJG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAE0e,UAAW,UAAW3f,SAAC,cAGxCG,EAAAA,GAAAA,KAAA,SAAAH,SACGiR,GAAKxN,KAAI,CAACzH,EAAKkX,KACdpT,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,MAAO7B,UACzBG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLpB,UAAU,mBACVja,MAAO,CAAEY,MAAO,QAAS7B,SAExB2W,GAAYlT,KAAI,CAACoe,EAAQ3O,KACxB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAMrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLpB,UAAS,oBAAAxb,OACPwT,IAAUjC,GAAKrR,OAAS,GACxBoL,GACI,eACA,WAEN/J,MAAO,CAAEY,MAAO,QAEhB6a,SAAWlE,GAnxDPsJ,EAAC5O,EAAOlJ,KAClC,MAAM+X,EAAc,IAAI9Q,IACxB8Q,EAAY7O,GAAOlJ,eAAiBA,EACpCiB,IAA4B,GAC5BmL,GAAQ2L,EAAY,EAgxDID,CAAoB5O,EAAOsF,EAAMC,OAAOzW,OACzChC,SAEAoX,GAAW3T,KAAI,CAACoe,EAAQ3O,KACvB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAOrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAU,mBACVwB,SAAWlE,GA5xDFwJ,EAAC9O,EAAO3D,KACvC,MAAMwS,EAAc,IAAI9Q,IACxB8Q,EAAY7O,GAAO3D,SAAWA,EAC9B6G,GAAQ2L,EAAY,EA0xDIC,CAAyB9O,EAAOsF,EAAMC,OAAOzW,OAC9ChC,SAEA6W,GAAKpT,KAAI,CAACoe,EAAQ3O,KACjB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAMrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,MAAO7B,UACzBG,EAAAA,GAAAA,KAAA,SACEc,MAAO,CAAEY,MAAO,QAChBogB,MAAM,mBACNpc,KAAK,WACL7D,MAAM,GACNyF,GAAG,mBACHiV,SAAWwF,GAzyDRC,EAACjP,EAAO1R,KACjC,MAAMwV,EAAU,IAAI/F,IACpB+F,EAAQ9D,GAAOvD,OAASnO,EAAU,IAAM,IACxC4U,GAAQY,EAAQ,EAuyDQmL,CAAmBjP,EAAOgP,EAAEzJ,OAAOjX,cAIzCrB,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAAA,SACE0F,KAAK,OACL5E,MAAO,CAAEY,MAAO,QAChBqZ,UAAS,oBAAAxb,OACPwT,IAAUjC,GAAKrR,OAAS,GAAKwL,GACzB,eACA,WAENgX,QAAQ,qBACR1F,SAAWlE,GAlzDD6J,EAACnP,EAAOnP,KACxC,MAAMue,EAAiB,IAAIrR,IAC3BqR,EAAepP,GAAOzD,QAAU1L,EAChCsH,IAAqB,GACrB+K,GAAQkM,IAEHve,GAAaue,EAAepP,GAAOlJ,cAKtC,EAwyDsBqY,CAA0BnP,EAAOsF,EAAMC,OAAOzW,YAIpD7B,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAS,oBAAAxb,OACPwT,IAAUjC,GAAKrR,OAAS,GAAK0L,GACzB,eACA,WAGNoR,SAAWlN,GAjzDD+S,EAACrP,EAAO1D,KACxC,MAAMuS,EAAc,IAAI9Q,IACxB8Q,EAAY7O,GAAO1D,QAAUA,EAAQiJ,OAAOzW,MAC5CuJ,IAAqB,GACrB6K,GAAQ2L,EAAY,EA8yDIQ,CAA0BrP,EAAO1D,GAClCxP,SAEA8W,GAAMrT,KAAI,CAACoe,EAAQ3O,KAClB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAMrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,MAAO7B,UACzBG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAU,mBAEVlb,SAEC4W,GAAanT,KAAI,CAACoe,EAAQ3O,KACzB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAMrB/S,EAAAA,GAAAA,KAAA,MAAAH,UACEG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT4a,UAAU,SACV,aAAW,SACXtX,KAAK,QACLnD,QAASA,IAAMsW,GAAqB7D,GAAOlT,UAE3CG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAtHXsS,WA8Hf/S,EAAAA,GAAAA,KAAA,OAAKc,MAAO,CAAEyc,QAAS,OAAQ8E,eAAgB,YAAaxiB,UAC1DF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAAC3B,QAn1DDgiB,KACnB,MAAMC,EACJzR,GAAKrR,OAAS,KACZqR,GAAKA,GAAKrR,OAAS,GAAGoK,gBACmB,KAAzCiH,GAAKA,GAAKrR,OAAS,GAAGoK,gBAEtB0Y,GACFzX,IAA6ByX,EAAe1Y,gBAC5CqB,IAAsBqX,EAAejT,SACrClE,IAAsBmX,EAAelT,WAGrC4G,IAASuM,GAAa,IACjBA,EACH,CACE3Y,eAAgB,GAChBuF,SAAU,OACVC,QAAS,GACTG,OAAQ,IACRF,QAAS,GACTG,OAAQ3H,EACR4H,YAAa,QAGjB5E,IAA4B,GAC5BI,IAAqB,GACrBE,IAAqB,GACvB,EAwzD2C2P,UAAU,eAAclb,SAAA,EACrDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CACNC,KAAK,uBACLK,MAAO,CACL0c,cAAe,MACftc,SAAU,OACV8a,YAAa,SAEf,4BAMVhc,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,cAAalb,UAC1BF,EAAAA,GAAAA,MAAA,YAAUob,UAAU,qBAAoBlb,SAAA,EACtCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,aACRF,EAAAA,GAAAA,MAAA,SAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,SAAAH,UACEF,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,gBACJG,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAAA,MAAAH,SAAI,qBAGRG,EAAAA,GAAAA,KAAA,SAAAH,SACGkR,GAAQzN,KAAI,CAACzH,EAAKkX,KACjBpT,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAS,yBAAAxb,OACPwT,IAAUhC,GAAQtR,OAAS,GAC3BsL,GACI,eACA,WAGNwR,SAAWlE,GA1pDPoK,EAAC1P,EAAOoD,KAClC,MAAMyL,EAAc,IAAI7Q,IACxB6Q,EAAY7O,GAAOoD,oBAAsBA,EACzCnL,IAAiC,GACjCkL,GAAW0L,EAAY,EAupDCa,CAAoB1P,EAAOsF,EAAMC,OAAOzW,OACzChC,SAEAoX,GAAW3T,KAAI,CAACoe,EAAQ3O,KACvB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAOrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,UACpB1B,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,UACpB1B,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAAA,SACE8hB,MAAM,mBACNpc,KAAK,WACLrE,QAAsC,QAA7B0P,GAAQgC,GAAOqD,UACxBmG,SAAWwF,GAvqDHW,EAAC3P,EAAO1R,KACtC,MAAMwV,EAAU,IAAI9F,IACpB8F,EAAQ9D,GAAOqD,UAAY/U,EAAU,MAAQ,OAC7C6U,GAAWW,EAAQ,EAqqDK6L,CAAwB3P,EAAOgP,EAAEzJ,OAAOjX,SAE1CiG,GAAG,mBACHxG,MAAO,CACLY,MAAO,OACP+b,OAAQ,OACR7B,UAAW,aAIjB5b,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAAA,MAAAH,UACEG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT4a,UAAU,SACV,aAAW,SACXtX,KAAK,QACLnD,QAASA,IAAMsX,GAAqB7E,GAAOlT,UAE3CG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAjDXsS,WAwDf/S,EAAAA,GAAAA,KAAA,OAAKc,MAAO,CAAEyc,QAAS,OAAQ8E,eAAgB,YAAaxiB,UAC1DF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAAC3B,QA7rDIqiB,KACxB,GAAwD,KAApD5R,GAAQA,GAAQtR,OAAS,GAAG0W,oBAC9BnL,GACsD,KAApD+F,GAAQA,GAAQtR,OAAS,GAAG0W,yBAEzB,CACL,MAAMyM,EAAS,CACbzM,oBAAqB,GACrBC,UAAW,OAEbF,GAAW,IAAInF,GAAS6R,GAC1B,GAkrDgD7H,UAAU,eAAclb,SAAA,EAC1DG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CACNC,KAAK,uBACLK,MAAO,CACL0c,cAAe,MACftc,SAAU,OACV8a,YAAa,SAEf,kCASbrc,EAAAA,GAAAA,MAACsH,GAAe,CACfzF,QAASqW,GACT,kBAAgB,0BAChBxX,KAAMkK,GACNsQ,SAAS,KACT+F,WAAS,EAAA/gB,SAAA,EAETF,EAAAA,GAAAA,MAAC4f,EAAAA,EAAW,CACV9d,GAAI,CAAEof,EAAG,EAAGzc,EAAG,EAAGmZ,QAAS,OAAQra,WAAY,UAC/CoE,GAAG,0BACHyT,UAAU,gBAAelb,SAAA,EAEzBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,4CACdT,EAAAA,GAAAA,KAAA,QAAMc,MAAO,CAAEggB,WAAY,OAAQjhB,SAAC,mBAEtCG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT,aAAW,QACXG,QAASuX,GACTpW,GAAI,CACF6c,SAAU,WACVyC,MAAO,EACPC,IAAK,EACL5gB,MAAQgH,GAAUA,EAAM6Z,QAAQC,KAAK,MACrCrhB,UAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,8BAEhBT,EAAAA,GAAAA,KAACyf,EAAAA,EAAa,CAAC0B,UAAQ,EAAAthB,UACrBF,EAAAA,GAAAA,MAAA,OAAKob,UAAU,cAAalb,SAAA,EAC1BF,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,iBACRF,EAAAA,GAAAA,MAAA,OAAKob,UAAU,cAAalb,SAAA,EAC1BG,EAAAA,GAAAA,KAAA,SACE0F,KAAK,OACL4B,GAAG,cACHsL,KAAK,YACL/Q,MAAOoW,GAAWF,UAClBwE,SAAUnE,GACV2C,UAAU,UACV8H,KAAK,UACL/hB,MAAO,CAAEY,MAAO,WAGlB1B,EAAAA,GAAAA,KAAA,YAAUsH,GAAG,UAASzH,SACnB0L,GAAiBjI,KAAI,CAACoe,EAAQ3O,KAC7B/S,EAAAA,GAAAA,KAAA,UAA0B6B,MAAO6f,EAAO/Q,gBAA3BoC,EAAMtC,kBAM3B9Q,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,kBACRG,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,aAAYlb,UACzBG,EAAAA,GAAAA,KAAA,YACEsH,GAAG,WACHsL,KAAK,cACL9B,KAAK,IACLjP,MAAOoW,GAAWD,YAClBuE,SAAUnE,GACV0K,KAAK,KACLhiB,MAAO,CAAEY,MAAO,gBAKtB/B,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,mBACRF,EAAAA,GAAAA,MAAA,OAAKmiB,MAAM,aAAYjiB,SAAA,EACrBG,EAAAA,GAAAA,KAAA,SACE8hB,MAAM,mBACNpc,KAAK,QACLkN,KAAK,eACLtL,GAAG,iBACHzF,MAAM,IACNR,SAAO,EACPkb,SAAUnE,MAEZpY,EAAAA,GAAAA,KAAA,SAAO8hB,MAAM,mBAAmBiB,IAAI,iBAAgBljB,SAAC,mCAGrDG,EAAAA,GAAAA,KAAA,SACE8hB,MAAM,mBACNpc,KAAK,QACLkN,KAAK,eACLtL,GAAG,iBACHzF,MAAM,IACN0a,SAAUnE,MAEZpY,EAAAA,GAAAA,KAAA,SAAO8hB,MAAM,mBAAmBiB,IAAI,iBAAgBljB,SAAC,yBAO7DG,EAAAA,GAAAA,KAACgjB,EAAAA,EAAa,CAAAnjB,UACZG,EAAAA,GAAAA,KAACiC,EAAAA,EAAM,CAAC7B,MAAM,UAAUE,QA1tDN2iB,KAEtB,GAAoC,KAAhChL,GAAWF,UAAUmC,OAAe,CACtC,MAAMvW,EAAasU,GAAWF,UACPxM,GAAiBiF,MACrCkR,GAAWA,EAAO/Q,iBAAmBhN,IAItC0N,IAAAA,KAAU,CACR1Q,MAAO,gBACP2Q,KAAM,sCAA6C3N,EACnDlD,KAAM,UACN8Q,YAAa,CACXC,UAAW,uBAEb2C,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACnB4O,iBAAkB,OACjB9c,MAAM8J,IACkB,IAADiT,EAAAC,EAAAC,EAAAC,EAApBpT,EAAOqE,cAE0B,MAA7B,OAAJzD,SAAI,IAAJA,IAAoB,QAAhBqS,EAAJrS,GAAMjH,sBAAc,IAAAsZ,OAAhB,EAAJA,EAAsBjJ,SACI,MAAtB,OAAJpJ,SAAI,IAAJA,IAAa,QAATsS,EAAJtS,GAAMzB,eAAO,IAAA+T,OAAT,EAAJA,EAAelJ,SACW,MAAtB,OAAJpJ,SAAI,IAAJA,IAAa,QAATuS,EAAJvS,GAAMxB,eAAO,IAAA+T,OAAT,EAAJA,EAAenJ,SAC0B,MAAlC,OAAPnJ,SAAO,IAAPA,IAA4B,QAArBuS,EAAPvS,GAASoF,2BAAmB,IAAAmN,OAArB,EAAPA,EAA8BpJ,SAE9B1B,KAEJ,IAGFA,IAEJ,MACEnI,QAAQuI,IAAI,UACd,EAorDqD/Y,SAAC,eAMtDF,EAAAA,GAAAA,MAACsH,GAAe,CACdzF,QAAS0X,GACT,kBAAgB,0BAChB7Y,KAAMyL,GACN+O,SAAS,KACT+F,WAAS,EAAA/gB,SAAA,EAETF,EAAAA,GAAAA,MAAC4f,EAAAA,EAAW,CACV9d,GAAI,CAAEof,EAAG,EAAGzc,EAAG,EAAGmZ,QAAS,OAAQra,WAAY,UAC/CoE,GAAG,0BACHyT,UAAU,gBAAelb,SAAA,EAEzBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,mBACdT,EAAAA,GAAAA,KAAA,QAAMc,MAAO,CAAEggB,WAAY,OAAQjhB,SAAC,oBAEtCG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT,aAAW,QACXG,QAAS4Y,GACTzX,GAAI,CACF6c,SAAU,WACVyC,MAAO,EACPC,IAAK,EACL5gB,MAAQgH,GAAUA,EAAM6Z,QAAQC,KAAK,MACrCrhB,UAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,8BAEhBd,EAAAA,GAAAA,MAAC8f,EAAAA,EAAa,CAAC0B,UAAQ,EAAAthB,SAAA,EACrBG,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,WAAUlb,UACvBF,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAE7C,SAAA,EACzBG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAACC,QAAQ,WAAW5B,QA7oDTuP,UAC5B,MAAOc,EAAgBF,GAAS7E,GAAoBoO,MAAM,KAE1D,GAAIpO,IAAiC,KAAV6E,EACzB,IACEY,IAAAA,KAAU,CACR1Q,MAAO,gBACP2Q,KAAM,sBAAwBX,EAAiB,UAC/ClQ,KAAM,UACN8Q,YAAa,CACXC,UAAW,uBAEb2C,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBlO,MAAKyJ,UACN,GAAIK,EAAOqE,YAAa,CAQM,kBAPLxE,EAAAA,EAAWC,IAChC,yCACES,EACA,WACA3I,IAGSmI,KAAKiB,SAChBZ,KAEAzE,GAAuB,IACvBkN,GAAW,IACXE,GAAc,IAEd5H,IAAAA,KAAU,WAAY,+BAAgC,WAE1D,IAEJ,CAAE,MAAOjB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,MAEAC,QAAQuI,IAAI,QACd,EAomDoE/Y,SAAA,EACxDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,6BAA6B,gBAG/CT,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAACC,QAAQ,WAAW5B,QAvmDVuP,UAC3B,MAAOc,EAAgBF,GAAS7E,GAAoBoO,MAAM,KAI1D,GAHsChB,GAAWzC,MAC9C1a,IAASA,EAAIsa,uBAE8B,IAAT1F,OAC9B,CACLY,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,MAAMoH,EAAe,CACnBC,YAAaI,GACbrJ,OAAQ3H,EACRqQ,MAAOlQ,EACP+X,UAAWvP,EACXkI,eAAgBK,IAElB,IACE,MAAMlJ,QAAiBC,EAAAA,EAAWc,KAChC,2CACA4H,GAEApI,QAAQuI,IAAI,yBAAyB9I,GACX,WAAxBA,EAASG,KAAKiB,SAChBG,IAAAA,QACAA,IAAAA,KAAU,CACR1Q,MAAO,WACP2Q,KAAM,kCACN7Q,KAAM,UACN6T,kBAAmB,KACnB/C,YAAa,CACXC,UAAW,yBAEZpL,MAAM8J,IACHA,EAAOqE,cACT4E,KACAJ,GAAW,IACXlN,GAAuB,IACvBoN,GAAc,IACd/C,GAAW,IACXD,GAAQ,IAERiD,KACF,IAGN,CAAE,MAAO9I,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,GAijDmEvQ,SAAA,EACvDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAAuB,cAGzCT,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAACC,QAAQ,WAAW5B,QApjDZijB,KACzBtX,IAAc,EAAK,EAmjD8CpM,SAAA,EACrDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,eAAe,qBAMrCd,EAAAA,GAAAA,MAAA,OAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,sBAAqBlb,UAClCG,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,kBAAiBlb,UAC9BF,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,gBACRF,EAAAA,GAAAA,MAAA,SAAOob,UAAU,eAAclb,SAAA,EAC7BG,EAAAA,GAAAA,KAAA,SAAAH,UACEF,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,QAAS7B,SAAC,iBAE9BG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,SAAC,mBAGjCF,EAAAA,GAAAA,MAAA,SAAAE,SAAA,EAEEG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACL7U,GAAG,SACHxG,MAAO,CAAEY,MAAO,OAChBG,MAAO+J,GAEP2Q,SAAWlE,GA5hDPxI,WAGxB,IAAIc,EAAgBF,EAIpB,GANA5E,GAAuBhC,GAMJ,IAFCA,EAAemQ,MAAM,KAAKva,OAAS,GAGnDkR,EAAgBF,GAAS5G,EAAemQ,MAAM,SAC7C,CACH,MAAMwJ,EAAQ3Z,EAAemQ,MAAM,KACnCrJ,EAAiB6S,EAAM,GAAGtJ,OAC1BzJ,EAAQ+S,EAAMA,EAAM/jB,OAAS,GAAGya,MAClC,CAMA,GAJA5O,GAAeqF,GAEfoI,GAAW,IACXE,GAAc,IACS,KAAnBpP,EAAuB,CACzBwH,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,IACE,MAAMvB,QAAiBC,EAAAA,EAAWC,IAChC,iDACElI,EACA,UACA2I,GAGJ,GAAIX,EAASG,KAAKA,MAAQH,EAASG,KAAKA,KAAK+M,YAAclN,EAASG,KAAKA,KAAK+M,WAAWvd,OAAS,EAAG,CACnG,MAAMoX,EAAU/G,EAASG,KAAKA,KAAK+M,WAAW1Z,KAAKC,IAAI,CACrDsG,eAAgBtG,EAAK0Z,qBACrB7N,SAAU7L,EAAK2Z,uBACf1N,OAAQjM,EAAKwZ,qBACbzN,QAAS/L,EAAK4Z,oBACd9N,QAAS9L,EAAK6Z,sBACd3N,OAAQ3H,EACR4H,YAAa,QAEG2N,YAAW,KAC3BhM,IAAAA,QACA0H,IAAY0K,GAAgB,IAAIA,KAAgB5M,IAAS,GACxD,IAEL,MACExF,IAAAA,KAAU,CACR5Q,KAAM,QAEN8Q,YAAa,CACXC,UAAW,uBAEb7Q,MAAO,UACP2Q,KAAM,uCAGV,GAAIxB,EAASG,KAAKA,MAAQH,EAASG,KAAKA,KAAKyT,WAAWjkB,OAAS,EAAG,CAClE,MAAMoX,EAAU/G,EAASG,KAAKA,KAAKyT,WAAWpgB,KAAKC,IAAI,CACrD4S,oBAAqB5S,EAAK0Z,qBAC1B7G,UAAW7S,EAAKogB,uBAChBtN,UAAW,IACX5G,OAAQ3H,MAKQuV,YAAW,KAC3BhM,IAAAA,QACA4H,IAAeD,GAAe,IAAIA,KAAenC,IAAS,GACzD,IAEL,CACF,CAAE,MAAOzG,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,GA48CsBwT,CAAkBvL,EAAMC,OAAOzW,OAEjCJ,GAAI,CAAE6b,cAAe,cAAezd,SAGnC0L,GAAiBjI,KAAKC,IACrBvD,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAEPE,MAAK,GAAAtC,OAAKgE,EAAKoN,eAAc,KAAApR,OAAIgE,EAAKkN,OAAQ5Q,SAE7C0D,EAAKoN,gBAHDpN,EAAKkN,YAOhBzQ,EAAAA,GAAAA,KAAA,MAAAH,UACEG,EAAAA,GAAAA,KAAA,SACE8hB,MAAM,mBACNpc,KAAK,WACL7D,MAAM,GACNyF,GAAG,mBACHjG,QAAS6K,GACTqQ,SAz9CEsH,KAC1B1X,IAAcD,GAAU,EAy9CApL,MAAO,CACLY,MAAO,OACP+b,OAAQ,OACR7B,UAAW,0BAS3B5b,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,iBAAgBlb,UAC7BG,EAAAA,GAAAA,KAAA,OAAAH,UACEF,EAAAA,GAAAA,MAAA,YAAUob,UAAU,qBAAoBlb,SAAA,EACtCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,eACRF,EAAAA,GAAAA,MAAA,SAAOmB,MAAO,CAAEgjB,eAAgB,YAAajkB,SAAA,EAC3CG,EAAAA,GAAAA,KAAA,SAAAH,UACEF,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAE0e,UAAW,SAAU9d,MAAO,MAAO7B,SAAC,OACjDG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,SAAC,gBAC7BG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,SAAC,cAC7BG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,MAAO7B,SAAC,YAC5BG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,SAAC,WAC7BG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,SAAC,aAC7BG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAE0e,UAAW,SAAU9d,MAAO,MAAO7B,SAAC,YAIrDG,EAAAA,GAAAA,KAAA,SAAAH,SAEGiZ,GAAQxV,KAAI,CAACzH,EAAKkX,KACjB/S,EAAAA,GAAAA,KAAC+jB,EAAAA,SAAc,CAAAlkB,UACbF,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,MAAO7B,UACzBG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAU,mBAAkBlb,SAE3B2W,GAAYlT,KAAI,CAACoe,EAAQ3O,KACxB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAMrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAS,oBAAAxb,OACPwT,IAAU+F,GAAQrZ,OAAS,GAC3B2M,GACI,eACA,WAENvK,MAAOhG,EAAIgO,gBAAkB,GAC7B0S,SAAWlE,GA/gDb2L,EAACjR,EAAOlJ,KACpC,MAAMsY,EAAiB,IAAIrJ,IAC3BqJ,EAAepP,GAAOlJ,eAAiBA,EACvCwC,IAA+B,GAC/B0M,GAAWoJ,EAAe,EA4gDM6B,CACEjR,EACAsF,EAAMC,OAAOzW,OAEhBhC,SAEAoX,GAAW3T,KAAI,CAACoe,EAAQ3O,KACvB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAMrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAU,mBACVlZ,MAAOhG,EAAIuT,UAAY,OACvBmN,SAAWlE,GA3hDP4L,EAAClR,EAAO3D,KAC1C,MAAM+S,EAAiB,IAAIrJ,IAC3BqJ,EAAepP,GAAO3D,SAAWA,EACjC2J,GAAWoJ,EAAe,EAyhDM8B,CACElR,EACAsF,EAAMC,OAAOzW,OAEhBhC,SAEA6W,GAAKpT,KAAI,CAACoe,EAAQ3O,KACjB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAMrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,MAAO7B,UACzBG,EAAAA,GAAAA,KAAA,SACE8hB,MAAM,mBACNpc,KAAK,WACL6W,SAAWwF,GAxiDbmC,EAACnR,EAAO1R,KACpC,MAAMwV,EAAU,IAAIiC,IACpBjC,EAAQ9D,GAAOvD,OAASnO,EAAU,IAAM,IACxC0X,GAAWlC,EAAQ,EAsiDaqN,CAAsBnR,EAAOgP,EAAEzJ,OAAOjX,SAExCA,QAAwB,MAAfxF,EAAI2T,OACblI,GAAG,mBACHxG,MAAO,CACLY,MAAO,OACP+b,OAAQ,OACR7B,UAAW,aAIjB5b,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAAA,SACE0F,KAAK,OACL5E,MAAO,CAAEY,MAAO,QAChBqZ,UAAS,oBAAAxb,OACPwT,IAAU+F,GAAQrZ,OAAS,GAC3B6M,GACI,eACA,WAENzK,MAAOhG,EAAIyT,SAAW,GACtB2S,QAAQ,qBACR1F,SAAWlE,GA3jDR8L,EAACpR,EAAOnP,KACzC,MAAMue,EAAiB,IAAIrJ,IAC3BqJ,EAAepP,GAAOzD,QAAU1L,EAEhCmV,GAAWoJ,EAAe,EAwjDMgC,CACEpR,EACAsF,EAAMC,OAAOzW,YAMrB7B,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAS,oBAAAxb,OACPwT,IAAU+F,GAAQrZ,OAAS,GAC3B+M,GACI,eACA,WAEN3K,MAAOhG,EAAIwT,SAAW,GAItBxP,SAEC8W,GAAMrT,KAAI,CAACoe,EAAQ3O,KAClB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAOrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,MAAO7B,UACzBG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAU,mBAGVlb,SAEC4W,GAAanT,KAAI,CAACoe,EAAQ3O,KACzB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAOrB/S,EAAAA,GAAAA,KAAA,MAAAH,UACEG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT4a,UAAU,SACV,aAAW,SACXtX,KAAK,QACLnD,QAASA,IA1mDXyS,KAC1B,GAAI+F,GAAQrZ,OAAS,EAAG,CACtB,MAAMoX,EAAU,IAAIiC,IACpBjC,EAAQC,OAAO/D,EAAO,GACtBgG,GAAWlC,EACb,GAqmD2CuN,CAAmBrR,GAAOlT,UAEzCG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBA3IXsS,IADUA,WAoJ3B/S,EAAAA,GAAAA,KAAA,OAAKc,MAAO,CAAEyc,QAAS,OAAQ8E,eAAgB,YAAaxiB,UAC1DF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAAC3B,QA9mDF+jB,KACtB,MAAM9B,EACJzJ,GAAQrZ,OAAS,KACfqZ,GAAQA,GAAQrZ,OAAS,GAAGoK,gBACmB,KAA/CiP,GAAQA,GAAQrZ,OAAS,GAAGoK,gBAE5B0Y,GACFlW,IAAgCkW,EAAe1Y,gBAC/C0C,IAAyBgW,EAAejT,SACxC7C,IAAyB8V,EAAelT,WAGxC0J,IAAYyJ,GAAa,IACpBA,EACH,CACE3Y,eAAgB,GAChBuF,SAAU,OACVC,QAAS,GACTG,OAAQ,IACRF,QAAS,GACTG,OAAQ3H,EACR4H,YAAa,QAGjBrD,IAA+B,GAC/BE,IAAwB,GACxBE,IAAwB,GAC1B,EAmlDkDsO,UAAU,eAAclb,SAAA,EACxDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CACNC,KAAK,uBACLK,MAAO,CACL0c,cAAe,MACftc,SAAU,OACV8a,YAAa,SAEf,8BAOZhc,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,wBAAuBlb,UACpCG,EAAAA,GAAAA,KAAA,OAAAH,UACEF,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,aACRF,EAAAA,GAAAA,MAAA,SAAOmB,MAAO,CAAEgjB,eAAgB,YAAajkB,SAAA,EAC3CG,EAAAA,GAAAA,KAAA,SAAAH,UACEF,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,gBACJG,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAAA,MAAAH,SAAI,qBAIRG,EAAAA,GAAAA,KAAA,SAAAH,SACGmZ,GAAW1V,KAAI,CAACzH,EAAKkX,KACpBpT,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAACmc,EAAAA,EAAM,CACLrb,MAAO,CAAEY,MAAO,QAChBqZ,UAAS,wBAAAxb,OACPwT,IAAUiG,GAAWvZ,OAAS,GAC9BiN,GACI,eACA,WAGN6P,SAAWlE,GA3nDNiM,EAACvR,EAAOoD,KACvC,MAAMgM,EAAiB,IAAInJ,IAC3BmJ,EAAepP,GAAOoD,oBAAsBA,EAC5CxJ,IAAoC,GACpCsM,GAAckJ,EAAe,EAwnDDmC,CACEvR,EACAsF,EAAMC,OAAOzW,OAGjBA,MAAOhG,EAAIsa,qBAAuB,GAAGtW,SAEpCoX,GAAW3T,KAAI,CAACoe,EAAQ3O,KACvB/S,EAAAA,GAAAA,KAAC2B,EAAAA,EAAQ,CAAaE,MAAO6f,EAAO7f,MAAMhC,SACvC6hB,EAAOre,OADK0P,UAMrB/S,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,UACpB1B,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,UACpB1B,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,MAAO7B,UACzBG,EAAAA,GAAAA,KAAA,SACE8hB,MAAM,mBACNpc,KAAK,WAELrE,QAAyC,QAAhC2X,GAAWjG,GAAOqD,UAC3BmG,SAAWwF,GA5oDJwC,EAACxR,EAAO1R,KACzC,MAAMwV,EAAU,IAAImC,IACpBnC,EAAQ9D,GAAOqD,UAAY/U,EAAU,MAAQ,OAC7C4X,GAAcpC,EAAQ,EA0oDM0N,CACExR,EACAgP,EAAEzJ,OAAOjX,SAGbiG,GAAG,mBACHxG,MAAO,CACLY,MAAO,OACP+b,OAAQ,OACR7B,UAAW,aAIjB5b,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAAA,MAAAH,UACEG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT4a,UAAU,SACV,aAAW,SACXtX,KAAK,QACLnD,QAASA,IA3pDJyS,KAC/B,GAAIiG,GAAWvZ,OAAS,EAAG,CACzB,MAAMoX,EAAU,IAAImC,IACpBnC,EAAQC,OAAO/D,EAAO,GACtBkG,GAAcpC,EAChB,GAspDyC2N,CAAwBzR,GAAOlT,UAE9CG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAxDXsS,WAgEf/S,EAAAA,GAAAA,KAAA,OAAKc,MAAO,CAAEyc,QAAS,OAAQ8E,eAAgB,YAAaxiB,UAC1DF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CACL3B,QAhqDSmkB,KAC3B,MAAMlC,EACJvJ,GAAWvZ,OAAS,KAClBuZ,GAAWA,GAAWvZ,OAAS,GAAG0W,qBACwB,KAA1D6C,GAAWA,GAAWvZ,OAAS,GAAG0W,qBAElCoM,EACF5V,IAAqC4V,EAAepM,sBAIpD8C,IAAeuJ,GAAa,IACvBA,EACH,CACErM,oBAAqB,GACrBC,UAAW,GACX3G,OAAQ3H,EACRuO,UAAW,QAGf1J,IAAoC,GAEtC,EA2oDkBoO,UAAU,eAAclb,SAAA,EAExBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CACNC,KAAK,uBACLK,MAAO,CACL0c,cAAe,MACftc,SAAU,OACV8a,YAAa,SAEf,uCAWfrc,EAAAA,GAAAA,MAACsH,GAAe,CACjBzF,QAAS4X,GACT,kBAAgB,0BAChB/Y,KAAM2L,GACN6O,SAAS,KACT+F,WAAS,EAAA/gB,SAAA,EAETF,EAAAA,GAAAA,MAAC4f,EAAAA,EAAW,CACV9d,GAAI,CAAEof,EAAG,EAAGzc,EAAG,EAAGmZ,QAAS,OAAQra,WAAY,UAC/CoE,GAAG,0BACHyT,UAAU,gBAAelb,SAAA,EAEzBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,4CACdT,EAAAA,GAAAA,KAAA,QAAMc,MAAO,CAAEggB,WAAY,OAAQjhB,SAAC,sBAEtCG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT,aAAW,QACXG,QAAS8Y,GACT3X,GAAI,CACF6c,SAAU,WACVyC,MAAO,EACPC,IAAK,EACL5gB,MAAQgH,GAAUA,EAAM6Z,QAAQC,KAAK,MACrCrhB,UAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,8BAEhBT,EAAAA,GAAAA,KAACyf,EAAAA,EAAa,CAAC0B,UAAQ,EAAAthB,UACrBF,EAAAA,GAAAA,MAAA,OAAKob,UAAU,cAAalb,SAAA,EAC1BF,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,iBACRF,EAAAA,GAAAA,MAAA,OAAKob,UAAU,cAAalb,SAAA,EAC1BG,EAAAA,GAAAA,KAAA,SACE0F,KAAK,OACL4B,GAAG,cACHsL,KAAK,YACL/Q,MAAOoW,GAAWF,UAClBwE,SAAUnE,GACV2C,UAAU,UACV8H,KAAK,UACL/hB,MAAO,CAAEY,MAAO,WAGlB1B,EAAAA,GAAAA,KAAA,YAAUsH,GAAG,UAASzH,SACnB0L,GAAiBjI,KAAI,CAACoe,EAAQ3O,KAC7B/S,EAAAA,GAAAA,KAAA,UAA0B6B,MAAO6f,EAAO/Q,gBAA3BoC,EAAMtC,kBAM3B9Q,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,kBACRG,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,aAAYlb,UACzBG,EAAAA,GAAAA,KAAA,YACEsH,GAAG,WACHsL,KAAK,cACL9B,KAAK,IACLjP,MAAOoW,GAAWD,YAClBuE,SAAUnE,GACV0K,KAAK,KACLhiB,MAAO,CAAEY,MAAO,gBAKtB/B,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,mBACRF,EAAAA,GAAAA,MAAA,OAAKmiB,MAAM,aAAYjiB,SAAA,EACrBG,EAAAA,GAAAA,KAAA,SACE8hB,MAAM,mBACNpc,KAAK,QACLkN,KAAK,eACLtL,GAAG,iBACHzF,MAAM,IACNR,SAAO,EACPkb,SAAUnE,MAEZpY,EAAAA,GAAAA,KAAA,SAAO8hB,MAAM,mBAAmBiB,IAAI,iBAAgBljB,SAAC,mCAGrDG,EAAAA,GAAAA,KAAA,SACE8hB,MAAM,mBACNpc,KAAK,QACLkN,KAAK,eACLtL,GAAG,iBACHzF,MAAM,IACN0a,SAAUnE,MAEZpY,EAAAA,GAAAA,KAAA,SAAO8hB,MAAM,mBAAmBiB,IAAI,iBAAgBljB,SAAC,yBAO7DG,EAAAA,GAAAA,KAACgjB,EAAAA,EAAa,CAAAnjB,UACZG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAACC,QAAQ,WAAW5B,QAx+DNokB,KAC3B,GAAoC,KAAhCzM,GAAWF,UAAUmC,OAAe,CACtC,MAAMvW,EAAasU,GAAWF,UACPxM,GAAiBiF,MACrCkR,GAAWA,EAAO/Q,iBAAmBhN,IAItC0N,IAAAA,KAAU,CACR1Q,MAAO,gBACP2Q,KAAM,sCAA6C3N,EACnDlD,KAAM,UACN8Q,YAAa,CACXC,UAAW,uBAEb2C,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACnB4O,iBAAkB,OACjB9c,MAAM8J,IACkB,IAADyU,EAAAC,EAAAC,EAAAC,EAApB5U,EAAOqE,cAE6B,MAA7B,OAAPuE,SAAO,IAAPA,IAAuB,QAAhB6L,EAAP7L,GAASjP,sBAAc,IAAA8a,OAAhB,EAAPA,EAAyBzK,SACI,MAAtB,OAAPpB,SAAO,IAAPA,IAAgB,QAAT8L,EAAP9L,GAASzJ,eAAO,IAAAuV,OAAT,EAAPA,EAAkB1K,SACW,MAAtB,OAAPpB,SAAO,IAAPA,IAAgB,QAAT+L,EAAP/L,GAASxJ,eAAO,IAAAuV,OAAT,EAAPA,EAAkB3K,SAC0B,MAAlC,OAAVlB,SAAU,IAAVA,IAA+B,QAArB8L,EAAV9L,GAAY7C,2BAAmB,IAAA2O,OAArB,EAAVA,EAAiC5K,SAEjCb,KAEJ,IAGFA,IAEJ,MACEhJ,QAAQuI,IAAI,UACd,EAm8D+D/Y,SAAA,EACvDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAAuB,mBAO5Cd,EAAAA,GAAAA,MAACsH,GAAe,CACfzF,QAASgM,GACT,kBAAgB,0BAChBnN,KAAMiN,GACNuN,SAAS,KACT+F,WAAS,EACT7F,UAAU,eAAclb,SAAA,EAExBF,EAAAA,GAAAA,MAAC4f,EAAAA,EAAW,CACV9d,GAAI,CAAEof,EAAG,EAAGzc,EAAG,EAAGmZ,QAAS,OAAQra,WAAY,UAC/CoE,GAAG,0BACHyT,UAAU,gBAAelb,SAAA,EAEzBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,qCACdT,EAAAA,GAAAA,KAAA,QAAMc,MAAO,CAAEggB,WAAY,OAAQjhB,SAAC,6BAEtCG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT,aAAW,QACXG,QAASkN,GACT/L,GAAI,CACF6c,SAAU,WACVyC,MAAO,EACPC,IAAK,EACL5gB,MAAQgH,GAAUA,EAAM6Z,QAAQC,KAAK,MACrCrhB,UAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,8BAEhBT,EAAAA,GAAAA,KAACyf,EAAAA,EAAa,CAAC0B,UAAQ,EAAAthB,UACvBF,EAAAA,GAAAA,MAAA,OAAKob,UAAU,cAAalb,SAAA,EAG1BF,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAGQ,WAAW,SAAQrD,SAAA,EAC3CG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAG/Z,GAAI,CAAEsjB,GAAI,GAAIllB,UAC5BG,EAAAA,GAAAA,KAACglB,EAAAA,EAAgB,CACbC,SAASjlB,EAAAA,GAAAA,KAAA,UACTqD,MAAM,eAGdrD,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAE3b,SAChB4N,GAAOnK,KAAK4N,IACPlR,EAAAA,GAAAA,KAACglB,EAAAA,EAAgB,CAEbnjB,MAAOqP,EAAOrP,MACdojB,SAASjlB,EAAAA,GAAAA,KAACklB,EAAAA,EAAK,IACf7hB,MAAO6N,EAAO7N,MACdhC,QAASsM,KAAoBuD,EAAOrP,MACpC0a,SAAWwF,IACTnU,GAAmBmU,EAAEzJ,OAAOzW,OAC5B2M,GAAgB,GAAG,GAPhB0C,EAAOrP,eAezBlC,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAGQ,WAAW,SAAQrD,SAAA,EAC5CG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAG/Z,GAAI,CAAEsjB,GAAI,GAAIllB,UAC5BG,EAAAA,GAAAA,KAACglB,EAAAA,EAAgB,CACbC,SAASjlB,EAAAA,GAAAA,KAAA,UACTqD,MAAM,kBAGdrD,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAE3b,UACbG,EAAAA,GAAAA,KAACmlB,EAAAA,EAAY,CACTC,QAASvX,GACTwX,aAActX,GACdwO,SAAUA,CAAClE,EAAOxW,KACdmM,GAAuBnM,GACvB2M,GAAgB,GAAG,EAEvB8W,YAAcC,IACVvlB,EAAAA,GAAAA,KAACwlB,EAAAA,EAAS,IACFD,EACJ9hB,KAAK,QACLia,YAAY,YACZxb,QAAQ,WACR0e,WAAS,YAO7BjhB,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAGQ,WAAW,SAAQrD,SAAA,EAC3CG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAG/Z,GAAI,CAAEsjB,GAAI,GAAIllB,UAC5BG,EAAAA,GAAAA,KAACglB,EAAAA,EAAgB,CACbC,SAASjlB,EAAAA,GAAAA,KAAA,UACTqD,MAAM,mBAGdrD,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAE3b,UACbG,EAAAA,GAAAA,KAACmlB,EAAAA,EAAY,CACTC,QAASnX,GACToX,aAAclX,GACdoO,SAAUA,CAAClE,EAAOxW,KAChBuM,GAAsBvM,GACtB2M,GAAgB,GAAG,EAErB8W,YAAcC,IACVvlB,EAAAA,GAAAA,KAACwlB,EAAAA,EAAS,IACFD,EACJ9hB,KAAK,QACLia,YAAY,YACZxb,QAAQ,WACR0e,WAAS,iBAS/B5gB,EAAAA,GAAAA,KAACgjB,EAAAA,EAAa,CAAAnjB,UAOZF,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAGQ,WAAW,SAAQrD,SAAA,CAC9C0O,KACCvO,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRG,EAAAA,GAAAA,KAAA,OAAKc,MAAO,CAAEV,MAAO,MAAO4b,YAAa,QAASnc,SAAE0O,QAGxDvO,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAACC,QAAQ,WAAW6Y,UAAU,aAAaja,MAAO,CAAEV,MAAO,QAAUE,QA3pDjEmlB,KACC,GAAnB9X,IAA2C,MAAnBA,GACzBa,GAAgB,2BAIU,GAAvBT,IAAmD,MAAvBA,GAC7BS,GAAgB,iCAIe,GAAtBL,IAAiD,MAAtBA,GAC5BK,GAAgB,iCAIK,WAAhBH,KAEFb,KACDoM,KAMV,EAkoD0G/Z,SAAA,EAClGG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAAuB,yBAQ5Cd,EAAAA,GAAAA,MAACsH,GAAe,CACfzF,QAASmN,GACT,kBAAgB,0BAChBtO,KAAMoO,GACNoM,SAAS,KACT+F,WAAS,EACT7F,UAAU,eAAclb,SAAA,EAExBF,EAAAA,GAAAA,MAAC4f,EAAAA,EAAW,CACV9d,GAAI,CAAEof,EAAG,EAAGzc,EAAG,EAAGmZ,QAAS,OAAQra,WAAY,UAC/CoE,GAAG,0BACHyT,UAAU,gBAAelb,SAAA,EAEzBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,4CACdT,EAAAA,GAAAA,KAAA,QAAMc,MAAO,CAAEggB,WAAY,OAAQjhB,SAAC,gCAEtCG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT,aAAW,QACXG,QAASqO,GACTlN,GAAI,CACF6c,SAAU,WACVyC,MAAO,EACPC,IAAK,EACL5gB,MAAQgH,GAAUA,EAAM6Z,QAAQC,KAAK,MACrCrhB,UAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,8BAEhBT,EAAAA,GAAAA,KAACyf,EAAAA,EAAa,CAAC0B,UAAQ,EAAAthB,UACvBF,EAAAA,GAAAA,MAAA,OAAKob,UAAU,cAAalb,SAAA,EAG1BF,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAGQ,WAAW,SAAQrD,SAAA,EAC3CG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAG/Z,GAAI,CAAEsjB,GAAI,GAAIllB,UAC5BG,EAAAA,GAAAA,KAACglB,EAAAA,EAAgB,CACbC,SAASjlB,EAAAA,GAAAA,KAAA,UACTqD,MAAM,kBAGdrD,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAE3b,UACjBG,EAAAA,GAAAA,KAACwlB,EAAAA,EAAS,CACNle,GAAG,iBACH7D,KAAK,QACLvB,QAAQ,WACR6Y,UAAU,YACV6F,WAAS,EACTyE,aAAcnd,EACduZ,UAAQ,UAMf9hB,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAGQ,WAAW,SAAQrD,SAAA,EAC5CG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAG/Z,GAAI,CAAEsjB,GAAI,GAAIllB,UAC5BG,EAAAA,GAAAA,KAACglB,EAAAA,EAAgB,CACbC,SAASjlB,EAAAA,GAAAA,KAAA,UACTqD,MAAM,oBAGdrD,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAE3b,UACbG,EAAAA,GAAAA,KAAC0lB,EAAAA,EAAc,CACb7jB,MAAO+M,GACP4L,OAAO,mBACPO,UAAU,YACVwB,SAAWoJ,IACT9W,GAAc8W,EAAQ,EAExBC,UAAW,CACTC,UAAW,CACTjF,WAAW,YAOzBjhB,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAGQ,WAAW,SAAQrD,SAAA,EAC3CG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAG/Z,GAAI,CAAEsjB,GAAI,GAAIllB,UAC5BG,EAAAA,GAAAA,KAACglB,EAAAA,EAAgB,CACbC,SAASjlB,EAAAA,GAAAA,KAAA,UACTqD,MAAM,6BAGdrD,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAACiY,GAAI,EAAE3b,UACfG,EAAAA,GAAAA,KAAC8lB,EAAAA,EAAgB,CACf,aAAW,iBACXpI,YAAY,GACZ5c,MAAO,CAAEY,MAAO,QAChBqkB,QAAS,IACTV,aAAcvW,GACdyN,SAAWwF,IACThT,GAAuBgT,EAAEzJ,OAAOzW,MAAM,eASlD7B,EAAAA,GAAAA,KAACgjB,EAAAA,EAAa,CAAAnjB,UAOZF,EAAAA,GAAAA,MAACyhB,EAAAA,EAAI,CAAC5P,WAAS,EAAC9O,QAAS,EAAGQ,WAAW,SAAQrD,SAAA,CAC9C0O,KACCvO,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRG,EAAAA,GAAAA,KAAA,OAAKc,MAAO,CAAEV,MAAO,MAAO4b,YAAa,QAASnc,SAAE0O,QAGxDvO,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAACC,QAAQ,WAAW5B,QAtoDX0lB,KACE,IAAvBlX,GACDN,GAAgB,2CAGVG,KACA0L,KACAhK,QAAQuI,IAAI,mCAEhB,EA6nD0D/Y,SAAA,EACpDG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,uBAAuB,4BAS5Cd,EAAAA,GAAAA,MAACsH,GAAe,CACfzF,QAASiZ,GACT,kBAAgB,0BAChBpa,KAAM2O,GACN6L,SAAS,KACT+F,WAAS,EACTqF,sBAAsB,EACtBC,sBAAsB,EAAKrmB,SAAA,EAE3BF,EAAAA,GAAAA,MAAC4f,EAAAA,EAAW,CACV9d,GAAI,CAAEof,EAAG,EAAGzc,EAAG,EAAGmZ,QAAS,OAAQra,WAAY,UAC/CoE,GAAG,0BACHyT,UAAU,gBAAelb,SAAA,EAEzBG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,4CACdT,EAAAA,GAAAA,KAAA,QAAMc,MAAO,CAAEggB,WAAY,OAAQjhB,SAAC,uBAEtCG,EAAAA,GAAAA,KAACG,EAAAA,EAAU,CACT,aAAW,QACXG,QAASA,IAAMma,KACfhZ,GAAI,CACF6c,SAAU,WACVyC,MAAO,EACPC,IAAK,EACL5gB,MAAQgH,GAAUA,EAAM6Z,QAAQC,KAAK,MACrCrhB,UAEFG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,8BAEhBT,EAAAA,GAAAA,KAACyf,EAAAA,EAAa,CAAC0B,UAAQ,EAAAthB,UACrBG,EAAAA,GAAAA,KAAA,OAAK+a,UAAU,cAAalb,UAC1BF,EAAAA,GAAAA,MAAA,YAAUob,UAAU,oBAAmBlb,SAAA,EACrCG,EAAAA,GAAAA,KAAA,UAAAH,SAAQ,8BACRF,EAAAA,GAAAA,MAAA,SAAOmB,MAAO,CAAEY,MAAO,QAAS7B,SAAA,EAC9BG,EAAAA,GAAAA,KAAA,SAAAH,UACEF,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EAEEG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,YACJG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,cACJG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,WACJG,EAAAA,GAAAA,KAAA,MAAAH,SAAI,kBAIRG,EAAAA,GAAAA,KAAA,SAAAH,SACGqP,GAAmB5L,KAAI,CAACzH,EAAKkX,KACRlX,EAAIgO,iBAAmBhO,EAAIuT,WAAavT,EAAIyT,QAkE5D,MAhEJ3P,EAAAA,GAAAA,MAAA,MAAAE,SAAA,EACEG,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC5BG,EAAAA,GAAAA,KAAA,SACI0F,KAAK,OACL5E,MAAO,CAAEY,MAAO,QAChB+f,UAAQ,EACR5f,MAAOhG,EAAIgO,gBAAkB,GAC7BkR,UAAS,oBAAAxb,OACPwT,IAAUjC,GAAKrR,OAAS,GAAKwL,GACzB,eACA,WAENgX,QAAQ,0BAKZjiB,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC5BG,EAAAA,GAAAA,KAAA,SACI0F,KAAK,OACL5E,MAAO,CAAEY,MAAO,QAChBG,MAAOhG,EAAIuT,UAAY,GACvBqS,UAAQ,EACR1G,UAAS,oBAAAxb,OACPwT,IAAUjC,GAAKrR,OAAS,GAAKwL,GACzB,eACA,WAENgX,QAAQ,0BAIZjiB,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC5BG,EAAAA,GAAAA,KAAA,SACI0F,KAAK,OACL5E,MAAO,CAAEY,MAAO,QAChBG,MAAOhG,EAAIyT,SAAW,GACtByL,UAAS,oBAAAxb,OACPwT,IAAUjC,GAAKrR,OAAS,GAAKwL,GACzB,eACA,WAGNsR,SAAWlE,GA3nDA8N,EAACpT,EAAOnP,KAC3CuL,IAAuBqT,GACrBA,EAASlf,KAAI,CAACzH,EAAKuqB,IACjBA,IAAQrT,EAAQ,IAAKlX,EAAKyT,QAAS1L,GAAa/H,KAEnD,EAsnD4CsqB,CAA6BpT,EAAOsF,EAAMC,OAAOzW,YAI1E7B,EAAAA,GAAAA,KAAA,MAAIc,MAAO,CAAEY,MAAO,OAAQ7B,UAC1BG,EAAAA,GAAAA,KAAA,SACE0F,KAAK,OACL5E,MAAO,CAAEY,MAAO,QAChB+f,UAAQ,EACR5f,MAAOhG,EAAIwT,SAAW,GACtB0L,UAAS,oBAAAxb,OACPwT,IAAUjC,GAAKrR,OAAS,GAAKwL,GACzB,eACA,WAENgX,QAAQ,2BA1DLlP,kBAyErB/S,EAAAA,GAAAA,KAACgjB,EAAAA,EAAa,CAAAnjB,UACZG,EAAAA,GAAAA,KAACohB,EAAAA,EAAI,CAAC7d,MAAI,EAAA1D,UACRF,EAAAA,GAAAA,MAACsC,EAAAA,EAAM,CAACC,QAAQ,WAAW5B,QAxnDDuP,UACpC,MAAMwW,EAAkBnX,GAAmBqH,MAAK1a,IAAQA,EAAIyT,QAAQ4K,SAC9DoM,EAAkBpX,GAAmBzP,OAAS,EAAIyP,GAAmB,GAAGK,MAAQ,KAEtF,GAAI8W,EAEFhV,IAAAA,KAAU,CACR5Q,KAAM,QACNE,MAAO,qBACP2Q,KAAM,4CACNgG,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,6BAIZ,CACHH,IAAAA,KAAU,CACR1Q,MAAO,gBACP2W,mBAAmB,EACnB/F,YAAa,CACXC,UAAW,yBAGfH,IAAAA,cACA,MAAMoH,EAAe,CACnBC,YAAaxJ,GACbyJ,eAAe,GACflJ,OAAQ3H,EACRkY,UAAYsG,EACZnO,MAAOlQ,GAET,IAM8B,kBALL8H,EAAAA,EAAWc,KAChC,2CACA4H,IAGWxI,KAAKiB,SAChBG,IAAAA,QACAA,IAAAA,KAAU,CACR1Q,MAAO,WACP2Q,KAAM,kCACN7Q,KAAM,UACN6T,kBAAmB,KACnB/C,YAAa,CACXC,UAAW,yBAEZpL,MAAM8J,IACHA,EAAOqE,aA5EK1E,WACxB,IAEE,MAAMC,QAAiBC,EAAAA,EAAWc,KAChC,mDAAqD9G,GACrD,CACE+G,KAAM5B,GACN6B,QAAS,GACTwG,OAAOzP,EACP0P,MAAMvP,EACNsH,MAAM+W,IAIV7c,GAAaqG,EAASG,KAAKA,KAAKC,QAChCvG,GAAYmG,EAASG,KAAKE,aAC1B7E,GAAewE,EAASG,KAAKwH,WAC7BpG,IAAAA,QAEAoJ,IAEF,CAAE,MAAOrK,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAuDUmW,CAAkBD,EACpB,IAGN,CAAE,MAAOlW,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,GA8jD4EvQ,SAAA,EAChEG,EAAAA,GAAAA,KAACQ,EAAAA,EAAO,CAACC,KAAK,4BAA4B,oBAOxD,C","sources":["sections/maintenance/workrequest-table-row.js","sections/maintenance/WorkReqTableFiltersResult.js","sections/maintenance/ExportFIle/ExportWorkReqlistToExcel.js","sections/maintenance/WorkRequestList.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\n\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\n// utils\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function WorkReqTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onDeleteRow,\r\n  onEditRow,\r\n  onViewRow,\r\n  onApprove,\r\n  onDisApprove,\r\n}) {\r\n \r\n  const {\r\n    wkr_mst_wr_no,\r\n    wkr_mst_wr_descs,\r\n    wkr_mst_wr_status,\r\n    wkr_mst_assetno,\r\n    wkr_mst_chg_costcenter,\r\n    wkr_mst_work_area,\r\n    wkr_mst_assetlocn,\r\n    wkr_mst_location,\r\n    wkr_mst_temp_asset,\r\n    wkr_mst_email_notification,\r\n    wkr_mst_work_type,\r\n    wkr_mst_work_class,\r\n    wkr_mst_work_group,\r\n    wkr_mst_wo_status,\r\n    wkr_mst_projectid,\r\n    wkr_mst_originator,\r\n    wkr_mst_phone,\r\n    wkr_det_wo,\r\n    wkr_det_approver,\r\n    wkr_appr_date,\r\n    wkr_det_reject_desc,\r\n    wkr_det_reject_by,\r\n    wkr_reject_date,\r\n    wkr_mst_orig_priority,\r\n    wkr_mst_org_date,\r\n    wkr_mst_due_date,\r\n    wkr_mst_fault_code,\r\n    wkr_mst_create_by,\r\n    wkr_mst_create_date,\r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) {\r\n      return \"\"; // Return empty string if dateString is undefined or null\r\n    }\r\n  \r\n    // Check if dateString starts with \"1900-01-01\"\r\n    if (dateString.startsWith(\"1900-01-01\")) {\r\n      return \"\"; // Return empty string if dateString matches the condition\r\n    }\r\n    const date = new Date(dateString);\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Months are 0-indexed, so add 1\r\n    const year = date.getFullYear();\r\n    const hours = date.getHours().toString().padStart(2, \"0\");\r\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n    return `${day}-${month}-${year} ${hours}:${minutes}`;\r\n  };\r\n\r\n  const maxCharactersToShow = 30;\r\n  const truncatedDescription =\r\n  wkr_mst_wr_descs && wkr_mst_wr_descs.length > maxCharactersToShow\r\n      ? `${wkr_mst_wr_descs.substring(0, maxCharactersToShow)}...`\r\n      : wkr_mst_wr_descs;\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell align=\"right\">\r\n          <IconButton\r\n            color={popover.open ? \"primary\" : \"default\"}\r\n            onClick={popover.onOpen}\r\n          >\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n\r\n        <TableCell>{wkr_mst_wr_no}</TableCell>\r\n        <TableCell>\r\n        <Tooltip title={wkr_mst_wr_descs} placement=\"top\" arrow >\r\n              <span>{truncatedDescription}</span>\r\n            </Tooltip>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          {(() => {\r\n            if (wkr_mst_wr_status === \"A\") {\r\n              return (\r\n                <div>\r\n                  <span\r\n                    style={{\r\n                      backgroundColor: \"rgb(0 167 111)\",\r\n                      color: \"white\",\r\n                      padding: \"2px 7px 6px 7px\",\r\n                      borderRadius: \"5px\",\r\n                      fontSize: \"13px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Approve ({wkr_mst_wr_status})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (wkr_mst_wr_status === \"D\") {\r\n              return (\r\n                <div>\r\n                  <span\r\n                    style={{\r\n                      backgroundColor: \"#FF6258\",\r\n                      color: \"white\",\r\n                      padding: \"2px 7px 6px 7px\",\r\n                      borderRadius: \"5px\",\r\n                      fontSize: \"13px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Disapprove ({wkr_mst_wr_status})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (wkr_mst_wr_status === \"W\") {\r\n              return (\r\n                <div>\r\n                  <span\r\n                    style={{\r\n                      backgroundColor: \"#2196F3\",\r\n                      color: \"white\",\r\n                      padding: \"2px 7px 6px 7px\",\r\n                      borderRadius: \"5px\",\r\n                      fontSize: \"13px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Awaiting ({wkr_mst_wr_status})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            return null; // Return null if none of the conditions match\r\n          })()}\r\n        </TableCell>\r\n\r\n        <TableCell>{wkr_mst_assetno}</TableCell>\r\n        <TableCell>{wkr_mst_chg_costcenter}</TableCell>\r\n        <TableCell>{wkr_mst_work_area}</TableCell>\r\n        <TableCell>{wkr_mst_assetlocn}</TableCell>\r\n        <TableCell>{wkr_mst_location}</TableCell>\r\n        <TableCell>\r\n          <Checkbox\r\n            checked={wkr_mst_temp_asset === '1'}\r\n            \r\n            inputProps={{ 'aria-label': 'disabled checkbox' }}\r\n              color=\"primary\" \r\n            />\r\n        </TableCell>\r\n        \r\n        <TableCell> <Checkbox\r\n            checked={wkr_mst_email_notification === '1'}\r\n            \r\n            inputProps={{ 'aria-label': 'disabled checkbox' }}\r\n              color=\"primary\" \r\n            />\r\n        </TableCell>\r\n       \r\n        <TableCell>{wkr_mst_work_type}</TableCell>\r\n        <TableCell>{wkr_mst_work_class}</TableCell>\r\n        <TableCell>{wkr_mst_work_group}</TableCell>\r\n        <TableCell>{wkr_mst_wo_status}</TableCell>\r\n        <TableCell>{wkr_mst_projectid}</TableCell>\r\n        <TableCell>{wkr_mst_originator}</TableCell>\r\n        <TableCell>{wkr_mst_phone}</TableCell>\r\n        <TableCell>{wkr_det_wo}</TableCell>\r\n        <TableCell>{wkr_det_approver}</TableCell>\r\n        <TableCell>\r\n          {wkr_appr_date ? formatDate(wkr_appr_date.date) : \"\"}\r\n        </TableCell>\r\n        <TableCell>{wkr_det_reject_desc}</TableCell>\r\n        <TableCell>{wkr_det_reject_by}</TableCell>\r\n        <TableCell>\r\n          {wkr_reject_date ? formatDate(wkr_reject_date) : \"\"}\r\n        </TableCell>\r\n        <TableCell>{wkr_mst_orig_priority}</TableCell>\r\n        \r\n        <TableCell>{formatDate(wkr_mst_org_date.date)}</TableCell>\r\n        <TableCell>{formatDate(wkr_mst_due_date.date)}</TableCell>\r\n        <TableCell>{wkr_mst_fault_code}</TableCell>\r\n        <TableCell>{wkr_mst_create_by}</TableCell>\r\n        <TableCell>{formatDate(wkr_mst_create_date.date)}</TableCell>\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onApprove();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: \"green\" }}\r\n        >\r\n          <Iconify icon=\"material-symbols:order-approve\" />\r\n          Approve\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onDisApprove();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: \"error.main\" }}\r\n        >\r\n          <Iconify icon=\"fluent:text-change-reject-20-filled\" />\r\n          Disapprove\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:pen-bold\" />\r\n          Edit\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            onDeleteRow();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: \"error.main\" }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nWorkReqTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function WorkReqTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const handleRemoveStock = (inputValue) => {\r\n    const newValue = filters.stock.filter((item) => item !== inputValue);\r\n    onFilters('stock', newValue);\r\n  };\r\n\r\n  const handleRemovePublish = (inputValue) => {\r\n    const newValue = filters.publish.filter((item) => item !== inputValue);\r\n    onFilters('publish', newValue);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {!!filters.stock.length && (\r\n          <Block label=\"Stock:\">\r\n            {filters.stock.map((item) => (\r\n              <Chip key={item} label={item} size=\"small\" onDelete={() => handleRemoveStock(item)} />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        {!!filters.publish.length && (\r\n          <Block label=\"Publish:\">\r\n            {filters.publish.map((item) => (\r\n              <Chip\r\n                key={item}\r\n                label={item}\r\n                size=\"small\"\r\n                onDelete={() => handleRemovePublish(item)}\r\n              />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nWorkReqTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport ExcelJS from \"exceljs\";\r\n\r\nconst ExportWorkReqlistToExcel = ({ resultData }) => {\r\n  //  console.log(\"resultData___excel\",resultData);\r\n  if (resultData !== \"\" && resultData !== undefined) {\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet(\"Word Order\");\r\n\r\n    // Customize header names and set individual column widths\r\n    worksheet.columns = [\r\n      { header: \"Work Request No\", key: \"wkr_mst_wr_no\", width: 20 },\r\n      { header: \"Description\", key: \"wkr_mst_wr_descs\", width: 50 },\r\n      { header: \"Approval Status\", key: \"wkr_mst_wr_status\", width: 15 },\r\n      { header: \"Asset No\", key: \"wkr_mst_assetno\", width: 15 },\r\n      { header: \"Charge Cost Center\", key: \"wkr_mst_chg_costcenter\", width: 15 },\r\n      { header: \"Work Area\", key: \"wkr_mst_work_area\", width: 20 },\r\n      { header: \"Asset Location\", key: \"wkr_mst_assetlocn\", width: 20 },\r\n      { header: \"Level\", key: \"wkr_mst_location\", width: 15 },\r\n      { header: \"Temporary Asset\", key: \"wkr_mst_temp_asset\", width: 20 },\r\n      { header: \"Email Notification\", key: \"wkr_mst_email_notification\", width: 20 },\r\n      { header: \"Work Type\", key: \"wkr_mst_work_type\", width: 15 },\r\n      { header: \"Work Class\", key: \"wkr_mst_work_class\", width: 15 },\r\n      { header: \"Work Group\", key: \"wkr_mst_work_group\", width: 15 },\r\n      { header: \"WR Status\", key: \"wkr_mst_wo_status\", width: 18 },\r\n      { header: \"Project ID\", key: \"wkr_mst_projectid\", width: 20 },\r\n      { header: \"Requestor\", key: \"wkr_mst_originator\", width: 20 },\r\n      { header: \"Phone\", key: \"wkr_mst_phone\", width: 20 },\r\n      { header: \"Work Order No\", key: \"wkr_det_wo\", width: 20 },\r\n      { header: \"Approved By\", key: \"wkr_det_approver\", width: 20 },\r\n      { header: \"Approved Date\", key: \"wkr_det_appr_date\", width: 20 },\r\n      { header: \"Rejected Description\", key: \"wkr_det_reject_desc\", width: 20 },\r\n      { header: \"Rejected By\", key: \"wkr_det_reject_by\", width: 20 },\r\n      { header: \"Rejected Date\", key: \"wkr_det_reject_date\", width: 20 },\r\n      { header: \"Original Priority\", key: \"wkr_mst_orig_priority\", width: 20 },\r\n      { header: \"Origination Date\", key: \"wkr_mst_org_date\", width: 20 },\r\n      { header: \"Due Date\", key: \"wkr_mst_due_date\", width: 20 },\r\n      { header: \"Fault Code\", key: \"wkr_mst_fault_code\", width: 20 },\r\n      { header: \"Created By\", key: \"wkr_mst_create_by\", width: 20 },\r\n      { header: \"Create Date\", key: \"wkr_mst_create_date\", width: 20 },\r\n    \r\n\r\n      // Add more columns as needed\r\n    ];\r\n\r\n    // Add data to the worksheet\r\n    resultData.forEach((rowData) => {\r\n      worksheet.addRow(rowData);\r\n    });\r\n\r\n    const headerRow = worksheet.getRow(1);\r\n    // Apply styling to header row\r\n    worksheet.getRow(1).eachCell((cell) => {\r\n      cell.font = { size: 12, bold: true, color: { argb: \"FFFFFF\" } };\r\n      cell.fill = {\r\n        type: \"pattern\",\r\n        pattern: \"solid\",\r\n        fgColor: { argb: \"2F5597\" },\r\n      };\r\n      cell.alignment = { horizontal: \"center\", vertical: \"center\" };\r\n    });\r\n\r\n    // Apply styling to data rows\r\n    worksheet.eachRow((row, rowNumber) => {\r\n      if (rowNumber > 1) {\r\n        row.font = { size: 11, color: { argb: \"#000\" } }; // Customize font for data rows\r\n        row.alignment = { horizontal: \"center\", vertical: \"middle\" }; // Center data text\r\n      }\r\n    });\r\n\r\n   // Save the workbook\r\n    workbook.xlsx.writeBuffer().then((buffer) => {\r\n      const blob = new Blob([buffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      const link = document.createElement(\"a\");\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = \"WorkRequestReport.xlsx\";\r\n      link.click();\r\n    });\r\n  }\r\n  return <div>{/* Your export component JSX */}</div>;\r\n};\r\n\r\nexport default ExportWorkReqlistToExcel;\r\n","import isEqual from 'lodash/isEqual';\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport React from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// @mui\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Stack from '@mui/material/Stack';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport Moment from \"moment\";\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\n\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// _mock\r\n\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableSkeleton,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport httpCommon from 'src/http-common';\r\nimport Swal from 'sweetalert2';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport { Icon } from '@iconify/react';\r\nimport { ThreeCircles } from 'react-loader-spinner';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n//import loderImg from \"../../../src/assets/img/Work_order.gif\";\r\nimport loderImg from \"../../../src/assets/img/Work_order.gif\";\r\n//\r\n\r\nimport ExportAssetlistToExcel from \"./../Asset/ExportFIle/ExportAssetlistToExcel\";\r\n\r\nimport WorkReqTableRow from './workrequest-table-row';\r\nimport WorkReqTableFiltersResult from './WorkReqTableFiltersResult';\r\nimport ExportWorkReqlistToExcel from \"./ExportFIle/ExportWorkReqlistToExcel\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: '', label: 'Action', width: 60 },\r\n  { id: 'wkr_mst_wr_no', label: 'Work Request No', width: 165 },\r\n  { id: 'wkr_mst_wr_descs', label: 'Description', width: 220, padding: 10 },\r\n  { id: 'wkr_mst_wr_status', label: 'Approval Status', width: 160 },\r\n  { id: 'wkr_mst_assetno', label: 'Asset No', width: 120 },\r\n  { id: 'wkr_mst_chg_costcenter', label: 'Charge Cost Center', width: 180 },\r\n  { id: 'wkr_mst_work_area', label: 'Work Area', width: 120 },\r\n  { id: 'wkr_mst_assetlocn', label: 'Asset Location', width: 145 },\r\n  { id: 'wkr_mst_location', label: 'Level', width: 100 },\r\n  { id: 'wkr_mst_temp_asset', label: 'Temporary Asset', width: 160 },\r\n  { id: 'wkr_mst_email_notification', label: 'Email Notification', width: 170 },\r\n  { id: 'wkr_mst_work_type', label: 'Work Type', width: 120 },\r\n  { id: 'wkr_mst_work_class', label: 'Work Class', width: 125 },\r\n  { id: 'wkr_mst_work_group', label: 'Work Group', width: 125 },\r\n  { id: 'wkr_mst_wo_status', label: 'Wr Status', width: 125 },\r\n  { id: 'wkr_mst_projectid', label: 'Project Id', width: 125 },\r\n  { id: 'wkr_mst_originator', label: 'Requestor', width: 100 },\r\n  { id: 'wkr_mst_phone', label: 'Phone', width: 180 },\r\n  { id: 'wkr_det_wo', label: 'Work Order No', width: 155 },\r\n  { id: 'wkr_det_approver', label: 'Approved By', width: 135 },\r\n  { id: 'wkr_det_appr_date', label: 'Approved Date', width: 145 },\r\n  { id: 'wkr_det_reject_date', label: 'Rejected Description', width: 190 },\r\n  { id: 'wkr_det_reject_by', label: 'Rejected By', width: 145 },\r\n  { id: 'wkr_reject_date', label: 'Rejected Date', width: 150 },\r\n  { id: 'wkr_mst_orig_priority', label: 'Original Priority', width: 160 },\r\n  { id: 'wkr_mst_org_date', label: 'Origination Date', width: 160 },\r\n  { id: 'wkr_mst_due_date', label: 'Due Date', width: 140 },\r\n  { id: 'wkr_mst_fault_code', label: 'Fault Code', width: 140 },\r\n  { id: 'wkr_mst_create_by', label: 'Created By', width: 140 },\r\n  { id: 'wkr_mst_create_date', label: 'Created Date', width: 140 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  col1: '',\r\n  publish: [],\r\n  stock: [],\r\n};\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function WorkRequestList() {\r\n  const site_ID = localStorage.getItem('site_ID');\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const AuditUser = localStorage.getItem(\"emp_mst_login_id\");\r\n  const location = useLocation();\r\n\r\n  const [DashbordDataGauge, setDashbordDataGauge] = useState(\r\n    location.state?.GaugeDashbordData\r\n  );\r\n  \r\n  const DashbordDataSrt = location.state?.GaugeDashbordDataSort || [];\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const popover = usePopover();\r\n  const router = useRouter();\r\n  const navigate = useNavigate();\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n  const [maxHeight, setMaxHeight] = useState(\"400px\");\r\n  const [tableData, setTableData] = useState([]);\r\n  const [totalRow, setTotalRow] = useState();\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  const confirm = useBoolean();\r\n \r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const inputRef = useRef(null);\r\n  const numberOfColumns = \"71\";\r\n  const [FilterShow, setFilterShow] = useState(false);\r\n  const [ResponceStats, setResponceStats] = useState(\"\");\r\n // const FilterhandleClose = () => setFilterShow(false);\r\n  const [showSave, setShowSave] = useState(false);\r\n  const [AssetFiledname, setAssetFiledname] = useState([]);\r\n  const [WorkReqFiledname, setWordReqFiledname] = useState([]);\r\n  const [selectedOptionEmptyError, setSelectedOptionEmptyError] =\r\n  useState(false);\r\n  const [selectedOptionEmptyErrorShort, setSelectedOptionEmptyErrorShort] =\r\n  useState(false);\r\n  const [valueptEmptyError, setValueptEmptyError] = useState(false);\r\n  const [logicalEmptyError, setLogicalEmptyError] = useState(false);\r\n  const [TitleAstReg, setTitleAstReg] = useState(\"\");\r\n\r\n  // const [assetFilterDpd, setAssetFilterDpd] = useState([]);\r\n  const [workReqFilterDpd, setWorkReqFilterDpd] = useState([]);\r\n\r\n  const [DropListIdGet, setDropListIdGet] = useState(\r\n    location.state?.DropListId || []\r\n  );\r\n  const [selectedOptionValue, setselectedOptionValue] = useState();\r\n  const [showWordOrderQryList, setShowWordOrderQryList] = useState(false);\r\n  const handleShowWorkOrderQryList = () => setShowWordOrderQryList(true);\r\n  const [showSaveAs, setShowSaveAs] = useState(false);\r\n  const [isChecked, setIsChecked] = useState(true);\r\n  const [selectedOptionEmptyErrorQtr, setSelectedOptionEmptyErrorQtr] =\r\n  useState(false);\r\n  const [valueptEmptyErrorQtr, setValueptEmptyErrorQtr] = useState(false);\r\n  const [logicalEmptyErrorQtr, setLogicalEmptyErrorQtr] = useState(false);\r\n  const [\r\n    selectedOptionEmptyErrorShortQtr,\r\n    setSelectedOptionEmptyErrorShortQtr,\r\n  ] = useState(false);\r\n  const [ExportExcelId, setExportExcelId] = useState(\"\");\r\n  const [selectDropRowID, setselectDropRowID] = useState(\"\");\r\n  const [isInputFocused, setInputFocused] = useState(false);\r\n  const [TableSearchData, setTableSearchData] = useState([]);\r\n  const [rowId, setRowId] = useState([]);\r\n  const [showApprove, setShowApprove] = useState(false);\r\n  const handleCloseApprove = () => setShowApprove(false);\r\n  const [Status, setStatus] = useState([]);\r\n  const [selected_Status, setSelected_Status] = useState([]);\r\n  const [Originator, setOriginator] = useState([]);\r\n  const [selected_Originator, setSelected_Originator] = useState([]);\r\n  const [WorkGroup, setWorkGroup] = useState([]);\r\n  const [selected_WorkGroup, setSelected_WorkGroup] = useState([]);\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const [showDisapprove, setShowDisapprove] = useState(false);\r\n  const handleCloseDisapprove = () => setShowDisapprove(false);\r\n  const [RejectDate, setRejectDate] = useState(new Date());\r\n  const [RejectedDescription, setRejectedDescription] = useState(\"\");\r\n  \r\n  const [showPromt, setShowPromt] = useState(false);\r\n  const [rowsDropdownPrompt, setRowsDropdownPrompt] = useState([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"\",\r\n      logical: \"\",\r\n      valuept: \"\",\r\n      RowId:\"\",\r\n      prompt:\"\",\r\n      siteCd: site_ID,\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  \r\n  // Get Api data useEffect\r\n  const fetchData = useCallback(async () => {\r\n    //Swal.fire({ title: 'Please Wait!', allowOutsideClick: false });\r\n    //Swal.showLoading();\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_work_request_master_table_data.php?site_cd=${site_ID}&page=${currentPage}`\r\n      );\r\n     // console.log(\"response_____fetcha___\",response);\r\n      setTableData(response.data.data.result);\r\n      setTotalRow(response.data.total_count);\r\n     // Swal.close();\r\n      setIsLoading(false);\r\n    \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }, [site_ID, currentPage]);\r\n\r\n  const fetchFilterSubPopupSavedropdon = async () => {\r\n    // Get dropdown value using api\r\n    \r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_workReq_filter_dropdown.php?site_cd=${site_ID}&auditUser=${AuditUser}`\r\n      );\r\n      //  console.log(\"check__-asset__\",response);\r\n      setWorkReqFilterDpd(response.data);\r\n  // Swal.close();\r\n      if (DropListIdGet !== \"\" && DropListIdGet !== null) {\r\n        const matchedItem = response.data.find(\r\n          (item) => item.RowID === DropListIdGet\r\n        );\r\n        if (matchedItem) {\r\n          const cfQueryDescValue = matchedItem.cf_query_title;\r\n\r\n          setTitleAstReg(cfQueryDescValue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n      //  fetch the data Gauge dashbord\r\n      const fetchDataGaugeDSB = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n          const response = await httpCommon.post(\r\n            \"/get_gauge_dashbord_work_request_data.php?page=\" + currentPage,\r\n            {\r\n              rows: DashbordDataGauge,\r\n              rowsort: DashbordDataSrt,\r\n             // rowsPrm: DashbordDataPrmMst,\r\n              site_cd: site_ID,\r\n              emp_ID:emp_owner,\r\n            }\r\n          );\r\n       //   console.log(\"response____dashobord\",response);\r\n          if (response.data.status === \"SUCCESS\") {\r\n            if (response.data.data.result.length > 0) {\r\n              setTableData(response.data.data.result);\r\n              setTotalRow(response.data.total_count);\r\n             // setResponceStats(response.data.StatusPRM);\r\n             // setTotalCount(response.data.TotalCountPRM);\r\n            }\r\n           \r\n            setIsLoading(false);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }, [site_ID, currentPage]);\r\n\r\n  const handleOptionChange = async (event,responseData) => {\r\n    const selectedValue = event?.target?.value || selectedOption;\r\n    setCurrentPage(1);\r\n  \r\n    const selectedOptionObjectFilter = workReqFilterDpd.find(\r\n      (item) => item.cf_query_title === selectedValue\r\n    );\r\n\r\n    let selectedOptionObject;\r\n\r\n    if (Array.isArray(responseData) && responseData.length > 0) {\r\n      selectedOptionObject = responseData.find(\r\n        (item) => item.cf_query_title === selectedValue\r\n      );\r\n    }\r\n\r\n    if (selectedOptionObjectFilter) {\r\n      const GetRowID = selectedOptionObjectFilter.RowID;\r\n      const GetPrompt = selectedOptionObjectFilter.cf_query_list_prompt;\r\n\r\n      if(GetPrompt == '1'){\r\n        setShowPromt(true);\r\n        Swal.fire({\r\n          title: \"Please Wait !\",\r\n          allowOutsideClick: false,\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        Swal.showLoading();\r\n        try {\r\n          const response = await httpCommon.get(\r\n            \"/get_work_order_filter_query_data.php?site_cd=\" +\r\n              site_ID +\r\n              \"&RowID=\" +\r\n              GetRowID\r\n          );\r\n          \r\n          if (response.data.data && response.data.data.list_typeF && response.data.data.list_typeF.length > 0) {\r\n            const newRows = response.data.data.list_typeF.map((item) => ({\r\n              selectedOption: item.cf_query_list_column,\r\n              operator: item.cf_query_list_operator,\r\n              valuept: item.cf_query_list_value,\r\n              logical: item.cf_query_list_logical,\r\n              siteCd: site_ID,\r\n              RowId: GetRowID,\r\n              prompt:GetPrompt,\r\n              queryTypedd: \"F\",\r\n            }));\r\n            const timeoutId = setTimeout(() => {\r\n              Swal.close();\r\n              setRowsDropdownPrompt(newRows);\r\n            }, 3000);\r\n            //setShowAssetByDescp(false);\r\n          } else {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              customClass: {\r\n                container: \"swalcontainercustom\",\r\n              },\r\n              title: \"Oops...\",\r\n              text: \"No record found Please try again !\",\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n        return;\r\n      }\r\n\r\n      setExportExcelId(GetRowID);\r\n      setselectDropRowID(GetRowID);\r\n      setCurrentPage(1);\r\n      setDropListIdGet([]);\r\n      setTitleAstReg(\"\");\r\n    }else{\r\n      const GetRowID = selectedOptionObject.RowID;\r\n      setExportExcelId(GetRowID);\r\n      setselectDropRowID(GetRowID);\r\n      setCurrentPage(1);\r\n      setDropListIdGet([]);\r\n      setTitleAstReg(\"\");\r\n    }\r\n    setSelectedOption(selectedValue);\r\n  };\r\n\r\n  const getb = useCallback(async () => {\r\n  \r\n    setIsLoading(true);\r\n    try {\r\n     \r\n      const response = await httpCommon.post(\r\n        `/getWorkReqOptionListData.php?site_cd=${site_ID}&ItemID=${selectDropRowID}&page=${currentPage}&EmpId=${emp_owner}`\r\n      );\r\n     //  console.log(\"check___api__data__\",response);\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.DashbrdCount);\r\n       // Swal.close();\r\n        setIsLoading(false);\r\n      } else {\r\n        setTableData(\"\");\r\n        setTotalRow(\"\");\r\n        setIsLoading(false);\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [site_ID, currentPage, selectDropRowID]);\r\n\r\n  const get_dropdown = async () => {\r\n    try {\r\n      const responseJson = await httpCommon.post(\r\n        `/getDropdownApprove.php?site_ID=${site_ID}`\r\n      );\r\n     // console.log(\"response___dropdown\",responseJson);\r\n      if (responseJson.data.status === 'SUCCESS') {\r\n      \r\n       // console.log('get_dropdown____', responseJson.data)\r\n  \r\n         let Status = responseJson.data.data.WorkorderStatus.map(item => ({\r\n             label:  item.wrk_sts_desc,\r\n             value: item.wrk_sts_status +\" : \"+item.wrk_sts_desc            \r\n             }));\r\n             setStatus(Status);\r\n  \r\n         let Originator = responseJson.data.data.WKO_Originator.map(item => ({\r\n           label: item.emp_mst_empl_id +\" : \"+ item.emp_mst_name ,\r\n           value: item.emp_mst_empl_id            \r\n           }));                   \r\n           setOriginator(Originator);  \r\n           \r\n         let WorkGroup = responseJson.data.data.WKO_Work_Group.map(item => ({\r\n           label: item.wrk_grp_grp_cd +\" : \"+ item.wrk_grp_desc ,\r\n           value: item.wrk_grp_grp_cd            \r\n           }));                   \r\n           setWorkGroup(WorkGroup);  \r\n\r\n           setButton_save(\"Approve\");\r\n           \r\n     }else{\r\n         Swal.close();\r\n         Swal.fire({\r\n             icon: 'error',\r\n             title: 'Oops...',\r\n             text: responseJson.data.message,\r\n             \r\n           })\r\n     }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n    if (selectDropRowID != \"\" && selectDropRowID != null) {\r\n      getb();\r\n    }else if(TableSearchData !=\"\" && TableSearchData != null){\r\n      handelSearchButton();\r\n    }else if(Array.isArray(DashbordDataGauge) && DashbordDataGauge.length > 0){\r\n      fetchDataGaugeDSB();\r\n\r\n    }else {\r\n      fetchData();\r\n    }\r\n    fetchFilterSubPopupSavedropdon();\r\n    get_dropdown();\r\n  }, [site_ID, currentPage, selectDropRowID,fetchData,getb]);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: Array.isArray(tableData) ? tableData : [],\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 60 : 80;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  // const handleDeleteRow = useCallback((id) => {\r\n  //   console.log(\"crow_______\",id);\r\n  //   //   const deleteRow = tableData.filter((row) => row.id !== id);\r\n  //   //   setTableData(deleteRow);\r\n\r\n  //   //   table.onUpdatePageDeleteRow(dataInPage.length);\r\n  //    },\r\n  //   [dataInPage.length, table, tableData]\r\n  // );\r\n\r\n  const handleDeleteRow = useCallback(async (id, row) => {\r\n  //  console.log(\"row++++++____\", row);\r\n    const Rowid = row.RowID;\r\n   // console.log(\"Rowid____\", Rowid); row.wkr_mst_wr_status === 'A'\r\n    if (Rowid !== '') {\r\n      if(row.wkr_mst_wr_status === 'A'){\r\n        Swal.fire({\r\n          title: \"Warning!\",\r\n          text: `You are not allowed to delete the work request. The work request ${row.wkr_mst_wr_no} was approved.`,\r\n          icon: \"warning\"\r\n          });\r\n          return;\r\n      }else if(row.wkr_mst_wr_status === 'D'){\r\n        Swal.fire({\r\n          title: \"Deleted!\",\r\n          text: `You are not allowed to delete the work request. The work request ${row.wkr_mst_wr_no} was disapproved.`,\r\n          icon: \"warning\"\r\n          });\r\n          return;\r\n      }\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\"\r\n      }).then(async (result) => { // Add async here if you want to use await inside then\r\n        if (result.isConfirmed) {\r\n          setIsLoading(true);\r\n    \r\n          try {\r\n            const response = await httpCommon.get(\r\n              `/work_request_delete_record.php?site_cd=${site_ID}&mst_id=${Rowid}`\r\n            );\r\n            \r\n          //  console.log(\"response_____delete___\",response);\r\n            if(response.data.status == \"SUCCESS\"){\r\n              Swal.fire({\r\n              title: \"Deleted!\",\r\n              text: response.data.message,\r\n              icon: \"success\"\r\n              });\r\n            }\r\n            if(response.data.status == \"ERROR\"){\r\n              Swal.fire({\r\n              title: \"Oops!\",\r\n              text: response.data.message,\r\n              icon: \"error\"\r\n              });\r\n            }\r\n            setIsLoading(false);\r\n          \r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n          \r\n        }\r\n      });\r\n    }\r\n  }, [tableData, router, site_ID]);\r\n  \r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id,row) => {\r\n    // console.log(\"row____\",row);\r\n  //  console.log(\"id_____\",id);\r\n      const Rowid = id;\r\n      const AstNo = row.wkr_mst_assetno;\r\n      // if (Rowid !== '' && AstNo !== '') {\r\n      //   navigate(`/dashboard/work/newRequest?rowID=${Rowid}&ast_no=${AstNo}`, {\r\n      //     state: {\r\n      //       currentPage,\r\n      //       selectedOption,\r\n      //     },\r\n      //   });\r\n      // }\r\n     \r\n      if (Rowid !== '' && AstNo !== '') {\r\n        navigate(`/dashboard/work/newRequest`, {\r\n          state: {\r\n            RowID:Rowid,\r\n            Ast_no:AstNo,\r\n            currentPage,\r\n            selectedOption,\r\n          },\r\n        });\r\n      }\r\n    \r\n    },\r\n    [router,currentPage, selectedOption]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.product.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n    inputRef.current.value = '';\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleFilterName = (e) => {\r\n    const value = e.target.value;\r\n    setFilters({ ...filters, name: value });\r\n\r\n    const filteredData = tableData.filter((item) =>\r\n      item.col1.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setTableData(filteredData);\r\n  };\r\n \r\n\r\n  // set screen revolation set\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const windowHeight = window.innerHeight;\r\n      // Adjust maxHeight based on window height\r\n      const newMaxHeight = Math.floor(windowHeight * 0.6) + \"px\"; // Adjust this value as needed\r\n      setMaxHeight(newMaxHeight);\r\n    };\r\n\r\n    // Call handleResize on initial mount\r\n    handleResize();\r\n\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Remove event listener on component unmount\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Filter funcation\r\n  const [rows, setRows] = useState([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"Like\",\r\n      logical: \"AND\",\r\n      prompt: \"0\",\r\n      valuept: \"\",\r\n      siteCd: site_ID,\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  // Short By State\r\n  const [rowsort, setRowsort] = useState([\r\n    {\r\n      selectedOptionShort: \"\",\r\n      promptAsd: \"ASC\",\r\n      siteCd: site_ID,\r\n      queryType: \"S\",\r\n    },\r\n  ]);\r\n\r\n  const isButtonDisabled = rows.some((row) => row.selectedOption === \"\");\r\n  const Openbracket = [\r\n    { value: \"(\", label: \"(\" },\r\n    { value: \"\", label: \"\" },\r\n  ];\r\n\r\n  const Closebracket = [\r\n    { value: \"(\", label: \")\" },\r\n    { value: \"\", label: \"\" },\r\n  ];\r\n\r\n  const oprt = [\r\n    { value: \"like\", label: \"Like\" },\r\n    { value: \"not like\", label: \"Not Like\" },\r\n    { value: \"I=\", label: \"Is\" },\r\n    { value: \"!=\", label: \"Is not\" },\r\n    { value: \"=\", label: \"Equal to\" },\r\n    { value: \">\", label: \"Greater than\" },\r\n    { value: \"<\", label: \"Less than\" },\r\n    { value: \">=\", label: \"Greater than or equal to\" },\r\n    { value: \"<=\", label: \"Less than or equal to\" },\r\n    { value: \"<>\", label: \"Not equal to\" },\r\n  ];\r\n\r\n  const Logcl = [\r\n    { value: \"And\", label: \"And\" },\r\n    { value: \"Or\", label: \"Or\" },\r\n  ];\r\n\r\n  const handleOptionChange1 = (index, selectedOption) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].selectedOption = selectedOption;\r\n    setSelectedOptionEmptyError(false);\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  const handleOptionChangeOprter = (index, operator) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].operator = operator;\r\n    setRows(updatedRows);\r\n  };\r\n  const handleSelectChange = (index, checked) => {\r\n    const newRows = [...rows];\r\n    newRows[index].prompt = checked ? \"1\" : \"0\";\r\n    setRows(newRows);\r\n  };\r\n\r\n  const handleInputValueChangeQtr = (index, newValue) => {\r\n    const updatedRowsQtr = [...rows];\r\n    updatedRowsQtr[index].valuept = newValue;\r\n    setValueptEmptyError(false);\r\n    setRows(updatedRowsQtr);\r\n    // Check if the selectedOption and valuept are empty\r\n    if (!newValue && !updatedRowsQtr[index].selectedOption) {\r\n      //  setSelectedOptionEmptyErrorQtr(true);\r\n      //  setValueptEmptyErrorQtr(true);\r\n    } else {\r\n      // setSelectedOptionEmptyErrorQtr(false);\r\n      //  setValueptEmptyErrorQtr(false);\r\n    }\r\n  };\r\n\r\n  const handleIncludeChangeLogcil = (index, logical) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].logical = logical.target.value;\r\n    setLogicalEmptyError(false);\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const isLastRowEmpty =\r\n      rows.length > 0 &&\r\n      (!rows[rows.length - 1].selectedOption ||\r\n        rows[rows.length - 1].selectedOption === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyError(!isLastRowEmpty.selectedOption);\r\n      setValueptEmptyError(!isLastRowEmpty.valuept);\r\n      setLogicalEmptyError(!isLastRowEmpty.logical);\r\n    } else {\r\n      // Add a new row\r\n      setRows((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOption: \"\",\r\n          operator: \"Like\",\r\n          logical: \"\",\r\n          prompt: \"0\",\r\n          valuept: \"\",\r\n          siteCd: site_ID,\r\n          queryTypedd: \"F\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyError(false);\r\n      setValueptEmptyError(false);\r\n      setLogicalEmptyError(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRowPopup = (index) => {\r\n    if (rows.length > 1) {\r\n      const newRows = [...rows];\r\n      newRows.splice(index, 1);\r\n      setRows(newRows);\r\n    }\r\n  };\r\n\r\n  const FilterhandleClose = () => {\r\n    // Call your custom logic here before closing the filter\r\n    if (rows.length > 1) {\r\n      const newRows = [rows[0]]; // Keep only the first row\r\n      setRows(newRows);\r\n    }\r\n  \r\n    // Call handleDeleteRowShort to remove all rowsort except the first one\r\n    if (rowsort.length > 1) {\r\n      const newRowsort = [rowsort[0]]; // Keep only the first row\r\n      setRowsort(newRowsort);\r\n    }\r\n    \r\n    // Close the filter\r\n    setFilterShow(false);\r\n  };\r\n  const handelFilterAction = () => {\r\n    if (rows.length > 1) {\r\n      const newRows = [rows[0]]; // Keep only the first row\r\n      setRows(newRows);\r\n    }\r\n  \r\n    // Call handleDeleteRowShort to remove all rowsort except the first one\r\n    if (rowsort.length > 1) {\r\n      const newRowsort = [rowsort[0]]; // Keep only the first row\r\n      setRowsort(newRowsort);\r\n    }\r\n    setFilterShow(true);\r\n    getWorkReqListLebel();\r\n  };\r\n  const rowOptions = WorkReqFiledname.map((row) => ({\r\n    value: row.column_name,\r\n    label: `${row.default_label}`,\r\n  }));\r\n    /* Filter dropdown value */\r\n    const getWorkReqListLebel = async () => {\r\n      try {\r\n        const response = await httpCommon.get(\"/getWorkReqFilterName.php\");\r\n       // console.log(\"response___assetList\",response);\r\n        if (response.data.status == \"SUCCESS\") {\r\n          setWordReqFiledname(response.data.data);\r\n          //setAstdetLabel(response.data.data.ast_det);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n      // Retrive button  funcation,setTableData\r\n  const RetriveData = async () => {\r\n    setCurrentPage(1);\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n   \r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_retrive_popup_work_request_filed_data.php?page=\" + currentPage,\r\n        {\r\n          rows: rows,\r\n          rowsort: rowsort,\r\n          SiteCD: site_ID,\r\n          admin: emp_owner,\r\n        }\r\n      );\r\n       //console.log(\"response____asset__\",response);\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        setTitleAstReg(response.data.titleName);\r\n       \r\n        Swal.close();\r\n        FilterhandleClose();\r\n        const updatedEmptyRows = rows.map((row) => ({\r\n          // empty state data\r\n          ...row,\r\n          selectedOption: \"\",\r\n          logical: \"\",\r\n          valuept: \"\",\r\n        }));\r\n        setRows(updatedEmptyRows);\r\n\r\n      const updatedEmptyRowsort = rows.map((rowsort) => ({\r\n          // empty state data\r\n          ...rowsort,\r\n          selectedOptionShort: \"\",\r\n        }));\r\n        setRowsort(updatedEmptyRowsort);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const RetriveDataAllData = async () =>{\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n      Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_retrive_work_request_all_data.php?page=\" + currentPage,\r\n        {\r\n          SiteCD: site_ID,\r\n          admin: emp_owner,\r\n        }\r\n      );\r\n   \r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        setTitleAstReg(response.data.titleName);\r\n  \r\n        Swal.close();\r\n        FilterhandleClose();\r\n        const updatedEmptyRows = rows.map((row) => ({\r\n          // empty state data\r\n          ...row,\r\n          selectedOption: \"\",\r\n          logical: \"\",\r\n          valuept: \"\",\r\n        }));\r\n        setRows(updatedEmptyRows);\r\n  \r\n        const updatedEmptyRowsort = rows.map((rowsort) => ({\r\n          // empty state data\r\n          ...rowsort,\r\n          selectedOptionShort: \"\",\r\n        }));\r\n        setRowsort(updatedEmptyRowsort);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n\r\n    const retriveBtn = () => {\r\n      if (rows.some((row) => row.selectedOption !== \"\")) {\r\n        RetriveData();\r\n      }else{\r\n       \r\n          RetriveDataAllData();\r\n      }\r\n    };\r\n\r\n    const SaveRegTbl = () => {\r\n      setShowSave(true);\r\n      fetchFilterSubPopupSavedropdon();\r\n    };\r\n\r\n  // Short By code\r\n  const handleOptionChange2 = (index, selectedOptionShort) => {\r\n    const updatedRows = [...rowsort];\r\n    updatedRows[index].selectedOptionShort = selectedOptionShort;\r\n    setSelectedOptionEmptyErrorShort(false);\r\n    setRowsort(updatedRows);\r\n  };\r\n  const handleSelectChangeshort = (index, checked) => {\r\n    const newRows = [...rowsort];\r\n    newRows[index].promptAsd = checked ? \"ASC\" : \"DESC\";\r\n    setRowsort(newRows);\r\n  };\r\n  const handleAddRowShort = () => {\r\n    if (rowsort[rowsort.length - 1].selectedOptionShort === \"\") {\r\n      setSelectedOptionEmptyErrorShort(\r\n        rowsort[rowsort.length - 1].selectedOptionShort === \"\"\r\n      );\r\n    } else {\r\n      const newRow = {\r\n        selectedOptionShort: \"\",\r\n        promptAsd: \"ASC\",\r\n      };\r\n      setRowsort([...rowsort, newRow]);\r\n    }\r\n  };\r\n  const handleDeleteRowShort = (index) => {\r\n    if (rowsort.length > 1) {\r\n      const newRows = [...rowsort];\r\n      newRows.splice(index, 1);\r\n      setRowsort(newRows);\r\n    }\r\n  };\r\n  const handleCloseSave = () => {\r\n    setShowSave(false);\r\n    setFormDataSv({\r\n      queryName: \"\",\r\n      description: \"\",\r\n    });\r\n  };\r\n  \r\n  const [formDataSv, setFormDataSv] = useState([\r\n    {\r\n      queryName: \"\",\r\n      description: \"\",\r\n      availability: \"G\",\r\n      site_cd: site_ID,\r\n      owner: emp_owner,\r\n    },\r\n  ]);\r\n  const handleInputChangeSav = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormDataSv((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Insert Cf_query Api with Query List popup data\r\n  const InsertCf_queryListData = async () => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      formDataSv: formDataSv,\r\n      rowsQrtData: rows,\r\n      rowsortQrtData: rowsort,\r\n      site_cd: site_ID,\r\n      owner: emp_owner,\r\n      availability: \"G\",\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/InsertWorkReqFilterQueryListData.php\",\r\n        combinedData\r\n      );\r\n   console.log(\"response___\",response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setTitleAstReg(response.data.Title);\r\n        fetchFilterSubPopupSavedropdon();\r\n        RetriveData();\r\n        handleDeleteRowPopup();\r\n        handleDeleteRowShort();\r\n        Swal.close();\r\n        handleCloseSave();\r\n        FilterhandleClose();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // Filter Save button funcation click to\r\n    const handleCFQrySave = () => {\r\n     \r\n      if (formDataSv.queryName.trim() !== \"\") {\r\n        const inputValue = formDataSv.queryName;\r\n        const matchingOption = workReqFilterDpd.find(\r\n          (option) => option.cf_query_title === inputValue\r\n        );\r\n        if (matchingOption) {\r\n          //setMessage('Input value matches an option in the list.');\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to overwrite the query\" + \" \" + inputValue,\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes!\",\r\n            cancelButtonText: \"No\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              if (\r\n                rows?.selectedOption?.trim() !== \"\" &&\r\n                rows?.logical?.trim() !== \"\" &&\r\n                rows?.valuept?.trim() !== \"\" &&\r\n                rowsort?.selectedOptionShort?.trim() !== \"\"\r\n              ) {\r\n                InsertCf_queryListData();\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          InsertCf_queryListData();\r\n        }\r\n      } else {\r\n        console.log(\"empty__\");\r\n      }\r\n    };\r\n  // Query button click to funcatio start\r\n    // Handel Query List popup\r\n    const [rowsQrt, setRowsQrt] = useState([\r\n      {\r\n        selectedOption: \"\",\r\n        operator: \"\",\r\n        logical: \"\",\r\n        prompt: \"\",\r\n        valuept: \"\",\r\n        siteCd: site_ID,\r\n        queryTypedd: \"F\",\r\n      },\r\n    ]);\r\n    //Sorting data append rowsQrt rowsortQrt\r\n    const [rowsortQrt, setRowsortQrt] = useState([\r\n      {\r\n        selectedOptionShort: \"\",\r\n        promptAsd: \"\",\r\n        siteCd: site_ID,\r\n        queryType: \"S\",\r\n      },\r\n    ]);\r\n    const handleCloseWorkQryList = () => {\r\n      setShowWordOrderQryList(false);\r\n      FilterhandleClose();\r\n      handleCloseSave();\r\n      setselectedOptionValue(\"\");\r\n      setRowsQrt([]);\r\n      setRowsortQrt([]);\r\n    };\r\n    const RetriveDataQueryList = async () => {\r\n      Swal.fire({\r\n        title: \"Please Wait !\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/get_retrive_popup_work_request_filed_data.php?page=\" + currentPage,\r\n          {\r\n            rows: rowsQrt,\r\n            rowsort: rowsortQrt,\r\n            SiteCD:site_ID,\r\n            admin:emp_owner\r\n          }\r\n        );\r\n      // console.log(\"response____fliter___\",response);\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        Swal.close();\r\n        FilterhandleClose();\r\n        const updatedEmptyRows = rowsQrt.map((row) => ({\r\n          // empty state data\r\n          ...row,\r\n          selectedOption: \"\",\r\n          logical: \"\",\r\n          valuept: \"\",\r\n        }));\r\n        setRows(updatedEmptyRows);\r\n  \r\n        const updatedEmptyRowsort = rowsortQrt.map((rowsort) => ({\r\n          // empty state data\r\n          ...rowsort,\r\n          selectedOptionShort: \"\",\r\n        }));\r\n        setRowsort(updatedEmptyRowsort);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const DeleteAssetRegQryList = async () => {\r\n      const [cf_query_title, RowID] = selectedOptionValue.split(\"-\");\r\n  \r\n      if (selectedOptionValue && RowID !== \"\") {\r\n        try {\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"You want to delete \" + cf_query_title + \" query!\",\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\",\r\n          }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n              const response = await httpCommon.get(\r\n                \"/WorkReqQueryListDataDelete.php?value=\" +\r\n                  RowID +\r\n                  \"&siteId=\" +\r\n                  site_ID\r\n              );\r\n  \r\n              if (response.data.status == \"SUCCESS\") {\r\n                fetchFilterSubPopupSavedropdon();\r\n                //  setErrord(null);\r\n                setselectedOptionValue(\"\");\r\n                setRowsQrt([]);\r\n                setRowsortQrt([]);\r\n                //setSelectedRow([]);\r\n                Swal.fire(\"Deleted!\", \"Your query has been deleted.\", \"success\");\r\n              }\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"empty\");\r\n      }\r\n    };\r\n    const SaveWorkOrderQryList = async () => {\r\n      const [cf_query_title, RowID] = selectedOptionValue.split(\"-\");\r\n      const isAnySelectedOptionShortEmpty = rowsortQrt.some(\r\n        (row) => !row.selectedOptionShort\r\n      );\r\n      if (isAnySelectedOptionShortEmpty && RowID != \"\") {\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Please Wait !\",\r\n          allowOutsideClick: false,\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        Swal.showLoading();\r\n        const combinedData = {\r\n          rowsQrtData: rowsQrt,\r\n          siteCd: site_ID,\r\n          owner: emp_owner,\r\n          mst_RowID: RowID,\r\n          rowsortQrtData: rowsortQrt,\r\n        };\r\n        try {\r\n          const response = await httpCommon.post(\r\n            \"/insert_work_req_query_listsave_data.php\",\r\n            combinedData\r\n          );\r\n            console.log(\"response__SaveBytncf__\",response);\r\n          if (response.data.status == \"SUCCESS\") {\r\n            Swal.close();\r\n            Swal.fire({\r\n              title: \"Success!\",\r\n              text: \"Your query update successfully.\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"OK\",\r\n              customClass: {\r\n                container: \"swalcontainercustom\",\r\n              },\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                RetriveDataQueryList();\r\n                setRowsQrt([]);\r\n                setselectedOptionValue(\"\");\r\n                setRowsortQrt([]);\r\n                setRowsort([]);\r\n                setRows([]);\r\n               \r\n                handleCloseWorkQryList();\r\n              }\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    };\r\n    const SaveAsworkorderTbl = () => {\r\n      setShowSaveAs(true);\r\n    };\r\n\r\n    const handleCloseSaveAs = () => {\r\n      setShowSaveAs(false);\r\n      setFormDataSv({\r\n        queryName: \"\",\r\n        description: \"\",\r\n      });\r\n    };\r\n    const handleCFQrySaveAsBtn = () => {\r\n      if (formDataSv.queryName.trim() !== \"\") {\r\n        const inputValue = formDataSv.queryName;\r\n        const matchingOption = workReqFilterDpd.find(\r\n          (option) => option.cf_query_title === inputValue\r\n        );\r\n        if (matchingOption) {\r\n          //setMessage('Input value matches an option in the list.');\r\n          Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to overwrite the query\" + \" \" + inputValue,\r\n            icon: \"warning\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes!\",\r\n            cancelButtonText: \"No\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              if (\r\n                rowsQrt?.selectedOption?.trim() !== \"\" &&\r\n                rowsQrt?.logical?.trim() !== \"\" &&\r\n                rowsQrt?.valuept?.trim() !== \"\" &&\r\n                rowsortQrt?.selectedOptionShort?.trim() !== \"\"\r\n              ) {\r\n                InsertCf_queryListDataSavaAs();\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          InsertCf_queryListDataSavaAs();\r\n        }\r\n      } else {\r\n        console.log(\"empty__\");\r\n      }\r\n    };\r\n    // fetch data using dropdon\r\n  const handleClickOption = async (selectedOption) => {\r\n    setselectedOptionValue(selectedOption);\r\n\r\n    let cf_query_title, RowID;\r\n\r\n    const hyphenCount = selectedOption.split(\"-\").length - 1;\r\n\r\n    if(hyphenCount === 1){\r\n       [cf_query_title, RowID] = selectedOption.split(\"-\")\r\n    }else{\r\n      const parts = selectedOption.split(\"-\");\r\n      cf_query_title = parts[0].trim();\r\n      RowID = parts[parts.length - 1].trim();\r\n    }\r\n \r\n    setTitleAstReg(cf_query_title);\r\n\r\n    setRowsQrt([]);\r\n    setRowsortQrt([]);\r\n    if (selectedOption !== \"\") {\r\n      Swal.fire({\r\n        title: \"Please Wait !\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_work_order_filter_query_data.php?site_cd=\" +\r\n            site_ID +\r\n            \"&RowID=\" +\r\n            RowID\r\n        );\r\n        //  console.log(\"response____fluter___\",response);\r\n        if (response.data.data && response.data.data.list_typeF && response.data.data.list_typeF.length > 0) {\r\n          const newRows = response.data.data.list_typeF.map((item) => ({\r\n            selectedOption: item.cf_query_list_column,\r\n            operator: item.cf_query_list_operator,\r\n            prompt: item.cf_query_list_prompt,\r\n            valuept: item.cf_query_list_value,\r\n            logical: item.cf_query_list_logical,\r\n            siteCd: site_ID,\r\n            queryTypedd: \"F\",\r\n          }));\r\n          const timeoutId = setTimeout(() => {\r\n            Swal.close();\r\n            setRowsQrt((prevrowsQrt) => [...prevrowsQrt, ...newRows]);\r\n          }, 3000);\r\n          //setShowAssetByDescp(false);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: \"Oops...\",\r\n            text: \"No record found Please try again !\",\r\n          });\r\n        }\r\n        if (response.data.data && response.data.data.list_typeS.length > 0) {\r\n          const newRows = response.data.data.list_typeS.map((item) => ({\r\n            selectedOptionShort: item.cf_query_list_column,\r\n            promptAsd: item.cf_query_list_order_by,\r\n            queryType: \"S\",\r\n            siteCd: site_ID,\r\n          }));\r\n\r\n          // Append newRows to the existing tableData\r\n\r\n          const timeoutId = setTimeout(() => {\r\n            Swal.close();\r\n            setRowsortQrt((rowsortQrt) => [...rowsortQrt, ...newRows]);\r\n          }, 3000);\r\n          //setShowAssetByDescp(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n  };\r\n \r\nconst handelQuryListpopup = () => {\r\n  fetchFilterSubPopupSavedropdon();\r\n  handleShowWorkOrderQryList();\r\n};\r\n\r\nconst handleCheckboxClick = () => {\r\n  setIsChecked(!isChecked);\r\n};\r\nconst handleOptionChangeQtr = (index, selectedOption) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].selectedOption = selectedOption;\r\n  setSelectedOptionEmptyErrorQtr(false);\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\n\r\nconst handleOptionChangeOprterQtr = (index, operator) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].operator = operator;\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\nconst handleSelectChangeQtr = (index, checked) => {\r\n  const newRows = [...rowsQrt];\r\n  newRows[index].prompt = checked ? \"1\" : \"0\";\r\n  setRowsQrt(newRows);\r\n};\r\nconst handleInputValueChangeQtr2 = (index, newValue) => {\r\n  const updatedRowsQtr = [...rowsQrt];\r\n  updatedRowsQtr[index].valuept = newValue;\r\n  //setValueptEmptyErrorQtr(false);\r\n  setRowsQrt(updatedRowsQtr);\r\n};\r\n  const handleDeleteRowQrt = (index) => {\r\n    if (rowsQrt.length > 1) {\r\n      const newRows = [...rowsQrt];\r\n      newRows.splice(index, 1);\r\n      setRowsQrt(newRows);\r\n    }\r\n  };\r\n  const handleAddRowQrt = () => {\r\n    const isLastRowEmpty =\r\n      rowsQrt.length > 0 &&\r\n      (!rowsQrt[rowsQrt.length - 1].selectedOption ||\r\n        rowsQrt[rowsQrt.length - 1].selectedOption === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyErrorQtr(!isLastRowEmpty.selectedOption);\r\n      setValueptEmptyErrorQtr(!isLastRowEmpty.valuept);\r\n      setLogicalEmptyErrorQtr(!isLastRowEmpty.logical);\r\n    } else {\r\n      // Add a new row\r\n      setRowsQrt((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOption: \"\",\r\n          operator: \"Like\",\r\n          logical: \"\",\r\n          prompt: \"0\",\r\n          valuept: \"\",\r\n          siteCd: site_ID,\r\n          queryTypedd: \"F\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyErrorQtr(false);\r\n      setValueptEmptyErrorQtr(false);\r\n      setLogicalEmptyErrorQtr(false);\r\n    }\r\n  };\r\n  const handleOptionChangeSrtQtr = (index, selectedOptionShort) => {\r\n    const updatedRowsQtr = [...rowsortQrt];\r\n    updatedRowsQtr[index].selectedOptionShort = selectedOptionShort;\r\n    setSelectedOptionEmptyErrorShortQtr(false);\r\n    setRowsortQrt(updatedRowsQtr);\r\n  };\r\n  const handleSelectChangeshortQtr = (index, checked) => {\r\n    const newRows = [...rowsortQrt];\r\n    newRows[index].promptAsd = checked ? \"ASC\" : \"DESC\";\r\n    setRowsortQrt(newRows);\r\n  };\r\n  const handleDeleteRowShortQrt = (index) => {\r\n    if (rowsortQrt.length > 1) {\r\n      const newRows = [...rowsortQrt];\r\n      newRows.splice(index, 1);\r\n      setRowsortQrt(newRows);\r\n    }\r\n  };\r\n  const handleAddRowShortQrt = () => {\r\n    const isLastRowEmpty =\r\n      rowsortQrt.length > 0 &&\r\n      (!rowsortQrt[rowsortQrt.length - 1].selectedOptionShort ||\r\n        rowsortQrt[rowsortQrt.length - 1].selectedOptionShort === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyErrorShortQtr(!isLastRowEmpty.selectedOptionShort);\r\n      //  setSelectedCheckEmptyErrorShortQtr(!isLastRowEmpty.promptAsd);\r\n    } else {\r\n      // Add a new row\r\n      setRowsortQrt((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOptionShort: \"\",\r\n          promptAsd: \"\",\r\n          siteCd: site_ID,\r\n          queryType: \"S\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyErrorShortQtr(false);\r\n      // setSelectedCheckEmptyErrorShortQtr(false);\r\n    }\r\n  };\r\n  const InsertCf_queryListDataSavaAs = async () => {\r\n    const site_ID = localStorage.getItem(\"site_ID\");\r\n    const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      formDataSv: formDataSv,\r\n      rowsQrtData: rowsQrt,\r\n      rowsortQrtData: rowsortQrt,\r\n      SITE_CD: site_ID,\r\n      OWNER_ID: emp_owner,\r\n      availability: \"G\",\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/InsertWorkReqQueryListSaveAsData.php\",\r\n        combinedData\r\n      );\r\n\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setTitleAstReg(response.data.Title);\r\n        fetchFilterSubPopupSavedropdon();\r\n        RetriveDataQueryList();\r\n        setRowsQrt([]);\r\n        setselectedOptionValue(\"\");\r\n        setRowsortQrt([]);\r\n        Swal.close();\r\n        handleCloseSave();\r\n        FilterhandleClose();\r\n        handleCloseSaveAs();\r\n        handleCloseWorkQryList();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n \r\n// Search Button Click funcation\r\nconst handelSearchButton = async () => {\r\n  const inputValueGet = inputRef.current.value;\r\n  //console.log(\"inputValueGet_____\",inputValueGet);\r\n  \r\n  if (inputValueGet !== \"\" && inputValueGet !== null) {\r\n    Swal.fire({ title: \"Please Wait!\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n   // console.log(\"call_again___\");\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_SearchWorkReqModule.php?site_cd=${site_ID}&searchTerm=${inputValueGet}&page=${currentPage}`\r\n      );\r\n       // console.log(\"responseSerach_____\",response);\r\n      if (response.data.data.result.length > 0) {\r\n        setTableSearchData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n\r\n        const filteredData = response.data.data.result.filter((item) => {\r\n          const searchString = inputValueGet.toLowerCase();\r\n          const wkr_mst_wr_no = (item.wkr_mst_wr_no || \"\").toLowerCase();\r\n          const wkr_mst_wr_descs = (item.wkr_mst_wr_descs || \"\").toLowerCase();\r\n          const wkr_mst_wr_status = (item.wkr_mst_wr_status || \"\").toLowerCase();\r\n          const wkr_mst_assetno = (item.wkr_mst_assetno || \"\").toLowerCase();\r\n          const wkr_mst_chg_costcenter = (item.wkr_mst_chg_costcenter || \"\").toLowerCase();\r\n          const wkr_mst_work_area = (item.wkr_mst_work_area || \"\").toLowerCase();\r\n          const wkr_mst_assetlocn = (item.wkr_mst_assetlocn || \"\").toLowerCase();\r\n          const wkr_mst_location = (item.wkr_mst_location || \"\").toLowerCase();\r\n          const wkr_mst_wo_status = (item.wkr_mst_wo_status || \"\").toLowerCase();\r\n          const wkr_mst_phone = (item.wkr_mst_phone || \"\").toLowerCase();\r\n          const wkr_det_reject_desc = (item.wkr_det_reject_desc || \"\").toLowerCase();\r\n          const wkr_mst_fault_code = (item.wkr_mst_fault_code || \"\").toLowerCase();\r\n          const wkr_mst_create_by = (item.wkr_mst_create_by || \"\").toLowerCase();\r\n          \r\n          return (\r\n            wkr_mst_wr_no.includes(searchString) ||\r\n            wkr_mst_wr_descs.includes(searchString) ||\r\n            wkr_mst_wr_status.includes(searchString) ||\r\n            wkr_mst_assetno.includes(searchString) ||\r\n            wkr_mst_chg_costcenter.includes(searchString) ||\r\n            wkr_mst_work_area.includes(searchString) ||\r\n            wkr_mst_assetlocn.includes(searchString) ||\r\n            wkr_mst_location.includes(searchString) ||\r\n            wkr_mst_wo_status.includes(searchString) ||\r\n            wkr_mst_phone.includes(searchString) ||\r\n            wkr_det_reject_desc.includes(searchString) ||\r\n            wkr_mst_fault_code.includes(searchString) ||\r\n            wkr_mst_create_by.includes(searchString)\r\n          );\r\n        });\r\n        setTableData(filteredData);\r\n        setTableData(filteredData);\r\n     //   setCurrentPage(1);\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"No Record Found!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleKeyDown = (event) => {\r\n  if (event.key === \"Backspace\") {\r\n    event.preventDefault();\r\n    const inputValue2 = inputRef.current.value;\r\n    const newValue = inputValue2.slice(0, -1);\r\n    inputRef.current.value = newValue;\r\n    if (newValue === \"\") {\r\n      handleResetFilters();\r\n    }\r\n  }\r\n  if (event.key === 'Enter' && inputRef.current.value.trim() !== '') {\r\n\r\n    handelSearchButton();\r\n\r\n  }\r\n};\r\nconst handleInputFocus = () => {\r\n  setInputFocused(true);\r\n};\r\n\r\nconst handleInputBlur = () => {\r\n  setInputFocused(false);\r\n};\r\nconst handleExportClick = async () => {\r\n  if (ExportExcelId !== \"\") {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.post(\r\n        `/getWorkReqListExcelData.php?site_cd=${site_ID}&ItemID=${ExportExcelId}`\r\n      );\r\n      Swal.close();\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        ExportWorkReqlistToExcel({ resultData: response.data.data.result });\r\n        popover.onClose();\r\n        Swal.close();\r\n      } else {\r\n        setTableData(\"\");\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  } else {\r\n   \r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      \r\n      const response = await httpCommon.get(\r\n        `/getWorkReqListAllDataExcelSheet.php?site_cd=${site_ID}`\r\n      );\r\n      \r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        ExportWorkReqlistToExcel({ resultData: response.data.data.result });\r\n        popover.onClose();\r\n        Swal.close();\r\n      } else {\r\n        setTableData(\"\");\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n};\r\n\r\n// Approv and DisApprove funcation\r\nconst handleShowApprove = (id,row) => {\r\n  \r\n  if (row.wkr_mst_wr_status === 'A' ) {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Oops...',\r\n      text: `The Work Request No ${row.wkr_mst_wr_no} Already Approve.`,\r\n    });\r\n    return; \r\n  }else if(row.wkr_mst_wr_status === 'D'){\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Oops...',\r\n      text: `The Work Request No ${row.wkr_mst_wr_no} Already Disapprove.`,\r\n    });\r\n    return; \r\n  }else{\r\n    setRowId(row.RowID);\r\n    setShowApprove(true);\r\n  }\r\n};\r\n\r\nconst onClickApprove = () => {\r\n  if(selected_Status == 0 || selected_Status == null){\r\n    setErrorMessage('Please select a status.');\r\n  \r\n  }else{\r\n      \r\n    if(selected_Originator == 0 || selected_Originator == null){\r\n      setErrorMessage('Please Select the Originator.');\r\n\r\n          }else{\r\n\r\n            if(selected_WorkGroup == 0 || selected_WorkGroup == null){\r\n              setErrorMessage('Please Select the Work Group.');\r\n              \r\n              }else{\r\n\r\n                if(Button_save ==  \"Approve\"){\r\n                  \r\n                 handleCloseApprove();\r\n                WorkRequest_Approval();\r\n  \r\n                }\r\n                \r\n            }\r\n        }\r\n      }\r\n  }\r\n\r\n//Approval\r\nconst WorkRequest_Approval = async() => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let EmpID = localStorage.getItem(\"emp_mst_empl_id\");\r\n  let EmpName = localStorage.getItem(\"emp_mst_name\");\r\n  let LOGINID = localStorage.getItem(\"emp_mst_login_id\");\r\n    let Status, setStatus;\r\n    if(selected_Status == '' || selected_Status == null){\r\n        setStatus=''\r\n    }else{\r\n        Status = selected_Status.split(\":\")\r\n        setStatus = Status[0];\r\n    }\r\n    \r\n    //Select Assign To\r\n    let Originator, setOriginator;\r\n    if(selected_Originator == '' || selected_Originator == null){\r\n\r\n        setOriginator=''\r\n    }else{\r\n\r\n        Originator = selected_Originator.label.split(\":\")\r\n        setOriginator = Originator[0];\r\n        console.log(\"Originator \", Originator[0])\r\n    }\r\n\r\n    //Select Work Group\r\n    let WorkGroup, setWorkGroup;\r\n    if(selected_WorkGroup == '' || selected_WorkGroup == null){\r\n\r\n        setWorkGroup=''\r\n    }else{\r\n\r\n        WorkGroup = selected_WorkGroup.label.split(\":\")\r\n        setWorkGroup = WorkGroup[0];\r\n        console.log(\"WorkGroup \", WorkGroup[0])\r\n    }\r\n  var json_workrequest ={\r\n\r\n    \"site_cd\": site_ID,\r\n    \"wko_mst_status\": setStatus.trim(),\r\n    \"wkr_mst_originator\": setOriginator.trim(),\r\n    \"wkr_mst_work_group\":setWorkGroup.trim(),\r\n\r\n    \"RowID\": rowId,\r\n    \"EmpID\": EmpID,\r\n    \"EmpName\": EmpName,\r\n    \"LOGINID\": LOGINID,\r\n\r\n  }\r\n  \r\n  Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n  Swal.showLoading()\r\n  try {\r\n   \r\n    const responseJson = await httpCommon.post(\r\n      \"/insert_work_request_approval.php\",\r\n      JSON.stringify(json_workrequest)\r\n    );\r\n    \r\n    if (responseJson.data.status === 'SUCCESS') { \r\n      Swal.close();\r\n      fetchData();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: responseJson.data.status,\r\n          text: responseJson.data.message,\r\n        }).then(() => {\r\n          navigate(`/dashboard/work/list`);\r\n        });\r\n\r\n  }else{\r\n      Swal.close();\r\n      Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: responseJson.data,\r\n          \r\n        })\r\n  }\r\n  } catch (error) {\r\n    Swal.close();\r\n    console.error(\"Error fetching data:\", error);\r\n    Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops get_WorkRequest_select...',\r\n            text: error,          \r\n          })\r\n  }\r\n\r\n  }\r\n\r\n  // DisApprov funcation\r\n  const handleShowDisapprove = (row) => {\r\n\r\n    if (row.wkr_mst_wr_status === 'D') {\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Oops...',\r\n        text: `The Work Request No ${row.wkr_mst_wr_no} Already Disapprove.`,\r\n      });\r\n      return; \r\n    }else if(row.wkr_mst_wr_status === \"A\"){\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Oops...',\r\n        text: `The Work Request No ${row.wkr_mst_wr_no} Already Approve.`,\r\n      });\r\n      return;\r\n    }\r\n    setRowId(row.RowID);\r\n    setShowDisapprove(true)\r\n\r\n  };\r\n  const onClickDisapprove = () => {\r\n    if(RejectedDescription == ''){\r\n      setErrorMessage('Please Enter the Rejected Description.');\r\n        }else{\r\n  \r\n            handleCloseDisapprove();\r\n            WorkRequest_Disapproval();\r\n            console.log(\"Disapprove button clicked here!\");\r\n              \r\n        }\r\n    }\r\n\r\n//Disapproval\r\n  const WorkRequest_Disapproval = async() => {\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n  \r\n    let EmpID = localStorage.getItem(\"emp_mst_empl_id\");\r\n  \r\n    let EmpName = localStorage.getItem(\"emp_mst_name\");\r\n    let LOGINID = localStorage.getItem(\"emp_mst_login_id\");\r\n    \r\n    //Select Reject Date\r\n    let date_of_reject = ''\r\n    if (RejectDate == '' || RejectDate == null) {\r\n  \r\n      date_of_reject = '';\r\n    } else {\r\n  \r\n      date_of_reject = Moment(RejectDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n    }\r\n  \r\n  var json_workrequest ={\r\n  \r\n      \"site_cd\": site_ID,\r\n      \"wkr_det_reject_by\": LOGINID,\r\n      \"wkr_det_reject_desc\": RejectedDescription.trim(),\r\n      \"wkr_det_reject_date\": date_of_reject,\r\n  \r\n      \"RowID\": rowId,\r\n      \"EmpID\": EmpID,\r\n      \"EmpName\": EmpName,\r\n      \"LOGINID\": LOGINID,\r\n      \r\n  }\r\n  //console.log(\"json_workrequest_____disapprove\",json_workrequest);\r\n\r\n  Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n  Swal.showLoading()\r\n  try {\r\n   \r\n    const responseJson = await httpCommon.post(\r\n      \"/insert_work_request_disapproval.php\",\r\n      JSON.stringify(json_workrequest)\r\n    );\r\n    if (responseJson.data.status === 'SUCCESS') { \r\n        \r\n      Swal.close();\r\n      fetchData();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: responseJson.data.status,\r\n          text: responseJson.data.message,\r\n        }).then(() => {\r\n          navigate(`/dashboard/work/list`);\r\n        });\r\n\r\n  }else{\r\n      Swal.close();\r\n      Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: responseJson.data,\r\n          \r\n        })\r\n\r\n  }\r\n  } catch (error) {\r\n    Swal.close();\r\n    console.error(\"Error fetching data:\", error);\r\n    Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops get_WorkRequest_select...',\r\n            text: error,          \r\n          })\r\n  }\r\n\r\n  \r\n}\r\n\r\nconst handleClosePromt = (event, reason) => {\r\n  if (reason === \"backdropClick\" || reason === \"escapeKeyDown\") {\r\n    return; // Do nothing on backdrop click or escape key press\r\n  }\r\n  setRowsDropdownPrompt([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"\",\r\n      logical: \"\",\r\n      valuept: \"\",\r\n      RowId:\"\",\r\n      prompt:\"\",\r\n      siteCd: site_ID,\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  setShowPromt(false);\r\n};\r\n\r\nconst handleInputValueChangePrompt = (index, newValue) => {\r\n  setRowsDropdownPrompt((prevRows) =>\r\n    prevRows.map((row, idx) =>\r\n      idx === index ? { ...row, valuept: newValue } : row\r\n    )\r\n  );\r\n};\r\n\r\nconst fetchDataResponse = async (hasRowIdValuept) => {\r\n  try {\r\n\r\n    const response = await httpCommon.post(\r\n      \"/get_work_request_dropdown_prompt_data.php?page=\" + currentPage,\r\n      {\r\n        rows: rowsDropdownPrompt,\r\n        rowsort: \"\",\r\n        SiteCD:site_ID,\r\n        admin:emp_owner,\r\n        RowId:hasRowIdValuept\r\n      }\r\n    );\r\n    //console.log(\"response____output\",response);\r\n    setTableData(response.data.data.result);\r\n    setTotalRow(response.data.total_count);\r\n    setTitleAstReg(response.data.titleName);\r\n    Swal.close();\r\n  \r\n    handleClosePromt();\r\n\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n\r\n}\r\n\r\nconst handleDropDownPromptSaveAsBtn = async () => {\r\n  const hasEmptyValuept = rowsDropdownPrompt.some(row => !row.valuept.trim());\r\n  const hasRowIdValuept = rowsDropdownPrompt.length > 0 ? rowsDropdownPrompt[0].RowId : null;\r\n\r\n  if (hasEmptyValuept) {\r\n    // Show error message if any valuept field is empty\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: \"Validation Error !\",\r\n      text: 'Please fill in value field before saving.',\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    return; // Exit the function if validation fails\r\n  }else{\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      rowsQrtData: rowsDropdownPrompt,\r\n      rowsortQrtData:\"\",\r\n      siteCd: site_ID,\r\n      mst_RowID:  hasRowIdValuept,\r\n      owner: emp_owner,\r\n    };\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_work_req_query_listsave_data.php\",\r\n        combinedData\r\n      );\r\n        \r\n      if (response.data.status == \"SUCCESS\") {\r\n        Swal.close();\r\n        Swal.fire({\r\n          title: \"Success!\",\r\n          text: \"Your query update successfully.\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"OK\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n           \r\n            fetchDataResponse(hasRowIdValuept);\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n\r\n};\r\n  return (\r\n    <>\r\n       <Helmet>\r\n        <title>CMMS System</title>\r\n        <meta name=\"description\" content=\"Work Request List\" />\r\n      </Helmet>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <div className=\"CustomBreadAsset\">\r\n          <CustomBreadcrumbs\r\n             heading=\"Work Request List\"\r\n            links={[]}\r\n            action={\r\n              <Button\r\n                component={RouterLink}\r\n                // href={paths.dashboard.product.new}\r\n                variant=\"contained\"\r\n                className='AddNewButton'\r\n                startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n               \r\n                to={{\r\n                  pathname: '/dashboard/work/newRequest',\r\n                  state: { select: 'New_WorkRequest' }\r\n                }}\r\n              >\r\n               New\r\n              </Button>\r\n\r\n            \r\n              \r\n            }\r\n            sx={{ mb: { xs: 3, md: 5 } }}\r\n          />\r\n        </div>\r\n        <div className=\"workReqpage\">\r\n          <Card>\r\n            \r\n            <Stack\r\n              spacing={2}\r\n              alignItems={{ xs: 'flex-end', md: 'center' }}\r\n              direction={{\r\n                xs: 'column',\r\n                md: 'row',\r\n              }}\r\n              sx={{\r\n                p: 2.5,\r\n                pr: { xs: 2.5, md: 1 },\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"AssetFilterBtn\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  flexShrink: 0,\r\n                }}\r\n                onClick={handelFilterAction}\r\n              >\r\n                <Icon icon=\"fluent:filter-12-filled\" style={{ marginRight: '5px' }} /> Filter\r\n              </Button>\r\n              <FormControl\r\n                sx={{\r\n                  flexShrink: 0,\r\n                  width: { xs: 1, md: 300 },\r\n                }}\r\n                className=\"selectOptioncls\"\r\n              >\r\n                <InputLabel id=\"select-label\" className={(TitleAstReg!== \"\" || selectedOption)? \"selectedcss\" : \"\"}>Select an Option</InputLabel>\r\n                <Select\r\n                  labelId=\"select-label\"\r\n                  id=\"select\"\r\n                  input={<OutlinedInput label=\"Select an option\" />}\r\n                  value={TitleAstReg !== \"\" ? TitleAstReg : selectedOption}\r\n                  onChange={handleOptionChange}\r\n                  sx={{ textTransform: 'capitalize' }}\r\n                >\r\n                \r\n                  {workReqFilterDpd.map((item) => (\r\n                      <MenuItem key={item.RowID} value={item.cf_query_title}>\r\n                        <Iconify\r\n                          icon=\"mdi:sql-query\"\r\n                          style={{\r\n                            display: \"inline-flex\",\r\n                            verticalAlign: \"middle\",\r\n                            marginRight: \"6px\",\r\n                            marginTop: \"-5px\",\r\n                            width: \"16px\",\r\n                            height: \"16px\",\r\n                          }}\r\n                        />\r\n                        <span style={{ verticalAlign: \"middle\" }}>\r\n                          {item.cf_query_title}\r\n                        </span>\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n                  <div\r\n                    className=\"wordkOrdersearchInput\"\r\n                    style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"Seachrinput\"\r\n                      placeholder=\"Search..\"\r\n                      ref={inputRef}\r\n                      onKeyDown={handleKeyDown}\r\n                      onFocus={handleInputFocus}\r\n                      onBlur={handleInputBlur}\r\n                    />\r\n                    <div>\r\n                    \r\n                      <IconButton\r\n                        onClick={handelSearchButton}\r\n                        className=\"customsearchbutton\"\r\n                      >\r\n                        <Iconify icon=\"eva:search-fill\" />\r\n                      </IconButton>\r\n                    </div>\r\n                  </div>\r\n                <IconButton onClick={popover.onOpen}>\r\n                  <Iconify icon=\"eva:more-vertical-fill\" />\r\n                </IconButton>\r\n              </Stack>\r\n            </Stack>\r\n\r\n            <CustomPopover\r\n              open={popover.open}\r\n              onClose={popover.onClose}\r\n              arrow=\"right-top\"\r\n              sx={{ width: 180 }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleExportClick();\r\n                }}\r\n              >\r\n                <Iconify icon=\"solar:export-bold\" />\r\n                Export to Excel\r\n              </MenuItem>\r\n\r\n            </CustomPopover>\r\n            {canReset && (\r\n              <WorkReqTableFiltersResult\r\n                filters={filters}\r\n                onFilters={handleFilters}\r\n                //\r\n                onResetFilters={handleResetFilters}\r\n                //\r\n                results={dataFiltered.length}\r\n                sx={{ p: 2.5, pt: 0 }}\r\n              />\r\n            )}\r\n\r\n            <TableContainer sx={{ position: 'relative'}}>\r\n              <TableSelectedAction\r\n                dense={table.dense}\r\n               \r\n                numSelected={table.selected?.length || 0}\r\n                  rowCount={tableData?.length || 0}\r\n                onSelectAllRows={(checked) =>\r\n                  table.onSelectAllRows(\r\n                    checked,\r\n                    tableData.map((row) => row.id)\r\n                  )\r\n                }\r\n                action={\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              />\r\n\r\n              <Scrollbar sx={{ overflowX: \"auto\", maxHeight: maxHeight }}>  \r\n                <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                  <TableHeadCustom\r\n                    order={table.order}\r\n                    orderBy={table.orderBy}\r\n                    headLabel={TABLE_HEAD}\r\n                    rowCount={tableData.length}\r\n                    numSelected={table.selected.length}\r\n                    onSort={table.onSort}\r\n                    className=\"stickyheader\"\r\n                  />\r\n                 \r\n                  <TableBody className=\"AssetTable\">\r\n                        {isLoading ? ( // Assuming isLoading is a boolean state indicating whether data is loading\r\n                          <TableRow>\r\n                          <TableCell colSpan={numberOfColumns} className=\"NoRecodcls\" >\r\n                          <Dialog open={isLoading} aria-labelledby=\"loading-dialog-title\"  PaperProps={{\r\n                                  style: {\r\n                                      backgroundColor: \"transparent\", // Set your desired background color here\r\n                                  },\r\n                              }}\r\n                              BackdropProps={{\r\n                                className: \"yourbackdropclass\",\r\n                              }}\r\n                              >\r\n                          <DialogTitle id=\"loading-dialog-title\"  style={{ textAlign: 'center' }}></DialogTitle>\r\n                            <DialogContent>\r\n                            \r\n                              <div style={{ textAlign: 'center', paddingTop: '10px' }}>\r\n                              <ThreeCircles\r\n                                radius=\"9\"\r\n                                visible={true}\r\n                                ariaLabel=\"three-circles-loading\"\r\n                                color=\"green\"\r\n                             \r\n                              />\r\n                                \r\n                              </div>\r\n                            </DialogContent>\r\n                          </Dialog>\r\n                           \r\n                          </TableCell>\r\n                        </TableRow>\r\n                        ) : (\r\n                          <>\r\n                            {tableData.length === 0 ? (\r\n                              <TableRow>\r\n                                <TableCell colSpan={numberOfColumns} className=\"NoRecodcls\" >\r\n                                  No Record Found\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ) : (\r\n                              <>\r\n                            \r\n                                {dataFiltered.map((row) => (\r\n\r\n                                  <WorkReqTableRow\r\n                                    key={row.id}\r\n                                    row={row}\r\n                                    rowStats={ResponceStats}\r\n                                    selected={table.selected.includes(row.mst_RowID)}\r\n                                    onSelectRow={() => table.onSelectRow(row.mst_RowID)}\r\n                                    onDeleteRow={() => handleDeleteRow(row.mst_RowID,row)}\r\n                                    onEditRow={() => handleEditRow(row.RowID,row)}\r\n                                    onDisApprove={() => handleShowDisapprove(row)}\r\n                                    onApprove={() => handleShowApprove(row.mst_RowID,row)}\r\n                                  //  onViewRow={() => handleViewRow(row.id)}\r\n                                 //   onCompleteRow={() => handleCompleteRow(row.col71)}\r\n                                  //  onCloseRow={() => handleCloseRow(row.col71)}\r\n                                  />\r\n                                ))}\r\n                               \r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        <TableEmptyRows\r\n                          emptyRows={emptyRows(\r\n                            table.page,\r\n                            table.rowsPerPage,\r\n                            tableData.length\r\n                          )}\r\n                        />\r\n                      </TableBody>\r\n\r\n                </Table>\r\n              </Scrollbar>\r\n            </TableContainer>\r\n\r\n              <TablePaginationCustom\r\n                count={totalRow > 0 ? totalRow : dataFiltered.length}\r\n                page={currentPage - 1}\r\n                rowsPerPage={table.rowsPerPage}\r\n                onPageChange={(event, newPage) => {\r\n                  setCurrentPage(newPage + 1);\r\n\r\n                  table.onChangePage(event, newPage);\r\n                }}\r\n                currentPage={currentPage}\r\n                //  onRowsPerPageChange={table.onChangeRowsPerPage}\r\n                onRowsPerPageChange={(rowsPerPage) => {\r\n                  table.onChangeRowsPerPage(rowsPerPage);\r\n                }}\r\n                // dense={table.dense}\r\n                //  onChangeDense={table.onChangeDense}\r\n              />\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n      {/* =============================== filter model  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={FilterhandleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={FilterShow}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"mdi:sql-query\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Define Query</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={FilterhandleClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"queryBtn\">\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={handelQuryListpopup}>\r\n                  <Iconify icon=\"carbon:query-queue\" /> Query List\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                //  disabled={isButtonDisabled}\r\n                  onClick={retriveBtn}\r\n                >\r\n                  <Iconify icon=\"carbon:data-base\" /> Retrive\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                 onClick={SaveRegTbl}\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Iconify icon=\"mingcute:save-fill\" />\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className=\"filterByorder\">\r\n            <fieldset className=\"short-by-fieldset2\">\r\n              <legend>Filter By</legend>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ textAlign: \"center\" }}> ( </th>\r\n                    <th>Field Name</th>\r\n                    <th>Operator</th>\r\n                    <th>Prompt</th>\r\n                    <th>Value</th>\r\n                    <th>Logical</th>\r\n                    <th style={{ textAlign: \"center\" }}> ) </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <Select\r\n                          className=\"custom-Astselect\"\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          {Openbracket.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"25%\" }}>\r\n                        <Select\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 &&\r\n                            selectedOptionEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          style={{ width: \"100%\" }}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(event) =>\r\n                            handleOptionChange1(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {rowOptions.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n\r\n                      <td style={{ width: \"17%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className=\"custom-Astselect\"\r\n                          onChange={(event) =>\r\n                            handleOptionChangeOprter(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {oprt.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"8%\" }}>\r\n                        <input\r\n                          style={{ width: \"100%\" }}\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckChecked\"\r\n                          onChange={(e) =>\r\n                            handleSelectChange(index, e.target.checked)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"26%\" }}>\r\n                        <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          onChange={(event) =>\r\n                            handleInputValueChangeQtr(index, event.target.value)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"10%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && logicalEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(logical) =>\r\n                            handleIncludeChangeLogcil(index, logical)\r\n                          }\r\n                        >\r\n                          {Logcl.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className=\"custom-Astselect\"\r\n                          // value={/* add the corresponding value from your state */}\r\n                          //  onChange={(event) => handleOptionChange1(index, event.target.value)}\r\n                        >\r\n                          {Closebracket.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td>\r\n                        <IconButton\r\n                          className=\"clsBtn\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          onClick={() => handleDeleteRowPopup(index)}\r\n                        >\r\n                          <Iconify icon=\"carbon:close\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <Button onClick={handleAddRow} className=\"AddFilterBtn\">\r\n                  <Iconify\r\n                    icon=\"material-symbols:add\"\r\n                    style={{\r\n                      verticalAlign: \"0px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"2px\",\r\n                    }}\r\n                  />\r\n                  Add new filter\r\n                </Button>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n          <div className=\"filterShort\">\r\n            <fieldset className=\"short-by-fieldset2\">\r\n              <legend>Sort By</legend>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Field Name</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th>Ascending?</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rowsort.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"60%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect shrt ${\r\n                            index === rowsort.length - 1 &&\r\n                            selectedOptionEmptyErrorShort\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(event) =>\r\n                            handleOptionChange2(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {rowOptions.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n\r\n                      <td style={{ width: \"15%\" }}></td>\r\n                      <td style={{ width: \"15%\" }}></td>\r\n                      <td style={{ width: \"10%\" }}>\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          checked={rowsort[index].promptAsd === \"ASC\"}\r\n                          onChange={(e) =>\r\n                            handleSelectChangeshort(index, e.target.checked)\r\n                          }\r\n                          id=\"flexCheckDefault\"\r\n                          style={{\r\n                            width: \"65px\",\r\n                            height: \"15px\",\r\n                            marginTop: \"-5px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td></td>\r\n                      <td>\r\n                        <IconButton\r\n                          className=\"clsBtn\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          onClick={() => handleDeleteRowShort(index)}\r\n                        >\r\n                          <Iconify icon=\"carbon:close\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <Button onClick={handleAddRowShort} className=\"AddFilterBtn\">\r\n                  <Iconify\r\n                    icon=\"material-symbols:add\"\r\n                    style={{\r\n                      verticalAlign: \"0px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"2px\",\r\n                    }}\r\n                  />\r\n                  Add new filter\r\n                </Button>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n       {/* =============================== filter model Save Button  =================================  */}\r\n       <BootstrapDialog\r\n        onClose={handleCloseSave}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showSave}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Save Query</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseSave}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Query name:</legend>\r\n              <div className=\"form-group \">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"customInput\"\r\n                  name=\"queryName\"\r\n                  value={formDataSv.queryName}\r\n                  onChange={handleInputChangeSav}\r\n                  className=\"bsc_sav\"\r\n                  list=\"options\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n\r\n                <datalist id=\"options\">\r\n                  {workReqFilterDpd.map((option, index) => (\r\n                    <option key={index.RowID} value={option.cf_query_title} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Description:</legend>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"w3review\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  value={formDataSv.description}\r\n                  onChange={handleInputChangeSav}\r\n                  cols=\"70\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Availability:</legend>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"G\"\r\n                  checked\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Global(available to everyone)\r\n                </label>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"P\"\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Personal\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleCFQrySave}>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n      {/* =============================== filter model Query List Button  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseWorkQryList}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showWordOrderQryList}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"mdi:sql-query\" />\r\n          <span style={{ marginLeft: \"2px\" }}> Query List</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseWorkQryList}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"queryBtn\">\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={DeleteAssetRegQryList}>\r\n                  <Iconify icon=\"fluent:delete-48-regular\" /> Delete\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={SaveWorkOrderQryList}>\r\n                  <Iconify icon=\"ic:outline-save-as\" /> Save\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={SaveAsworkorderTbl}>\r\n                  <Iconify icon=\"fad:saveas\" />\r\n                  Save As\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div>\r\n            <div className=\"shortBydd list mt-4\">\r\n              <div className=\"table-containeR\">\r\n                <fieldset className=\"Query-by-fieldset\">\r\n                  <legend>Query Name</legend>\r\n                  <table className=\"custom-tablE\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ width: \"100%\" }}>Query Title</th>\r\n\r\n                        <th style={{ width: \"10%\" }}>Default?</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                     \r\n                      <Select\r\n                        id=\"select\"\r\n                        style={{ width: \"60%\" }}\r\n                        value={selectedOptionValue}\r\n                        // onChange={handleClickOption}\r\n                        onChange={(event) =>\r\n                          handleClickOption(event.target.value)\r\n                        }\r\n                        sx={{ textTransform: \"capitalize\" }}\r\n                      >\r\n                       \r\n                        {workReqFilterDpd.map((item) => (\r\n                          <MenuItem\r\n                            key={item.RowID}\r\n                            value={`${item.cf_query_title}-${item.RowID}`}\r\n                          >\r\n                            {item.cf_query_title}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                      <td>\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckDefault\"\r\n                          checked={isChecked}\r\n                          onChange={handleCheckboxClick}\r\n                          style={{\r\n                            width: \"65px\",\r\n                            height: \"15px\",\r\n                            marginTop: \"-5px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tbody>\r\n                  </table>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n            <div className=\"FiltrBydd mt-2\">\r\n              <div>\r\n                <fieldset className=\"short-by-fieldset2\">\r\n                  <legend>Filter By</legend>\r\n                  <table style={{ borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ textAlign: \"center\", width: \"7%\" }}>(</th>\r\n                        <th style={{ width: \"25%\" }}>Field Name</th>\r\n                        <th style={{ width: \"17%\" }}>Operator</th>\r\n                        <th style={{ width: \"8%\" }}>Prompt</th>\r\n                        <th style={{ width: \"26%\" }}>Value</th>\r\n                        <th style={{ width: \"10%\" }}>Logical</th>\r\n                        <th style={{ textAlign: \"center\", width: \"7%\" }}>)</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                     \r\n                      {rowsQrt.map((row, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <tr key={index}>\r\n                            <td style={{ width: \"7%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n                              >\r\n                                {Openbracket.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"25%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  selectedOptionEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.selectedOption || \"\"}\r\n                                onChange={(event) =>\r\n                                  handleOptionChangeQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {rowOptions.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"17%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n                                value={row.operator || \"Like\"}\r\n                                onChange={(event) =>\r\n                                  handleOptionChangeOprterQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {oprt.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"8%\" }}>\r\n                              <input\r\n                                class=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                onChange={(e) =>\r\n                                  handleSelectChangeQtr(index, e.target.checked)\r\n                                }\r\n                                checked={row.prompt === \"1\"}\r\n                                id=\"flexCheckDefault\"\r\n                                style={{\r\n                                  width: \"65px\",\r\n                                  height: \"15px\",\r\n                                  marginTop: \"-5px\",\r\n                                }}\r\n                              />\r\n                            </td>\r\n                            <td style={{ width: \"26%\" }}>\r\n                              <input\r\n                                type=\"text\"\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  valueptEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.valuept || \"\"}\r\n                                oninput=\"handleInput(event)\"\r\n                                onChange={(event) =>\r\n                                  handleInputValueChangeQtr2(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </td>\r\n\r\n                            <td style={{ width: \"10%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  logicalEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.logical || \"\"}\r\n                                // value={/* add the corresponding value from your state */}\r\n                                // onChange={(logical) =>\r\n                                //   handleIncludeChangeLogcilQtr(index, logical)\r\n                                // }\r\n                              >\r\n                                {Logcl.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n\r\n                            <td style={{ width: \"7%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n\r\n                                // value={rowOptions.find(option => option.value === row.selectedOption)}\r\n                                //onChange={(selectedOption) => handleOptionChange1(index, selectedOption)}\r\n                              >\r\n                                {Closebracket.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n\r\n                            <td>\r\n                              <IconButton\r\n                                className=\"clsBtn\"\r\n                                aria-label=\"delete\"\r\n                                size=\"small\"\r\n                                onClick={() => handleDeleteRowQrt(index)}\r\n                              >\r\n                                <Iconify icon=\"carbon:close\" />\r\n                              </IconButton>\r\n                            </td>\r\n                          </tr>\r\n                        </React.Fragment>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button onClick={handleAddRowQrt} className=\"AddFilterBtn\">\r\n                      <Iconify\r\n                        icon=\"material-symbols:add\"\r\n                        style={{\r\n                          verticalAlign: \"0px\",\r\n                          fontSize: \"16px\",\r\n                          marginRight: \"2px\",\r\n                        }}\r\n                      />\r\n                      Add new filter\r\n                    </Button>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n            <div className=\"shortBydd mt-4 shtQtr\">\r\n              <div>\r\n                <fieldset className=\"short-by-fieldset\">\r\n                  <legend>Sort By</legend>\r\n                  <table style={{ borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Field Name</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th>Ascending?</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {rowsortQrt.map((row, index) => (\r\n                        <tr key={index}>\r\n                          <td style={{ width: \"60%\" }}>\r\n                            <Select\r\n                              style={{ width: \"100%\" }}\r\n                              className={`custom-Astselect sht ${\r\n                                index === rowsortQrt.length - 1 &&\r\n                                selectedOptionEmptyErrorShortQtr\r\n                                  ? \"error-border\"\r\n                                  : \"mammama\"\r\n                              }`}\r\n                              // value={/* add the corresponding value from your state */}\r\n                              onChange={(event) =>\r\n                                handleOptionChangeSrtQtr(\r\n                                  index,\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                              value={row.selectedOptionShort || \"\"}\r\n                            >\r\n                              {rowOptions.map((option, index) => (\r\n                                <MenuItem key={index} value={option.value}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </Select>\r\n                          </td>\r\n                          <td style={{ width: \"15%\" }}></td>\r\n                          <td style={{ width: \"15%\" }}></td>\r\n                          <td style={{ width: \"8%\" }}>\r\n                            <input\r\n                              class=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              //checked={row.prompt === '1'}\r\n                              checked={rowsortQrt[index].promptAsd === \"ASC\"}\r\n                              onChange={(e) =>\r\n                                handleSelectChangeshortQtr(\r\n                                  index,\r\n                                  e.target.checked\r\n                                )\r\n                              }\r\n                              id=\"flexCheckDefault\"\r\n                              style={{\r\n                                width: \"65px\",\r\n                                height: \"15px\",\r\n                                marginTop: \"-5px\",\r\n                              }}\r\n                            />\r\n                          </td>\r\n                          <td></td>\r\n                          <td>\r\n                            <IconButton\r\n                              className=\"clsBtn\"\r\n                              aria-label=\"delete\"\r\n                              size=\"small\"\r\n                              onClick={() => handleDeleteRowShortQrt(index)}\r\n                            >\r\n                              <Iconify icon=\"carbon:close\" />\r\n                            </IconButton>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      onClick={handleAddRowShortQrt}\r\n                      className=\"AddFilterBtn\"\r\n                    >\r\n                      <Iconify\r\n                        icon=\"material-symbols:add\"\r\n                        style={{\r\n                          verticalAlign: \"0px\",\r\n                          fontSize: \"16px\",\r\n                          marginRight: \"2px\",\r\n                        }}\r\n                      />\r\n                      Add new filter\r\n                    </Button>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n         {/* =============================== filter model Save As Button  =================================  */}\r\n         <BootstrapDialog\r\n        onClose={handleCloseSaveAs}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showSaveAs}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Save Query As</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseSaveAs}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Query name:</legend>\r\n              <div className=\"form-group \">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"customInput\"\r\n                  name=\"queryName\"\r\n                  value={formDataSv.queryName}\r\n                  onChange={handleInputChangeSav}\r\n                  className=\"bsc_sav\"\r\n                  list=\"options\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n\r\n                <datalist id=\"options\">\r\n                  {workReqFilterDpd.map((option, index) => (\r\n                    <option key={index.RowID} value={option.cf_query_title} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Description:</legend>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"w3review\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  value={formDataSv.description}\r\n                  onChange={handleInputChangeSav}\r\n                  cols=\"70\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Availability:</legend>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"G\"\r\n                  checked\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Global(available to everyone)\r\n                </label>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"P\"\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Personal\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid item>\r\n            <Button variant=\"outlined\" onClick={handleCFQrySaveAsBtn}>\r\n              <Iconify icon=\"mingcute:save-line\" /> Save\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n\r\n       {/******************** Approve Work Request ********************/}\r\n       <BootstrapDialog\r\n        onClose={handleCloseApprove}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showApprove}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        className='approveModel'\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"marketeq:file-folder-approved-2\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Approve Work Request</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseApprove}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n        <div className=\"astSubpopup\">\r\n          \r\n\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={4} sx={{ pl: 2 }}>\r\n                  <FormControlLabel\r\n                      control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                      label=\"Status:\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n              {Status.map((status) => (\r\n                    <FormControlLabel\r\n                        key={status.value}\r\n                        value={status.value}\r\n                        control={<Radio />}\r\n                        label={status.label}\r\n                        checked={selected_Status === status.value}\r\n                        onChange={(e) => {\r\n                          setSelected_Status(e.target.value);\r\n                          setErrorMessage('');\r\n                      }}\r\n                    />\r\n                ))}\r\n              </Grid>\r\n          </Grid>\r\n\r\n\r\n           <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={4} sx={{ pl: 2 }}>\r\n                  <FormControlLabel\r\n                      control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                      label=\"Assign to:\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                  <Autocomplete\r\n                      options={Originator}\r\n                      defaultValue={selected_Originator}\r\n                      onChange={(event, value) => {\r\n                          setSelected_Originator(value);\r\n                          setErrorMessage('');\r\n                      }}\r\n                      renderInput={(params) => (\r\n                          <TextField\r\n                              {...params}\r\n                              size=\"small\"\r\n                              placeholder=\"Select...\"\r\n                              variant=\"outlined\"\r\n                              fullWidth // Ensure the TextField takes up full width\r\n                          />\r\n                      )}\r\n                  />\r\n              </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={4} sx={{ pl: 2 }}>\r\n                  <FormControlLabel\r\n                      control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                      label=\"Work Group:\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                  <Autocomplete\r\n                      options={WorkGroup}\r\n                      defaultValue={selected_WorkGroup} \r\n                      onChange={(event, value) => {\r\n                        setSelected_WorkGroup(value);\r\n                        setErrorMessage('');\r\n                      }}\r\n                      renderInput={(params) => (\r\n                          <TextField\r\n                              {...params}\r\n                              size=\"small\"\r\n                              placeholder=\"Select...\"\r\n                              variant=\"outlined\"\r\n                              fullWidth // Ensure the TextField takes up full width\r\n                          />\r\n                      )}\r\n                  />\r\n              </Grid>\r\n          </Grid>\r\n              \r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {/* <Grid item>\r\n            <Button variant=\"outlined\" onClick={onClickApprove}>\r\n          \r\n              <Iconify icon=\"mingcute:save-line\" /> Approve\r\n            </Button>\r\n          </Grid> */}\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n          {errorMessage && (\r\n            <Grid item>\r\n              <div style={{ color: 'red', marginRight: '10px' }}>{errorMessage}</div>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <Button variant=\"outlined\" className=\"SaveButton\" style={{ color: '#fff' }} onClick={onClickApprove}>\r\n              <Iconify icon=\"mingcute:save-line\" /> Approve\r\n            </Button>\r\n          </Grid>\r\n         \r\n        </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n       {/******************** Disapprove Work Request ********************/}\r\n       <BootstrapDialog\r\n        onClose={handleCloseDisapprove}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showDisapprove}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        className='approveModel'\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Disapprove Work Request</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseDisapprove}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n        <div className=\"astSubpopup\">\r\n          \r\n\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={4} sx={{ pl: 2 }}>\r\n                  <FormControlLabel\r\n                      control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                      label=\"Reject By:\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n              <TextField\r\n                  id=\"outlined-basic\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  className=\"Extrasize\"\r\n                  fullWidth\r\n                  defaultValue={AuditUser}\r\n                  disabled\r\n                  />\r\n              </Grid>\r\n          </Grid>\r\n\r\n\r\n           <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={4} sx={{ pl: 2 }}>\r\n                  <FormControlLabel\r\n                      control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                      label=\"Reject Date:\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                  <DateTimePicker\r\n                    value={RejectDate}\r\n                    format=\"dd/MM/yyyy HH:mm\"\r\n                    className=\"Extrasize\"\r\n                    onChange={(newDate) => {\r\n                      setRejectDate(newDate); // Update your state with the new value\r\n                    }}\r\n                    slotProps={{\r\n                      textField: {\r\n                        fullWidth: true,\r\n                      },\r\n                    }}\r\n                  />\r\n              </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={4} sx={{ pl: 2 }}>\r\n                  <FormControlLabel\r\n                      control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                      label=\"Rejected Description:\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <TextareaAutosize\r\n                  aria-label=\"empty textarea\"\r\n                  placeholder=\"\"\r\n                  style={{ width: \"100%\" }}\r\n                  minRows={6.5}\r\n                  defaultValue={RejectedDescription}\r\n                  onChange={(e) => {\r\n                    setRejectedDescription(e.target.value);\r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n          </Grid>\r\n              \r\n        </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {/* <Grid item>\r\n            <Button variant=\"outlined\" onClick={onClickApprove}>\r\n          \r\n              <Iconify icon=\"mingcute:save-line\" /> Approve\r\n            </Button>\r\n          </Grid> */}\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n          {errorMessage && (\r\n            <Grid item>\r\n              <div style={{ color: 'red', marginRight: '10px' }}>{errorMessage}</div>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <Button variant=\"outlined\" onClick={onClickDisapprove}>\r\n              <Iconify icon=\"mingcute:save-line\" /> Disapprove\r\n            </Button>\r\n          </Grid>\r\n         \r\n        </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n\r\n       {/* =============================== filter DropDown Prompt  =================================  */}\r\n       <BootstrapDialog\r\n        onClose={handleClosePromt}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showPromt}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        disableBackdropClick={true} \r\n        disableEscapeKeyDown={true}\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Query Prompter</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={() => handleClosePromt()}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Please Fill In The Value</legend>\r\n              <table style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <tr>\r\n                   \r\n                    <th>Column</th>\r\n                    <th>Operator</th>\r\n                    <th>Value</th>\r\n                    <th>Logical</th>\r\n                \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rowsDropdownPrompt.map((row, index) => {\r\n                    const isRowEmpty = !row.selectedOption && !row.operator && !row.valuept;\r\n                    return !isRowEmpty ? (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"25%\" }}>\r\n                      <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\" }}\r\n                          disabled\r\n                          value={row.selectedOption || \"\"}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          \r\n                        />\r\n                      </td>\r\n\r\n                      <td style={{ width: \"25%\" }}>\r\n                      <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\" }}\r\n                          value={row.operator || \"\"}\r\n                          disabled\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          \r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"25%\" }}>\r\n                      <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\" }}\r\n                          value={row.valuept || \"\"}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                         \r\n                          onChange={(event) => handleInputValueChangePrompt(index, event.target.value)}\r\n                        />\r\n                       \r\n                      </td>\r\n                      <td style={{ width: \"25%\" }}>\r\n                        <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\" }}\r\n                          disabled\r\n                          value={row.logical || \"\"}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          \r\n                        />\r\n                      </td>\r\n                      \r\n                    </tr>\r\n                    ) : null;\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n             \r\n            </fieldset>\r\n\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid item>\r\n            <Button variant=\"outlined\" onClick={handleDropDownPromptSaveAsBtn}>\r\n              <Iconify icon=\"iconoir:submit-document\" /> Save\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </>\r\n  );\r\n}\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n\r\n  const { name } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  //   if (name) {\r\n  //     inputData = inputData.filter(\r\n  //       (tableData) => tableData.col2.toLowerCase().indexOf(col2.toLowerCase()) !== -1\r\n  //     );\r\n  //   }\r\n  return inputData;\r\n}\r\n"],"names":["WorkReqTableRow","_ref","row","selected","onSelectRow","onDeleteRow","onEditRow","onViewRow","onApprove","onDisApprove","wkr_mst_wr_no","wkr_mst_wr_descs","wkr_mst_wr_status","wkr_mst_assetno","wkr_mst_chg_costcenter","wkr_mst_work_area","wkr_mst_assetlocn","wkr_mst_location","wkr_mst_temp_asset","wkr_mst_email_notification","wkr_mst_work_type","wkr_mst_work_class","wkr_mst_work_group","wkr_mst_wo_status","wkr_mst_projectid","wkr_mst_originator","wkr_mst_phone","wkr_det_wo","wkr_det_approver","wkr_appr_date","wkr_det_reject_desc","wkr_det_reject_by","wkr_reject_date","wkr_mst_orig_priority","wkr_mst_org_date","wkr_mst_due_date","wkr_mst_fault_code","wkr_mst_create_by","wkr_mst_create_date","confirm","useBoolean","popover","usePopover","formatDate","dateString","startsWith","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","concat","truncatedDescription","length","substring","_jsxs","_Fragment","children","TableRow","hover","_jsx","TableCell","align","IconButton","color","open","onClick","onOpen","Iconify","icon","Tooltip","title","placement","arrow","style","backgroundColor","padding","borderRadius","fontSize","fontWeight","Checkbox","checked","inputProps","CustomPopover","onClose","sx","width","MenuItem","ConfirmDialog","value","onFalse","content","action","Button","variant","WorkReqTableFiltersResult","filters","onFilters","onResetFilters","results","other","Stack","spacing","Box","typography","component","ml","flexGrow","direction","flexWrap","alignItems","stock","Block","label","map","item","Chip","size","onDelete","inputValue","newValue","filter","handleRemoveStock","publish","handleRemovePublish","startIcon","_ref2","Paper","p","overflow","borderStyle","resultData","undefined","workbook","ExcelJS","worksheet","addWorksheet","columns","header","key","forEach","rowData","addRow","getRow","eachCell","cell","font","bold","argb","fill","type","pattern","fgColor","alignment","horizontal","vertical","eachRow","rowNumber","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","download","click","BootstrapDialog","styled","Dialog","theme","TABLE_HEAD","id","defaultFilters","col1","WorkRequestList","_location$state","_location$state2","_location$state3","_table$selected","site_ID","localStorage","getItem","emp_owner","AuditUser","location","useLocation","DashbordDataGauge","setDashbordDataGauge","useState","state","GaugeDashbordData","DashbordDataSrt","GaugeDashbordDataSort","isLoading","setIsLoading","router","useRouter","navigate","useNavigate","table","useTable","settings","useSettingsContext","maxHeight","setMaxHeight","tableData","setTableData","totalRow","setTotalRow","setFilters","selectedOption","setSelectedOption","currentPage","setCurrentPage","inputRef","useRef","FilterShow","setFilterShow","ResponceStats","setResponceStats","showSave","setShowSave","AssetFiledname","setAssetFiledname","WorkReqFiledname","setWordReqFiledname","selectedOptionEmptyError","setSelectedOptionEmptyError","selectedOptionEmptyErrorShort","setSelectedOptionEmptyErrorShort","valueptEmptyError","setValueptEmptyError","logicalEmptyError","setLogicalEmptyError","TitleAstReg","setTitleAstReg","workReqFilterDpd","setWorkReqFilterDpd","DropListIdGet","setDropListIdGet","DropListId","selectedOptionValue","setselectedOptionValue","showWordOrderQryList","setShowWordOrderQryList","showSaveAs","setShowSaveAs","isChecked","setIsChecked","selectedOptionEmptyErrorQtr","setSelectedOptionEmptyErrorQtr","valueptEmptyErrorQtr","setValueptEmptyErrorQtr","logicalEmptyErrorQtr","setLogicalEmptyErrorQtr","selectedOptionEmptyErrorShortQtr","setSelectedOptionEmptyErrorShortQtr","ExportExcelId","setExportExcelId","selectDropRowID","setselectDropRowID","isInputFocused","setInputFocused","TableSearchData","setTableSearchData","rowId","setRowId","showApprove","setShowApprove","handleCloseApprove","Status","setStatus","selected_Status","setSelected_Status","Originator","setOriginator","selected_Originator","setSelected_Originator","WorkGroup","setWorkGroup","selected_WorkGroup","setSelected_WorkGroup","Button_save","setButton_save","errorMessage","setErrorMessage","showDisapprove","setShowDisapprove","handleCloseDisapprove","RejectDate","setRejectDate","RejectedDescription","setRejectedDescription","showPromt","setShowPromt","rowsDropdownPrompt","setRowsDropdownPrompt","operator","logical","valuept","RowId","prompt","siteCd","queryTypedd","fetchData","useCallback","async","response","httpCommon","get","data","result","total_count","error","console","fetchFilterSubPopupSavedropdon","matchedItem","find","RowID","cfQueryDescValue","cf_query_title","fetchDataGaugeDSB","post","rows","rowsort","site_cd","emp_ID","status","getb","DashbrdCount","Swal","text","customClass","container","useEffect","handelSearchButton","Array","isArray","responseJson","WorkorderStatus","wrk_sts_desc","wrk_sts_status","WKO_Originator","emp_mst_empl_id","emp_mst_name","WKO_Work_Group","wrk_grp_grp_cd","wrk_grp_desc","message","get_dropdown","dataFiltered","inputData","comparator","name","stabilizedThis","el","index","sort","a","b","order","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","canReset","dense","isEqual","handleFilters","onResetPage","prevState","handleDeleteRow","Rowid","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","handleDeleteRows","deleteRows","includes","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","AstNo","Ast_no","handleResetFilters","push","paths","dashboard","product","details","current","handleResize","windowHeight","innerHeight","newMaxHeight","Math","floor","addEventListener","removeEventListener","setRows","setRowsort","selectedOptionShort","promptAsd","queryType","isButtonDisabled","some","Openbracket","Closebracket","oprt","Logcl","handleDeleteRowPopup","newRows","splice","FilterhandleClose","newRowsort","rowOptions","column_name","default_label","getWorkReqListLebel","RetriveData","allowOutsideClick","SiteCD","admin","titleName","updatedEmptyRows","updatedEmptyRowsort","handleDeleteRowShort","handleCloseSave","setFormDataSv","queryName","description","formDataSv","availability","owner","handleInputChangeSav","event","target","prevData","InsertCf_queryListData","combinedData","rowsQrtData","rowsortQrtData","log","Title","rowsQrt","setRowsQrt","rowsortQrt","setRowsortQrt","handleCloseWorkQryList","RetriveDataQueryList","handleCloseSaveAs","InsertCf_queryListDataSavaAs","SITE_CD","OWNER_ID","inputValueGet","filteredData","searchString","toLowerCase","WorkRequest_Approval","EmpID","EmpName","LOGINID","split","json_workrequest","trim","JSON","stringify","WorkRequest_Disapproval","date_of_reject","Moment","format","handleClosePromt","reason","Helmet","Container","maxWidth","themeStretch","className","CustomBreadcrumbs","heading","links","RouterLink","to","pathname","select","mb","xs","md","Card","pr","marginTop","flexShrink","handelFilterAction","Icon","marginRight","FormControl","InputLabel","Select","labelId","input","OutlinedInput","onChange","responseData","_event$target","selectedValue","selectedOptionObjectFilter","selectedOptionObject","GetRowID","GetPrompt","cf_query_list_prompt","list_typeF","cf_query_list_column","cf_query_list_operator","cf_query_list_value","cf_query_list_logical","setTimeout","textTransform","display","verticalAlign","height","placeholder","ref","onKeyDown","preventDefault","onFocus","handleInputFocus","onBlur","handleInputBlur","ExportWorkReqlistToExcel","handleExportClick","pt","TableContainer","position","TableSelectedAction","numSelected","rowCount","onSelectAllRows","onTrue","Scrollbar","overflowX","Table","minWidth","TableHeadCustom","headLabel","onSort","TableBody","colSpan","PaperProps","BackdropProps","DialogTitle","textAlign","DialogContent","paddingTop","ThreeCircles","radius","visible","ariaLabel","rowStats","mst_RowID","handleShowDisapprove","handleShowApprove","TableEmptyRows","emptyRows","TablePaginationCustom","count","onPageChange","newPage","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","fullWidth","m","marginLeft","right","top","palette","grey","dividers","Grid","handelQuryListpopup","retriveBtn","RetriveDataAllData","SaveRegTbl","disabled","option","handleOptionChange1","updatedRows","handleOptionChangeOprter","class","e","handleSelectChange","oninput","handleInputValueChangeQtr","updatedRowsQtr","handleIncludeChangeLogcil","justifyContent","handleAddRow","isLastRowEmpty","prevRows","handleOptionChange2","handleSelectChangeshort","handleAddRowShort","newRow","list","cols","for","DialogActions","handleCFQrySave","cancelButtonText","_rows$selectedOption","_rows$logical","_rows$valuept","_rowsort$selectedOpti","SaveAsworkorderTbl","parts","prevrowsQrt","list_typeS","cf_query_list_order_by","handleClickOption","handleCheckboxClick","borderCollapse","React","handleOptionChangeQtr","handleOptionChangeOprterQtr","handleSelectChangeQtr","handleInputValueChangeQtr2","handleDeleteRowQrt","handleAddRowQrt","handleOptionChangeSrtQtr","handleSelectChangeshortQtr","handleDeleteRowShortQrt","handleAddRowShortQrt","handleCFQrySaveAsBtn","_rowsQrt$selectedOpti","_rowsQrt$logical","_rowsQrt$valuept","_rowsortQrt$selectedO","pl","FormControlLabel","control","Radio","Autocomplete","options","defaultValue","renderInput","params","TextField","onClickApprove","DateTimePicker","newDate","slotProps","textField","TextareaAutosize","minRows","onClickDisapprove","disableBackdropClick","disableEscapeKeyDown","handleInputValueChangePrompt","idx","hasEmptyValuept","hasRowIdValuept","fetchDataResponse"],"sourceRoot":""}