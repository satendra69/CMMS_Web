{"version":3,"file":"static/js/4036.50c082b7.chunk.js","mappings":"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","sources":["sections/Inventory/InventoryMaster/InventoryMasterCardView.js","sections/Inventory/InventoryMaster/Table/InventoryMasterTableRow.js","sections/Inventory/InventoryMaster/ExportFIle/ExportInventoryMasterlistToExcel.js","sections/Inventory/InventoryMaster/InventoryMasterList.js"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\n\r\nimport httpCommon from \"src/http-common\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CardActionArea, CardActions } from \"@mui/material\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Iconify from \"src/components/iconify/iconify\";\r\nimport { ThreeCircles } from \"react-loader-spinner\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport img from \"../../../assets/img/Add_Image_icon.png\";\r\nconst InventoryMasterCardView = () => {\r\n  const site_ID = localStorage.getItem(\"site_ID\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [totalRow, setTotalRow] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const navigate = useNavigate();\r\n  // const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `/get_InventoryMasterCardViewTableData.php?site_cd=${site_ID}&page=${currentPage}`\r\n        );\r\n        console.log(\"response______\",response);\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, [site_ID, currentPage]);\r\n\r\n  const handleEventClick = (events2) => {\r\n    if (events2 && events2.rowId) {\r\n      navigate(`/dashboard/work/neworder?rowID=${events2.rowId}`);\r\n    }\r\n  };\r\n  const itemsPerPage = 100;\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    console.log(\"newPage____\",newPage);\r\n   // setPage(newPage);\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const numPages = Math.ceil('5000' / itemsPerPage);\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      const Rowid = id;\r\n      \r\n      if (Rowid !== \"\") {\r\n        navigate(`/dashboard/InventoryMaster/inventoryform`, {\r\n          state: {\r\n            RowID: Rowid,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const renderItems = () => {\r\n    const startIdx = (page - 1) * itemsPerPage;\r\n    const endIdx = startIdx + itemsPerPage;\r\n    const pageItems = tableData.slice(startIdx, endIdx);\r\n\r\n    return pageItems.map((item, index) => (\r\n      <Grid item xs={12} md={3} key={`${startIdx}_${index}`}>\r\n      \r\n        <Card sx={{ mt: 1, mb: 1 }}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={\r\n                item.attachment\r\n                  ? item.attachment\r\n                  : img\r\n              }\r\n              style={{\r\n                display: \"block\",\r\n                margin: \"auto\",\r\n                width: !item.attachment ? \"auto\" : \"100%\",\r\n              }}\r\n              onClick={() =>\r\n                handleEditRow(item.RowID)\r\n              }\r\n            />\r\n            <CardContent>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n                component=\"div\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                onClick={() =>\r\n                  handleEditRow(item.RowID)\r\n                }\r\n              >\r\n                <span>{item.itm_mst_stockno}</span>\r\n                <span>{item.itm_det_part_deac_status}</span>\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                <Iconify icon=\"tabler:file-description\" width=\"277\" />{\" \"}\r\n                {item.itm_mst_desc.length > 30\r\n                  ? `${item.itm_mst_desc.slice(0, 30)}...`\r\n                  : item.itm_mst_desc}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                <Iconify\r\n                  icon=\"material-symbols:edit-location-sharp\"\r\n                  width=\"277\"\r\n                />{\" \"}\r\n                {item.itm_mst_mstr_locn !== \"\" &&\r\n                item.itm_mst_mstr_locn !== \"null\"\r\n                  ? item.itm_mst_mstr_locn\r\n                  : \"\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                <Iconify icon=\"carbon:map-center\" width=\"277\" />{\" \"}\r\n                {item.itm_mst_costcenter.length > 35\r\n                  ? `${item.itm_mst_costcenter.slice(0, 35)}...`\r\n                  : item.itm_mst_costcenter}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                <Iconify icon=\"akar-icons:price-cut\" width=\"277\" />{\" \"}\r\n                {item.itm_mst_ttl_oh.length > 35\r\n                  ? `${item.itm_mst_ttl_oh.slice(0, 35)}...`\r\n                  : item.itm_mst_ttl_oh}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Dialog\r\n          open={isLoading}\r\n          aria-labelledby=\"loading-dialog-title\"\r\n          PaperProps={{\r\n            style: {\r\n              backgroundColor: \"transparent\", // Set your desired background color here\r\n            },\r\n          }}\r\n          BackdropProps={{\r\n            className: \"yourbackdropclass\",\r\n          }}\r\n        >\r\n          <DialogTitle\r\n            id=\"loading-dialog-title\"\r\n            style={{ textAlign: \"center\" }}\r\n          ></DialogTitle>\r\n          <DialogContent>\r\n            <div style={{ textAlign: \"center\", paddingTop: \"10px\" }}>\r\n              <ThreeCircles\r\n                radius=\"9\"\r\n                visible={true}\r\n                ariaLabel=\"three-circles-loading\"\r\n                color=\"green\"\r\n              />\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      ) : (\r\n        <div>\r\n          <Grid container spacing={2} className=\"MasterCardView\">\r\n            {renderItems()}\r\n          </Grid>\r\n          <Pagination\r\n            count={numPages}\r\n            page={page}\r\n            onChange={handleChangePage}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            style={{\r\n              position: \"fixed\",\r\n              bottom: 20,\r\n              left: \"50%\",\r\n              transform: \"translateX(-50%)\",\r\n              backgroundColor: \"white\",\r\n              padding: 10,\r\n              boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\nInventoryMasterCardView.propTypes = {\r\n  data: PropTypes.shape({\r\n    site_cd: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\nexport default InventoryMasterCardView;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\n// @mui\r\n\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\n// utils\r\n\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\n\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport httpCommon from 'src/http-common';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InventoryMasterTableRow({\r\n \r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onDeleteRow,\r\n  onEditRow,\r\n  onViewRow,\r\n  onDuplicateRow,\r\n  onPrintQrCode,\r\n}) {\r\n  \r\n  const {\r\n    col1,\r\n    col2,\r\n    col3,\r\n    col4,\r\n    col5,\r\n    col6,\r\n    col7,\r\n    col8,\r\n    col9,\r\n    col10,\r\n    col11,\r\n    col12,\r\n    col14,\r\n    col15,\r\n    col16,\r\n    col17,\r\n    col18,\r\n    col19,\r\n    col20,\r\n    col21,\r\n    col22,\r\n    col23,\r\n    col24,\r\n    col25,\r\n    col26,\r\n    col27,\r\n    col28,\r\n    col29,\r\n    col30,\r\n    col31,\r\n    col32,\r\n    col33,\r\n    col34,\r\n    col35,\r\n    col36,\r\n    col37,\r\n    col38,\r\n    col39,\r\n    col40,\r\n    col41,\r\n    col42,\r\n    col43,\r\n    col44,\r\n    col45,\r\n    col46,\r\n    col47,\r\n    col48,\r\n    col49,\r\n    col50,\r\n    col51,\r\n    col52,\r\n    col53,\r\n    col54,\r\n    \r\n  } = row;\r\n  const AuditUser = localStorage.getItem(\"emp_mst_login_id\");\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n  const formatDate = (dateString) => {\r\n    \r\n    if (!dateString || typeof dateString !== 'string' || dateString.startsWith('1900-01-01')) {\r\n      return '';\r\n    }\r\n  \r\n    // Parse the date string\r\n    const date = new Date(dateString);\r\n  \r\n    // Check if the date is valid\r\n    if (isNaN(date.getTime())) {\r\n      return '';\r\n    }\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-indexed, so add 1\r\n    const year = date.getFullYear();\r\n    const hours = date.getHours().toString().padStart(2, '0');\r\n    const minutes = date.getMinutes().toString().padStart(2, '0');\r\n    return `${day}-${month}-${year} ${hours}:${minutes}`;\r\n  };\r\nconst [UserPermission, setUserPermission] = useState([]);\r\n// get User Permission \r\nconst getUserPermission = async () => {\r\n  try {\r\n    const response = await httpCommon.get(`/getAssetUserPermission.php?login_id=${AuditUser}`);\r\n    if (response.data.status == \"SUCCESS\") {\r\n      setUserPermission(response.data.data.UserPermission);\r\n      \r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n};\r\n\r\n  useEffect(() => {\r\n\r\n    getUserPermission();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n      \r\n        <TableCell align=\"right\">\r\n          <IconButton color={popover.open ? 'primary' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n\r\n       \r\n        <TableCell>\r\n          {(() => {\r\n            if (col1 === 'P') {\r\n              return (\r\n                <div>\r\n                  <span\r\n                  >\r\n                    Stock ({col1})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (col1 === 'T') {\r\n              return (\r\n                <div>\r\n                  <span\r\n                  >\r\n                    Tool ({col1})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (col1 === 'S') {\r\n              return (\r\n                <div>\r\n                  <span\r\n                  >\r\n                    Serialize ({col1})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            if (col1 === 'Z') {\r\n              return (\r\n                <div>\r\n                  <span\r\n                  >\r\n                   Serialize With Asset ({col1})\r\n                  </span>\r\n                </div>\r\n              );\r\n            }\r\n            return null; // Return null if none of the conditions match\r\n          })()}\r\n          </TableCell>\r\n        <TableCell>{col2}</TableCell>\r\n        <TableCell>{col3}</TableCell>\r\n        <TableCell>{col4}</TableCell>\r\n        <TableCell>{col5}</TableCell>\r\n        <TableCell>{col6}</TableCell>\r\n        <TableCell>{col7}</TableCell>\r\n        <TableCell>{col8}</TableCell>\r\n        <TableCell>{col9}</TableCell>\r\n        <TableCell>{col10}</TableCell>\r\n        <TableCell>{col11}</TableCell>\r\n        <TableCell>{col12}</TableCell>\r\n        <TableCell>{col14}</TableCell>\r\n        <TableCell>{col15}</TableCell>\r\n        <TableCell>{col16}</TableCell>\r\n        <TableCell>{col17}</TableCell>\r\n        <TableCell>{col18}</TableCell>\r\n        <TableCell>{col19}</TableCell>\r\n        <TableCell>{col20}</TableCell>\r\n        <TableCell>{col21}</TableCell>\r\n        <TableCell>{col22}</TableCell>\r\n        <TableCell>{col23}</TableCell>\r\n        <TableCell>{col24}</TableCell>\r\n        <TableCell>{col25}</TableCell>\r\n        <TableCell>{col26}</TableCell>\r\n        <TableCell>{col27}</TableCell>\r\n        <TableCell>{col28}</TableCell>\r\n        <TableCell>{col29}</TableCell>\r\n        <TableCell>{col30}</TableCell>\r\n        <TableCell>{col31}</TableCell>\r\n        <TableCell>{col32}</TableCell>\r\n        <TableCell>{col33}</TableCell>\r\n        <TableCell>{col34}</TableCell>\r\n        <TableCell>{col35}</TableCell>\r\n        <TableCell>{col36}</TableCell>\r\n        <TableCell>{col37}</TableCell>\r\n        <TableCell>{col38}</TableCell>\r\n        <TableCell>{col39}</TableCell>\r\n        <TableCell>{col40}</TableCell>\r\n        <TableCell>{col41}</TableCell>\r\n        <TableCell>{col42}</TableCell>\r\n        <TableCell>{col43}</TableCell>\r\n        <TableCell>{col44}</TableCell>\r\n        <TableCell>{col45}</TableCell>\r\n        <TableCell>{col46}</TableCell>\r\n        <TableCell>{col47}</TableCell>\r\n        <TableCell>{formatDate(col48)}</TableCell>\r\n        <TableCell>{formatDate(col49)}</TableCell>\r\n        <TableCell>{formatDate(col50)}</TableCell>\r\n        <TableCell> {formatDate(col51)}</TableCell>\r\n        <TableCell>{formatDate(col52)}</TableCell>\r\n        <TableCell>{col53}</TableCell>\r\n        <TableCell>{formatDate(col54)} </TableCell>\r\n      \r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n           // onViewRow();\r\n            popover.onClose();\r\n          }}\r\n          disabled={!UserPermission.every(item => item.edit_flag === \"1\")}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n          disabled={!UserPermission.every(item => item.edit_flag === \"1\")}\r\n        >\r\n           \r\n          <Iconify icon=\"solar:pen-bold\" />\r\n          Edit\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            onDuplicateRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:copy-bold\" />\r\n          Duplicate\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onPrintQrCode();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"f7:qrcode-viewfinder\" />\r\n          Print QR Code\r\n        </MenuItem>\r\n     \r\n        <MenuItem\r\n          onClick={() => {\r\n            onDeleteRow();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n          disabled={!UserPermission.every(item => item.edit_flag === \"1\")}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nInventoryMasterTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onDuplicateRow:PropTypes.func,\r\n  onPrintQrCode:PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport ExcelJS from \"exceljs\";\r\n\r\nconst ExportInventoryMasterlistToExcel = ({ resultData }) => {\r\n  if (resultData !== \"\" && resultData !== undefined) {\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet(\"Inventory Master List\");\r\n\r\n    // Customize header names and set individual column widths\r\n    worksheet.columns = [\r\n      { header: \"Type\", key: \"col1\", width: 15 },\r\n      { header: \"Stock No\", key: \"col2\", width: 22 },\r\n      { header: \"Master Location\", key: \"col3\", width: 15 },\r\n      { header: \"Cost Center\", key: \"col4\", width: 15 },\r\n      { header: \"Account\", key: \"col5\", width: 15 },\r\n      { header: \"Description\", key: \"col6\", width: 60 },\r\n      { header: \"Issue Price\", key: \"col7\", width: 15 },\r\n      { header: \"Total OH\", key: \"col8\", width: 15 },\r\n      { header: \"Order Rule\", key: \"col9\", width: 15},\r\n      { header: \"Part No\", key: \"col10\", width: 15 },\r\n      { header: \"Commodity Code\", key: \"col11\", width: 10 },\r\n      { header: \"Stock Group\", key: \"col12\", width: 15 },\r\n      { header: \"Serialize Counter\", key: \"col13\", width: 15 },\r\n      { header: \"Issue UOM\", key: \"col14\", width: 18 },\r\n      { header: \"Receive UOM\", key: \"col15\", width: 10 },\r\n      { header: \"Auto Spare\", key: \"col16\", width: 10 },\r\n      { header: \"Critical Spare\", key: \"col17\", width: 10 },\r\n      { header: \"ABC Class\", key: \"col18\", width: 20 },\r\n      { header: \"Storage Type\", key: \"col19\", width: 20 },\r\n      { header: \"Tax Code\", key: \"col20\", width: 20 },\r\n      { header: \"Part Deac Status\", key: \"col21\", width: 20 },\r\n      { header: \"Order Point\", key: \"col22\", width: 20 },\r\n      { header: \"Maximum\", key: \"col23\", width: 20 },\r\n      { header: \"YTD Usage\", key: \"col24\", width: 20 },\r\n      { header: \"Standard Cost\", key: \"col25\", width: 20 },\r\n      { header: \"Average Cost\", key: \"col26\", width: 20 },\r\n      { header: \"Last Cost\", key: \"col27\", width: 20 },\r\n      { header: \"Total Hard Reserve\", key: \"col28\", width: 20 },\r\n      { header: \"Total Short\", key: \"col29\", width: 20 },\r\n      { header: \"PO Outstanding\", key: \"col30\", width: 20 },\r\n      { header: \"PR Outstanding\", key: \"col31\", width: 20 },\r\n      { header: \"Total Repair\", key: \"col32\", width: 20 },\r\n      { header: \"Asset NO\", key: \"col33\", width: 20 },\r\n      { header: \"Weight\", key: \"col34\", width: 20 },\r\n      { header: \"UDF Text3\", key: \"col35\", width: 20 },\r\n      { header: \"UDF Text4\", key: \"col36\", width: 20 },\r\n      { header: \"UDF Text5\", key: \"col37\", width: 20 },\r\n      { header: \"UDF Text6\", key: \"col38\", width: 20 },\r\n      { header: \"UDF Text7\", key: \"col39\", width: 20 },\r\n      { header: \"UDF Text8\", key: \"col40\", width: 20 },\r\n      { header: \"Manufacturer\", key: \"col41\", width: 20 },\r\n      { header: \"Mode In\", key: \"col42\", width: 20 },\r\n      { header: \"Billable Cost\", key: \"col43\", width: 20 },\r\n      { header: \"UDF Numeric2\", key: \"col44\", width: 20 },\r\n      { header: \"UDF Numeric3\", key: \"col45\", width: 20 },\r\n      { header: \"UDF Numeric4\", key: \"col46\", width: 20 },\r\n      { header: \"UDF Numeric5\", key: \"col47\", width: 20 },\r\n      { header: \"UDF Date1\", key: \"col48\", width: 20 },\r\n      { header: \"UDF Date2\", key: \"col49\", width: 20 },\r\n      { header: \"UDF Date3\", key: \"col50\", width: 20 },\r\n      { header: \"UDF Date4\", key: \"col51\", width: 20 },\r\n      { header: \"UDF Date5\", key: \"col52\", width: 20 },\r\n      { header: \"Created By\", key: \"col53\", width: 20 },\r\n      { header: \"Created Date\", key: \"col54\", width: 20 },\r\n    ];\r\n\r\n    // Add data to the worksheet\r\n    resultData.forEach((rowData) => {\r\n      worksheet.addRow(rowData);\r\n    });\r\n\r\n    const headerRow = worksheet.getRow(1);\r\n    // Apply styling to header row\r\n    worksheet.getRow(1).eachCell((cell) => {\r\n      cell.font = { size: 12, bold: true, color: { argb: \"FFFFFF\" } };\r\n      cell.fill = {\r\n        type: \"pattern\",\r\n        pattern: \"solid\",\r\n        fgColor: { argb: \"2F5597\" },\r\n      };\r\n      cell.alignment = { horizontal: \"center\", vertical: \"center\" };\r\n    });\r\n\r\n    // Apply styling to data rows\r\n    worksheet.eachRow((row, rowNumber) => {\r\n      if (rowNumber > 1) {\r\n        row.font = { size: 11, color: { argb: \"#000\" } }; // Customize font for data rows\r\n        row.alignment = { horizontal: \"center\", vertical: \"middle\" }; // Center data text\r\n      }\r\n    });\r\n\r\n    // Save the workbook\r\n    workbook.xlsx.writeBuffer().then((buffer) => {\r\n      const blob = new Blob([buffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      const link = document.createElement(\"a\");\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = \"InventoryMaster_list_Data.xlsx\";\r\n      link.click();\r\n    });\r\n  }\r\n  return <div>{/* Your export component JSX */}</div>;\r\n};\r\n\r\nexport default ExportInventoryMasterlistToExcel;\r\n","import isEqual from \"lodash/isEqual\";\r\nimport { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport React from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// @mui\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Table from \"@mui/material/Table\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { useRouter } from \"src/routes/hooks\";\r\nimport { RouterLink } from \"src/routes/components\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// _mock\r\n\r\n// components\r\nimport { useSettingsContext } from \"src/components/settings\";\r\n\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableSkeleton,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from \"src/components/table\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Scrollbar from \"src/components/scrollbar\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\nimport httpCommon from \"src/http-common\";\r\nimport Swal from \"sweetalert2\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport { Icon } from \"@iconify/react\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\n\r\nimport { ThreeCircles } from \"react-loader-spinner\";\r\n// Toastfy\r\nimport { ToastContainer, toast, Bounce } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport InventoryMasterCardView from \"./InventoryMasterCardView\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\n//\r\nimport InventoryMasterTableRow from \"./Table/InventoryMasterTableRow\";\r\nimport AssetTableFiltersResult from \"src/sections/Asset/AssetTableFiltersResult\";\r\nimport ExportInventoryMasterlistToExcel from \"./ExportFIle/ExportInventoryMasterlistToExcel\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function InventoryMasterList() {\r\n  const location = useLocation();\r\n  const site_ID = localStorage.getItem(\"site_ID\");\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const AuditUser = localStorage.getItem(\"emp_mst_login_id\");\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const popover = usePopover();\r\n  const router = useRouter();\r\n  const navigate = useNavigate();\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n  const [maxHeight, setMaxHeight] = useState(\"400px\");\r\n  const [tableData, setTableData] = useState([]);\r\n  const [tableHeaderData, settableHeaderData] = useState([]);\r\n  const [totalRow, setTotalRow] = useState();\r\n\r\n  \r\n  const [DashbordDataGauge, setDashbordDataGauge] = useState(\r\n    location.state?.GaugeDashbordData\r\n  );\r\n  \r\n  const DashbordDataSrt = location.state?.GaugeDashbordDataSort || [];\r\n\r\n  const [DropListIdGet, setDropListIdGet] = useState(\r\n    location.state?.DropListId || []\r\n  );\r\n\r\n\r\n  console.log(\"DashbordDataGauge____\",DashbordDataGauge);\r\n  console.log(\"DashbordDataSrt____\",DashbordDataSrt);\r\n  console.log(\"DropListIdGet____\",DropListIdGet);\r\n  const TABLE_HEAD = [\r\n    { id: \"\", label: \"Action\", width: 60 },\r\n    {\r\n      id: \"col1\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 0\r\n          ? tableHeaderData[0].Header\r\n          : \"Type\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col2\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 1\r\n          ? tableHeaderData[1].Header\r\n          : \"Stock No\",\r\n      width: 120,\r\n      padding: 10,\r\n    },\r\n    {\r\n      id: \"col3\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 2\r\n          ? tableHeaderData[2].Header\r\n          : \"Master Location\",\r\n      width: 160,\r\n    },\r\n    {\r\n      id: \"col4\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 3\r\n          ? tableHeaderData[3].Header\r\n          : \"Cost Center\",\r\n      width: 130,\r\n    },\r\n    {\r\n      id: \"col5\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 4\r\n          ? tableHeaderData[4].Header\r\n          : \"Account\",\r\n      width: 100,\r\n    },\r\n    {\r\n      id: \"col6\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 5\r\n          ? tableHeaderData[5].Header\r\n          : \"Description\",\r\n      width: 200,\r\n    },\r\n    {\r\n      id: \"col7\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 6\r\n          ? tableHeaderData[6].Header\r\n          : \"Issue Price\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col8\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 7\r\n          ? tableHeaderData[7].Header\r\n          : \"Total OH\",\r\n      width: 115,\r\n    },\r\n    {\r\n      id: \"col9\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 8\r\n          ? tableHeaderData[8].Header\r\n          : \"Order Rule\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col10\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 9\r\n          ? tableHeaderData[9].Header\r\n          : \"Part No\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col11\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 10\r\n          ? tableHeaderData[10].Header\r\n          : \"Commodity Code\",\r\n      width: 170,\r\n    },\r\n    {\r\n      id: \"col12\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 11\r\n          ? tableHeaderData[11].Header\r\n          : \"Stock Group\",\r\n      width: 130,\r\n    },\r\n  \r\n    {\r\n      id: \"col14\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 12\r\n          ? tableHeaderData[12].Header\r\n          : \"Issue UOM\",\r\n      width: 125,\r\n    },\r\n    {\r\n      id: \"col15\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 13\r\n          ? tableHeaderData[13].Header\r\n          : \"Receive UOM\",\r\n      width: 140,\r\n    },\r\n    {\r\n      id: \"col16\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 14\r\n          ? tableHeaderData[14].Header\r\n          : \"Auto Spare\",\r\n      width: 100,\r\n    },\r\n    {\r\n      id: \"col17\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 15\r\n          ? tableHeaderData[15].Header\r\n          : \"Critical Spare\",\r\n      width: 150,\r\n    },\r\n    {\r\n      id: \"col18\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 16\r\n          ? tableHeaderData[16].Header\r\n          : \"ABC Class\",\r\n      width: 140,\r\n    },\r\n    {\r\n      id: \"col19\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 17\r\n          ? tableHeaderData[17].Header\r\n          : \"Storage Type\",\r\n      width: 140,\r\n    },\r\n    {\r\n      id: \"col20\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 18\r\n          ? tableHeaderData[18].Header\r\n          : \"Tax Code\",\r\n      width: 135,\r\n    },\r\n    {\r\n      id: \"col21\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 19\r\n          ? tableHeaderData[19].Header\r\n          : \"Part Deac Status\",\r\n      width: 170,\r\n    },\r\n    {\r\n      id: \"col22\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 20\r\n          ? tableHeaderData[20].Header\r\n          : \"Order Point\",\r\n      width: 150,\r\n    },\r\n    {\r\n      id: \"col23\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 21\r\n          ? tableHeaderData[21].Header\r\n          : \"Maximum\",\r\n      width: 140,\r\n    },\r\n    {\r\n      id: \"col24\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 22\r\n          ? tableHeaderData[22].Header\r\n          : \"YTD Usage\",\r\n      width: 140,\r\n    },\r\n    {\r\n      id: \"col25\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 23\r\n          ? tableHeaderData[23].Header\r\n          : \"Standard Cost\",\r\n      width: 160,\r\n    },\r\n    {\r\n      id: \"col26\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 24\r\n          ? tableHeaderData[24].Header\r\n          : \"Average Cost\",\r\n      width: 150,\r\n    },\r\n    {\r\n      id: \"col27\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 25\r\n          ? tableHeaderData[25].Header\r\n          : \"Last Cost\",\r\n      width: 140,\r\n    },\r\n    {\r\n      id: \"col28\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 26\r\n          ? tableHeaderData[26].Header\r\n          : \"Total Hard Reserve\",\r\n      width: 180,\r\n    },\r\n    {\r\n      id: \"col29\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 27\r\n          ? tableHeaderData[27].Header\r\n          : \"Total Short\",\r\n      width: 140,\r\n    },\r\n    {\r\n      id: \"col30\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 28\r\n          ? tableHeaderData[28].Header\r\n          : \"PO Outstanding\",\r\n      width: 170,\r\n    },\r\n    {\r\n      id: \"col31\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 29\r\n          ? tableHeaderData[29].Header\r\n          : \"PR Outstanding\",\r\n      width: 170,\r\n    },\r\n    {\r\n      id: \"col32\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 30\r\n          ? tableHeaderData[30].Header\r\n          : \"Total Repair\",\r\n      width: 150,\r\n    },\r\n    {\r\n      id: \"col33\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 31\r\n          ? tableHeaderData[31].Header\r\n          : \"Asset NO\",\r\n      width: 150,\r\n    },\r\n    {\r\n      id: \"col34\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 32\r\n          ? tableHeaderData[32].Header\r\n          : \"Weight\",\r\n      width: 100,\r\n    },\r\n    {\r\n      id: \"col35\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 33\r\n          ? tableHeaderData[33].Header\r\n          : \"UDF Text3\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col36\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 34\r\n          ? tableHeaderData[34].Header\r\n          : \"UDF Text4\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col37\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 35\r\n          ? tableHeaderData[35].Header\r\n          : \"UDF Text5\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col38\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 36\r\n          ? tableHeaderData[36].Header\r\n          : \"UDF Text6\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col39\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 37\r\n          ? tableHeaderData[37].Header\r\n          : \"UDF Text7\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col40\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 38\r\n          ? tableHeaderData[38].Header\r\n          : \"UDF Text8\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col41\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 39\r\n          ? tableHeaderData[39].Header\r\n          : \"Manufacturer\",\r\n      width: 155,\r\n    },\r\n    {\r\n      id: \"col42\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 40\r\n          ? tableHeaderData[40].Header\r\n          : \"Mode In\",\r\n      width: 100,\r\n    },\r\n    {\r\n      id: \"col43\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 41\r\n          ? tableHeaderData[41].Header\r\n          : \"Billable Cost\",\r\n      width: 145,\r\n    },\r\n    {\r\n      id: \"col44\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 42\r\n          ? tableHeaderData[42].Header\r\n          : \"UDF Numeric2\",\r\n      width: 145,\r\n    },\r\n    {\r\n      id: \"col45\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 43\r\n          ? tableHeaderData[43].Header\r\n          : \"UDF Numeric3\",\r\n      width: 145,\r\n    },\r\n    {\r\n      id: \"col46\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 44\r\n          ? tableHeaderData[44].Header\r\n          : \"UDF Numeric4\",\r\n      width: 145,\r\n    },\r\n    {\r\n      id: \"col47\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 45\r\n          ? tableHeaderData[45].Header\r\n          : \"UDF Numeric5\",\r\n      width: 145,\r\n    },\r\n    {\r\n      id: \"col48\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 46\r\n          ? tableHeaderData[46].Header\r\n          : \"UDF Date1\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col49\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 47\r\n          ? tableHeaderData[47].Header\r\n          : \"UDF Date2\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col50\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 48\r\n          ? tableHeaderData[48].Header\r\n          : \"UDF Date3\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col51\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 49\r\n          ? tableHeaderData[49].Header\r\n          : \"UDF Date4\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col52\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 50\r\n          ? tableHeaderData[50].Header\r\n          : \"UDF Date5\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col53\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 51\r\n          ? tableHeaderData[51].Header\r\n          : \"Created By\",\r\n      width: 120,\r\n    },\r\n    {\r\n      id: \"col54\",\r\n      label:\r\n        tableHeaderData && tableHeaderData.length > 52\r\n          ? tableHeaderData[52].Header\r\n          : \"Created Date\",\r\n      width: 140,\r\n    },\r\n  ];\r\n\r\n  const defaultFilters = {\r\n    col1: \"\",\r\n    publish: [],\r\n    stock: [],\r\n  };\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n\r\n  const confirm = useBoolean();\r\n \r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const inputRef = useRef(null);\r\n  const numberOfColumns = \"71\";\r\n  const [FilterShow, setFilterShow] = useState(false);\r\n  const [ResponceStats, setResponceStats] = useState(\"\");\r\n\r\n  const [showSave, setShowSave] = useState(false);\r\n  const [AssetFiledname, setAssetFiledname] = useState([]);\r\n  const [InventoryMasterFiledname, setInventoryMasterFiledname] = useState([]);\r\n  const [selectedOptionEmptyError, setSelectedOptionEmptyError] =\r\n    useState(false);\r\n  const [selectedOptionEmptyErrorShort, setSelectedOptionEmptyErrorShort] =\r\n    useState(false);\r\n  const [valueptEmptyError, setValueptEmptyError] = useState(false);\r\n  const [logicalEmptyError, setLogicalEmptyError] = useState(false);\r\n  const [TitleAstReg, setTitleAstReg] = useState(\"\");\r\n  const [TitleSaveBtn, setTitleSaveBtn] = useState(\"\");\r\n\r\n  const [assetFilterDpd, setAssetFilterDpd] = useState([]);\r\n  const [InvntryMasterFilterDpd, setInvntryMasterFilterDpd] = useState([]);\r\n\r\n \r\n  const [selectedOptionValue, setselectedOptionValue] = useState();\r\n  const [showWordOrderQryList, setShowWordOrderQryList] = useState(false);\r\n  const handleShowWorkOrderQryList = () => setShowWordOrderQryList(true);\r\n  const [showSaveAs, setShowSaveAs] = useState(false);\r\n  const [isChecked, setIsChecked] = useState(true);\r\n  const [selectedOptionEmptyErrorQtr, setSelectedOptionEmptyErrorQtr] =\r\n    useState(false);\r\n  const [valueptEmptyErrorQtr, setValueptEmptyErrorQtr] = useState(false);\r\n  const [logicalEmptyErrorQtr, setLogicalEmptyErrorQtr] = useState(false);\r\n  const [\r\n    selectedOptionEmptyErrorShortQtr,\r\n    setSelectedOptionEmptyErrorShortQtr,\r\n  ] = useState(false);\r\n  const [ExportExcelId, setExportExcelId] = useState(\"\");\r\n  const [selectDropRowID, setselectDropRowID] = useState(\"\");\r\n  const [isInputFocused, setInputFocused] = useState(false);\r\n  const [TableSearchData, setTableSearchData] = useState([]);\r\n  const [UserPermission, setUserPermission] = useState([]);\r\n  const [DefineQueryBtn, setDefineQueryBtn] = useState(\"\");\r\n  const [showQrModel, setshowQrModel] = useState(false);\r\n  const [availabilityQRCode, setAvailabilityQRCode] = useState(\"selected1\");\r\n  const [QrCodeRowId, setQrCodeRowId] = useState(\"\");\r\n\r\n  const [showDiv1, setShowDiv1] = useState(true);\r\n  const [showDiv2, setShowDiv2] = useState(false);\r\n  const [button1Active, setButton1Active] = useState(true);\r\n  const [button2Active, setButton2Active] = useState(false);\r\n  // Get Api data useEffect\r\n\r\n  const fetchData = useCallback(async () => {\r\n    \r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_InventoryMasterTableData.php?site_cd=${site_ID}&page=${currentPage}`\r\n      );\r\n     // console.log(\"response____\",response);\r\n      setTableData(response.data.data.result);\r\n      settableHeaderData(response.data.data.header);\r\n      setTotalRow(response.data.total_count);\r\n      // Swal.close();\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [site_ID, currentPage]);\r\n\r\n  const fetchFilterSubPopupSavedropdon = async () => {\r\n    // Get dropdown value using api\r\n\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_inventory_masterList_filter_dropdown.php?site_cd=${site_ID}&auditUser=${AuditUser}`\r\n      );\r\n       // console.log(\"check__-asset__\",response);\r\n      setInvntryMasterFilterDpd(response.data);\r\n      // Swal.close();\r\n      if (DropListIdGet !== \"\" && DropListIdGet !== null) {\r\n        const matchedItem = response.data.find(\r\n          (item) => item.RowID === DropListIdGet\r\n        );\r\n        if (matchedItem) {\r\n          const cfQueryDescValue = matchedItem.cf_query_title;\r\n\r\n          setTitleAstReg(cfQueryDescValue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n    //  fetch the data Gauge dashbord\r\n    const fetchDataGaugeDSB = useCallback(async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/get_gauge_dashbord_inventory_master_data.php?page=\" + currentPage,\r\n          {\r\n            rows: DashbordDataGauge,\r\n            rowsort: DashbordDataSrt,\r\n            site_cd: site_ID,\r\n            emp_ID:emp_owner,\r\n          }\r\n        );\r\n      //  console.log(\"response____datsbord___\",response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          if (response.data.data.result.length > 0) {\r\n            setTableData(response.data.data.result);\r\n            setTotalRow(response.data.total_count);\r\n          //  setResponceStats(response.data.StatusPRM);\r\n          //  setTotalCount(response.data.TotalCountPRM);\r\n          }\r\n         \r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }, [site_ID, currentPage]);\r\n\r\n  const handleOptionChange = async (event, responseData) => {\r\n    const selectedValue = event?.target?.value || selectedOption;\r\n\r\n    setCurrentPage(1);\r\n\r\n    const selectedOptionObjectFilter = InvntryMasterFilterDpd.find(\r\n      (item) => item.cf_query_title === selectedValue\r\n    );\r\n\r\n    let selectedOptionObject;\r\n\r\n    if (Array.isArray(responseData) && responseData.length > 0) {\r\n      selectedOptionObject = responseData.find(\r\n        (item) => item.cf_query_title === selectedValue\r\n      );\r\n    }\r\n\r\n    if (selectedOptionObjectFilter) {\r\n      const GetRowID = selectedOptionObjectFilter.RowID;\r\n      setExportExcelId(GetRowID);\r\n      setselectDropRowID(GetRowID);\r\n      setCurrentPage(1);\r\n      setDropListIdGet([]);\r\n      setTitleAstReg(\"\");\r\n      setTitleSaveBtn(\"\");\r\n    } else {\r\n      const GetRowID = selectedOptionObject.RowID;\r\n      setExportExcelId(GetRowID);\r\n      setselectDropRowID(GetRowID);\r\n      setCurrentPage(1);\r\n      setDropListIdGet([]);\r\n      setTitleAstReg(\"\");\r\n      setTitleSaveBtn(\"\");\r\n    }\r\n    setSelectedOption(selectedValue);\r\n  };\r\n\r\n  const getb = useCallback(async () => {\r\n    //console.log(\"$_______enter----\");\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await httpCommon.post( \r\n        `/get_inventory_master_selectedoption_data.php?site_cd=${site_ID}&ItemID=${selectDropRowID}&page=${currentPage}&EmpId=${emp_owner}`\r\n      );\r\n      // console.log(\"check___api__data__\",response);\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.DashbrdCount);\r\n        // Swal.close();\r\n        setIsLoading(false);\r\n      } else {\r\n        setTableData(\"\");\r\n        setTotalRow(\"\");\r\n        setIsLoading(false);\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [site_ID, currentPage, selectDropRowID]);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: Array.isArray(tableData) ? tableData : [],\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 60 : 80;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  // const handleDeleteRow = useCallback((id) => {\r\n  //   console.log(\"crow_______\",id);\r\n  //   //   const deleteRow = tableData.filter((row) => row.id !== id);\r\n  //   //   setTableData(deleteRow);\r\n\r\n  //   //   table.onUpdatePageDeleteRow(dataInPage.length);\r\n  //    },\r\n  //   [dataInPage.length, table, tableData]\r\n  // );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    async (id, row) => {\r\n      const Rowid = id;\r\n      const stockno = row.col2;\r\n      if (Rowid !== \"\" && stockno !== \"\") {\r\n        Swal.fire({\r\n          title: \"Are you sure?\",\r\n          text: \"You won't be able to revert this!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n        }).then(async (result) => {\r\n          // Add async here if you want to use await inside then\r\n          if (result.isConfirmed) {\r\n            setIsLoading(true);\r\n\r\n            try {\r\n              const response = await httpCommon.get(\r\n                `/delete_inventory_list_record.php?site_cd=${site_ID}&mst_id=${Rowid}&stockno=${stockno}`\r\n              );\r\n              // console.log(\"response_____delete___\",response);\r\n              if (response.data.status == \"SUCCESS\") {\r\n                Swal.fire({\r\n                  title: \"Deleted!\",\r\n                  text: response.data.message,\r\n                  icon: \"success\",\r\n                });\r\n                fetchData();\r\n              }\r\n              if (response.data.status == \"ERROR\") {\r\n                Swal.fire({\r\n                  title: \"Oops!\",\r\n                  text: response.data.message,\r\n                  icon: \"error\",\r\n                });\r\n              }\r\n              setIsLoading(false);\r\n            } catch (error) {\r\n              console.error(\"Error fetching data:\", error);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [tableData, router, site_ID]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter(\r\n      (row) => !table.selected.includes(row.id)\r\n    );\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id, row) => {\r\n      const Rowid = id;\r\n      \r\n      if (Rowid !== \"\") {\r\n        navigate(`/dashboard/InventoryMaster/inventoryform`, {\r\n          state: {\r\n            RowID: Rowid,\r\n            currentPage,\r\n            selectedOption,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [router, currentPage, selectedOption]\r\n  );\r\n  const handleDuplicateRow = useCallback(\r\n    (id, row) => {\r\n      const DuplicatRowid = id;\r\n      if (DuplicatRowid !== \"\") {\r\n        navigate(`/dashboard/InventoryMaster/inventoryform`, {\r\n          state: {\r\n            DuplicatRowid: DuplicatRowid,\r\n            DupRowID: DuplicatRowid,\r\n            currentPage,\r\n            selectedOption,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [router, currentPage, selectedOption]\r\n  );\r\n\r\n  const handlePrintQr = useCallback((id) => {\r\n    setshowQrModel(true);\r\n    const Rowid = id;\r\n    setQrCodeRowId(Rowid);\r\n  });\r\n\r\n  const handleQRCodePrintBtn = () => {\r\n    if (QrCodeRowId !== \"\" && availabilityQRCode !== null) {\r\n      navigate(`/dashboard/asset/assetPrintQr`, {\r\n        state: {\r\n          RowID: QrCodeRowId,\r\n          selectedVlue: availabilityQRCode,\r\n          ItemID: selectDropRowID,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloseQrCode = () => {\r\n    setshowQrModel(false);\r\n  };\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.product.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n    inputRef.current.value = \"\";\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // set screen revolation set\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const windowHeight = window.innerHeight;\r\n      // Adjust maxHeight based on window height\r\n      const newMaxHeight = Math.floor(windowHeight * 0.6) + \"px\"; // Adjust this value as needed\r\n      setMaxHeight(newMaxHeight);\r\n    };\r\n\r\n    // Call handleResize on initial mount\r\n    handleResize();\r\n    // Add event listener for window resize\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Remove event listener on component unmount\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // Filter funcation\r\n  const [rows, setRows] = useState([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"\",\r\n      logical: \"AND\",\r\n      prompt: \"0\",\r\n      valuept: \"\",\r\n      siteCd: site_ID,\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  // Short By State\r\n  const [rowsort, setRowsort] = useState([\r\n    {\r\n      selectedOptionShort: \"\",\r\n      promptAsd: \"ASC\",\r\n      siteCd: site_ID,\r\n      queryType: \"S\",\r\n    },\r\n  ]);\r\n\r\n  const isButtonDisabled = rows.some((row) => row.selectedOption === \"\");\r\n  const Openbracket = [\r\n    { value: \"(\", label: \"(\" },\r\n    { value: \"\", label: \"\" },\r\n  ];\r\n\r\n  const Closebracket = [\r\n    { value: \"(\", label: \")\" },\r\n    { value: \"\", label: \"\" },\r\n  ];\r\n\r\n  const oprt = [\r\n    { value: \"like\", label: \"Like\" },\r\n    { value: \"not like\", label: \"Not Like\" },\r\n    { value: \"I=\", label: \"Is\" },\r\n    { value: \"!=\", label: \"Is not\" },\r\n    { value: \"=\", label: \"Equal to\" },\r\n    { value: \">\", label: \"Greater than\" },\r\n    { value: \"<\", label: \"Less than\" },\r\n    { value: \">=\", label: \"Greater than or equal to\" },\r\n    { value: \"<=\", label: \"Less than or equal to\" },\r\n    { value: \"<>\", label: \"Not equal to\" },\r\n  ];\r\n\r\n  const Logcl = [\r\n    { value: \"And\", label: \"And\" },\r\n    { value: \"Or\", label: \"Or\" },\r\n  ];\r\n\r\n  const handleOptionChange1 = (index, selectedOption) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].selectedOption = selectedOption;\r\n    setSelectedOptionEmptyError(false);\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  const handleOptionChangeOprter = (index, operator) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].operator = operator;\r\n    setRows(updatedRows);\r\n  };\r\n  const handleSelectChange = (index, checked) => {\r\n    const newRows = [...rows];\r\n    newRows[index].prompt = checked ? \"1\" : \"0\";\r\n    setRows(newRows);\r\n  };\r\n\r\n  const handleInputValueChangeQtr = (index, newValue) => {\r\n    const updatedRowsQtr = [...rows];\r\n    updatedRowsQtr[index].valuept = newValue;\r\n    setValueptEmptyError(false);\r\n    setRows(updatedRowsQtr);\r\n    // Check if the selectedOption and valuept are empty\r\n    if (!newValue && !updatedRowsQtr[index].selectedOption) {\r\n      //  setSelectedOptionEmptyErrorQtr(true);\r\n      //  setValueptEmptyErrorQtr(true);\r\n    } else {\r\n      // setSelectedOptionEmptyErrorQtr(false);\r\n      //  setValueptEmptyErrorQtr(false);\r\n    }\r\n  };\r\n\r\n  const handleIncludeChangeLogcil = (index, logical) => {\r\n    const updatedRows = [...rows];\r\n    updatedRows[index].logical = logical;\r\n    setLogicalEmptyError(false);\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const isLastRowEmpty =\r\n      rows.length > 0 &&\r\n      (!rows[rows.length - 1].selectedOption ||\r\n        rows[rows.length - 1].selectedOption === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyError(!isLastRowEmpty.selectedOption);\r\n      setValueptEmptyError(!isLastRowEmpty.valuept);\r\n      setLogicalEmptyError(!isLastRowEmpty.logical);\r\n    } else {\r\n      // Add a new row\r\n      setRows((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOption: \"\",\r\n          operator: \"\",\r\n          logical: \"\",\r\n          prompt: \"0\",\r\n          valuept: \"\",\r\n          siteCd: site_ID,\r\n          queryTypedd: \"F\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyError(false);\r\n      setValueptEmptyError(false);\r\n      setLogicalEmptyError(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRowPopup = (index) => {\r\n    if (rows.length > 1) {\r\n      const newRows = [...rows];\r\n      newRows.splice(index, 1);\r\n      setRows(newRows);\r\n    }\r\n  };\r\n\r\n  const FilterhandleClose = () => {\r\n    // Call your custom logic here before closing the filter\r\n    if (rows.length > 1) {\r\n      const newRows = [rows[0]]; // Keep only the first row\r\n      setRows(newRows);\r\n    }\r\n\r\n    // Call handleDeleteRowShort to remove all rowsort except the first one\r\n    if (rowsort.length > 1) {\r\n      const newRowsort = [rowsort[0]]; // Keep only the first row\r\n      setRowsort(newRowsort);\r\n    }\r\n\r\n    // Close the filter\r\n    setFilterShow(false);\r\n  };\r\n\r\n  const handelFilterAction = () => {\r\n    setCurrentPage(1);\r\n    const updatedEmptyRows = rows.map((row) => ({\r\n      // empty state data\r\n      ...row,\r\n      selectedOption: \"\",\r\n      logical: \"\",\r\n      operator: \"\",\r\n      valuept: \"\",\r\n      logical: \"\",\r\n    }));\r\n    setRows(updatedEmptyRows);\r\n\r\n    const updatedEmptyRowsort = rows.map((rowsort) => ({\r\n      // empty state data\r\n      ...rowsort,\r\n      selectedOptionShort: \"\",\r\n    }));\r\n    setRowsort(updatedEmptyRowsort);\r\n    setDefineQueryBtn(\"\");\r\n    if (rows.length > 1) {\r\n      const newRows = [rows[0]]; // Keep only the first row\r\n      setRows(newRows);\r\n    }\r\n\r\n    // Call handleDeleteRowShort to remove all rowsort except the first one\r\n    if (rowsort.length > 1) {\r\n      const newRowsort = [rowsort[0]]; // Keep only the first row\r\n      setRowsort(newRowsort);\r\n    }\r\n    setFilterShow(true);\r\n    getInventoryMasterListLebel();\r\n  };\r\n  const rowOptions = InventoryMasterFiledname.map((row) => ({\r\n    value: row.column_name,\r\n    label: `${row.default_label}`,\r\n  }));\r\n  /* Filter dropdown value */\r\n  const getInventoryMasterListLebel = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_inventoryMasterFilterFileName.php\"\r\n      );\r\n      // console.log(\"response___assetList\",response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setInventoryMasterFiledname(response.data.data);\r\n        //setAstdetLabel(response.data.data.ast_det);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Retrive button  funcation,setTableData\r\n\r\n  //console.log(\"rowsort____\",rowsort);\r\n\r\n  const RetriveData = useCallback(async () => {\r\n    let hasEmptyOperator = false;\r\n    let hasEmptyValuept = false;\r\n    let hasEmptyLogical = false;\r\n    // console.log(\"rowrowrow___\",rows);\r\n    for (const row of rows) {\r\n      if (!row.operator) {\r\n        hasEmptyOperator = true;\r\n      }\r\n      if (!row.valuept) {\r\n        hasEmptyValuept = true;\r\n      }\r\n    }\r\n    if (DefineQueryBtn === \"\") {\r\n      // console.log(\"Enter this code_____\");\r\n      if (hasEmptyOperator || hasEmptyValuept) {\r\n        let fieldName = \"\";\r\n        if (hasEmptyOperator && hasEmptyValuept) {\r\n          fieldName = \"Operator and Value\";\r\n        } else if (hasEmptyOperator) {\r\n          fieldName = \"Operator\";\r\n        } else if (hasEmptyValuept) {\r\n          fieldName = \"Value\";\r\n        }\r\n        Swal.close();\r\n        toast.error(`Please fill the required field: ${fieldName}`, {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          transition: Bounce,\r\n          style: {\r\n            width: \"400px\",\r\n          },\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    //  console.log(\"currentPage____\",currentPage);\r\n    // setCurrentPage(1);\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_inventoryMasterRegData.php?page=\" + currentPage,\r\n        {\r\n          rows: rows,\r\n          rowsort: rowsort,\r\n          SiteCD: site_ID,\r\n          admin: emp_owner,\r\n        }\r\n      );\r\n\r\n      if (\r\n        response.data.data &&\r\n        response.data.data.result &&\r\n        response.data.data.result.length > 0\r\n      ) {\r\n        setTableData(response.data.data.result);\r\n        setTotalRow(response.data.total_count);\r\n        if (TitleSaveBtn != \"\" && TitleSaveBtn != null) {\r\n          setTitleAstReg(TitleSaveBtn);\r\n        } else {\r\n          setTitleAstReg(response.data.titleName);\r\n        }\r\n        // setTitleAstReg(response.data.titleName);\r\n        setDefineQueryBtn(\"RetriveData\");\r\n\r\n        Swal.close();\r\n        FilterhandleClose();\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Opps..!\",\r\n          text: \"No Record Found!\",\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [site_ID, currentPage, rows, rowsort]);\r\n\r\n  const retriveBtn = () => {\r\n    if (rows.some((row) => row.selectedOption !== \"\")) {\r\n      setTitleSaveBtn(\"\");\r\n      RetriveData();\r\n    }\r\n  };\r\n\r\n  const SaveRegTbl = () => {\r\n    setShowSave(true);\r\n    fetchFilterSubPopupSavedropdon();\r\n  };\r\n\r\n  // Short By code\r\n  const handleOptionChange2 = (index, selectedOptionShort) => {\r\n    const updatedRows = [...rowsort];\r\n    updatedRows[index].selectedOptionShort = selectedOptionShort;\r\n    setSelectedOptionEmptyErrorShort(false);\r\n    setRowsort(updatedRows);\r\n  };\r\n  const handleSelectChangeshort = (index, checked) => {\r\n    const newRows = [...rowsort];\r\n    newRows[index].promptAsd = checked ? \"ASC\" : \"DESC\";\r\n    setRowsort(newRows);\r\n  };\r\n  const handleAddRowShort = () => {\r\n    if (rowsort[rowsort.length - 1].selectedOptionShort === \"\") {\r\n      setSelectedOptionEmptyErrorShort(\r\n        rowsort[rowsort.length - 1].selectedOptionShort === \"\"\r\n      );\r\n    } else {\r\n      const newRow = {\r\n        selectedOptionShort: \"\",\r\n        promptAsd: \"ASC\",\r\n      };\r\n      setRowsort([...rowsort, newRow]);\r\n    }\r\n  };\r\n  const handleDeleteRowShort = (index) => {\r\n    if (rowsort.length > 1) {\r\n      const newRows = [...rowsort];\r\n      newRows.splice(index, 1);\r\n      setRowsort(newRows);\r\n    }\r\n  };\r\n  const handleCloseSave = () => {\r\n    setShowSave(false);\r\n    setFormDataSv({\r\n      queryName: \"\",\r\n      description: \"\",\r\n    });\r\n  };\r\n\r\n  const [formDataSv, setFormDataSv] = useState([\r\n    {\r\n      queryName: \"\",\r\n      description: \"\",\r\n      availability: \"G\",\r\n      site_cd: site_ID,\r\n      owner: emp_owner,\r\n    },\r\n  ]);\r\n  const handleInputChangeSav = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormDataSv((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleInputChangeQRCode = (event) => {\r\n    setAvailabilityQRCode(event.target.value);\r\n  };\r\n\r\n  // Insert Cf_query Api with Query List popup data\r\n  const InsertCf_queryListData = async () => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      formDataSv: formDataSv,\r\n      rowsQrtData: rows,\r\n      rowsortQrtData: rowsort,\r\n      site_cd: site_ID,\r\n      owner: emp_owner,\r\n      availability: \"G\",\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/Insert_InventoryMasterFilterQuerySave.php\",\r\n        combinedData\r\n      );\r\n\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setTitleSaveBtn(response.data.Title);\r\n        setTitleAstReg(\"\");\r\n        fetchFilterSubPopupSavedropdon();\r\n        RetriveData();\r\n        handleDeleteRowPopup();\r\n        handleDeleteRowShort();\r\n        Swal.close();\r\n        handleCloseSave();\r\n        FilterhandleClose();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // Filter Save button funcation click to\r\n  const handleCFQrySave = () => {\r\n    if (formDataSv.queryName.trim() !== \"\") {\r\n      const inputValue = formDataSv.queryName;\r\n      const matchingOption = InvntryMasterFilterDpd.find(\r\n        (option) => option.cf_query_title === inputValue\r\n      );\r\n      if (matchingOption) {\r\n        //setMessage('Input value matches an option in the list.');\r\n        Swal.fire({\r\n          title: \"Are you sure?\",\r\n          text: \"Do you want to overwrite the query\" + \" \" + inputValue,\r\n          icon: \"warning\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes!\",\r\n          cancelButtonText: \"No\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            if (\r\n              rows?.selectedOption?.trim() !== \"\" &&\r\n              rows?.logical?.trim() !== \"\" &&\r\n              rows?.valuept?.trim() !== \"\" &&\r\n              rowsort?.selectedOptionShort?.trim() !== \"\"\r\n            ) {\r\n              InsertCf_queryListData();\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        InsertCf_queryListData();\r\n      }\r\n    } else {\r\n      console.log(\"empty__\");\r\n    }\r\n  };\r\n  // Query button click to funcatio start\r\n  // Handel Query List popup\r\n  const [rowsQrt, setRowsQrt] = useState([\r\n    {\r\n      selectedOption: \"\",\r\n      operator: \"\",\r\n      logical: \"AND\",\r\n      prompt: \"\",\r\n      valuept: \"\",\r\n      siteCd: site_ID,\r\n      queryTypedd: \"F\",\r\n    },\r\n  ]);\r\n  //Sorting data append rowsQrt rowsortQrt\r\n  const [rowsortQrt, setRowsortQrt] = useState([\r\n    {\r\n      selectedOptionShort: \"\",\r\n      promptAsd: \"\",\r\n      siteCd: site_ID,\r\n      queryType: \"S\",\r\n    },\r\n  ]);\r\n  const handleCloseWorkQryList = () => {\r\n    setShowWordOrderQryList(false);\r\n    FilterhandleClose();\r\n    handleCloseSave();\r\n    setselectedOptionValue(\"\");\r\n    setRowsQrt([]);\r\n    setRowsortQrt([]);\r\n  };\r\n  const RetriveDataQueryList = async () => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_All_InventoryMasterRegData.php?page=\" + currentPage,\r\n        {\r\n          rows: rowsQrt,\r\n          rowsort: rowsortQrt,\r\n          SiteCD: site_ID,\r\n          admin: emp_owner,\r\n        }\r\n      );\r\n      // console.log(\"response____fliter___\",response);\r\n      setTableData(response.data.data.result);\r\n      setTotalRow(response.data.total_count);\r\n      Swal.close();\r\n      FilterhandleClose();\r\n      const updatedEmptyRows = rowsQrt.map((row) => ({\r\n        // empty state data\r\n        ...row,\r\n        selectedOption: \"\",\r\n        logical: \"\",\r\n        valuept: \"\",\r\n      }));\r\n      setRows(updatedEmptyRows);\r\n\r\n      const updatedEmptyRowsort = rowsortQrt.map((rowsort) => ({\r\n        // empty state data\r\n        ...rowsort,\r\n        selectedOptionShort: \"\",\r\n      }));\r\n      setRowsort(updatedEmptyRowsort);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const DeleteInventoryMasterQryList = async () => {\r\n    const [cf_query_title, RowID] = selectedOptionValue.split(\"-\");\r\n\r\n    if (selectedOptionValue && RowID !== \"\") {\r\n      try {\r\n        Swal.fire({\r\n          title: \"Are you sure?\",\r\n          text: \"You want to delete \" + cf_query_title + \" query!\",\r\n          icon: \"warning\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n        }).then(async (result) => {\r\n          if (result.isConfirmed) {\r\n            const response = await httpCommon.get(\r\n              \"/delete_InventoryMaster_QueryListData.php?value=\" +\r\n                RowID +\r\n                \"&siteId=\" +\r\n                site_ID\r\n            );\r\n\r\n            if (response.data.status == \"SUCCESS\") {\r\n              fetchFilterSubPopupSavedropdon();\r\n              //  setErrord(null);\r\n              setselectedOptionValue(\"\");\r\n              setRowsQrt([]);\r\n              setRowsortQrt([]);\r\n              //setSelectedRow([]);\r\n              Swal.fire(\"Deleted!\", \"Your query has been deleted.\", \"success\");\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"empty\");\r\n    }\r\n  };\r\n  const SaveInventoryMasterQryList = async () => {\r\n    const [cf_query_title, RowID] = selectedOptionValue.split(\"-\");\r\n    const isAnySelectedOptionShortEmpty = rowsortQrt.some(\r\n      (row) => !row.selectedOptionShort\r\n    );\r\n    if (isAnySelectedOptionShortEmpty && RowID != \"\") {\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Please Wait !\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      const combinedData = {\r\n        rowsQrtData: rowsQrt,\r\n        siteCd: site_ID,\r\n        owner: emp_owner,\r\n        mst_RowID: RowID,\r\n        rowsortQrtData: rowsortQrt,\r\n      };\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/Insert_InventoryMasterQueryListDataSave.php\",\r\n          combinedData\r\n        );\r\n        //  console.log(\"response__SaveBytncf__\",response);\r\n        if (response.data.status == \"SUCCESS\") {\r\n          Swal.close();\r\n          Swal.fire({\r\n            title: \"Success!\",\r\n            text: \"Your query update successfully.\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              RetriveDataQueryList();\r\n              setRowsQrt([]);\r\n              setselectedOptionValue(\"\");\r\n              setRowsortQrt([]);\r\n              setRowsort([]);\r\n              setRows([]);\r\n\r\n              handleCloseWorkQryList();\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n  };\r\n  const SaveAsInventoryMasterQryTbl = () => {\r\n    setShowSaveAs(true);\r\n  };\r\n\r\n  const handleCloseSaveAs = () => {\r\n    setShowSaveAs(false);\r\n    setFormDataSv({\r\n      queryName: \"\",\r\n      description: \"\",\r\n    });\r\n  };\r\n  const handleCFQrySaveAsBtn = () => {\r\n    if (formDataSv.queryName.trim() !== \"\") {\r\n      const inputValue = formDataSv.queryName;\r\n      const matchingOption = InvntryMasterFilterDpd.find(\r\n        (option) => option.cf_query_title === inputValue\r\n      );\r\n      if (matchingOption) {\r\n        //setMessage('Input value matches an option in the list.');\r\n        Swal.fire({\r\n          title: \"Are you sure?\",\r\n          text: \"Do you want to overwrite the query\" + \" \" + inputValue,\r\n          icon: \"warning\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes!\",\r\n          cancelButtonText: \"No\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            if (\r\n              rowsQrt?.selectedOption?.trim() !== \"\" &&\r\n              rowsQrt?.logical?.trim() !== \"\" &&\r\n              rowsQrt?.valuept?.trim() !== \"\" &&\r\n              rowsortQrt?.selectedOptionShort?.trim() !== \"\"\r\n            ) {\r\n              InsertCf_queryListDataSavaAs();\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        InsertCf_queryListDataSavaAs();\r\n      }\r\n    } else {\r\n      console.log(\"empty__\");\r\n    }\r\n  };\r\n  // fetch data using dropdon\r\n  const handleClickOption = async (selectedOption) => {\r\n    setselectedOptionValue(selectedOption);\r\n\r\n    let cf_query_title, RowID;\r\n\r\n    const hyphenCount = selectedOption.split(\"-\").length - 1;\r\n\r\n    if (hyphenCount === 1) {\r\n      [cf_query_title, RowID] = selectedOption.split(\"-\");\r\n    } else {\r\n      const parts = selectedOption.split(\"-\");\r\n      cf_query_title = parts[0].trim();\r\n      RowID = parts[parts.length - 1].trim();\r\n    }\r\n\r\n    setTitleAstReg(cf_query_title);\r\n\r\n    setRowsQrt([]);\r\n    setRowsortQrt([]);\r\n    if (selectedOption !== \"\") {\r\n      Swal.fire({\r\n        title: \"Please Wait !\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_work_order_filter_query_data.php?site_cd=\" +\r\n            site_ID +\r\n            \"&RowID=\" +\r\n            RowID\r\n        );\r\n        //  console.log(\"response____fluter___\",response);\r\n        if (\r\n          response.data.data &&\r\n          response.data.data.list_typeF &&\r\n          response.data.data.list_typeF.length > 0\r\n        ) {\r\n          const newRows = response.data.data.list_typeF.map((item) => ({\r\n            selectedOption: item.cf_query_list_column,\r\n            operator: item.cf_query_list_operator,\r\n            prompt: item.cf_query_list_prompt,\r\n            valuept: item.cf_query_list_value,\r\n            logical: item.cf_query_list_logical,\r\n            siteCd: site_ID,\r\n            queryTypedd: \"F\",\r\n          }));\r\n          const timeoutId = setTimeout(() => {\r\n            Swal.close();\r\n            setRowsQrt((prevrowsQrt) => [...prevrowsQrt, ...newRows]);\r\n          }, 3000);\r\n          //setShowAssetByDescp(false);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: \"Oops...\",\r\n            text: \"No record found Please try again !\",\r\n          });\r\n        }\r\n        if (response.data.data && response.data.data.list_typeS.length > 0) {\r\n          const newRows = response.data.data.list_typeS.map((item) => ({\r\n            selectedOptionShort: item.cf_query_list_column,\r\n            promptAsd: item.cf_query_list_order_by,\r\n            queryType: \"S\",\r\n            siteCd: site_ID,\r\n          }));\r\n\r\n          // Append newRows to the existing tableData\r\n\r\n          const timeoutId = setTimeout(() => {\r\n            Swal.close();\r\n            setRowsortQrt((rowsortQrt) => [...rowsortQrt, ...newRows]);\r\n          }, 3000);\r\n          //setShowAssetByDescp(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handelQuryListpopup = () => {\r\n    fetchFilterSubPopupSavedropdon();\r\n    handleShowWorkOrderQryList();\r\n  };\r\n\r\n  const handleCheckboxClick = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n  const handleOptionChangeQtr = (index, selectedOption) => {\r\n    const updatedRowsQtr = [...rowsQrt];\r\n    updatedRowsQtr[index].selectedOption = selectedOption;\r\n    setSelectedOptionEmptyErrorQtr(false);\r\n    setRowsQrt(updatedRowsQtr);\r\n  };\r\n\r\n  const handleIncludeChangeLogcilQtr = (index, logical) => {\r\n    const updatedRowsQtr = [...rowsQrt];\r\n    updatedRowsQtr[index].logical = logical;\r\n    setRowsQrt(updatedRowsQtr);\r\n  };\r\n  const handleOptionChangeOprterQtr = (index, operator) => {\r\n    const updatedRowsQtr = [...rowsQrt];\r\n    updatedRowsQtr[index].operator = operator;\r\n    setRowsQrt(updatedRowsQtr);\r\n  };\r\n  const handleSelectChangeQtr = (index, checked) => {\r\n    const newRows = [...rowsQrt];\r\n    newRows[index].prompt = checked ? \"1\" : \"0\";\r\n    setRowsQrt(newRows);\r\n  };\r\n  const handleInputValueChangeQtr2 = (index, newValue) => {\r\n    const updatedRowsQtr = [...rowsQrt];\r\n    updatedRowsQtr[index].valuept = newValue;\r\n    //setValueptEmptyErrorQtr(false);\r\n    setRowsQrt(updatedRowsQtr);\r\n  };\r\n  const handleDeleteRowQrt = (index) => {\r\n    if (rowsQrt.length > 1) {\r\n      const newRows = [...rowsQrt];\r\n      newRows.splice(index, 1);\r\n      setRowsQrt(newRows);\r\n    }\r\n  };\r\n  const handleAddRowQrt = () => {\r\n    const isLastRowEmpty =\r\n      rowsQrt.length > 0 &&\r\n      (!rowsQrt[rowsQrt.length - 1].selectedOption ||\r\n        rowsQrt[rowsQrt.length - 1].selectedOption === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyErrorQtr(!isLastRowEmpty.selectedOption);\r\n      setValueptEmptyErrorQtr(!isLastRowEmpty.valuept);\r\n      setLogicalEmptyErrorQtr(!isLastRowEmpty.logical);\r\n    } else {\r\n      // Add a new row\r\n      setRowsQrt((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOption: \"\",\r\n          operator: \"Like\",\r\n          logical: \"And\",\r\n          prompt: \"0\",\r\n          valuept: \"\",\r\n          siteCd: site_ID,\r\n          queryTypedd: \"F\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyErrorQtr(false);\r\n      setValueptEmptyErrorQtr(false);\r\n      setLogicalEmptyErrorQtr(false);\r\n    }\r\n  };\r\n  const handleOptionChangeSrtQtr = (index, selectedOptionShort) => {\r\n    const updatedRowsQtr = [...rowsortQrt];\r\n    updatedRowsQtr[index].selectedOptionShort = selectedOptionShort;\r\n    setSelectedOptionEmptyErrorShortQtr(false);\r\n    setRowsortQrt(updatedRowsQtr);\r\n  };\r\n  const handleSelectChangeshortQtr = (index, checked) => {\r\n    const newRows = [...rowsortQrt];\r\n    newRows[index].promptAsd = checked ? \"ASC\" : \"DESC\";\r\n    setRowsortQrt(newRows);\r\n  };\r\n  const handleDeleteRowShortQrt = (index) => {\r\n    if (rowsortQrt.length > 1) {\r\n      const newRows = [...rowsortQrt];\r\n      newRows.splice(index, 1);\r\n      setRowsortQrt(newRows);\r\n    }\r\n  };\r\n  const handleAddRowShortQrt = () => {\r\n    const isLastRowEmpty =\r\n      rowsortQrt.length > 0 &&\r\n      (!rowsortQrt[rowsortQrt.length - 1].selectedOptionShort ||\r\n        rowsortQrt[rowsortQrt.length - 1].selectedOptionShort === \"\");\r\n\r\n    if (isLastRowEmpty) {\r\n      setSelectedOptionEmptyErrorShortQtr(!isLastRowEmpty.selectedOptionShort);\r\n      //  setSelectedCheckEmptyErrorShortQtr(!isLastRowEmpty.promptAsd);\r\n    } else {\r\n      // Add a new row\r\n      setRowsortQrt((prevRows) => [\r\n        ...prevRows,\r\n        {\r\n          selectedOptionShort: \"\",\r\n          promptAsd: \"\",\r\n          siteCd: site_ID,\r\n          queryType: \"S\",\r\n        },\r\n      ]);\r\n      setSelectedOptionEmptyErrorShortQtr(false);\r\n      // setSelectedCheckEmptyErrorShortQtr(false);\r\n    }\r\n  };\r\n  const InsertCf_queryListDataSavaAs = async () => {\r\n    const site_ID = localStorage.getItem(\"site_ID\");\r\n    const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const combinedData = {\r\n      formDataSv: formDataSv,\r\n      rowsQrtData: rowsQrt,\r\n      rowsortQrtData: rowsortQrt,\r\n      SITE_CD: site_ID,\r\n      OWNER_ID: emp_owner,\r\n      availability: \"G\",\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/Insert_InventoryMasterQueryListSaveAsData.php\",\r\n        combinedData\r\n      );\r\n\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setTitleAstReg(response.data.Title);\r\n        fetchFilterSubPopupSavedropdon();\r\n        RetriveDataQueryList();\r\n        setRowsQrt([]);\r\n        setselectedOptionValue(\"\");\r\n        setRowsortQrt([]);\r\n        Swal.close();\r\n        handleCloseSave();\r\n        FilterhandleClose();\r\n        handleCloseSaveAs();\r\n        handleCloseWorkQryList();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Search Button Click funcation\r\n  const handelSearchButton = async () => {\r\n    const inputValueGet = inputRef.current.value;\r\n\r\n    if (inputValueGet !== \"\" && inputValueGet !== null) {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `/get_InventoryMasterListSearchData.php?site_cd=${site_ID}&searchTerm=${inputValueGet}&page=${currentPage}`\r\n        );\r\n        // console.log(\"responseSerach_____\",response);\r\n        if (response.data.data.result.length > 0) {\r\n          setTableSearchData(response.data.data.result);\r\n          setTotalRow(response.data.total_count);\r\n\r\n          const filteredData = response.data.data.result.filter((item) => {\r\n            const searchString = inputValueGet.toLowerCase();\r\n\r\n            const keys = Object.keys(item);\r\n            return keys.some((key) => {\r\n              const value = (item[key] || \"\").toLowerCase();\r\n              return value.includes(searchString);\r\n            });\r\n          });\r\n          setTableData(filteredData);\r\n          //   setCurrentPage(1);\r\n          //Swal.close();\r\n          setIsLoading(false);\r\n        } else {\r\n          setIsLoading(false);\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: \"No Record Found!\",\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Backspace\") {\r\n      event.preventDefault();\r\n      const inputValue2 = inputRef.current.value;\r\n      const newValue = inputValue2.slice(0, -1);\r\n      inputRef.current.value = newValue;\r\n      if (newValue === \"\") {\r\n        handleResetFilters();\r\n      }\r\n    }\r\n  };\r\n  const handleInputFocus = () => {\r\n    setInputFocused(true);\r\n  };\r\n\r\n  const handleInputBlur = () => {\r\n    setInputFocused(false);\r\n  };\r\n  const handleExportClick = async () => {\r\n    if (ExportExcelId !== \"\") {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.post(\r\n          `/get_inventoryMasterExcelSheetData.php?site_cd=${site_ID}&ItemID=${ExportExcelId}`\r\n        );\r\n        console.log(\"response_____first\", response);\r\n        Swal.close();\r\n        if (\r\n          response.data.data &&\r\n          response.data.data.result &&\r\n          response.data.data.result.length > 0\r\n        ) {\r\n          ExportInventoryMasterlistToExcel({\r\n            resultData: response.data.data.result,\r\n          });\r\n          popover.onClose();\r\n          Swal.close();\r\n        } else {\r\n          setTableData(\"\");\r\n          Swal.fire({\r\n            title: \"Opps..!\",\r\n            text: \"No Record Found!\",\r\n            icon: \"success\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `/get_inventoryAllMasterExcelSheetData.php?site_cd=${site_ID}`\r\n        );\r\n        // console.log(\"response_____second\",response);\r\n        if (\r\n          response.data.data &&\r\n          response.data.data.result &&\r\n          response.data.data.result.length > 0\r\n        ) {\r\n          ExportInventoryMasterlistToExcel({\r\n            resultData: response.data.data.result,\r\n          });\r\n          popover.onClose();\r\n          Swal.close();\r\n        } else {\r\n          setTableData(\"\");\r\n          Swal.fire({\r\n            title: \"Opps..!\",\r\n            text: \"No Record Found!\",\r\n            icon: \"success\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    setButton1Active(!button1Active);\r\n    setButton2Active(false);\r\n    setShowDiv1(true);\r\n    setShowDiv2(false);\r\n  };\r\n  const handleButtonClick2 = () => {\r\n    setButton2Active(!button2Active);\r\n    setButton1Active(false);\r\n    setShowDiv1(false);\r\n    setShowDiv2(true);\r\n  };\r\n\r\n  const fetchDataCallback = useCallback(fetchData, [site_ID, currentPage]);\r\n  const getbCallback = useCallback(getb, [selectDropRowID]);\r\n  const retriveDataCallback = useCallback(RetriveData, [\r\n    DefineQueryBtn,\r\n    currentPage,\r\n  ]);\r\nconsole.log(\"selectDropRowID____\",selectDropRowID);\r\n  useEffect(() => {\r\n    if (Array.isArray(DashbordDataGauge) && DashbordDataGauge.length > 0) {\r\n      fetchDataGaugeDSB();\r\n    }\r\n    else if (selectDropRowID != \"\" && selectDropRowID != null) {\r\n      // getb();\r\n      getbCallback();\r\n    } else if (TableSearchData != \"\" && TableSearchData != null) {\r\n      handelSearchButton();\r\n    } else if (DefineQueryBtn !== \"\" && DefineQueryBtn === \"RetriveData\") {\r\n      retriveDataCallback();\r\n    } else {\r\n      fetchDataCallback();\r\n    }\r\n    fetchFilterSubPopupSavedropdon();\r\n  }, [\r\n    site_ID,\r\n    currentPage,\r\n    selectDropRowID,\r\n    fetchDataCallback,\r\n    getbCallback,\r\n    retriveDataCallback,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Inventory Master</title>\r\n        <meta name=\"description\" content=\"Inventory Master\" />\r\n      </Helmet>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <div className=\"CustomBreadAsset\">\r\n          <CustomBreadcrumbs\r\n            heading=\"Inventory Master\"\r\n            links={[]}\r\n            action={\r\n              <div\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n                className=\"InventoryBtnIcon\"\r\n              >\r\n                <Button\r\n                  component={RouterLink}\r\n                  variant=\"contained\"\r\n                  className={button1Active ? \"active tableView\" : \"tableView\"}\r\n                  onClick={handleButtonClick}\r\n                >\r\n                  <Iconify icon=\"material-symbols:list\" />\r\n                </Button>\r\n\r\n                <Button\r\n                  component={RouterLink}\r\n                  variant=\"contained\"\r\n                  className={\r\n                    button2Active ? \"active calendarView\" : \"calendarView\"\r\n                  }\r\n                  onClick={handleButtonClick2}\r\n                  sx={{ minWidth: 40 }}\r\n                >\r\n                  <Iconify icon=\"ph:cards-thin\" width={24} height={24} />\r\n                </Button>\r\n                <Button\r\n                  component={RouterLink}\r\n                  variant=\"contained\"\r\n                  className=\"AddNewButton\"\r\n                  startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                  to={{\r\n                    pathname: \"/dashboard/InventoryMaster/inventoryform\",\r\n                    state: { select: \"New_InventoryForm\" },\r\n                  }}\r\n                >\r\n                  New\r\n                </Button>\r\n              </div>\r\n            }\r\n            sx={{ mb: { xs: 3, md: 5 } }}\r\n          />\r\n        </div>\r\n        <div className=\"workReqpage\">\r\n          {showDiv1 && (\r\n            <Card>\r\n              <Stack\r\n                spacing={2}\r\n                alignItems={{ xs: \"flex-end\", md: \"center\" }}\r\n                direction={{\r\n                  xs: \"column\",\r\n                  md: \"row\",\r\n                }}\r\n                sx={{\r\n                  p: 2.5,\r\n                  pr: { xs: 2.5, md: 1 },\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <Button\r\n                  className=\"AssetFilterBtn\"\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    flexShrink: 0,\r\n                  }}\r\n                  onClick={handelFilterAction}\r\n                >\r\n                  <Icon\r\n                    icon=\"fluent:filter-12-filled\"\r\n                    style={{ marginRight: \"5px\" }}\r\n                  />{\" \"}\r\n                  Filter\r\n                </Button>\r\n                <FormControl\r\n                  sx={{\r\n                    flexShrink: 0,\r\n                    width: { xs: 1, md: 300 },\r\n                  }}\r\n                  className=\"selectOptioncls\"\r\n                >\r\n                  <InputLabel id=\"select-label\">Select an Option</InputLabel>\r\n                  <Select\r\n                    labelId=\"select-label\"\r\n                    id=\"select\"\r\n                    input={<OutlinedInput label=\"Select an option\" />}\r\n                    value={\r\n                      TitleSaveBtn !== \"\"\r\n                        ? TitleSaveBtn\r\n                        : TitleAstReg !== \"\"\r\n                        ? TitleAstReg\r\n                        : selectedOption\r\n                    }\r\n                    onChange={handleOptionChange}\r\n                    sx={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {InvntryMasterFilterDpd.map((item) => (\r\n                      <MenuItem key={item.RowID} value={item.cf_query_title}>\r\n                        <Iconify\r\n                          icon=\"mdi:sql-query\"\r\n                          style={{\r\n                            display: \"inline-flex\",\r\n                            verticalAlign: \"middle\",\r\n                            marginRight: \"6px\",\r\n                            marginTop: \"-5px\",\r\n                            width: \"16px\",\r\n                            height: \"16px\",\r\n                          }}\r\n                        />\r\n                        <span style={{ verticalAlign: \"middle\" }}>\r\n                          {item.cf_query_title}\r\n                        </span>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                  flexGrow={1}\r\n                  sx={{ width: 1 }}\r\n                >\r\n                  <div\r\n                    className=\"wordkOrdersearchInput\"\r\n                    style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"Seachrinput\"\r\n                      placeholder=\"Search..\"\r\n                      ref={inputRef}\r\n                      onKeyDown={handleKeyDown}\r\n                      onFocus={handleInputFocus}\r\n                      onBlur={handleInputBlur}\r\n                    />\r\n                    <div>\r\n                      <IconButton\r\n                        onClick={handelSearchButton}\r\n                        className=\"customsearchbutton\"\r\n                      >\r\n                        <Iconify icon=\"eva:search-fill\" />\r\n                      </IconButton>\r\n                    </div>\r\n                  </div>\r\n                  <IconButton onClick={popover.onOpen}>\r\n                    <Iconify icon=\"eva:more-vertical-fill\" />\r\n                  </IconButton>\r\n                </Stack>\r\n              </Stack>\r\n\r\n              <CustomPopover\r\n                open={popover.open}\r\n                onClose={popover.onClose}\r\n                arrow=\"right-top\"\r\n                sx={{ width: 180 }}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    handleExportClick();\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"solar:export-bold\" />\r\n                  Export to Excel\r\n                </MenuItem>\r\n              </CustomPopover>\r\n              {canReset && (\r\n                <AssetTableFiltersResult\r\n                  filters={filters}\r\n                  onFilters={handleFilters}\r\n                  //\r\n                  onResetFilters={handleResetFilters}\r\n                  //\r\n                  results={dataFiltered.length}\r\n                  sx={{ p: 2.5, pt: 0 }}\r\n                />\r\n              )}\r\n\r\n              <TableContainer sx={{ position: \"relative\" }}>\r\n                <TableSelectedAction\r\n                  dense={table.dense}\r\n                  numSelected={table?.selected?.length || 0}\r\n                  rowCount={tableData?.length || 0}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                  action={\r\n                    <Tooltip title=\"Delete\">\r\n                      <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                        <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  }\r\n                />\r\n\r\n                <Scrollbar sx={{ overflowX: \"auto\", maxHeight: maxHeight }}>\r\n                  <Table\r\n                    size={table.dense ? \"small\" : \"medium\"}\r\n                    sx={{ minWidth: 960 }}\r\n                  >\r\n                    <TableHeadCustom\r\n                      order={table.order}\r\n                      orderBy={table.orderBy}\r\n                      headLabel={TABLE_HEAD}\r\n                      rowCount={tableData?.length || 0}\r\n                      numSelected={table.selected.length}\r\n                      onSort={table.onSort}\r\n                      className=\"stickyheader\"\r\n                    />\r\n\r\n                    <TableBody className=\"AssetTable\">\r\n                      {isLoading ? ( // Assuming isLoading is a boolean state indicating whether data is loading\r\n                        <TableRow>\r\n                          <TableCell\r\n                            colSpan={numberOfColumns}\r\n                            className=\"NoRecodcls\"\r\n                          >\r\n                            <Dialog\r\n                              open={isLoading}\r\n                              aria-labelledby=\"loading-dialog-title\"\r\n                              PaperProps={{\r\n                                style: {\r\n                                  backgroundColor: \"transparent\", // Set your desired background color here\r\n                                },\r\n                              }}\r\n                              BackdropProps={{\r\n                                className: \"yourbackdropclass\",\r\n                              }}\r\n                            >\r\n                              <DialogTitle\r\n                                id=\"loading-dialog-title\"\r\n                                style={{ textAlign: \"center\" }}\r\n                              ></DialogTitle>\r\n                              <DialogContent>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: \"center\",\r\n                                    paddingTop: \"10px\",\r\n                                  }}\r\n                                >\r\n                                  <ThreeCircles\r\n                                    radius=\"9\"\r\n                                    visible={true}\r\n                                    ariaLabel=\"three-circles-loading\"\r\n                                    color=\"green\"\r\n                                  />\r\n                                </div>\r\n                              </DialogContent>\r\n                            </Dialog>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ) : (\r\n                        <>\r\n                          {tableData.length === 0 ? (\r\n                            <TableRow>\r\n                              <TableCell\r\n                                colSpan={numberOfColumns}\r\n                                className=\"NoRecodcls\"\r\n                              >\r\n                                No Record Found\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ) : (\r\n                            <>\r\n                              {dataFiltered.map((row) => (\r\n                                <InventoryMasterTableRow\r\n                                  key={row.id}\r\n                                  row={row}\r\n                                  rowStats={ResponceStats}\r\n                                  selected={table.selected.includes(row.col61)}\r\n                                  onSelectRow={() =>\r\n                                    table.onSelectRow(row.col55, row)\r\n                                  }\r\n                                  onDeleteRow={() =>\r\n                                    handleDeleteRow(row.col55, row)\r\n                                  }\r\n                                  onEditRow={() =>\r\n                                    handleEditRow(row.col55, row)\r\n                                  }\r\n                                  onDuplicateRow={() =>\r\n                                    handleDuplicateRow(row.col55, row)\r\n                                  }\r\n                                  onPrintQrCode={() =>\r\n                                    handlePrintQr(row.col55, row)\r\n                                  }\r\n                                  //   onCompleteRow={() => handleCompleteRow(row.col71)}\r\n                                  //  onCloseRow={() => handleCloseRow(row.col71)}\r\n                                />\r\n                              ))}\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                      <TableEmptyRows\r\n                        emptyRows={emptyRows(\r\n                          table.page,\r\n                          table.rowsPerPage,\r\n                          tableData.length\r\n                        )}\r\n                      />\r\n                    </TableBody>\r\n                  </Table>\r\n                </Scrollbar>\r\n              </TableContainer>\r\n\r\n              <TablePaginationCustom\r\n                count={totalRow > 0 ? totalRow : dataFiltered.length}\r\n                page={currentPage - 1}\r\n                rowsPerPage={table.rowsPerPage}\r\n                onPageChange={(event, newPage) => {\r\n                  setCurrentPage(newPage + 1);\r\n                  table.onChangePage(event, newPage);\r\n                }}\r\n                currentPage={currentPage}\r\n                //  onRowsPerPageChange={table.onChangeRowsPerPage}\r\n                onRowsPerPageChange={(rowsPerPage) => {\r\n                  table.onChangeRowsPerPage(rowsPerPage);\r\n                }}\r\n                // dense={table.dense}\r\n                //  onChangeDense={table.onChangeDense}\r\n              />\r\n            </Card>\r\n          )}\r\n          {/* Card view Component  */}\r\n          {showDiv2 && <InventoryMasterCardView />}\r\n          {/* Card View End */}\r\n        </div>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete{\" \"}\r\n            <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n      {/* =============================== filter model  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={FilterhandleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={FilterShow}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"mdi:sql-query\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Define Query</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={FilterhandleClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"queryBtn\">\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={handelQuryListpopup}>\r\n                  <Iconify icon=\"carbon:query-queue\" /> Query List\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  disabled={isButtonDisabled}\r\n                  onClick={retriveBtn}\r\n                >\r\n                  <Iconify icon=\"carbon:data-base\" /> Retrive\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={SaveRegTbl}\r\n                  disabled={isButtonDisabled}\r\n                >\r\n                  <Iconify icon=\"mingcute:save-fill\" />\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n\r\n          <div className=\"filterByorder\">\r\n            <fieldset className=\"short-by-fieldset2\">\r\n              <legend>Filter By</legend>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ textAlign: \"center\" }}> ( </th>\r\n                    <th>Field Name</th>\r\n                    <th>Operator</th>\r\n                    <th>Prompt</th>\r\n                    <th>Value</th>\r\n                    <th>Logical</th>\r\n                    <th style={{ textAlign: \"center\" }}> ) </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <Select\r\n                          className=\"custom-Astselect\"\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          {Openbracket.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"25%\" }}>\r\n                        <Select\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 &&\r\n                            selectedOptionEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          style={{ width: \"100%\" }}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(event) =>\r\n                            handleOptionChange1(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {rowOptions.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n\r\n                      <td style={{ width: \"17%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className=\"custom-Astselect\"\r\n                          onChange={(event) =>\r\n                            handleOptionChangeOprter(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {oprt.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"8%\" }}>\r\n                        <input\r\n                          style={{ width: \"100%\" }}\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckChecked\"\r\n                          onChange={(e) =>\r\n                            handleSelectChange(index, e.target.checked)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"26%\" }}>\r\n                        <input\r\n                          type=\"text\"\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && valueptEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          oninput=\"handleInput(event)\"\r\n                          onChange={(event) =>\r\n                            handleInputValueChangeQtr(index, event.target.value)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: \"10%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect ${\r\n                            index === rows.length - 1 && logicalEmptyError\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          // onChange={(logical) =>\r\n                          //   handleIncludeChangeLogcil(index, logical)\r\n                          // }\r\n                          onChange={(event) =>\r\n                            handleIncludeChangeLogcil(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {Logcl.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className=\"custom-Astselect\"\r\n                          // value={/* add the corresponding value from your state */}\r\n                          //  onChange={(event) => handleOptionChange1(index, event.target.value)}\r\n                        >\r\n                          {Closebracket.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n                      <td>\r\n                        <IconButton\r\n                          className=\"clsBtn\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          onClick={() => handleDeleteRowPopup(index)}\r\n                        >\r\n                          <Iconify icon=\"carbon:close\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <Button onClick={handleAddRow} className=\"AddFilterBtn\">\r\n                  <Iconify\r\n                    icon=\"material-symbols:add\"\r\n                    style={{\r\n                      verticalAlign: \"0px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"2px\",\r\n                    }}\r\n                  />\r\n                  Add new filter\r\n                </Button>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n          <div className=\"filterShort\">\r\n            <fieldset className=\"short-by-fieldset2\">\r\n              <legend>Sort By</legend>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Field Name</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th>Ascending?</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rowsort.map((row, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ width: \"60%\" }}>\r\n                        <Select\r\n                          style={{ width: \"100%\" }}\r\n                          className={`custom-Astselect shrt ${\r\n                            index === rowsort.length - 1 &&\r\n                            selectedOptionEmptyErrorShort\r\n                              ? \"error-border\"\r\n                              : \"mammama\"\r\n                          }`}\r\n                          // value={/* add the corresponding value from your state */}\r\n                          onChange={(event) =>\r\n                            handleOptionChange2(index, event.target.value)\r\n                          }\r\n                        >\r\n                          {rowOptions.map((option, index) => (\r\n                            <MenuItem key={index} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </td>\r\n\r\n                      <td style={{ width: \"15%\" }}></td>\r\n                      <td style={{ width: \"15%\" }}></td>\r\n                      <td style={{ width: \"10%\" }}>\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          checked={rowsort[index].promptAsd === \"ASC\"}\r\n                          onChange={(e) =>\r\n                            handleSelectChangeshort(index, e.target.checked)\r\n                          }\r\n                          id=\"flexCheckDefault\"\r\n                          style={{\r\n                            width: \"65px\",\r\n                            height: \"15px\",\r\n                            marginTop: \"-5px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td></td>\r\n                      <td>\r\n                        <IconButton\r\n                          className=\"clsBtn\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          onClick={() => handleDeleteRowShort(index)}\r\n                        >\r\n                          <Iconify icon=\"carbon:close\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <Button onClick={handleAddRowShort} className=\"AddFilterBtn\">\r\n                  <Iconify\r\n                    icon=\"material-symbols:add\"\r\n                    style={{\r\n                      verticalAlign: \"0px\",\r\n                      fontSize: \"16px\",\r\n                      marginRight: \"2px\",\r\n                    }}\r\n                  />\r\n                  Add new filter\r\n                </Button>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n      {/* =============================== filter model Save Button  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseSave}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showSave}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Save Query</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseSave}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Query name:</legend>\r\n              <div className=\"form-group \">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"customInput\"\r\n                  name=\"queryName\"\r\n                  value={formDataSv.queryName}\r\n                  onChange={handleInputChangeSav}\r\n                  className=\"bsc_sav\"\r\n                  list=\"options\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n\r\n                <datalist id=\"options\">\r\n                  {InvntryMasterFilterDpd.map((option, index) => (\r\n                    <option key={index.RowID} value={option.cf_query_title} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Description:</legend>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"w3review\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  value={formDataSv.description}\r\n                  onChange={handleInputChangeSav}\r\n                  cols=\"70\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Availability:</legend>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"G\"\r\n                  checked\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Global(available to everyone)\r\n                </label>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"P\"\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Personal\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            className=\"SaveButton\"\r\n            onClick={handleCFQrySave}\r\n          >\r\n            <Iconify icon=\"mingcute:save-line\" /> Save\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n      {/* =============================== filter model Query List Button  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseWorkQryList}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showWordOrderQryList}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"mdi:sql-query\" />\r\n          <span style={{ marginLeft: \"2px\" }}> Query List</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseWorkQryList}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"queryBtn\">\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={DeleteInventoryMasterQryList}\r\n                >\r\n                  <Iconify icon=\"fluent:delete-48-regular\" /> Delete\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" onClick={SaveInventoryMasterQryList}>\r\n                  <Iconify icon=\"ic:outline-save-as\" /> Save\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={SaveAsInventoryMasterQryTbl}\r\n                >\r\n                  <Iconify icon=\"fad:saveas\" />\r\n                  Save As\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div>\r\n            <div className=\"shortBydd list mt-4\">\r\n              <div className=\"table-containeR\">\r\n                <fieldset className=\"Query-by-fieldset\">\r\n                  <legend>Query Name</legend>\r\n                  <table className=\"custom-tablE\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ width: \"100%\" }}>Query Title</th>\r\n\r\n                        <th style={{ width: \"10%\" }}>Default?</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <Select\r\n                        id=\"select\"\r\n                        style={{ width: \"60%\" }}\r\n                        value={selectedOptionValue}\r\n                        // onChange={handleClickOption}\r\n                        onChange={(event) =>\r\n                          handleClickOption(event.target.value)\r\n                        }\r\n                        sx={{ textTransform: \"capitalize\" }}\r\n                      >\r\n                        {InvntryMasterFilterDpd.map((item) => (\r\n                          <MenuItem\r\n                            key={item.RowID}\r\n                            value={`${item.cf_query_title}-${item.RowID}`}\r\n                          >\r\n                            {item.cf_query_title}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                      <td>\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"\"\r\n                          id=\"flexCheckDefault\"\r\n                          checked={isChecked}\r\n                          onChange={handleCheckboxClick}\r\n                          style={{\r\n                            width: \"65px\",\r\n                            height: \"15px\",\r\n                            marginTop: \"-5px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tbody>\r\n                  </table>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n            <div className=\"FiltrBydd mt-2\">\r\n              <div>\r\n                <fieldset className=\"short-by-fieldset2\">\r\n                  <legend>Filter By</legend>\r\n                  <table style={{ borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ textAlign: \"center\", width: \"7%\" }}>(</th>\r\n                        <th style={{ width: \"25%\" }}>Field Name</th>\r\n                        <th style={{ width: \"17%\" }}>Operator</th>\r\n                        <th style={{ width: \"8%\" }}>Prompt</th>\r\n                        <th style={{ width: \"26%\" }}>Value</th>\r\n                        <th style={{ width: \"10%\" }}>Logical</th>\r\n                        <th style={{ textAlign: \"center\", width: \"7%\" }}>)</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {rowsQrt.map((row, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <tr key={index}>\r\n                            <td style={{ width: \"7%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n                              >\r\n                                {Openbracket.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"25%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  selectedOptionEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.selectedOption || \"\"}\r\n                                onChange={(event) =>\r\n                                  handleOptionChangeQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {rowOptions.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"17%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n                                value={row.operator || \"Like\"}\r\n                                onChange={(event) =>\r\n                                  handleOptionChangeOprterQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {oprt.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n                            <td style={{ width: \"8%\" }}>\r\n                              <input\r\n                                class=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                onChange={(e) =>\r\n                                  handleSelectChangeQtr(index, e.target.checked)\r\n                                }\r\n                                checked={row.prompt === \"1\"}\r\n                                id=\"flexCheckDefault\"\r\n                                style={{\r\n                                  width: \"65px\",\r\n                                  height: \"15px\",\r\n                                  marginTop: \"-5px\",\r\n                                }}\r\n                              />\r\n                            </td>\r\n                            <td style={{ width: \"26%\" }}>\r\n                              <input\r\n                                type=\"text\"\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  valueptEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.valuept || \"\"}\r\n                                oninput=\"handleInput(event)\"\r\n                                onChange={(event) =>\r\n                                  handleInputValueChangeQtr2(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </td>\r\n\r\n                            <td style={{ width: \"10%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className={`custom-Astselect ${\r\n                                  index === rowsQrt.length - 1 &&\r\n                                  logicalEmptyErrorQtr\r\n                                    ? \"error-border\"\r\n                                    : \"mammama\"\r\n                                }`}\r\n                                value={row.logical || \"\"}\r\n                                // value={/* add the corresponding value from your state */}\r\n                                // onChange={(logical) =>\r\n                                //   handleIncludeChangeLogcilQtr(index, logical)\r\n                                // }\r\n                                onChange={(event) =>\r\n                                  handleIncludeChangeLogcilQtr(\r\n                                    index,\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              >\r\n                                {Logcl.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n\r\n                            <td style={{ width: \"7%\" }}>\r\n                              <Select\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"custom-Astselect\"\r\n\r\n                                // value={rowOptions.find(option => option.value === row.selectedOption)}\r\n                                //onChange={(selectedOption) => handleOptionChange1(index, selectedOption)}\r\n                              >\r\n                                {Closebracket.map((option, index) => (\r\n                                  <MenuItem key={index} value={option.value}>\r\n                                    {option.label}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </td>\r\n\r\n                            <td>\r\n                              <IconButton\r\n                                className=\"clsBtn\"\r\n                                aria-label=\"delete\"\r\n                                size=\"small\"\r\n                                onClick={() => handleDeleteRowQrt(index)}\r\n                              >\r\n                                <Iconify icon=\"carbon:close\" />\r\n                              </IconButton>\r\n                            </td>\r\n                          </tr>\r\n                        </React.Fragment>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button onClick={handleAddRowQrt} className=\"AddFilterBtn\">\r\n                      <Iconify\r\n                        icon=\"material-symbols:add\"\r\n                        style={{\r\n                          verticalAlign: \"0px\",\r\n                          fontSize: \"16px\",\r\n                          marginRight: \"2px\",\r\n                        }}\r\n                      />\r\n                      Add new filter\r\n                    </Button>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n            <div className=\"shortBydd mt-4 shtQtr\">\r\n              <div>\r\n                <fieldset className=\"short-by-fieldset\">\r\n                  <legend>Sort By</legend>\r\n                  <table style={{ borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Field Name</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th>Ascending?</th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {rowsortQrt.map((row, index) => (\r\n                        <tr key={index}>\r\n                          <td style={{ width: \"60%\" }}>\r\n                            <Select\r\n                              style={{ width: \"100%\" }}\r\n                              className={`custom-Astselect sht ${\r\n                                index === rowsortQrt.length - 1 &&\r\n                                selectedOptionEmptyErrorShortQtr\r\n                                  ? \"error-border\"\r\n                                  : \"mammama\"\r\n                              }`}\r\n                              // value={/* add the corresponding value from your state */}\r\n                              onChange={(event) =>\r\n                                handleOptionChangeSrtQtr(\r\n                                  index,\r\n                                  event.target.value\r\n                                )\r\n                              }\r\n                              value={row.selectedOptionShort || \"\"}\r\n                            >\r\n                              {rowOptions.map((option, index) => (\r\n                                <MenuItem key={index} value={option.value}>\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </Select>\r\n                          </td>\r\n                          <td style={{ width: \"15%\" }}></td>\r\n                          <td style={{ width: \"15%\" }}></td>\r\n                          <td style={{ width: \"8%\" }}>\r\n                            <input\r\n                              class=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              //checked={row.prompt === '1'}\r\n                              checked={rowsortQrt[index].promptAsd === \"ASC\"}\r\n                              onChange={(e) =>\r\n                                handleSelectChangeshortQtr(\r\n                                  index,\r\n                                  e.target.checked\r\n                                )\r\n                              }\r\n                              id=\"flexCheckDefault\"\r\n                              style={{\r\n                                width: \"65px\",\r\n                                height: \"15px\",\r\n                                marginTop: \"-5px\",\r\n                              }}\r\n                            />\r\n                          </td>\r\n                          <td></td>\r\n                          <td>\r\n                            <IconButton\r\n                              className=\"clsBtn\"\r\n                              aria-label=\"delete\"\r\n                              size=\"small\"\r\n                              onClick={() => handleDeleteRowShortQrt(index)}\r\n                            >\r\n                              <Iconify icon=\"carbon:close\" />\r\n                            </IconButton>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      onClick={handleAddRowShortQrt}\r\n                      className=\"AddFilterBtn\"\r\n                    >\r\n                      <Iconify\r\n                        icon=\"material-symbols:add\"\r\n                        style={{\r\n                          verticalAlign: \"0px\",\r\n                          fontSize: \"16px\",\r\n                          marginRight: \"2px\",\r\n                        }}\r\n                      />\r\n                      Add new filter\r\n                    </Button>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n      {/* =============================== filter model Save As Button  =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseSaveAs}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showSaveAs}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"material-symbols-light:file-save-sharp\" />\r\n          <span style={{ marginLeft: \"2px\" }}>Save Query As</span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseSaveAs}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Query name:</legend>\r\n              <div className=\"form-group \">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"customInput\"\r\n                  name=\"queryName\"\r\n                  value={formDataSv.queryName}\r\n                  onChange={handleInputChangeSav}\r\n                  className=\"bsc_sav\"\r\n                  list=\"options\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n\r\n                <datalist id=\"options\">\r\n                  {InvntryMasterFilterDpd.map((option, index) => (\r\n                    <option key={index.RowID} value={option.cf_query_title} />\r\n                  ))}\r\n                </datalist>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Description:</legend>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"w3review\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  value={formDataSv.description}\r\n                  onChange={handleInputChangeSav}\r\n                  cols=\"70\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Availability:</legend>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios1\"\r\n                  value=\"G\"\r\n                  checked\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                  Global(available to everyone)\r\n                </label>\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"availability\"\r\n                  id=\"exampleRadios2\"\r\n                  value=\"P\"\r\n                  onChange={handleInputChangeSav}\r\n                />\r\n                <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                  Personal\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"SaveButton\"\r\n              onClick={handleCFQrySaveAsBtn}\r\n            >\r\n              <Iconify icon=\"mingcute:save-line\" /> Save\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n      {/* =============================== filter model Print Qr   =================================  */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseQrCode}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showQrModel}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify icon=\"fluent:print-48-regular\" />\r\n          <span style={{ marginLeft: \"2px\" }}>\r\n            Asset QRCode Printing Selection\r\n          </span>\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseQrCode}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div className=\"astSubpopup\">\r\n            <fieldset className=\"Subpopup-fieldset\">\r\n              <legend>Asset Selection:</legend>\r\n              <div class=\"form-check\">\r\n                <div style={{ marginBottom: \"5px\" }}>\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"availability\"\r\n                    id=\"exampleRadios1\"\r\n                    value=\"selected1\"\r\n                    checked={availabilityQRCode === \"selected1\"}\r\n                    onChange={handleInputChangeQRCode}\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                    Print 1 Selected Asset QRCode.\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"availability\"\r\n                    id=\"exampleRadios2\"\r\n                    value=\"All\"\r\n                    checked={availabilityQRCode === \"All\"}\r\n                    onChange={handleInputChangeQRCode}\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                    Print All {totalRow} Asset QRCode.\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid item>\r\n            <Button\r\n              className=\"SaveButton\"\r\n              variant=\"outlined\"\r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                color: \"white\",\r\n                marginRight: \"10px\",\r\n              }}\r\n              onClick={handleQRCodePrintBtn}\r\n            >\r\n              <Iconify icon=\"fluent:print-48-regular\" /> Print\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n  const { name } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  //   if (name) {\r\n  //     inputData = inputData.filter(\r\n  //       (tableData) => tableData.col2.toLowerCase().indexOf(col2.toLowerCase()) !== -1\r\n  //     );\r\n  //   }\r\n  return inputData;\r\n}\r\n"],"names":["InventoryMasterCardView","site_ID","localStorage","getItem","isLoading","setIsLoading","useState","tableData","setTableData","totalRow","setTotalRow","currentPage","setCurrentPage","navigate","useNavigate","useEffect","async","response","httpCommon","get","concat","console","log","data","result","total_count","error","fetchEvents","page","setPage","numPages","Math","ceil","handleEditRow","useCallback","id","state","RowID","_jsx","_Fragment","children","_jsxs","Dialog","open","PaperProps","style","backgroundColor","BackdropProps","className","DialogTitle","textAlign","DialogContent","paddingTop","ThreeCircles","radius","visible","ariaLabel","color","Grid","container","spacing","renderItems","startIdx","endIdx","slice","map","item","index","xs","md","Card","sx","mt","mb","CardActionArea","CardMedia","component","height","image","attachment","img","display","margin","width","onClick","CardContent","Typography","gutterBottom","variant","justifyContent","itm_mst_stockno","itm_det_part_deac_status","Iconify","icon","itm_mst_desc","length","itm_mst_mstr_locn","itm_mst_costcenter","itm_mst_ttl_oh","Pagination","count","onChange","handleChangePage","event","newPage","shape","position","bottom","left","transform","padding","boxShadow","InventoryMasterTableRow","_ref","row","selected","onSelectRow","onDeleteRow","onEditRow","onViewRow","onDuplicateRow","onPrintQrCode","col1","col2","col3","col4","col5","col6","col7","col8","col9","col10","col11","col12","col14","col15","col16","col17","col18","col19","col20","col21","col22","col23","col24","col25","col26","col27","col28","col29","col30","col31","col32","col33","col34","col35","col36","col37","col38","col39","col40","col41","col42","col43","col44","col45","col46","col47","col48","col49","col50","col51","col52","col53","col54","AuditUser","confirm","useBoolean","popover","usePopover","formatDate","dateString","startsWith","date","Date","isNaN","getTime","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","UserPermission","setUserPermission","status","getUserPermission","TableRow","hover","TableCell","align","IconButton","onOpen","CustomPopover","onClose","arrow","MenuItem","disabled","every","edit_flag","ConfirmDialog","value","onFalse","title","content","action","Button","resultData","undefined","workbook","ExcelJS","worksheet","addWorksheet","columns","header","key","forEach","rowData","addRow","getRow","eachCell","cell","font","size","bold","argb","fill","type","pattern","fgColor","alignment","horizontal","vertical","eachRow","rowNumber","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","download","click","BootstrapDialog","styled","theme","InventoryMasterList","_location$state","_location$state2","_location$state3","_table$selected","location","useLocation","emp_owner","router","useRouter","table","useTable","settings","useSettingsContext","maxHeight","setMaxHeight","tableHeaderData","settableHeaderData","DashbordDataGauge","setDashbordDataGauge","GaugeDashbordData","DashbordDataSrt","GaugeDashbordDataSort","DropListIdGet","setDropListIdGet","DropListId","TABLE_HEAD","label","Header","defaultFilters","publish","stock","filters","setFilters","selectedOption","setSelectedOption","inputRef","useRef","FilterShow","setFilterShow","ResponceStats","setResponceStats","showSave","setShowSave","AssetFiledname","setAssetFiledname","InventoryMasterFiledname","setInventoryMasterFiledname","selectedOptionEmptyError","setSelectedOptionEmptyError","selectedOptionEmptyErrorShort","setSelectedOptionEmptyErrorShort","valueptEmptyError","setValueptEmptyError","logicalEmptyError","setLogicalEmptyError","TitleAstReg","setTitleAstReg","TitleSaveBtn","setTitleSaveBtn","assetFilterDpd","setAssetFilterDpd","InvntryMasterFilterDpd","setInvntryMasterFilterDpd","selectedOptionValue","setselectedOptionValue","showWordOrderQryList","setShowWordOrderQryList","showSaveAs","setShowSaveAs","isChecked","setIsChecked","selectedOptionEmptyErrorQtr","setSelectedOptionEmptyErrorQtr","valueptEmptyErrorQtr","setValueptEmptyErrorQtr","logicalEmptyErrorQtr","setLogicalEmptyErrorQtr","selectedOptionEmptyErrorShortQtr","setSelectedOptionEmptyErrorShortQtr","ExportExcelId","setExportExcelId","selectDropRowID","setselectDropRowID","isInputFocused","setInputFocused","TableSearchData","setTableSearchData","DefineQueryBtn","setDefineQueryBtn","showQrModel","setshowQrModel","availabilityQRCode","setAvailabilityQRCode","QrCodeRowId","setQrCodeRowId","showDiv1","setShowDiv1","showDiv2","setShowDiv2","button1Active","setButton1Active","button2Active","setButton2Active","fetchData","fetchFilterSubPopupSavedropdon","matchedItem","find","cfQueryDescValue","cf_query_title","fetchDataGaugeDSB","post","rows","rowsort","site_cd","emp_ID","getb","DashbrdCount","Swal","text","customClass","dataFiltered","_ref2","inputData","comparator","name","stabilizedThis","el","sort","a","b","order","applyFilter","Array","isArray","getComparator","orderBy","dataInPage","rowsPerPage","canReset","dense","isEqual","handleFilters","onResetPage","prevState","handleDeleteRow","Rowid","stockno","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","message","handleDeleteRows","deleteRows","filter","includes","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleDuplicateRow","DuplicatRowid","DupRowID","handlePrintQr","handleCloseQrCode","handleResetFilters","push","paths","dashboard","product","details","current","handleResize","windowHeight","innerHeight","newMaxHeight","floor","addEventListener","removeEventListener","setRows","operator","logical","prompt","valuept","siteCd","queryTypedd","setRowsort","selectedOptionShort","promptAsd","queryType","isButtonDisabled","some","Openbracket","Closebracket","oprt","Logcl","handleDeleteRowPopup","newRows","splice","FilterhandleClose","newRowsort","rowOptions","column_name","default_label","getInventoryMasterListLebel","RetriveData","hasEmptyOperator","hasEmptyValuept","fieldName","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","transition","Bounce","allowOutsideClick","SiteCD","admin","titleName","handleDeleteRowShort","handleCloseSave","setFormDataSv","queryName","description","formDataSv","availability","owner","handleInputChangeSav","target","prevData","handleInputChangeQRCode","InsertCf_queryListData","combinedData","rowsQrtData","rowsortQrtData","Title","rowsQrt","setRowsQrt","rowsortQrt","setRowsortQrt","handleCloseWorkQryList","RetriveDataQueryList","updatedEmptyRows","updatedEmptyRowsort","handleCloseSaveAs","InsertCf_queryListDataSavaAs","SITE_CD","OWNER_ID","handelSearchButton","inputValueGet","filteredData","searchString","toLowerCase","Object","keys","fetchDataCallback","getbCallback","retriveDataCallback","Helmet","Container","maxWidth","themeStretch","CustomBreadcrumbs","heading","links","alignItems","RouterLink","handleButtonClick","handleButtonClick2","minWidth","startIcon","to","pathname","select","Stack","direction","p","pr","marginTop","flexShrink","handelFilterAction","Icon","marginRight","FormControl","InputLabel","Select","labelId","input","OutlinedInput","responseData","_event$target","selectedValue","selectedOptionObjectFilter","selectedOptionObject","GetRowID","textTransform","verticalAlign","flexGrow","placeholder","ref","onKeyDown","preventDefault","newValue","onFocus","handleInputFocus","onBlur","handleInputBlur","ExportInventoryMasterlistToExcel","handleExportClick","AssetTableFiltersResult","onFilters","onResetFilters","results","pt","TableContainer","TableSelectedAction","numSelected","rowCount","onSelectAllRows","checked","Tooltip","onTrue","Scrollbar","overflowX","Table","TableHeadCustom","headLabel","onSort","TableBody","colSpan","rowStats","col61","col55","TableEmptyRows","emptyRows","TablePaginationCustom","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","fullWidth","m","marginLeft","right","top","palette","grey","dividers","handelQuryListpopup","retriveBtn","SaveRegTbl","option","handleOptionChange1","updatedRows","handleOptionChangeOprter","class","e","handleSelectChange","oninput","handleInputValueChangeQtr","updatedRowsQtr","handleIncludeChangeLogcil","handleAddRow","isLastRowEmpty","prevRows","fontSize","handleOptionChange2","handleSelectChangeshort","handleAddRowShort","newRow","list","cols","for","DialogActions","handleCFQrySave","trim","inputValue","cancelButtonText","_rows$selectedOption","_rows$logical","_rows$valuept","_rowsort$selectedOpti","split","mst_RowID","SaveAsInventoryMasterQryTbl","parts","list_typeF","cf_query_list_column","cf_query_list_operator","cf_query_list_prompt","cf_query_list_value","cf_query_list_logical","setTimeout","prevrowsQrt","list_typeS","cf_query_list_order_by","handleClickOption","handleCheckboxClick","borderCollapse","React","handleOptionChangeQtr","handleOptionChangeOprterQtr","handleSelectChangeQtr","handleInputValueChangeQtr2","handleIncludeChangeLogcilQtr","handleDeleteRowQrt","handleAddRowQrt","handleOptionChangeSrtQtr","handleSelectChangeshortQtr","handleDeleteRowShortQrt","handleAddRowShortQrt","handleCFQrySaveAsBtn","_rowsQrt$selectedOpti","_rowsQrt$logical","_rowsQrt$valuept","_rowsortQrt$selectedO","marginBottom","handleQRCodePrintBtn","selectedVlue","ItemID","ToastContainer"],"sourceRoot":""}