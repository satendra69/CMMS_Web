{"version":3,"file":"static/js/2548.f3cfe322.chunk.js","mappings":"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","sources":["components/lightbox/use-light-box.js","components/lightbox/styles.js","components/lightbox/lightbox.js","api/chat.js","sections/chat/hooks/use-collapse-nav.js","sections/chat/chat-nav-item.js","sections/chat/hooks/use-get-nav-item.js","sections/chat/chat-nav-account.js","sections/chat/chat-skeleton.js","sections/chat/chat-nav-search-results.js","sections/chat/chat-nav.js","sections/chat/chat-room-participant-dialog.js","sections/chat/chat-room-group.js","sections/chat/chat-room-single.js","sections/chat/chat-room-attachments.js","sections/chat/chat-room.js","sections/chat/chat-message-item.js","sections/chat/hooks/use-get-message.js","sections/chat/chat-message-list.js","sections/chat/hooks/use-messages-scroll.js","sections/chat/chat-message-input.js","sections/chat/chat-header-detail.js","sections/chat/chat-header-compose.js","sections/chat/view/chat-view.js","pages/dashboard/chat.js","utils/format-time.js","utils/uuidv4.js","../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/flatten.js","../node_modules/lodash/keyBy.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useLightBox(slides) {\n  const [selected, setSelected] = useState(-1);\n\n  const handleOpen = useCallback(\n    (slideUrl) => {\n      const slideIndex = slides.findIndex((slide) =>\n        slide.type === 'video' ? slide.poster === slideUrl : slide.src === slideUrl\n      );\n\n      setSelected(slideIndex);\n    },\n    [slides]\n  );\n\n  const handleClose = useCallback(() => {\n    setSelected(-1);\n  }, []);\n\n  return {\n    selected,\n    open: selected >= 0,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    setSelected,\n  };\n}\n","// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport GlobalStyles from '@mui/material/GlobalStyles';\n\n// ----------------------------------------------------------------------\n\nexport default function StyledLightbox() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.yarl__root': {\n          '--yarl__thumbnails_thumbnail_padding': 0,\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\n        },\n        // Caption\n        '.yarl__slide_title': {\n          fontSize: theme.typography.h5.fontSize,\n          fontWeight: theme.typography.h5.fontWeight,\n          lineHeight: theme.typography.h5.lineHeight,\n        },\n        '.yarl__slide_description': {\n          fontSize: theme.typography.body2.fontSize,\n          fontWeight: theme.typography.body2.fontWeight,\n          lineHeight: theme.typography.body2.lineHeight,\n        },\n        // Button\n        '.yarl__button': {\n          filter: 'unset',\n        },\n        // Thumbnails\n        '.yarl__thumbnails_thumbnail': {\n          opacity: 0.48,\n          '&.yarl__thumbnails_thumbnail_active': {\n            opacity: 1,\n          },\n        },\n        '.yarl__thumbnails_vignette': {\n          '--yarl__thumbnails_vignette_size': 0,\n        },\n        // Video\n        '.yarl__video_container': {\n          backgroundColor: theme.palette.common.black,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n","import PropTypes from 'prop-types';\nimport ReactLightbox, { useLightboxState } from 'yet-another-react-lightbox';\nimport Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\n// @mui\nimport Box from '@mui/material/Box';\n//\nimport Iconify from '../iconify';\n//\nimport StyledLightbox from './styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = 24;\n\nexport default function Lightbox({\n  slides,\n  disabledZoom,\n  disabledVideo,\n  disabledTotal,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n  onGetCurrentIndex,\n  ...other\n}) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <>\n      <StyledLightbox />\n\n      <ReactLightbox\n        slides={slides}\n        animation={{ swipe: 240 }}\n        carousel={{ finite: totalItems < 5 }}\n        controller={{ closeOnBackdropClick: true }}\n        plugins={getPlugins({\n          disabledZoom,\n          disabledVideo,\n          disabledCaptions,\n          disabledSlideshow,\n          disabledThumbnails,\n          disabledFullscreen,\n        })}\n        on={{\n          view: ({ index }) => {\n            if (onGetCurrentIndex) {\n              onGetCurrentIndex(index);\n            }\n          },\n        }}\n        toolbar={{\n          buttons: [\n            <DisplayTotal key={0} totalItems={totalItems} disabledTotal={disabledTotal} />,\n            'close',\n          ],\n        }}\n        render={{\n          iconClose: () => <Iconify width={ICON_SIZE} icon=\"carbon:close\" />,\n          iconZoomIn: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-in\" />,\n          iconZoomOut: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-out\" />,\n          iconSlideshowPlay: () => <Iconify width={ICON_SIZE} icon=\"carbon:play\" />,\n          iconSlideshowPause: () => <Iconify width={ICON_SIZE} icon=\"carbon:pause\" />,\n          iconPrev: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-left\" />,\n          iconNext: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-right\" />,\n          iconExitFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:center-to-fit\" />,\n          iconEnterFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:fit-to-screen\" />,\n        }}\n        {...other}\n      />\n    </>\n  );\n}\n\nLightbox.propTypes = {\n  disabledCaptions: PropTypes.bool,\n  disabledFullscreen: PropTypes.bool,\n  disabledSlideshow: PropTypes.bool,\n  disabledThumbnails: PropTypes.bool,\n  disabledTotal: PropTypes.bool,\n  disabledVideo: PropTypes.bool,\n  disabledZoom: PropTypes.bool,\n  onGetCurrentIndex: PropTypes.func,\n  slides: PropTypes.array,\n};\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disabledZoom,\n  disabledVideo,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n}) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disabledThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disabledCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disabledFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disabledSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disabledZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disabledVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n\n// ----------------------------------------------------------------------\n\nexport function DisplayTotal({ totalItems, disabledTotal }) {\n  const { currentIndex } = useLightboxState();\n\n  if (disabledTotal) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"span\"\n      className=\"yarl__button\"\n      sx={{\n        typography: 'body2',\n        alignItems: 'center',\n        display: 'inline-flex',\n        justifyContent: 'center',\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Box>\n  );\n}\n\nDisplayTotal.propTypes = {\n  disabledTotal: PropTypes.bool,\n  totalItems: PropTypes.number,\n};\n","import { useMemo } from 'react';\nimport keyBy from 'lodash/keyBy';\nimport useSWR, { mutate } from 'swr';\n// utils\nimport axios, { endpoints, fetcher } from 'src/utils/axios';\n\n// ----------------------------------------------------------------------\n\nconst options = {\n  revalidateIfStale: false,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n};\n\nexport function useGetContacts() {\n  const URL = [endpoints.chat, { params: { endpoint: 'contacts' } }];\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(\n    () => ({\n      contacts: data?.contacts || [],\n      contactsLoading: isLoading,\n      contactsError: error,\n      contactsValidating: isValidating,\n      contactsEmpty: !isLoading && !data?.contacts.length,\n    }),\n    [data?.contacts, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetConversations() {\n  const URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(() => {\n    const byId = keyBy(data?.conversations, 'id') || {};\n    const allIds = Object.keys(byId) || [];\n\n    return {\n      conversations: {\n        byId,\n        allIds,\n      },\n      conversationsLoading: isLoading,\n      conversationsError: error,\n      conversationsValidating: isValidating,\n      conversationsEmpty: !isLoading && !allIds.length,\n    };\n  }, [data?.conversations, error, isLoading, isValidating]);\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetConversation(conversationId) {\n  const URL = conversationId\n    ? [endpoints.chat, { params: { conversationId, endpoint: 'conversation' } }]\n    : null;\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(\n    () => ({\n      conversation: data?.conversation,\n      conversationLoading: isLoading,\n      conversationError: error,\n      conversationValidating: isValidating,\n    }),\n    [data?.conversation, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function sendMessage(conversationId, messageData) {\n  const CONVERSATIONS_URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  const CONVERSATION_URL = [\n    endpoints.chat,\n    {\n      params: { conversationId, endpoint: 'conversation' },\n    },\n  ];\n\n  /**\n   * Work on server\n   */\n  // const data = { conversationId, messageData };\n  // await axios.put(endpoints.chat, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    CONVERSATION_URL,\n    (currentData) => {\n      const { conversation: currentConversation } = currentData;\n\n      const conversation = {\n        ...currentConversation,\n        messages: [...currentConversation.messages, messageData],\n      };\n\n      return {\n        conversation,\n      };\n    },\n    false\n  );\n\n  /**\n   * Work in local\n   */\n  mutate(\n    CONVERSATIONS_URL,\n    (currentData) => {\n      const { conversations: currentConversations } = currentData;\n\n      const conversations = currentConversations.map((conversation) =>\n        conversation.id === conversationId\n          ? {\n              ...conversation,\n              messages: [...conversation.messages, messageData],\n            }\n          : conversation\n      );\n\n      return {\n        conversations,\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createConversation(conversationData) {\n  const URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  /**\n   * Work on server\n   */\n  const data = { conversationData };\n  const res = await axios.post(endpoints.chat, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const conversations = [...currentData.conversations, conversationData];\n      return {\n        ...currentData,\n        conversations,\n      };\n    },\n    false\n  );\n\n  return res.data;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function clickConversation(conversationId) {\n  const URL = endpoints.chat;\n\n  /**\n   * Work on server\n   */\n  // await axios.get(URL, { params: { conversationId, endpoint: 'mark-as-seen' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    [\n      URL,\n      {\n        params: { endpoint: 'conversations' },\n      },\n    ],\n    (currentData) => {\n      const conversations = currentData.conversations.map((conversation) =>\n        conversation.id === conversationId ? { ...conversation, unreadCount: 0 } : conversation\n      );\n\n      return {\n        ...currentData,\n        conversations,\n      };\n    },\n    false\n  );\n}\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useCollapseNav() {\n  const [openMobile, setOpenMobile] = useState(false);\n\n  const [collapseDesktop, setCollapseDesktop] = useState(false);\n\n  const onCollapseDesktop = useCallback(() => {\n    setCollapseDesktop((prev) => !prev);\n  }, []);\n\n  const onCloseDesktop = useCallback(() => {\n    setCollapseDesktop(false);\n  }, []);\n\n  const onOpenMobile = useCallback(() => {\n    setOpenMobile(true);\n  }, []);\n\n  const onCloseMobile = useCallback(() => {\n    setOpenMobile(false);\n  }, []);\n\n  return {\n    openMobile,\n    collapseDesktop,\n    //\n    onOpenMobile,\n    onCloseMobile,\n    onCloseDesktop,\n    onCollapseDesktop,\n  };\n}\n","import PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\nimport { useResponsive } from 'src/hooks/use-responsive';\n// api\nimport { clickConversation } from 'src/api/chat';\n//\nimport { useGetNavItem } from './hooks';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatNavItem({ selected, collapse, conversation, onCloseMobile }) {\n  const { user } = useMockedUser();\n\n  const mdUp = useResponsive('up', 'md');\n\n  const router = useRouter();\n\n  const { group, displayName, displayText, participants, lastActivity, hasOnlineInGroup } =\n    useGetNavItem({\n      conversation,\n      currentUserId: `${user?.id}`,\n    });\n\n  const singleParticipant = participants[0];\n\n  const { name, avatarUrl, status } = singleParticipant;\n\n  const handleClickConversation = useCallback(async () => {\n    try {\n      if (!mdUp) {\n        onCloseMobile();\n      }\n\n      await clickConversation(conversation.id);\n\n      router.push(`${paths.dashboard.chat}?id=${conversation.id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [conversation.id, mdUp, onCloseMobile, router]);\n\n  const renderGroup = (\n    <Badge\n      variant={hasOnlineInGroup ? 'online' : 'invisible'}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n    >\n      <AvatarGroup variant=\"compact\" sx={{ width: 48, height: 48 }}>\n        {participants.slice(0, 2).map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\n        ))}\n      </AvatarGroup>\n    </Badge>\n  );\n\n  const renderSingle = (\n    <Badge key={status} variant={status} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n      <Avatar alt={name} src={avatarUrl} sx={{ width: 48, height: 48 }} />\n    </Badge>\n  );\n\n  return (\n    <ListItemButton\n      disableGutters\n      onClick={handleClickConversation}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        ...(selected && {\n          bgcolor: 'action.selected',\n        }),\n      }}\n    >\n      <Badge\n        color=\"error\"\n        overlap=\"circular\"\n        badgeContent={collapse ? conversation.unreadCount : 0}\n      >\n        {group ? renderGroup : renderSingle}\n      </Badge>\n\n      {!collapse && (\n        <>\n          <ListItemText\n            sx={{ ml: 2 }}\n            primary={displayName}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2',\n            }}\n            secondary={displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              component: 'span',\n              variant: conversation.unreadCount ? 'subtitle2' : 'body2',\n              color: conversation.unreadCount ? 'text.primary' : 'text.secondary',\n            }}\n          />\n\n          <Stack alignItems=\"flex-end\" sx={{ ml: 2, height: 44 }}>\n            <Typography\n              noWrap\n              variant=\"body2\"\n              component=\"span\"\n              sx={{\n                mb: 1.5,\n                fontSize: 12,\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(lastActivity), {\n                addSuffix: false,\n              })}\n            </Typography>\n\n            {!!conversation.unreadCount && (\n              <Box\n                sx={{\n                  width: 8,\n                  height: 8,\n                  bgcolor: 'info.main',\n                  borderRadius: '50%',\n                }}\n              />\n            )}\n          </Stack>\n        </>\n      )}\n    </ListItemButton>\n  );\n}\n\nChatNavItem.propTypes = {\n  collapse: PropTypes.bool,\n  conversation: PropTypes.object,\n  onCloseMobile: PropTypes.func,\n  selected: PropTypes.bool,\n};\n","// ----------------------------------------------------------------------\n\nexport default function useGetNavItem({ currentUserId, conversation }) {\n  const { messages, participants } = conversation;\n\n  const participantsInConversation = participants.filter(\n    (participant) => participant.id !== currentUserId\n  );\n\n  const lastMessage = messages[messages.length - 1];\n\n  const group = participantsInConversation.length > 1;\n\n  const displayName = participantsInConversation.map((participant) => participant.name).join(', ');\n\n  const hasOnlineInGroup = group\n    ? participantsInConversation.map((item) => item.status).includes('online')\n    : false;\n\n  let displayText = '';\n\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n\n    displayText = `${sender}${message}`;\n  }\n\n  return {\n    group,\n    displayName,\n    displayText,\n    participants: participantsInConversation,\n    lastActivity: lastMessage.createdAt,\n    hasOnlineInGroup,\n  };\n}\n","import { useState, useCallback } from 'react';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Badge, { badgeClasses } from '@mui/material/Badge';\nimport Select from '@mui/material/Select';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatNavAccount() {\n  const { user } = useMockedUser();\n\n  const popover = usePopover();\n\n  const [status, setStatus] = useState('online');\n\n  const handleChangeStatus = useCallback((event) => {\n    setStatus(event.target.value);\n  }, []);\n\n  return (\n    <>\n      <Badge variant={status} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n        <Avatar\n          src={user?.photoURL}\n          alt={user?.displayName}\n          onClick={popover.onOpen}\n          sx={{ cursor: 'pointer', width: 48, height: 48 }}\n        />\n      </Badge>\n\n      <CustomPopover open={popover.open} onClose={popover.onClose} arrow=\"top-left\" sx={{ p: 0 }}>\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          spacing={2}\n          sx={{\n            py: 2,\n            pr: 1,\n            pl: 2.5,\n          }}\n        >\n          <ListItemText\n            primary={user?.displayName}\n            secondary={user?.email}\n            secondaryTypographyProps={{ component: 'span' }}\n          />\n\n          <Tooltip title=\"Log out\">\n            <IconButton color=\"error\">\n              <Iconify icon=\"ic:round-power-settings-new\" />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <Stack sx={{ p: 1 }}>\n          <MenuItem>\n            <Badge\n              variant={status}\n              sx={{\n                [`& .${badgeClasses.badge}`]: {\n                  position: 'static',\n                  m: 0.75,\n                  width: 12,\n                  height: 12,\n                  flexShrink: 0,\n                },\n              }}\n            />\n\n            <Select\n              native\n              fullWidth\n              value={status}\n              onChange={handleChangeStatus}\n              input={<InputBase sx={{ pl: 2 }} />}\n              inputProps={{\n                sx: { textTransform: 'capitalize' },\n              }}\n            >\n              {['online', 'alway', 'busy', 'offline'].map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"solar:user-id-bold\" width={24} />\n            Profile\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"eva:settings-2-fill\" width={24} />\n            Settings\n          </MenuItem>\n        </Stack>\n      </CustomPopover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport Skeleton from '@mui/material/Skeleton';\nimport Stack from '@mui/material/Stack';\n\n// ----------------------------------------------------------------------\n\nexport function ChatNavItemSkeleton({ sx, ...other }) {\n  return (\n    <Stack\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        px: 2.5,\n        py: 1.5,\n        ...sx,\n      }}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" sx={{ width: 48, height: 48 }} />\n\n      <Stack spacing={1} flexGrow={1}>\n        <Skeleton sx={{ width: 0.75, height: 10 }} />\n        <Skeleton sx={{ width: 0.5, height: 10 }} />\n      </Stack>\n    </Stack>\n  );\n}\n\nChatNavItemSkeleton.propTypes = {\n  sx: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\n//\nimport SearchNotFound from 'src/components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatNavSearchResults({ query, results, onClickResult }) {\n  const totalResults = results.length;\n\n  const notFound = !totalResults && !!query;\n\n  return (\n    <>\n      <Typography\n        variant=\"h6\"\n        sx={{\n          px: 2.5,\n          mb: 2,\n        }}\n      >\n        Contacts ({totalResults})\n      </Typography>\n\n      {notFound ? (\n        <SearchNotFound\n          query={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 40px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      ) : (\n        <>\n          {results.map((result) => (\n            <ListItemButton\n              key={result.id}\n              onClick={() => onClickResult(result)}\n              sx={{\n                px: 2.5,\n                py: 1.5,\n                typography: 'subtitle2',\n              }}\n            >\n              <Avatar alt={result.name} src={result.avatarUrl} sx={{ mr: 2 }} />\n              {result.name}\n            </ListItemButton>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n\nChatNavSearchResults.propTypes = {\n  query: PropTypes.string,\n  results: PropTypes.array,\n  onClickResult: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect, useCallback } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\n// hooks\nimport { useResponsive } from 'src/hooks/use-responsive';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n//\nimport { useCollapseNav } from './hooks';\nimport ChatNavItem from './chat-nav-item';\nimport ChatNavAccount from './chat-nav-account';\nimport { ChatNavItemSkeleton } from './chat-skeleton';\nimport ChatNavSearchResults from './chat-nav-search-results';\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 320;\n\nconst NAV_COLLAPSE_WIDTH = 96;\n\nexport default function ChatNav({ loading, contacts, conversations, selectedConversationId }) {\n  const theme = useTheme();\n\n  const router = useRouter();\n\n  const mdUp = useResponsive('up', 'md');\n\n  const {\n    collapseDesktop,\n    onCloseDesktop,\n    onCollapseDesktop,\n    //\n    openMobile,\n    onOpenMobile,\n    onCloseMobile,\n  } = useCollapseNav();\n\n  const [searchContacts, setSearchContacts] = useState({\n    query: '',\n    results: [],\n  });\n\n  useEffect(() => {\n    if (!mdUp) {\n      onCloseDesktop();\n    }\n  }, [onCloseDesktop, mdUp]);\n\n  const handleToggleNav = useCallback(() => {\n    if (mdUp) {\n      onCollapseDesktop();\n    } else {\n      onCloseMobile();\n    }\n  }, [mdUp, onCloseMobile, onCollapseDesktop]);\n\n  const handleClickCompose = useCallback(() => {\n    if (!mdUp) {\n      onCloseMobile();\n    }\n    router.push(paths.dashboard.chat);\n  }, [mdUp, onCloseMobile, router]);\n\n  const handleSearchContacts = useCallback(\n    (inputValue) => {\n      setSearchContacts((prevState) => ({\n        ...prevState,\n        query: inputValue,\n      }));\n\n      if (inputValue) {\n        const results = contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(inputValue)\n        );\n\n        setSearchContacts((prevState) => ({\n          ...prevState,\n          results,\n        }));\n      }\n    },\n    [contacts]\n  );\n\n  const handleClickAwaySearch = useCallback(() => {\n    setSearchContacts({\n      query: '',\n      results: [],\n    });\n  }, []);\n\n  const handleClickResult = useCallback(\n    (result) => {\n      handleClickAwaySearch();\n\n      router.push(`${paths.dashboard.chat}?id=${result.id}`);\n    },\n    [handleClickAwaySearch, router]\n  );\n\n  const renderToggleBtn = (\n    <IconButton\n      onClick={onOpenMobile}\n      sx={{\n        left: 0,\n        top: 84,\n        zIndex: 9,\n        width: 32,\n        height: 32,\n        position: 'absolute',\n        borderRadius: `0 12px 12px 0`,\n        bgcolor: theme.palette.primary.main,\n        boxShadow: theme.customShadows.primary,\n        color: theme.palette.primary.contrastText,\n        '&:hover': {\n          bgcolor: theme.palette.primary.darker,\n        },\n      }}\n    >\n      <Iconify width={16} icon=\"solar:users-group-rounded-bold\" />\n    </IconButton>\n  );\n\n  const renderSkeleton = (\n    <>\n      {[...Array(12)].map((_, index) => (\n        <ChatNavItemSkeleton key={index} />\n      ))}\n    </>\n  );\n\n  const renderList = (\n    <>\n      {conversations.allIds.map((conversationId) => (\n        <ChatNavItem\n          key={conversationId}\n          collapse={collapseDesktop}\n          conversation={conversations.byId[conversationId]}\n          selected={conversationId === selectedConversationId}\n          onCloseMobile={onCloseMobile}\n        />\n      ))}\n    </>\n  );\n\n  const renderListResults = (\n    <ChatNavSearchResults\n      query={searchContacts.query}\n      results={searchContacts.results}\n      onClickResult={handleClickResult}\n    />\n  );\n\n  const renderSearchInput = (\n    <ClickAwayListener onClickAway={handleClickAwaySearch}>\n      <TextField\n        fullWidth\n        value={searchContacts.query}\n        onChange={(event) => handleSearchContacts(event.target.value)}\n        placeholder=\"Search contacts...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n        sx={{ mt: 2.5 }}\n      />\n    </ClickAwayListener>\n  );\n\n  const renderContent = (\n    <>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ p: 2.5, pb: 0 }}>\n        {!collapseDesktop && (\n          <>\n            <ChatNavAccount />\n            <Box sx={{ flexGrow: 1 }} />\n          </>\n        )}\n\n        <IconButton onClick={handleToggleNav}>\n          <Iconify\n            icon={collapseDesktop ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'}\n          />\n        </IconButton>\n\n        {!collapseDesktop && (\n          <IconButton onClick={handleClickCompose}>\n            <Iconify width={24} icon=\"solar:user-plus-bold\" />\n          </IconButton>\n        )}\n      </Stack>\n\n      <Box sx={{ p: 2.5, pt: 0 }}>{!collapseDesktop && renderSearchInput}</Box>\n\n      <Scrollbar sx={{ pb: 1 }}>\n        {searchContacts.query && renderListResults}\n\n        {loading && renderSkeleton}\n\n        {!searchContacts.query && !!conversations.allIds.length && renderList}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      {!mdUp && renderToggleBtn}\n\n      {mdUp ? (\n        <Stack\n          sx={{\n            height: 1,\n            flexShrink: 0,\n            width: NAV_WIDTH,\n            borderRight: `solid 1px ${theme.palette.divider}`,\n            transition: theme.transitions.create(['width'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n            ...(collapseDesktop && {\n              width: NAV_COLLAPSE_WIDTH,\n            }),\n          }}\n        >\n          {renderContent}\n        </Stack>\n      ) : (\n        <Drawer\n          open={openMobile}\n          onClose={onCloseMobile}\n          slotProps={{\n            backdrop: { invisible: true },\n          }}\n          PaperProps={{\n            sx: { width: NAV_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n\nChatNav.propTypes = {\n  contacts: PropTypes.array,\n  conversations: PropTypes.object,\n  loading: PropTypes.bool,\n  selectedConversationId: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport DialogContent from '@mui/material/DialogContent';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomParticipantDialog({ participant, open, onClose }) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\n        <Iconify icon=\"mingcute:close-line\" />\n      </IconButton>\n\n      <DialogContent sx={{ py: 5, px: 3, display: 'flex' }}>\n        <Avatar\n          alt={participant.name}\n          src={participant.avatarUrl}\n          sx={{ width: 96, height: 96, mr: 3 }}\n        />\n\n        <Stack spacing={1}>\n          <Typography variant=\"caption\" sx={{ color: 'primary.main' }}>\n            {participant.role}\n          </Typography>\n\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n\n          <Stack direction=\"row\" sx={{ typography: 'caption', color: 'text.disabled' }}>\n            <Iconify\n              icon=\"mingcute:location-fill\"\n              width={16}\n              sx={{ flexShrink: 0, mr: 0.5, mt: '2px' }}\n            />\n            {participant.address}\n          </Stack>\n\n          <Stack spacing={1} direction=\"row\" sx={{ pt: 1.5 }}>\n            <IconButton\n              size=\"small\"\n              color=\"error\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.error.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:phone-bold\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"info\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.info.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.info.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:chat-round-dots-bold\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"primary\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.primary.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.primary.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"fluent:mail-24-filled\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"secondary\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.secondary.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.secondary.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:videocamera-record-bold\" />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nChatRoomParticipantDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  participant: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Collapse from '@mui/material/Collapse';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n//\nimport ChatRoomParticipantDialog from './chat-room-participant-dialog';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomGroup({ participants }) {\n  const [selected, setSelected] = useState(null);\n\n  const collapse = useBoolean(true);\n\n  const handleOpen = useCallback((participant) => {\n    setSelected(participant);\n  }, []);\n\n  const handleClose = () => {\n    setSelected(null);\n  };\n\n  const totalParticipants = participants.length;\n\n  const renderBtn = (\n    <ListItemButton\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        In room ({totalParticipants})\n      </Box>\n      <Iconify\n        width={16}\n        icon={collapse.value ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Scrollbar sx={{ height: 56 * 4 }}>\n      {participants.map((participant) => (\n        <ListItemButton key={participant.id} onClick={() => handleOpen(participant)}>\n          <Badge\n            variant={participant.status}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          >\n            <Avatar alt={participant.name} src={participant.avatarUrl} />\n          </Badge>\n\n          <ListItemText\n            sx={{ ml: 2 }}\n            primary={participant.name}\n            secondary={participant.role}\n            primaryTypographyProps={{\n              noWrap: true,\n              typography: 'subtitle2',\n            }}\n            secondaryTypographyProps={{\n              noWrap: true,\n              component: 'span',\n              typography: 'caption',\n            }}\n          />\n        </ListItemButton>\n      ))}\n    </Scrollbar>\n  );\n\n  return (\n    <>\n      {renderBtn}\n\n      <div>\n        <Collapse in={collapse.value}>{renderContent}</Collapse>\n      </div>\n\n      {selected && (\n        <ChatRoomParticipantDialog participant={selected} open={!!selected} onClose={handleClose} />\n      )}\n    </>\n  );\n}\n\nChatRoomGroup.propTypes = {\n  participants: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Collapse from '@mui/material/Collapse';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomSingle({ participant }) {\n  const collapse = useBoolean(true);\n\n  const { name, avatarUrl, role, address, phoneNumber, email } = participant;\n\n  const renderInfo = (\n    <Stack alignItems=\"center\" sx={{ py: 5 }}>\n      <Avatar alt={name} src={avatarUrl} sx={{ width: 96, height: 96, mb: 2 }} />\n      <Typography variant=\"subtitle1\">{name}</Typography>\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary', mt: 0.5 }}>\n        {role}\n      </Typography>\n    </Stack>\n  );\n\n  const renderBtn = (\n    <ListItemButton\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        Information\n      </Box>\n      <Iconify\n        width={16}\n        icon={collapse.value ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Stack\n      spacing={2}\n      sx={{\n        px: 2,\n        py: 2.5,\n        '& svg': {\n          mr: 1,\n          flexShrink: 0,\n          color: 'text.disabled',\n        },\n      }}\n    >\n      <Stack direction=\"row\">\n        <Iconify icon=\"mingcute:location-fill\" />\n        <Typography variant=\"body2\">{address}</Typography>\n      </Stack>\n\n      <Stack direction=\"row\">\n        <Iconify icon=\"solar:phone-bold\" />\n        <Typography variant=\"body2\">{phoneNumber}</Typography>\n      </Stack>\n\n      <Stack direction=\"row\">\n        <Iconify icon=\"fluent:mail-24-filled\" />\n        <Typography variant=\"body2\" noWrap>\n          {email}\n        </Typography>\n      </Stack>\n    </Stack>\n  );\n\n  return (\n    <>\n      {renderInfo}\n\n      {renderBtn}\n\n      <div>\n        <Collapse in={collapse.value}>{renderContent}</Collapse>\n      </div>\n    </>\n  );\n}\n\nChatRoomSingle.propTypes = {\n  participant: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// utils\nimport { fDateTime } from 'src/utils/format-time';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport FileThumbnail from 'src/components/file-thumbnail';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomAttachments({ attachments }) {\n  const collapse = useBoolean(true);\n\n  const totalAttachments = attachments.length;\n\n  const renderBtn = (\n    <ListItemButton\n      disabled={!attachments.length}\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        Attachments ({totalAttachments})\n      </Box>\n      <Iconify\n        width={16}\n        icon={\n          (!collapse.value && 'eva:arrow-ios-forward-fill') ||\n          (!attachments.length && 'eva:arrow-ios-forward-fill') ||\n          'eva:arrow-ios-downward-fill'\n        }\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Scrollbar sx={{ px: 2, py: 2.5 }}>\n      {attachments.map((attachment, index) => (\n        <Stack\n          key={attachment.name + index}\n          spacing={1.5}\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{ mb: 2 }}\n        >\n          <Stack\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            sx={{\n              width: 40,\n              height: 40,\n              flexShrink: 0,\n              borderRadius: 1,\n              overflow: 'hidden',\n              position: 'relative',\n              backgroundColor: 'background.neutral',\n            }}\n          >\n            <FileThumbnail\n              imageView\n              file={attachment.preview}\n              onDownload={() => console.info('DOWNLOAD')}\n              sx={{ width: 28, height: 28 }}\n            />\n          </Stack>\n\n          <ListItemText\n            primary={attachment.name}\n            secondary={fDateTime(attachment.createdAt)}\n            primaryTypographyProps={{\n              noWrap: true,\n              typography: 'body2',\n            }}\n            secondaryTypographyProps={{\n              mt: 0.25,\n              noWrap: true,\n              component: 'span',\n              typography: 'caption',\n              color: 'text.disabled',\n            }}\n          />\n        </Stack>\n      ))}\n    </Scrollbar>\n  );\n\n  return (\n    <>\n      {renderBtn}\n\n      <Box\n        sx={{\n          overflow: 'hidden',\n          height: collapse.value ? 1 : 0,\n          transition: (theme) =>\n            theme.transitions.create(['height'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n        }}\n      >\n        {renderContent}\n      </Box>\n    </>\n  );\n}\n\nChatRoomAttachments.propTypes = {\n  attachments: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport uniq from 'lodash/uniq';\nimport flatten from 'lodash/flatten';\nimport { useEffect, useCallback } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\n// hooks\nimport { useResponsive } from 'src/hooks/use-responsive';\n// components\nimport Iconify from 'src/components/iconify';\n//\nimport { useCollapseNav } from './hooks';\nimport ChatRoomGroup from './chat-room-group';\nimport ChatRoomSingle from './chat-room-single';\nimport ChatRoomAttachments from './chat-room-attachments';\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 240;\n\nexport default function ChatRoom({ participants, conversation }) {\n  const theme = useTheme();\n\n  const lgUp = useResponsive('up', 'lg');\n\n  const {\n    collapseDesktop,\n    onCloseDesktop,\n    onCollapseDesktop,\n    //\n    openMobile,\n    onOpenMobile,\n    onCloseMobile,\n  } = useCollapseNav();\n\n  useEffect(() => {\n    if (!lgUp) {\n      onCloseDesktop();\n    }\n  }, [onCloseDesktop, lgUp]);\n\n  const handleToggleNav = useCallback(() => {\n    if (lgUp) {\n      onCollapseDesktop();\n    } else {\n      onOpenMobile();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lgUp]);\n\n  const group = participants.length > 1;\n\n  const attachments = uniq(flatten(conversation.messages.map((messages) => messages.attachments)));\n\n  const renderContent = (\n    <>\n      {group ? (\n        <ChatRoomGroup participants={participants} />\n      ) : (\n        <ChatRoomSingle participant={participants[0]} />\n      )}\n\n      <ChatRoomAttachments attachments={attachments} />\n    </>\n  );\n\n  const renderToggleBtn = (\n    <IconButton\n      onClick={handleToggleNav}\n      sx={{\n        top: 12,\n        right: 0,\n        zIndex: 9,\n        width: 32,\n        height: 32,\n        borderRight: 0,\n        position: 'absolute',\n        borderRadius: `12px 0 0 12px`,\n        boxShadow: theme.customShadows.z8,\n        bgcolor: theme.palette.background.paper,\n        border: `solid 1px ${theme.palette.divider}`,\n        '&:hover': {\n          bgcolor: theme.palette.background.neutral,\n        },\n        ...(lgUp && {\n          ...(!collapseDesktop && {\n            right: NAV_WIDTH,\n          }),\n        }),\n      }}\n    >\n      {lgUp ? (\n        <Iconify\n          width={16}\n          icon={collapseDesktop ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'}\n        />\n      ) : (\n        <Iconify width={16} icon=\"eva:arrow-ios-back-fill\" />\n      )}\n    </IconButton>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      {renderToggleBtn}\n\n      {lgUp ? (\n        <Stack\n          sx={{\n            height: 1,\n            flexShrink: 0,\n            width: NAV_WIDTH,\n            borderLeft: `solid 1px ${theme.palette.divider}`,\n            transition: theme.transitions.create(['width'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n            ...(collapseDesktop && {\n              width: 0,\n            }),\n          }}\n        >\n          {!collapseDesktop && renderContent}\n        </Stack>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          open={openMobile}\n          onClose={onCloseMobile}\n          slotProps={{\n            backdrop: { invisible: true },\n          }}\n          PaperProps={{\n            sx: { width: NAV_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n\nChatRoom.propTypes = {\n  conversation: PropTypes.object,\n  participants: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// components\nimport Iconify from 'src/components/iconify';\n//\nimport { useGetMessage } from './hooks';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatMessageItem({ message, participants, onOpenLightbox }) {\n  const { user } = useMockedUser();\n\n  const { me, senderDetails, hasImage } = useGetMessage({\n    message,\n    participants,\n    currentUserId: `${user?.id}`,\n  });\n\n  const { firstName, avatarUrl } = senderDetails;\n\n  const { body, createdAt } = message;\n\n  const renderInfo = (\n    <Typography\n      noWrap\n      variant=\"caption\"\n      sx={{\n        mb: 1,\n        color: 'text.disabled',\n        ...(!me && {\n          mr: 'auto',\n        }),\n      }}\n    >\n      {!me && `${firstName},`} &nbsp;\n      {formatDistanceToNowStrict(new Date(createdAt), {\n        addSuffix: true,\n      })}\n    </Typography>\n  );\n\n  const renderBody = (\n    <Stack\n      sx={{\n        p: 1.5,\n        minWidth: 48,\n        maxWidth: 320,\n        borderRadius: 1,\n        typography: 'body2',\n        bgcolor: 'background.neutral',\n        ...(me && {\n          color: 'grey.800',\n          bgcolor: 'primary.lighter',\n        }),\n        ...(hasImage && {\n          p: 0,\n          bgcolor: 'transparent',\n        }),\n      }}\n    >\n      {hasImage ? (\n        <Box\n          component=\"img\"\n          alt=\"attachment\"\n          src={body}\n          onClick={() => onOpenLightbox(body)}\n          sx={{\n            minHeight: 220,\n            borderRadius: 1.5,\n            cursor: 'pointer',\n            '&:hover': {\n              opacity: 0.9,\n            },\n          }}\n        />\n      ) : (\n        body\n      )}\n    </Stack>\n  );\n\n  const renderActions = (\n    <Stack\n      direction=\"row\"\n      className=\"message-actions\"\n      sx={{\n        pt: 0.5,\n        opacity: 0,\n        top: '100%',\n        left: 0,\n        position: 'absolute',\n        transition: (theme) =>\n          theme.transitions.create(['opacity'], {\n            duration: theme.transitions.duration.shorter,\n          }),\n        ...(me && {\n          left: 'unset',\n          right: 0,\n        }),\n      }}\n    >\n      <IconButton size=\"small\">\n        <Iconify icon=\"solar:reply-bold\" width={16} />\n      </IconButton>\n      <IconButton size=\"small\">\n        <Iconify icon=\"eva:smiling-face-fill\" width={16} />\n      </IconButton>\n      <IconButton size=\"small\">\n        <Iconify icon=\"solar:trash-bin-trash-bold\" width={16} />\n      </IconButton>\n    </Stack>\n  );\n\n  return (\n    <Stack direction=\"row\" justifyContent={me ? 'flex-end' : 'unset'} sx={{ mb: 5 }}>\n      {!me && <Avatar alt={firstName} src={avatarUrl} sx={{ width: 32, height: 32, mr: 2 }} />}\n\n      <Stack alignItems=\"flex-end\">\n        {renderInfo}\n\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{\n            position: 'relative',\n            '&:hover': {\n              '& .message-actions': {\n                opacity: 1,\n              },\n            },\n          }}\n        >\n          {renderBody}\n          {renderActions}\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object,\n  onOpenLightbox: PropTypes.func,\n  participants: PropTypes.array,\n};\n","// ----------------------------------------------------------------------\n\nexport default function useGetMessage({ message, participants, currentUserId }) {\n  const sender = participants.find((participant) => participant.id === message.senderId);\n\n  const senderDetails =\n    message.senderId === currentUserId\n      ? {\n          type: 'me',\n        }\n      : {\n          avatarUrl: sender?.avatarUrl,\n          firstName: sender?.name.split(' ')[0],\n        };\n\n  const me = senderDetails.type === 'me';\n\n  const hasImage = message.contentType === 'image';\n\n  return {\n    hasImage,\n    me,\n    senderDetails,\n  };\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\n// components\nimport Scrollbar from 'src/components/scrollbar';\nimport Lightbox, { useLightBox } from 'src/components/lightbox';\n//\nimport { useMessagesScroll } from './hooks';\nimport ChatMessageItem from './chat-message-item';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatMessageList({ messages = [], participants }) {\n  const { messagesEndRef } = useMessagesScroll(messages);\n\n  const slides = messages\n    .filter((message) => message.contentType === 'image')\n    .map((message) => ({ src: message.body }));\n\n  const lightbox = useLightBox(slides);\n\n  return (\n    <>\n      <Scrollbar ref={messagesEndRef} sx={{ px: 3, py: 5, height: 1 }}>\n        <Box>\n          {messages.map((message) => (\n            <ChatMessageItem\n              key={message.id}\n              message={message}\n              participants={participants}\n              onOpenLightbox={() => lightbox.onOpen(message.body)}\n            />\n          ))}\n        </Box>\n      </Scrollbar>\n\n      <Lightbox\n        index={lightbox.selected}\n        slides={slides}\n        open={lightbox.open}\n        close={lightbox.onClose}\n      />\n    </>\n  );\n}\n\nChatMessageList.propTypes = {\n  messages: PropTypes.array,\n  participants: PropTypes.array,\n};\n","import { useCallback, useEffect, useRef } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useMessagesScroll(messages) {\n  const messagesEndRef = useRef(null);\n\n  const scrollMessagesToBottom = useCallback(() => {\n    if (!messages) {\n      return;\n    }\n\n    if (!messagesEndRef.current) {\n      return;\n    }\n\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  useEffect(\n    () => {\n      scrollMessagesToBottom();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [messages]\n  );\n\n  return {\n    messagesEndRef,\n  };\n}\n","import PropTypes from 'prop-types';\nimport { sub } from 'date-fns';\nimport { useRef, useState, useCallback, useMemo } from 'react';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// utils\nimport uuidv4 from 'src/utils/uuidv4';\n// api\nimport { sendMessage, createConversation } from 'src/api/chat';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatMessageInput({\n  recipients,\n  onAddRecipients,\n  //\n  disabled,\n  selectedConversationId,\n}) {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const fileRef = useRef(null);\n\n  const [message, setMessage] = useState('');\n\n  const myContact = useMemo(\n    () => ({\n      id: `${user?.id}`,\n      role: `${user?.role}`,\n      email: `${user?.email}`,\n      address: `${user?.address}`,\n      name: `${user?.displayName}`,\n      lastActivity: new Date(),\n      avatarUrl: `${user?.photoURL}`,\n      phoneNumber: `${user?.phoneNumber}`,\n      status: 'online',\n    }),\n    [user]\n  );\n\n  const messageData = useMemo(\n    () => ({\n      id: uuidv4(),\n      attachments: [],\n      body: message,\n      contentType: 'text',\n      createdAt: sub(new Date(), { minutes: 1 }),\n      senderId: myContact.id,\n    }),\n    [message, myContact.id]\n  );\n\n  const conversationData = useMemo(\n    () => ({\n      id: uuidv4(),\n      messages: [messageData],\n      participants: [...recipients, myContact],\n      type: recipients.length > 1 ? 'GROUP' : 'ONE_TO_ONE',\n      unreadCount: 0,\n    }),\n    [messageData, myContact, recipients]\n  );\n\n  const handleAttach = useCallback(() => {\n    if (fileRef.current) {\n      fileRef.current.click();\n    }\n  }, []);\n\n  const handleChangeMessage = useCallback((event) => {\n    setMessage(event.target.value);\n  }, []);\n\n  const handleSendMessage = useCallback(\n    async (event) => {\n      try {\n        if (event.key === 'Enter') {\n          if (message) {\n            if (selectedConversationId) {\n              await sendMessage(selectedConversationId, messageData);\n            } else {\n              const res = await createConversation(conversationData);\n\n              router.push(`${paths.dashboard.chat}?id=${res.conversation.id}`);\n\n              onAddRecipients([]);\n            }\n          }\n          setMessage('');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [conversationData, message, messageData, onAddRecipients, router, selectedConversationId]\n  );\n\n  return (\n    <>\n      <InputBase\n        value={message}\n        onKeyUp={handleSendMessage}\n        onChange={handleChangeMessage}\n        placeholder=\"Type a message\"\n        disabled={disabled}\n        startAdornment={\n          <IconButton>\n            <Iconify icon=\"eva:smiling-face-fill\" />\n          </IconButton>\n        }\n        endAdornment={\n          <Stack direction=\"row\" sx={{ flexShrink: 0 }}>\n            <IconButton onClick={handleAttach}>\n              <Iconify icon=\"solar:gallery-add-bold\" />\n            </IconButton>\n            <IconButton onClick={handleAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" />\n            </IconButton>\n            <IconButton>\n              <Iconify icon=\"solar:microphone-bold\" />\n            </IconButton>\n          </Stack>\n        }\n        sx={{\n          px: 1,\n          height: 56,\n          flexShrink: 0,\n          borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n        }}\n      />\n\n      <input type=\"file\" ref={fileRef} style={{ display: 'none' }} />\n    </>\n  );\n}\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  onAddRecipients: PropTypes.func,\n  recipients: PropTypes.array,\n  selectedConversationId: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n// utils\nimport { fToNow } from 'src/utils/format-time';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatHeaderDetail({ participants }) {\n  const group = participants.length > 1;\n\n  const singleParticipant = participants[0];\n\n  const renderGroup = (\n    <AvatarGroup\n      max={3}\n      sx={{\n        [`& .${avatarGroupClasses.avatar}`]: {\n          width: 32,\n          height: 32,\n        },\n      }}\n    >\n      {participants.map((participant) => (\n        <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\n      ))}\n    </AvatarGroup>\n  );\n\n  const renderSingle = (\n    <Stack flexGrow={1} direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Badge\n        variant={singleParticipant.status}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Avatar src={singleParticipant.avatarUrl} alt={singleParticipant.name} />\n      </Badge>\n\n      <ListItemText\n        primary={singleParticipant.name}\n        secondary={\n          singleParticipant.status === 'offline'\n            ? fToNow(singleParticipant.lastActivity)\n            : singleParticipant.status\n        }\n        secondaryTypographyProps={{\n          component: 'span',\n          ...(singleParticipant.status !== 'offline' && {\n            textTransform: 'capitalize',\n          }),\n        }}\n      />\n    </Stack>\n  );\n\n  return (\n    <>\n      {group ? renderGroup : renderSingle}\n\n      <Stack flexGrow={1} />\n\n      <IconButton>\n        <Iconify icon=\"solar:phone-bold\" />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"solar:videocamera-record-bold\" />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    </>\n  );\n}\n\nChatHeaderDetail.propTypes = {\n  participants: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Autocomplete from '@mui/material/Autocomplete';\n// components\nimport Iconify from 'src/components/iconify';\nimport SearchNotFound from 'src/components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatHeaderCompose({ contacts, onAddRecipients }) {\n  const [searchRecipients, setSearchRecipients] = useState('');\n\n  const handleAddRecipients = useCallback(\n    (selected) => {\n      setSearchRecipients('');\n      onAddRecipients(selected);\n    },\n    [onAddRecipients]\n  );\n\n  return (\n    <>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.primary', mr: 2 }}>\n        To:\n      </Typography>\n\n      <Autocomplete\n        sx={{ minWidth: 320 }}\n        multiple\n        limitTags={3}\n        popupIcon={null}\n        disableCloseOnSelect\n        noOptionsText={<SearchNotFound query={searchRecipients} />}\n        onChange={(event, newValue) => handleAddRecipients(newValue)}\n        onInputChange={(event, newValue) => setSearchRecipients(newValue)}\n        options={contacts}\n        getOptionLabel={(recipient) => recipient.name}\n        isOptionEqualToValue={(option, value) => option.id === value.id}\n        renderInput={(params) => <TextField {...params} placeholder=\"+ Recipients\" />}\n        renderOption={(props, recipient, { selected }) => (\n          <li {...props} key={recipient.id}>\n            <Box\n              key={recipient.id}\n              sx={{\n                mr: 1,\n                width: 32,\n                height: 32,\n                overflow: 'hidden',\n                borderRadius: '50%',\n                position: 'relative',\n              }}\n            >\n              <Avatar alt={recipient.name} src={recipient.avatarUrl} sx={{ width: 1, height: 1 }} />\n              <Stack\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{\n                  top: 0,\n                  left: 0,\n                  width: 1,\n                  height: 1,\n                  opacity: 0,\n                  position: 'absolute',\n                  bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                  transition: (theme) =>\n                    theme.transitions.create(['opacity'], {\n                      easing: theme.transitions.easing.easeInOut,\n                      duration: theme.transitions.duration.shorter,\n                    }),\n                  ...(selected && {\n                    opacity: 1,\n                    color: 'primary.main',\n                  }),\n                }}\n              >\n                <Iconify icon=\"eva:checkmark-fill\" />\n              </Stack>\n            </Box>\n\n            {recipient.name}\n          </li>\n        )}\n        renderTags={(selected, getTagProps) =>\n          selected.map((recipient, index) => (\n            <Chip\n              {...getTagProps({ index })}\n              key={recipient.id}\n              label={recipient.name}\n              avatar={<Avatar alt={recipient.name} src={recipient.avatarUrl} />}\n              size=\"small\"\n              variant=\"soft\"\n            />\n          ))\n        }\n      />\n    </>\n  );\n}\n\nChatHeaderCompose.propTypes = {\n  contacts: PropTypes.array,\n  onAddRecipients: PropTypes.func,\n};\n","import { useEffect, useState, useCallback } from 'react';\n// @mui\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// api\nimport { useGetContacts, useGetConversation, useGetConversations } from 'src/api/chat';\n// components\nimport { useSettingsContext } from 'src/components/settings';\n//\nimport ChatNav from '../chat-nav';\nimport ChatRoom from '../chat-room';\nimport ChatMessageList from '../chat-message-list';\nimport ChatMessageInput from '../chat-message-input';\nimport ChatHeaderDetail from '../chat-header-detail';\nimport ChatHeaderCompose from '../chat-header-compose';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatView() {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const settings = useSettingsContext();\n\n  const searchParams = useSearchParams();\n\n  const selectedConversationId = searchParams.get('id') || '';\n\n  const [recipients, setRecipients] = useState([]);\n\n  const { contacts } = useGetContacts();\n\n  const { conversations, conversationsLoading } = useGetConversations();\n\n  const { conversation, conversationError } = useGetConversation(`${selectedConversationId}`);\n\n  const participants = conversation\n    ? conversation.participants.filter((participant) => participant.id !== `${user.id}`)\n    : [];\n\n  useEffect(() => {\n    if (conversationError || !selectedConversationId) {\n      router.push(paths.dashboard.chat);\n    }\n  }, [conversationError, router, selectedConversationId]);\n\n  const handleAddRecipients = useCallback((selected) => {\n    setRecipients(selected);\n  }, []);\n\n  const details = !!conversation;\n\n  const renderHead = (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      flexShrink={0}\n      sx={{ pr: 1, pl: 2.5, py: 1, minHeight: 72 }}\n    >\n      {selectedConversationId ? (\n        <>{details && <ChatHeaderDetail participants={participants} />}</>\n      ) : (\n        <ChatHeaderCompose contacts={contacts} onAddRecipients={handleAddRecipients} />\n      )}\n    </Stack>\n  );\n\n  const renderNav = (\n    <ChatNav\n      contacts={contacts}\n      conversations={conversations}\n      loading={conversationsLoading}\n      selectedConversationId={selectedConversationId}\n    />\n  );\n\n  const renderMessages = (\n    <Stack\n      sx={{\n        width: 1,\n        height: 1,\n        overflow: 'hidden',\n      }}\n    >\n      <ChatMessageList messages={conversation?.messages} participants={participants} />\n\n      <ChatMessageInput\n        recipients={recipients}\n        onAddRecipients={handleAddRecipients}\n        //\n        selectedConversationId={selectedConversationId}\n        disabled={!recipients.length && !selectedConversationId}\n      />\n    </Stack>\n  );\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography\n        variant=\"h4\"\n        sx={{\n          mb: { xs: 3, md: 5 },\n        }}\n      >\n        Chat\n      </Typography>\n\n      <Stack component={Card} direction=\"row\" sx={{ height: '72vh' }}>\n        {renderNav}\n\n        <Stack\n          sx={{\n            width: 1,\n            height: 1,\n            overflow: 'hidden',\n          }}\n        >\n          {renderHead}\n\n          <Stack\n            direction=\"row\"\n            sx={{\n              width: 1,\n              height: 1,\n              overflow: 'hidden',\n              borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n            }}\n          >\n            {renderMessages}\n\n            {details && <ChatRoom conversation={conversation} participants={participants} />}\n          </Stack>\n        </Stack>\n      </Stack>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport { ChatView } from 'src/sections/chat/view';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Chat</title>\n      </Helmet>\n\n      <ChatView />\n    </>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n      })\n    : '';\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale, _options$roundingMeth;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var roundingMethod = String((_options$roundingMeth = options === null || options === void 0 ? void 0 : options.roundingMethod) !== null && _options$roundingMeth !== void 0 ? _options$roundingMeth : 'round');\n  var roundingMethodFn;\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft);\n\n  // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var defaultUnit = options === null || options === void 0 ? void 0 : options.unit;\n  var unit;\n  if (!defaultUnit) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(defaultUnit);\n  }\n\n  // 0 up to 60 seconds\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions);\n\n    // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions);\n\n    // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions);\n\n    // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions);\n\n    // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && defaultUnit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions);\n\n    // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nexport default function formatDistanceToNowStrict(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), options);\n}","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n"],"names":["useLightBox","slides","selected","setSelected","useState","open","onOpen","useCallback","slideUrl","slideIndex","findIndex","slide","type","poster","src","onClose","StyledLightbox","theme","useTheme","_jsx","GlobalStyles","styles","alpha","palette","grey","fontSize","typography","h5","fontWeight","lineHeight","body2","filter","opacity","backgroundColor","common","black","ICON_SIZE","Lightbox","_ref","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","other","totalItems","length","_jsxs","_Fragment","children","ReactLightbox","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","_ref2","index","toolbar","buttons","DisplayTotal","render","iconClose","Iconify","width","icon","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","_ref3","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","_ref4","currentIndex","useLightboxState","Box","component","className","sx","alignItems","display","justifyContent","options","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","useCollapseNav","openMobile","setOpenMobile","collapseDesktop","setCollapseDesktop","onCollapseDesktop","prev","onCloseDesktop","onOpenMobile","onCloseMobile","ChatNavItem","collapse","conversation","user","useMockedUser","mdUp","useResponsive","router","useRouter","group","displayName","displayText","participants","lastActivity","hasOnlineInGroup","currentUserId","messages","participantsInConversation","participant","id","lastMessage","map","name","join","item","status","includes","sender","senderId","message","contentType","body","concat","createdAt","useGetNavItem","singleParticipant","avatarUrl","handleClickConversation","async","conversationId","URL","endpoints","chat","mutate","params","endpoint","currentData","conversations","unreadCount","clickConversation","push","paths","dashboard","error","console","renderGroup","Badge","variant","anchorOrigin","vertical","horizontal","AvatarGroup","height","slice","Avatar","alt","renderSingle","ListItemButton","disableGutters","onClick","py","px","bgcolor","color","overlap","badgeContent","ListItemText","ml","primary","primaryTypographyProps","noWrap","secondary","secondaryTypographyProps","Stack","Typography","mb","formatDistanceToNowStrict","Date","addSuffix","borderRadius","ChatNavAccount","popover","usePopover","setStatus","handleChangeStatus","event","target","value","photoURL","cursor","CustomPopover","arrow","p","direction","spacing","pr","pl","email","Tooltip","title","IconButton","Divider","borderStyle","MenuItem","badgeClasses","badge","position","m","flexShrink","Select","native","fullWidth","onChange","input","InputBase","inputProps","textTransform","option","ChatNavItemSkeleton","Skeleton","flexGrow","ChatNavSearchResults","query","results","onClickResult","totalResults","notFound","SearchNotFound","mx","result","mr","NAV_WIDTH","NAV_COLLAPSE_WIDTH","ChatNav","loading","contacts","selectedConversationId","searchContacts","setSearchContacts","useEffect","handleToggleNav","handleClickCompose","handleSearchContacts","inputValue","prevState","contact","toLowerCase","handleClickAwaySearch","handleClickResult","renderToggleBtn","left","top","zIndex","main","boxShadow","customShadows","contrastText","darker","renderSkeleton","Array","_","renderList","allIds","byId","renderListResults","renderSearchInput","ClickAwayListener","onClickAway","TextField","placeholder","InputProps","startAdornment","InputAdornment","mt","renderContent","pb","pt","Scrollbar","borderRight","divider","transition","transitions","create","duration","shorter","Drawer","slotProps","backdrop","invisible","PaperProps","ChatRoomParticipantDialog","Dialog","maxWidth","right","DialogContent","role","address","size","info","ChatRoomGroup","useBoolean","handleOpen","totalParticipants","renderBtn","onToggle","Collapse","in","handleClose","ChatRoomSingle","phoneNumber","renderInfo","ChatRoomAttachments","attachments","totalAttachments","disabled","attachment","overflow","FileThumbnail","imageView","file","preview","onDownload","fDateTime","ChatRoom","lgUp","uniq","flatten","z8","background","paper","border","neutral","borderLeft","anchor","ChatMessageItem","onOpenLightbox","me","senderDetails","hasImage","find","firstName","split","useGetMessage","renderBody","minWidth","minHeight","renderActions","ChatMessageList","messagesEndRef","useRef","scrollMessagesToBottom","current","scrollTop","scrollHeight","useMessagesScroll","lightbox","ref","close","ChatMessageInput","recipients","onAddRecipients","fileRef","setMessage","myContact","useMemo","messageData","uuidv4","sub","minutes","conversationData","handleAttach","click","handleChangeMessage","handleSendMessage","key","CONVERSATIONS_URL","CONVERSATION_URL","currentConversation","currentConversations","sendMessage","res","data","axios","post","createConversation","onKeyUp","endAdornment","borderTop","style","ChatHeaderDetail","max","avatarGroupClasses","avatar","fToNow","ChatHeaderCompose","searchRecipients","setSearchRecipients","handleAddRecipients","Autocomplete","multiple","limitTags","popupIcon","disableCloseOnSelect","noOptionsText","newValue","onInputChange","getOptionLabel","recipient","isOptionEqualToValue","renderInput","renderOption","props","_createElement","easing","easeInOut","renderTags","getTagProps","Chip","label","ChatView","settings","useSettingsContext","useSearchParams","get","setRecipients","isLoading","isValidating","useSWR","fetcher","contactsLoading","contactsError","contactsValidating","contactsEmpty","useGetContacts","conversationsLoading","keyBy","Object","keys","conversationsError","conversationsValidating","conversationsEmpty","useGetConversations","conversationError","conversationLoading","conversationValidating","useGetConversation","details","renderHead","renderNav","renderMessages","Container","themeStretch","xs","md","Card","ChatPage","Helmet","fDate","date","newFormat","fm","format","fTimestamp","getTime","formatDistanceToNow","replace","c","r","Math","random","toString","MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","dirtyDate","requiredArgs","arguments","dirtyBaseDate","_options$locale","_options$roundingMeth","defaultOptions","getDefaultOptions","locale","defaultLocale","formatDistance","RangeError","comparison","compareAsc","isNaN","dateLeft","dateRight","localizeOptions","assign","cloneObject","Boolean","toDate","roundingMethodFn","roundingMethod","String","floor","ceil","round","unit","milliseconds","dstNormalizedMinutes","getTimezoneOffsetInMilliseconds","defaultUnit","seconds","roundedMinutes","hours","days","months","years","formatDistanceStrict","now","module","exports","array","setter","iteratee","accumulator","baseEach","require","collection","arrayPush","isFlattenable","baseFlatten","depth","predicate","isStrict","arrayAggregator","baseAggregator","baseIteratee","isArray","initializer","func","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","undefined","baseAssignValue","createAggregator"],"sourceRoot":""}