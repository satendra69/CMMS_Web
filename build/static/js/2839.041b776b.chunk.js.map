{"version":3,"file":"static/js/2839.041b776b.chunk.js","mappings":"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","sources":["components/custom-date-range-picker/utils.js","components/custom-date-range-picker/use-date-range-picker.js","components/custom-date-range-picker/custom-date-range-picker.js","components/lightbox/use-light-box.js","components/lightbox/styles.js","components/lightbox/lightbox.js","api/kanban.js","sections/kanban/kanban-task-add.js","sections/kanban/kanban-input-name.js","sections/kanban/kanban-details-toolbar.js","sections/kanban/kanban-contacts-dialog.js","sections/kanban/kanban-details-priority.js","sections/kanban/kanban-details-attachments.js","sections/kanban/kanban-details-comment-list.js","sections/kanban/kanban-details-comment-input.js","sections/kanban/kanban-details.js","sections/kanban/kanban-task-item.js","sections/kanban/kanban-column-tool-bar.js","sections/kanban/kanban-column.js","sections/kanban/kanban-column-add.js","sections/kanban/kanban-skeleton.js","sections/kanban/view/kanban-view.js","pages/dashboard/kanban.js","utils/format-time.js","utils/uuidv4.js"],"sourcesContent":["import { isSameDay, isSameMonth, getYear } from 'date-fns';\n// utils\nimport { fDate } from 'src/utils/format-time';\n\n// ----------------------------------------------------------------------\n\nexport function shortDateLabel(startDate, endDate) {\n  const getCurrentYear = new Date().getFullYear();\n\n  const startDateYear = startDate ? getYear(startDate) : null;\n\n  const endDateYear = endDate ? getYear(endDate) : null;\n\n  const currentYear = getCurrentYear === startDateYear && getCurrentYear === endDateYear;\n\n  const sameDay = startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\n\n  const sameMonth =\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\n\n  if (currentYear) {\n    if (sameMonth) {\n      if (sameDay) {\n        return fDate(endDate, 'dd MMM yy');\n      }\n      return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\n    }\n    return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\n  }\n\n  return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\n}\n","import { useState, useCallback } from 'react';\n// utils\nimport { fDate } from 'src/utils/format-time';\n//\nimport { shortDateLabel } from './utils';\n\n// ----------------------------------------------------------------------\n\nexport default function useDateRangePicker(start, end) {\n  const [open, setOpen] = useState(false);\n\n  const [endDate, setEndDate] = useState(end);\n\n  const [startDate, setStartDate] = useState(start);\n\n  const error = start && end ? new Date(start).getTime() > new Date(end).getTime() : false;\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const onChangeStartDate = useCallback((newValue) => {\n    setStartDate(newValue);\n  }, []);\n\n  const onChangeEndDate = useCallback(\n    (newValue) => {\n      if (error) {\n        setEndDate(null);\n      }\n      setEndDate(newValue);\n    },\n    [error]\n  );\n\n  const onReset = useCallback(() => {\n    setStartDate(null);\n    setEndDate(null);\n  }, []);\n\n  return {\n    startDate,\n    endDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    //\n    open,\n    onOpen,\n    onClose,\n    onReset,\n    //\n    selected: !!startDate && !!endDate,\n    error,\n    //\n    label: `${fDate(startDate)} - ${fDate(endDate)}`,\n    shortLabel: shortDateLabel(startDate, endDate),\n    //\n    setStartDate,\n    setEndDate,\n  };\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport FormHelperText from '@mui/material/FormHelperText';\n// hooks\nimport { useResponsive } from 'src/hooks/use-responsive';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomDateRangePicker({\n  title = 'Select date range',\n  variant = 'input',\n  //\n  startDate,\n  endDate,\n  //\n  onChangeStartDate,\n  onChangeEndDate,\n  //\n  open,\n  onClose,\n  //\n  error,\n}) {\n  const mdUp = useResponsive('up', 'md');\n\n  const isCalendarView = variant === 'calendar';\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth={isCalendarView ? false : 'xs'}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          ...(isCalendarView && {\n            maxWidth: 720,\n          }),\n        },\n      }}\n    >\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      <DialogContent\n        sx={{\n          ...(isCalendarView &&\n            mdUp && {\n              overflow: 'unset',\n            }),\n        }}\n      >\n        <Stack\n          justifyContent=\"center\"\n          spacing={isCalendarView ? 3 : 2}\n          direction={isCalendarView && mdUp ? 'row' : 'column'}\n          sx={{ pt: 1 }}\n        >\n          {isCalendarView ? (\n            <>\n              <Paper\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: 2,\n                  borderColor: 'divider',\n                  borderStyle: 'dashed',\n                }}\n              >\n                <DateCalendar value={startDate} onChange={onChangeStartDate} />\n              </Paper>\n\n              <Paper\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: 2,\n                  borderColor: 'divider',\n                  borderStyle: 'dashed',\n                }}\n              >\n                <DateCalendar value={endDate} onChange={onChangeEndDate} />\n              </Paper>\n            </>\n          ) : (\n            <>\n              <DatePicker label=\"Start date\" value={startDate} onChange={onChangeStartDate} />\n\n              <DatePicker label=\"End date\" value={endDate} onChange={onChangeEndDate} />\n            </>\n          )}\n        </Stack>\n\n        {error && (\n          <FormHelperText error sx={{ px: 2 }}>\n            End date must be later than start date\n          </FormHelperText>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n\n        <Button disabled={error} variant=\"contained\" onClick={onClose}>\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nCustomDateRangePicker.propTypes = {\n  error: PropTypes.bool,\n  onChangeEndDate: PropTypes.func,\n  onChangeStartDate: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  variant: PropTypes.oneOf(['input', 'calendar']),\n  startDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n  endDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n};\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useLightBox(slides) {\n  const [selected, setSelected] = useState(-1);\n\n  const handleOpen = useCallback(\n    (slideUrl) => {\n      const slideIndex = slides.findIndex((slide) =>\n        slide.type === 'video' ? slide.poster === slideUrl : slide.src === slideUrl\n      );\n\n      setSelected(slideIndex);\n    },\n    [slides]\n  );\n\n  const handleClose = useCallback(() => {\n    setSelected(-1);\n  }, []);\n\n  return {\n    selected,\n    open: selected >= 0,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    setSelected,\n  };\n}\n","// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport GlobalStyles from '@mui/material/GlobalStyles';\n\n// ----------------------------------------------------------------------\n\nexport default function StyledLightbox() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.yarl__root': {\n          '--yarl__thumbnails_thumbnail_padding': 0,\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\n        },\n        // Caption\n        '.yarl__slide_title': {\n          fontSize: theme.typography.h5.fontSize,\n          fontWeight: theme.typography.h5.fontWeight,\n          lineHeight: theme.typography.h5.lineHeight,\n        },\n        '.yarl__slide_description': {\n          fontSize: theme.typography.body2.fontSize,\n          fontWeight: theme.typography.body2.fontWeight,\n          lineHeight: theme.typography.body2.lineHeight,\n        },\n        // Button\n        '.yarl__button': {\n          filter: 'unset',\n        },\n        // Thumbnails\n        '.yarl__thumbnails_thumbnail': {\n          opacity: 0.48,\n          '&.yarl__thumbnails_thumbnail_active': {\n            opacity: 1,\n          },\n        },\n        '.yarl__thumbnails_vignette': {\n          '--yarl__thumbnails_vignette_size': 0,\n        },\n        // Video\n        '.yarl__video_container': {\n          backgroundColor: theme.palette.common.black,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n","import PropTypes from 'prop-types';\nimport ReactLightbox, { useLightboxState } from 'yet-another-react-lightbox';\nimport Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\n// @mui\nimport Box from '@mui/material/Box';\n//\nimport Iconify from '../iconify';\n//\nimport StyledLightbox from './styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = 24;\n\nexport default function Lightbox({\n  slides,\n  disabledZoom,\n  disabledVideo,\n  disabledTotal,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n  onGetCurrentIndex,\n  ...other\n}) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <>\n      <StyledLightbox />\n\n      <ReactLightbox\n        slides={slides}\n        animation={{ swipe: 240 }}\n        carousel={{ finite: totalItems < 5 }}\n        controller={{ closeOnBackdropClick: true }}\n        plugins={getPlugins({\n          disabledZoom,\n          disabledVideo,\n          disabledCaptions,\n          disabledSlideshow,\n          disabledThumbnails,\n          disabledFullscreen,\n        })}\n        on={{\n          view: ({ index }) => {\n            if (onGetCurrentIndex) {\n              onGetCurrentIndex(index);\n            }\n          },\n        }}\n        toolbar={{\n          buttons: [\n            <DisplayTotal key={0} totalItems={totalItems} disabledTotal={disabledTotal} />,\n            'close',\n          ],\n        }}\n        render={{\n          iconClose: () => <Iconify width={ICON_SIZE} icon=\"carbon:close\" />,\n          iconZoomIn: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-in\" />,\n          iconZoomOut: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-out\" />,\n          iconSlideshowPlay: () => <Iconify width={ICON_SIZE} icon=\"carbon:play\" />,\n          iconSlideshowPause: () => <Iconify width={ICON_SIZE} icon=\"carbon:pause\" />,\n          iconPrev: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-left\" />,\n          iconNext: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-right\" />,\n          iconExitFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:center-to-fit\" />,\n          iconEnterFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:fit-to-screen\" />,\n        }}\n        {...other}\n      />\n    </>\n  );\n}\n\nLightbox.propTypes = {\n  disabledCaptions: PropTypes.bool,\n  disabledFullscreen: PropTypes.bool,\n  disabledSlideshow: PropTypes.bool,\n  disabledThumbnails: PropTypes.bool,\n  disabledTotal: PropTypes.bool,\n  disabledVideo: PropTypes.bool,\n  disabledZoom: PropTypes.bool,\n  onGetCurrentIndex: PropTypes.func,\n  slides: PropTypes.array,\n};\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disabledZoom,\n  disabledVideo,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n}) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disabledThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disabledCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disabledFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disabledSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disabledZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disabledVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n\n// ----------------------------------------------------------------------\n\nexport function DisplayTotal({ totalItems, disabledTotal }) {\n  const { currentIndex } = useLightboxState();\n\n  if (disabledTotal) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"span\"\n      className=\"yarl__button\"\n      sx={{\n        typography: 'body2',\n        alignItems: 'center',\n        display: 'inline-flex',\n        justifyContent: 'center',\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Box>\n  );\n}\n\nDisplayTotal.propTypes = {\n  disabledTotal: PropTypes.bool,\n  totalItems: PropTypes.number,\n};\n","import { useMemo } from 'react';\nimport useSWR, { mutate } from 'swr';\n// utils\nimport { fetcher, endpoints } from 'src/utils/axios';\n\n// ----------------------------------------------------------------------\n\nconst URL = endpoints.kanban;\n\nconst options = {\n  revalidateIfStale: false,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n};\n\nexport function useGetBoard() {\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(\n    () => ({\n      board: data?.board,\n      boardLoading: isLoading,\n      boardError: error,\n      boardValidating: isValidating,\n      boardEmpty: !isLoading && !data?.board.ordered.length,\n    }),\n    [data?.board, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createColumn(columnData) {\n  /**\n   * Work on server\n   */\n  // const data = { columnData };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'create-column' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      const columns = {\n        ...board.columns,\n        // add new column in board.columns\n        [columnData.id]: columnData,\n      };\n\n      // add new column in board.ordered\n      const ordered = [...board.ordered, columnData.id];\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          ordered,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function updateColumn(columnId, columnName) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId, columnName };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'update-column' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      // current column\n      const column = board.columns[columnId];\n\n      const columns = {\n        ...board.columns,\n        // update column in board.columns\n        [column.id]: {\n          ...column,\n          name: columnName,\n        },\n      };\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function moveColumn(newOrdered) {\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      // update ordered in board.ordered\n      const ordered = newOrdered;\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          ordered,\n        },\n      };\n    },\n    false\n  );\n\n  /**\n   * Work on server\n   */\n  // const data = { newOrdered };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'move-column' } });\n}\n\n// ----------------------------------------------------------------------\n\nexport async function clearColumn(columnId) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'clear-column' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      const { tasks } = board;\n\n      // current column\n      const column = board.columns[columnId];\n\n      // delete tasks in board.tasks\n      column.taskIds.forEach((key) => {\n        delete tasks[key];\n      });\n\n      const columns = {\n        ...board.columns,\n        [column.id]: {\n          ...column,\n          // delete task in column\n          taskIds: [],\n        },\n      };\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          tasks,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function deleteColumn(columnId) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'delete-column' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      const { columns, tasks } = board;\n\n      // current column\n      const column = columns[columnId];\n\n      // delete column in board.columns\n      delete columns[columnId];\n\n      // delete tasks in board.tasks\n      column.taskIds.forEach((key) => {\n        delete tasks[key];\n      });\n\n      // delete column in board.ordered\n      const ordered = board.ordered.filter((id) => id !== columnId);\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          tasks,\n          ordered,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createTask(columnId, taskData) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId, taskData };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'create-task' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      // current column\n      const column = board.columns[columnId];\n\n      const columns = {\n        ...board.columns,\n        [columnId]: {\n          ...column,\n          // add task in column\n          taskIds: [...column.taskIds, taskData.id],\n        },\n      };\n\n      // add task in board.tasks\n      const tasks = {\n        ...board.tasks,\n        [taskData.id]: taskData,\n      };\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          tasks,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function updateTask(taskData) {\n  /**\n   * Work on server\n   */\n  // const data = { taskData };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'update-task' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      const tasks = {\n        ...board.tasks,\n        // add task in board.tasks\n        [taskData.id]: taskData,\n      };\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          tasks,\n        },\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function moveTask(updateColumns) {\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      // update board.columns\n      const columns = updateColumns;\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n        },\n      };\n    },\n    false\n  );\n\n  /**\n   * Work on server\n   */\n  // const data = { updateColumns };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'move-task' } });\n}\n\n// ----------------------------------------------------------------------\n\nexport async function deleteTask(columnId, taskId) {\n  /**\n   * Work on server\n   */\n  // const data = { columnId, taskId };\n  // await axios.post(endpoints.kanban, data, { params: { endpoint: 'delete-task' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const { board } = currentData;\n\n      const { tasks } = board;\n\n      // current column\n      const column = board.columns[columnId];\n\n      const columns = {\n        ...board.columns,\n        [column.id]: {\n          ...column,\n          // delete tasks in column\n          taskIds: column.taskIds.filter((id) => id !== taskId),\n        },\n      };\n\n      // delete tasks in board.tasks\n      delete tasks[taskId];\n\n      return {\n        ...currentData,\n        board: {\n          ...board,\n          columns,\n          tasks,\n        },\n      };\n    },\n    false\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useCallback, useMemo } from 'react';\n// @mui\nimport Paper from '@mui/material/Paper';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport InputBase, { inputBaseClasses } from '@mui/material/InputBase';\n// _mock\nimport { _mock } from 'src/_mock';\n// utils\nimport uuidv4 from 'src/utils/uuidv4';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanTaskAdd({ status, onAddTask, onCloseAddTask }) {\n  const [name, setName] = useState('');\n\n  const defaultTask = useMemo(\n    () => ({\n      id: uuidv4(),\n      status,\n      name: name.trim(),\n      priority: 'medium',\n      attachments: [],\n      labels: [],\n      comments: [],\n      assignee: [],\n      due: [null, null],\n      reporter: {\n        id: _mock.id(16),\n        name: _mock.fullName(16),\n        avatarUrl: _mock.image.avatar(16),\n      },\n    }),\n    [name, status]\n  );\n\n  const handleKeyUpAddTask = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        if (name) {\n          onAddTask(defaultTask);\n        }\n      }\n    },\n    [defaultTask, name, onAddTask]\n  );\n\n  const handleClickAddTask = useCallback(() => {\n    if (name) {\n      onAddTask(defaultTask);\n    } else {\n      onCloseAddTask();\n    }\n  }, [defaultTask, name, onAddTask, onCloseAddTask]);\n\n  const handleChangeName = useCallback((event) => {\n    setName(event.target.value);\n  }, []);\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAddTask}>\n      <Paper\n        sx={{\n          borderRadius: 1.5,\n          bgcolor: 'background.default',\n          boxShadow: (theme) => theme.customShadows.z1,\n        }}\n      >\n        <InputBase\n          autoFocus\n          multiline\n          fullWidth\n          placeholder=\"Task name\"\n          value={name}\n          onChange={handleChangeName}\n          onKeyUp={handleKeyUpAddTask}\n          sx={{\n            px: 2,\n            height: 56,\n            [`& .${inputBaseClasses.input}`]: {\n              typography: 'subtitle2',\n            },\n          }}\n        />\n      </Paper>\n    </ClickAwayListener>\n  );\n}\n\nKanbanTaskAdd.propTypes = {\n  onAddTask: PropTypes.func,\n  onCloseAddTask: PropTypes.func,\n  status: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport InputBase, { inputBaseClasses } from '@mui/material/InputBase';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanInputName({ sx, ...other }) {\n  return (\n    <InputBase\n      sx={{\n        [`&.${inputBaseClasses.root}`]: {\n          py: 0.75,\n          borderRadius: 1,\n          typography: 'h6',\n          borderWidth: 2,\n          borderStyle: 'solid',\n          borderColor: 'transparent',\n          transition: (theme) => theme.transitions.create(['padding-left', 'border-color']),\n          [`&.${inputBaseClasses.focused}`]: {\n            pl: 1.5,\n            borderColor: 'text.primary',\n          },\n        },\n        [`& .${inputBaseClasses.input}`]: {\n          typography: 'h6',\n        },\n        ...sx,\n      }}\n      {...other}\n    />\n  );\n}\n\nKanbanInputName.propTypes = {\n  sx: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useResponsive } from 'src/hooks/use-responsive';\n// components\nimport Iconify from 'src/components/iconify';\nimport { ConfirmDialog } from 'src/components/custom-dialog';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanDetailsToolbar({\n  liked,\n  onLike,\n  taskName,\n  onDelete,\n  taskStatus,\n  onCloseDetails,\n}) {\n  const smUp = useResponsive('up', 'sm');\n\n  const confirm = useBoolean();\n\n  const popover = usePopover();\n\n  const [status, setStatus] = useState(taskStatus);\n\n  const handleChangeStatus = useCallback(\n    (newValue) => {\n      popover.onClose();\n      setStatus(newValue);\n    },\n    [popover]\n  );\n\n  return (\n    <>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        sx={{\n          p: (theme) => theme.spacing(2.5, 1, 2.5, 2.5),\n        }}\n      >\n        {!smUp && (\n          <Tooltip title=\"Back\">\n            <IconButton onClick={onCloseDetails} sx={{ mr: 1 }}>\n              <Iconify icon=\"eva:arrow-ios-back-fill\" />\n            </IconButton>\n          </Tooltip>\n        )}\n\n        <Button\n          size=\"small\"\n          variant=\"soft\"\n          endIcon={<Iconify icon=\"eva:arrow-ios-downward-fill\" width={16} sx={{ ml: -0.5 }} />}\n          onClick={popover.onOpen}\n        >\n          {status}\n        </Button>\n\n        <Stack direction=\"row\" justifyContent=\"flex-end\" flexGrow={1}>\n          <Tooltip title=\"Like\">\n            <IconButton color={liked ? 'default' : 'primary'} onClick={onLike}>\n              <Iconify icon=\"ic:round-thumb-up\" />\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Delete task\">\n            <IconButton onClick={confirm.onTrue}>\n              <Iconify icon=\"solar:trash-bin-trash-bold\" />\n            </IconButton>\n          </Tooltip>\n\n          <IconButton>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </Stack>\n      </Stack>\n\n      <CustomPopover\n        open={popover.open}\n        onClose={popover.onClose}\n        arrow=\"top-right\"\n        sx={{ width: 140 }}\n      >\n        {['To Do', 'In Progress', 'Ready To Test', 'Done'].map((option) => (\n          <MenuItem\n            key={option}\n            selected={status === option}\n            onClick={() => {\n              handleChangeStatus(option);\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </CustomPopover>\n\n      <ConfirmDialog\n        open={confirm.value}\n        onClose={confirm.onFalse}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete <strong> {taskName} </strong>?\n          </>\n        }\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\nKanbanDetailsToolbar.propTypes = {\n  liked: PropTypes.bool,\n  onCloseDetails: PropTypes.func,\n  onDelete: PropTypes.func,\n  onLike: PropTypes.func,\n  taskName: PropTypes.string,\n  taskStatus: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogContent from '@mui/material/DialogContent';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\n// _mock\nimport { _contacts } from 'src/_mock';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport SearchNotFound from 'src/components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nconst ITEM_HEIGHT = 64;\n\nexport default function KanbanContactsDialog({ assignee = [], open, onClose }) {\n  const [searchContact, setSearchContact] = useState('');\n\n  const handleSearchContacts = useCallback((event) => {\n    setSearchContact(event.target.value);\n  }, []);\n\n  const dataFiltered = applyFilter({\n    inputData: _contacts,\n    query: searchContact,\n  });\n\n  const notFound = !dataFiltered.length && !!searchContact;\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <DialogTitle sx={{ pb: 0 }}>\n        Contacts <Typography component=\"span\">({_contacts.length})</Typography>\n      </DialogTitle>\n\n      <Box sx={{ px: 3, py: 2.5 }}>\n        <TextField\n          fullWidth\n          value={searchContact}\n          onChange={handleSearchContacts}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Box>\n\n      <DialogContent sx={{ p: 0 }}>\n        {notFound ? (\n          <SearchNotFound query={searchContact} sx={{ mt: 3, mb: 10 }} />\n        ) : (\n          <Scrollbar\n            sx={{\n              px: 2.5,\n              height: ITEM_HEIGHT * 6,\n            }}\n          >\n            {dataFiltered.map((contact) => {\n              const checked = assignee.map((person) => person.name).includes(contact.name);\n\n              return (\n                <ListItem\n                  key={contact.id}\n                  disableGutters\n                  secondaryAction={\n                    <Button\n                      size=\"small\"\n                      color={checked ? 'primary' : 'inherit'}\n                      startIcon={\n                        <Iconify\n                          width={16}\n                          icon={checked ? 'eva:checkmark-fill' : 'mingcute:add-line'}\n                          sx={{ mr: -0.5 }}\n                        />\n                      }\n                    >\n                      {checked ? 'Assigned' : 'Assign'}\n                    </Button>\n                  }\n                  sx={{ height: ITEM_HEIGHT }}\n                >\n                  <ListItemAvatar>\n                    <Avatar src={contact.avatarUrl} />\n                  </ListItemAvatar>\n\n                  <ListItemText\n                    primaryTypographyProps={{\n                      typography: 'subtitle2',\n                      sx: { mb: 0.25 },\n                    }}\n                    secondaryTypographyProps={{ typography: 'caption' }}\n                    primary={contact.name}\n                    secondary={contact.email}\n                  />\n                </ListItem>\n              );\n            })}\n          </Scrollbar>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nKanbanContactsDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  assignee: PropTypes.array,\n};\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({ inputData, query }) {\n  if (query) {\n    inputData = inputData.filter(\n      (contact) =>\n        contact.name.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\n        contact.email.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  }\n\n  return inputData;\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport ButtonBase from '@mui/material/ButtonBase';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanDetailsPriority({ priority, onChangePriority }) {\n  return (\n    <Stack direction=\"row\" flexWrap=\"wrap\" spacing={1}>\n      {['low', 'medium', 'hight'].map((option) => (\n        <ButtonBase\n          key={option}\n          onClick={() => onChangePriority(option)}\n          sx={{\n            py: 0.5,\n            pl: 0.75,\n            pr: 1.25,\n            fontSize: 12,\n            borderRadius: 1,\n            lineHeight: '20px',\n            textTransform: 'capitalize',\n            fontWeight: 'fontWeightBold',\n            boxShadow: (theme) => `inset 0 0 0 1px ${alpha(theme.palette.grey[500], 0.24)}`,\n            ...(option === priority && {\n              boxShadow: (theme) => `inset 0 0 0 2px ${theme.palette.text.primary}`,\n            }),\n          }}\n        >\n          <Iconify\n            icon={\n              (option === 'low' && 'solar:double-alt-arrow-down-bold-duotone') ||\n              (option === 'medium' && 'solar:double-alt-arrow-right-bold-duotone') ||\n              'solar:double-alt-arrow-up-bold-duotone'\n            }\n            sx={{\n              mr: 0.5,\n              ...(option === 'low' && {\n                color: 'info.main',\n              }),\n              ...(option === 'medium' && {\n                color: 'warning.main',\n              }),\n              ...(option === 'hight' && {\n                color: 'error.main',\n              }),\n            }}\n          />\n\n          {option}\n        </ButtonBase>\n      ))}\n    </Stack>\n  );\n}\nKanbanDetailsPriority.propTypes = {\n  priority: PropTypes.string,\n  onChangePriority: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Stack from '@mui/material/Stack';\n// components\nimport { MultiFilePreview, UploadBox } from 'src/components/upload';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanDetailsAttachments({ attachments }) {\n  const [files, setFiles] = useState(attachments);\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const newFiles = acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n\n      setFiles([...files, ...newFiles]);\n    },\n    [files]\n  );\n\n  const handleRemoveFile = useCallback(\n    (inputFile) => {\n      const filtered = files.filter((file) => file !== inputFile);\n      setFiles(filtered);\n    },\n    [files]\n  );\n\n  return (\n    <Stack direction=\"row\" flexWrap=\"wrap\">\n      <MultiFilePreview\n        thumbnail\n        files={files}\n        onRemove={(file) => handleRemoveFile(file)}\n        sx={{ width: 64, height: 64 }}\n      />\n\n      <UploadBox onDrop={handleDrop} />\n    </Stack>\n  );\n}\n\nKanbanDetailsAttachments.propTypes = {\n  attachments: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n// utils\nimport { fToNow } from 'src/utils/format-time';\n// components\nimport Image from 'src/components/image';\nimport Lightbox, { useLightBox } from 'src/components/lightbox';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanDetailsCommentList({ comments }) {\n  const slides = comments\n    .filter((comment) => comment.messageType === 'image')\n    .map((slide) => ({ src: slide.message }));\n\n  const lightbox = useLightBox(slides);\n\n  return (\n    <>\n      <Stack\n        spacing={3}\n        flexGrow={1}\n        sx={{\n          py: 3,\n          px: 2.5,\n          bgcolor: 'background.neutral',\n        }}\n      >\n        {comments.map((comment) => (\n          <Stack key={comment.id} direction=\"row\" spacing={2}>\n            <Avatar src={comment.avatarUrl} />\n\n            <Stack spacing={comment.messageType === 'image' ? 1 : 0.5} flexGrow={1}>\n              <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Typography variant=\"subtitle2\"> {comment.name}</Typography>\n                <Typography variant=\"caption\" sx={{ color: 'text.disabled' }}>\n                  {fToNow(comment.createdAt)}\n                </Typography>\n              </Stack>\n\n              {comment.messageType === 'image' ? (\n                <Image\n                  alt={comment.message}\n                  src={comment.message}\n                  onClick={() => lightbox.onOpen(comment.message)}\n                  sx={{\n                    borderRadius: 1.5,\n                    cursor: 'pointer',\n                    transition: (theme) => theme.transitions.create(['opacity']),\n                    '&:hover': {\n                      opacity: 0.8,\n                    },\n                  }}\n                />\n              ) : (\n                <Typography variant=\"body2\">{comment.message}</Typography>\n              )}\n            </Stack>\n          </Stack>\n        ))}\n      </Stack>\n\n      <Lightbox\n        index={lightbox.selected}\n        slides={slides}\n        open={lightbox.open}\n        close={lightbox.onClose}\n      />\n    </>\n  );\n}\n\nKanbanDetailsCommentList.propTypes = {\n  comments: PropTypes.array,\n};\n","// @mui\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanDetailsCommentInput() {\n  const { user } = useMockedUser();\n\n  return (\n    <Stack\n      direction=\"row\"\n      spacing={2}\n      sx={{\n        py: 3,\n        px: 2.5,\n      }}\n    >\n      <Avatar src={user?.photoURL} alt={user?.displayName} />\n\n      <Paper variant=\"outlined\" sx={{ p: 1, flexGrow: 1, bgcolor: 'transparent' }}>\n        <InputBase fullWidth multiline rows={2} placeholder=\"Type a message\" sx={{ px: 1 }} />\n\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Stack direction=\"row\" flexGrow={1}>\n            <IconButton>\n              <Iconify icon=\"solar:gallery-add-bold\" />\n            </IconButton>\n\n            <IconButton>\n              <Iconify icon=\"eva:attach-2-fill\" />\n            </IconButton>\n          </Stack>\n\n          <Button variant=\"contained\">Comment</Button>\n        </Stack>\n      </Paper>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport CustomDateRangePicker, { useDateRangePicker } from 'src/components/custom-date-range-picker';\n//\nimport KanbanInputName from './kanban-input-name';\nimport KanbanDetailsToolbar from './kanban-details-toolbar';\nimport KanbanContactsDialog from './kanban-contacts-dialog';\nimport KanbanDetailsPriority from './kanban-details-priority';\nimport KanbanDetailsAttachments from './kanban-details-attachments';\nimport KanbanDetailsCommentList from './kanban-details-comment-list';\nimport KanbanDetailsCommentInput from './kanban-details-comment-input';\n\n// ----------------------------------------------------------------------\n\nconst StyledLabel = styled('span')(({ theme }) => ({\n  ...theme.typography.caption,\n  width: 100,\n  flexShrink: 0,\n  color: theme.palette.text.secondary,\n  fontWeight: theme.typography.fontWeightSemiBold,\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanDetails({\n  task,\n  openDetails,\n  onCloseDetails,\n  //\n  onUpdateTask,\n  onDeleteTask,\n}) {\n  const [priority, setPriority] = useState(task.priority);\n\n  const [taskName, setTaskName] = useState(task.name);\n\n  const like = useBoolean();\n\n  const contacts = useBoolean();\n\n  const [taskDescription, setTaskDescription] = useState(task.description);\n\n  const rangePicker = useDateRangePicker(task.due[0], task.due[1]);\n\n  const handleChangeTaskName = useCallback((event) => {\n    setTaskName(event.target.value);\n  }, []);\n\n  const handleUpdateTask = useCallback(\n    (event) => {\n      try {\n        if (event.key === 'Enter') {\n          if (taskName) {\n            onUpdateTask({\n              ...task,\n              name: taskName,\n            });\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [onUpdateTask, task, taskName]\n  );\n\n  const handleChangeTaskDescription = useCallback((event) => {\n    setTaskDescription(event.target.value);\n  }, []);\n\n  const handleChangePriority = useCallback((newValue) => {\n    setPriority(newValue);\n  }, []);\n\n  const renderHead = (\n    <KanbanDetailsToolbar\n      liked={like.value}\n      taskName={task.name}\n      onLike={like.onToggle}\n      onDelete={onDeleteTask}\n      taskStatus={task.status}\n      onCloseDetails={onCloseDetails}\n    />\n  );\n\n  const renderName = (\n    <KanbanInputName\n      placeholder=\"Task name\"\n      value={taskName}\n      onChange={handleChangeTaskName}\n      onKeyUp={handleUpdateTask}\n    />\n  );\n\n  const renderReporter = (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <StyledLabel>Reporter</StyledLabel>\n      <Avatar alt={task.reporter.name} src={task.reporter.avatarUrl} />\n    </Stack>\n  );\n\n  const renderAssignee = (\n    <Stack direction=\"row\">\n      <StyledLabel sx={{ height: 40, lineHeight: '40px' }}>Assignee</StyledLabel>\n\n      <Stack direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\" spacing={1}>\n        {task.assignee.map((user) => (\n          <Avatar key={user.id} alt={user.name} src={user.avatarUrl} />\n        ))}\n\n        <Tooltip title=\"Add assignee\">\n          <IconButton\n            onClick={contacts.onTrue}\n            sx={{\n              bgcolor: (theme) => alpha(theme.palette.grey[500], 0.08),\n              border: (theme) => `dashed 1px ${theme.palette.divider}`,\n            }}\n          >\n            <Iconify icon=\"mingcute:add-line\" />\n          </IconButton>\n        </Tooltip>\n\n        <KanbanContactsDialog\n          assignee={task.assignee}\n          open={contacts.value}\n          onClose={contacts.onFalse}\n        />\n      </Stack>\n    </Stack>\n  );\n\n  const renderLabel = (\n    <Stack direction=\"row\">\n      <StyledLabel sx={{ height: 24, lineHeight: '24px' }}>Labels</StyledLabel>\n\n      {!!task.labels.length && (\n        <Stack direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\" spacing={1}>\n          {task.labels.map((label) => (\n            <Chip key={label} color=\"info\" label={label} size=\"small\" variant=\"soft\" />\n          ))}\n        </Stack>\n      )}\n    </Stack>\n  );\n\n  const renderDueDate = (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <StyledLabel> Due date </StyledLabel>\n\n      {rangePicker.selected ? (\n        <Button size=\"small\" onClick={rangePicker.onOpen}>\n          {rangePicker.shortLabel}\n        </Button>\n      ) : (\n        <Tooltip title=\"Add due date\">\n          <IconButton\n            onClick={rangePicker.onOpen}\n            sx={{\n              bgcolor: (theme) => alpha(theme.palette.grey[500], 0.08),\n              border: (theme) => `dashed 1px ${theme.palette.divider}`,\n            }}\n          >\n            <Iconify icon=\"mingcute:add-line\" />\n          </IconButton>\n        </Tooltip>\n      )}\n\n      <CustomDateRangePicker\n        variant=\"calendar\"\n        title=\"Choose due date\"\n        startDate={rangePicker.startDate}\n        endDate={rangePicker.endDate}\n        onChangeStartDate={rangePicker.onChangeStartDate}\n        onChangeEndDate={rangePicker.onChangeEndDate}\n        open={rangePicker.open}\n        onClose={rangePicker.onClose}\n        selected={rangePicker.selected}\n        error={rangePicker.error}\n      />\n    </Stack>\n  );\n\n  const renderPriority = (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <StyledLabel>Priority</StyledLabel>\n\n      <KanbanDetailsPriority priority={priority} onChangePriority={handleChangePriority} />\n    </Stack>\n  );\n\n  const renderDescription = (\n    <Stack direction=\"row\">\n      <StyledLabel> Description </StyledLabel>\n\n      <TextField\n        fullWidth\n        multiline\n        size=\"small\"\n        value={taskDescription}\n        onChange={handleChangeTaskDescription}\n        InputProps={{\n          sx: { typography: 'body2' },\n        }}\n      />\n    </Stack>\n  );\n\n  const renderAttachments = (\n    <Stack direction=\"row\">\n      <StyledLabel>Attachments</StyledLabel>\n      <KanbanDetailsAttachments attachments={task.attachments} />\n    </Stack>\n  );\n\n  const renderComments = <KanbanDetailsCommentList comments={task.comments} />;\n\n  return (\n    <Drawer\n      open={openDetails}\n      onClose={onCloseDetails}\n      anchor=\"right\"\n      slotProps={{\n        backdrop: { invisible: true },\n      }}\n      PaperProps={{\n        sx: {\n          width: {\n            xs: 1,\n            sm: 480,\n          },\n        },\n      }}\n    >\n      {renderHead}\n\n      <Divider />\n\n      <Scrollbar\n        sx={{\n          height: 1,\n          '& .simplebar-content': {\n            height: 1,\n            display: 'flex',\n            flexDirection: 'column',\n          },\n        }}\n      >\n        <Stack\n          spacing={3}\n          sx={{\n            pt: 3,\n            pb: 5,\n            px: 2.5,\n          }}\n        >\n          {renderName}\n\n          {renderReporter}\n\n          {renderAssignee}\n\n          {renderLabel}\n\n          {renderDueDate}\n\n          {renderPriority}\n\n          {renderDescription}\n\n          {renderAttachments}\n        </Stack>\n\n        {!!task.comments.length && renderComments}\n      </Scrollbar>\n\n      <KanbanDetailsCommentInput />\n    </Drawer>\n  );\n}\n\nKanbanDetails.propTypes = {\n  onCloseDetails: PropTypes.func,\n  onDeleteTask: PropTypes.func,\n  onUpdateTask: PropTypes.func,\n  openDetails: PropTypes.bool,\n  task: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport { Draggable } from '@hello-pangea/dnd';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// theme\nimport { bgBlur } from 'src/theme/css';\n// components\nimport Iconify from 'src/components/iconify';\n//\nimport KanbanDetails from './kanban-details';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanTaskItem({ task, index, onDeleteTask, onUpdateTask, sx, ...other }) {\n  const theme = useTheme();\n\n  const openDetails = useBoolean();\n\n  const renderPriority = (\n    <Iconify\n      icon={\n        (task.priority === 'low' && 'solar:double-alt-arrow-down-bold-duotone') ||\n        (task.priority === 'medium' && 'solar:double-alt-arrow-right-bold-duotone') ||\n        'solar:double-alt-arrow-up-bold-duotone'\n      }\n      sx={{\n        position: 'absolute',\n        top: 4,\n        right: 4,\n        ...(task.priority === 'low' && {\n          color: 'info.main',\n        }),\n        ...(task.priority === 'medium' && {\n          color: 'warning.main',\n        }),\n        ...(task.priority === 'hight' && {\n          color: 'error.main',\n        }),\n      }}\n    />\n  );\n\n  const renderImg = (\n    <Box\n      sx={{\n        p: theme.spacing(1, 1, 0, 1),\n      }}\n    >\n      <Box\n        component=\"img\"\n        alt={task.attachments[0]}\n        src={task.attachments[0]}\n        sx={{\n          borderRadius: 1.5,\n          ...(openDetails.value && {\n            opacity: 0.8,\n          }),\n        }}\n      />\n    </Box>\n  );\n\n  const renderInfo = (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <Stack\n        flexGrow={1}\n        direction=\"row\"\n        alignItems=\"center\"\n        sx={{\n          typography: 'caption',\n          color: 'text.disabled',\n        }}\n      >\n        <Iconify width={16} icon=\"solar:chat-round-dots-bold\" sx={{ mr: 0.25 }} />\n        <Box component=\"span\" sx={{ mr: 1 }}>\n          {task.comments.length}\n        </Box>\n\n        <Iconify width={16} icon=\"eva:attach-2-fill\" sx={{ mr: 0.25 }} />\n        <Box component=\"span\">{task.attachments.length}</Box>\n      </Stack>\n\n      <AvatarGroup\n        sx={{\n          [`& .${avatarGroupClasses.avatar}`]: {\n            width: 24,\n            height: 24,\n          },\n        }}\n      >\n        {task.assignee.map((user) => (\n          <Avatar key={user.id} alt={user.name} src={user.avatarUrl} />\n        ))}\n      </AvatarGroup>\n    </Stack>\n  );\n\n  return (\n    <>\n      <Draggable draggableId={task.id} index={index}>\n        {(provided, snapshot) => (\n          <Paper\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onClick={openDetails.onTrue}\n            sx={{\n              width: 1,\n              borderRadius: 1.5,\n              overflow: 'hidden',\n              position: 'relative',\n              bgcolor: 'background.default',\n              boxShadow: theme.customShadows.z1,\n              '&:hover': {\n                boxShadow: theme.customShadows.z20,\n              },\n              ...(openDetails.value && {\n                boxShadow: theme.customShadows.z20,\n              }),\n              ...(snapshot.isDragging && {\n                boxShadow: theme.customShadows.z20,\n                ...bgBlur({\n                  opacity: 0.48,\n                  color: theme.palette.background.default,\n                }),\n              }),\n              ...sx,\n            }}\n            {...other}\n          >\n            {!!task.attachments.length && renderImg}\n\n            <Stack spacing={2} sx={{ px: 2, py: 2.5, position: 'relative' }}>\n              {renderPriority}\n\n              <Typography variant=\"subtitle2\">{task.name}</Typography>\n\n              {renderInfo}\n            </Stack>\n          </Paper>\n        )}\n      </Draggable>\n\n      <KanbanDetails\n        task={task}\n        openDetails={openDetails.value}\n        onCloseDetails={openDetails.onFalse}\n        onUpdateTask={onUpdateTask}\n        onDeleteTask={onDeleteTask}\n      />\n    </>\n  );\n}\n\nKanbanTaskItem.propTypes = {\n  index: PropTypes.number,\n  onDeleteTask: PropTypes.func,\n  onUpdateTask: PropTypes.func,\n  sx: PropTypes.object,\n  task: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport { useRef, useState, useEffect, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\nimport { ConfirmDialog } from 'src/components/custom-dialog';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n//\nimport KanbanInputName from './kanban-input-name';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanColumnToolBar({\n  columnName,\n  onDeleteColumn,\n  onClearColumn,\n  onUpdateColumn,\n}) {\n  const renameRef = useRef(null);\n\n  const popover = usePopover();\n\n  const confirmDialog = useBoolean();\n\n  const [name, setName] = useState(columnName);\n\n  useEffect(() => {\n    if (popover.open) {\n      if (renameRef.current) {\n        renameRef.current.focus();\n      }\n    }\n  }, [popover.open]);\n\n  const handleChangeName = useCallback((event) => {\n    setName(event.target.value);\n  }, []);\n\n  const handleKeyUpUpdateColumn = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        if (renameRef.current) {\n          renameRef.current.blur();\n        }\n        onUpdateColumn(name);\n      }\n    },\n    [name, onUpdateColumn]\n  );\n\n  return (\n    <>\n      <Stack\n        spacing={1}\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ pt: 3 }}\n      >\n        <KanbanInputName\n          inputRef={renameRef}\n          placeholder=\"Section name\"\n          value={name}\n          onChange={handleChangeName}\n          onKeyUp={handleKeyUpUpdateColumn}\n        />\n\n        <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\n          <Iconify icon=\"eva:more-horizontal-fill\" />\n        </IconButton>\n      </Stack>\n\n      <CustomPopover\n        open={popover.open}\n        onClose={popover.onClose}\n        sx={{\n          ml: 1.5,\n          width: 160,\n        }}\n      >\n        <MenuItem onClick={popover.onClose}>\n          <Iconify icon=\"solar:pen-bold\" />\n          Rename\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            onClearColumn();\n            popover.onClose();\n          }}\n        >\n          <Iconify icon=\"solar:eraser-bold\" />\n          Clear\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            confirmDialog.onTrue();\n            popover.onClose();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\n          Delete\n        </MenuItem>\n      </CustomPopover>\n\n      <ConfirmDialog\n        open={confirmDialog.value}\n        onClose={confirmDialog.onFalse}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete column?\n            <Box sx={{ typography: 'caption', color: 'error.main', mt: 2 }}>\n              <strong> NOTE: </strong> All tasks related to this category will also be deleted.\n            </Box>\n          </>\n        }\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              onDeleteColumn();\n              confirmDialog.onFalse();\n            }}\n          >\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\nKanbanColumnToolBar.propTypes = {\n  columnName: PropTypes.string,\n  onClearColumn: PropTypes.func,\n  onDeleteColumn: PropTypes.func,\n  onUpdateColumn: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { Droppable, Draggable } from '@hello-pangea/dnd';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// api\nimport {\n  updateColumn,\n  clearColumn,\n  deleteColumn,\n  createTask,\n  updateTask,\n  deleteTask,\n} from 'src/api/kanban';\n// components\nimport Iconify from 'src/components/iconify';\nimport { useSnackbar } from 'src/components/snackbar';\n//\nimport KanbanTaskAdd from './kanban-task-add';\nimport KanbanTaskItem from './kanban-task-item';\nimport KanbanColumnToolBar from './kanban-column-tool-bar';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanColumn({ column, tasks, index }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const openAddTask = useBoolean();\n\n  const handleUpdateColumn = useCallback(\n    async (columnName) => {\n      try {\n        if (column.name !== columnName) {\n          updateColumn(column.id, columnName);\n\n          enqueueSnackbar('Update success!', {\n            anchorOrigin: { vertical: 'top', horizontal: 'center' },\n          });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [column.id, column.name, enqueueSnackbar]\n  );\n\n  const handleClearColumn = useCallback(async () => {\n    try {\n      clearColumn(column.id);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [column.id]);\n\n  const handleDeleteColumn = useCallback(async () => {\n    try {\n      deleteColumn(column.id);\n\n      enqueueSnackbar('Delete success!', {\n        anchorOrigin: { vertical: 'top', horizontal: 'center' },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [column.id, enqueueSnackbar]);\n\n  const handleAddTask = useCallback(\n    async (taskData) => {\n      try {\n        createTask(column.id, taskData);\n\n        openAddTask.onFalse();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [column.id, openAddTask]\n  );\n\n  const handleUpdateTask = useCallback(async (taskData) => {\n    try {\n      updateTask(taskData);\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  const handleDeleteTask = useCallback(\n    async (taskId) => {\n      try {\n        deleteTask(column.id, taskId);\n\n        enqueueSnackbar('Delete success!', {\n          anchorOrigin: { vertical: 'top', horizontal: 'center' },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [column.id, enqueueSnackbar]\n  );\n\n  const renderAddTask = (\n    <Stack\n      spacing={2}\n      sx={{\n        pb: 3,\n      }}\n    >\n      {openAddTask.value && (\n        <KanbanTaskAdd\n          status={column.name}\n          onAddTask={handleAddTask}\n          onCloseAddTask={openAddTask.onFalse}\n        />\n      )}\n\n      <Button\n        fullWidth\n        size=\"large\"\n        color=\"inherit\"\n        startIcon={\n          <Iconify\n            icon={openAddTask.value ? 'solar:close-circle-broken' : 'mingcute:add-line'}\n            width={18}\n            sx={{ mr: -0.5 }}\n          />\n        }\n        onClick={openAddTask.onToggle}\n        sx={{ fontSize: 14 }}\n      >\n        {openAddTask.value ? 'Close' : 'Add Task'}\n      </Button>\n    </Stack>\n  );\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {(provided, snapshot) => (\n        <Paper\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          sx={{\n            px: 2,\n            borderRadius: 2,\n            bgcolor: 'background.neutral',\n            ...(snapshot.isDragging && {\n              bgcolor: (theme) => alpha(theme.palette.grey[500], 0.24),\n            }),\n          }}\n        >\n          <Stack {...provided.dragHandleProps}>\n            <KanbanColumnToolBar\n              columnName={column.name}\n              onUpdateColumn={handleUpdateColumn}\n              onClearColumn={handleClearColumn}\n              onDeleteColumn={handleDeleteColumn}\n            />\n\n            <Droppable droppableId={column.id} type=\"TASK\">\n              {(dropProvided) => (\n                <Stack\n                  ref={dropProvided.innerRef}\n                  {...dropProvided.droppableProps}\n                  spacing={2}\n                  sx={{\n                    py: 3,\n                    width: 280,\n                  }}\n                >\n                  {column.taskIds.map((taskId, taskIndex) => (\n                    <KanbanTaskItem\n                      key={taskId}\n                      index={taskIndex}\n                      task={tasks[taskId]}\n                      onUpdateTask={handleUpdateTask}\n                      onDeleteTask={() => handleDeleteTask(taskId)}\n                    />\n                  ))}\n                  {dropProvided.placeholder}\n                </Stack>\n              )}\n            </Droppable>\n\n            {renderAddTask}\n          </Stack>\n        </Paper>\n      )}\n    </Draggable>\n  );\n}\n\nKanbanColumn.propTypes = {\n  column: PropTypes.object,\n  index: PropTypes.number,\n  tasks: PropTypes.object,\n};\n","import { useState, useCallback } from 'react';\n// @mui\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { inputBaseClasses } from '@mui/material/InputBase';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// utils\nimport uuidv4 from 'src/utils/uuidv4';\n// api\nimport { createColumn } from 'src/api/kanban';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanColumnAdd() {\n  const [columnName, setColumnName] = useState('');\n\n  const openAddColumn = useBoolean();\n\n  const handleChangeName = useCallback((event) => {\n    setColumnName(event.target.value);\n  }, []);\n\n  const handleCreateColumn = useCallback(async () => {\n    try {\n      if (columnName) {\n        createColumn({\n          id: uuidv4(),\n          name: columnName,\n          taskIds: [],\n        });\n        setColumnName('');\n      }\n      openAddColumn.onFalse();\n    } catch (error) {\n      console.error(error);\n    }\n  }, [columnName, openAddColumn]);\n\n  const handleKeyUpCreateColumn = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        handleCreateColumn();\n      }\n    },\n    [handleCreateColumn]\n  );\n\n  return (\n    <Paper sx={{ minWidth: 280, width: 280 }}>\n      {openAddColumn.value ? (\n        <ClickAwayListener onClickAway={handleCreateColumn}>\n          <TextField\n            autoFocus\n            fullWidth\n            placeholder=\"New section\"\n            value={columnName}\n            onChange={handleChangeName}\n            onKeyUp={handleKeyUpCreateColumn}\n            sx={{\n              [`& .${inputBaseClasses.input}`]: {\n                typography: 'h6',\n              },\n            }}\n          />\n        </ClickAwayListener>\n      ) : (\n        <Button\n          fullWidth\n          size=\"large\"\n          color=\"inherit\"\n          variant=\"outlined\"\n          startIcon={<Iconify icon=\"mingcute:add-line\" sx={{ mr: -0.5 }} />}\n          onClick={openAddColumn.onTrue}\n        >\n          Add Section\n        </Button>\n      )}\n    </Paper>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ----------------------------------------------------------------------\n\nexport function KanbanColumnSkeleton({ index, sx, ...other }) {\n  return (\n    <Stack\n      component={Paper}\n      variant=\"outlined\"\n      sx={{\n        p: 2,\n        width: 310,\n        borderRadius: 2,\n        ...sx,\n      }}\n      {...other}\n    >\n      <Stack spacing={2} sx={{ width: 280 }}>\n        <Skeleton sx={{ paddingTop: '75%', borderRadius: 1.5 }} />\n        {[0].includes(Number(index)) && <Skeleton sx={{ paddingTop: '50%', borderRadius: 1.5 }} />}\n        {[0, 1].includes(Number(index)) && (\n          <Skeleton sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n        )}\n        {[0, 1, 2].includes(Number(index)) && (\n          <Skeleton sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n        )}\n      </Stack>\n    </Stack>\n  );\n}\n\nKanbanColumnSkeleton.propTypes = {\n  index: PropTypes.number,\n  sx: PropTypes.object,\n};\n","import { useCallback } from 'react';\nimport { DragDropContext, Droppable } from '@hello-pangea/dnd';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n// api\nimport { useGetBoard, moveColumn, moveTask } from 'src/api/kanban';\n// components\nimport Scrollbar from 'src/components/scrollbar';\nimport EmptyContent from 'src/components/empty-content';\n//\nimport KanbanColumn from '../kanban-column';\nimport KanbanColumnAdd from '../kanban-column-add';\nimport { KanbanColumnSkeleton } from '../kanban-skeleton';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanView() {\n  const { board, boardLoading, boardEmpty } = useGetBoard();\n\n  const onDragEnd = useCallback(\n    async ({ destination, source, draggableId, type }) => {\n      try {\n        if (!destination) {\n          return;\n        }\n\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\n          return;\n        }\n\n        // Moving column\n        if (type === 'COLUMN') {\n          const newOrdered = [...board.ordered];\n\n          newOrdered.splice(source.index, 1);\n\n          newOrdered.splice(destination.index, 0, draggableId);\n\n          moveColumn(newOrdered);\n          return;\n        }\n\n        const sourceColumn = board?.columns[source.droppableId];\n\n        const destinationColumn = board?.columns[destination.droppableId];\n\n        // Moving task to same list\n        if (sourceColumn.id === destinationColumn.id) {\n          const newTaskIds = [...sourceColumn.taskIds];\n\n          newTaskIds.splice(source.index, 1);\n\n          newTaskIds.splice(destination.index, 0, draggableId);\n\n          moveTask({\n            ...board?.columns,\n            [sourceColumn.id]: {\n              ...sourceColumn,\n              taskIds: newTaskIds,\n            },\n          });\n\n          console.info('Moving to same list!');\n\n          return;\n        }\n\n        // Moving task to different list\n        const sourceTaskIds = [...sourceColumn.taskIds];\n\n        const destinationTaskIds = [...destinationColumn.taskIds];\n\n        // Remove from source\n        sourceTaskIds.splice(source.index, 1);\n\n        // Insert into destination\n        destinationTaskIds.splice(destination.index, 0, draggableId);\n\n        moveTask({\n          ...board?.columns,\n          [sourceColumn.id]: {\n            ...sourceColumn,\n            taskIds: sourceTaskIds,\n          },\n          [destinationColumn.id]: {\n            ...destinationColumn,\n            taskIds: destinationTaskIds,\n          },\n        });\n\n        console.info('Moving to different list!');\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [board?.columns, board?.ordered]\n  );\n\n  const renderSkeleton = (\n    <Stack direction=\"row\" alignItems=\"flex-start\" spacing={3}>\n      {[...Array(4)].map((_, index) => (\n        <KanbanColumnSkeleton key={index} index={index} />\n      ))}\n    </Stack>\n  );\n\n  return (\n    <Container\n      maxWidth={false}\n      sx={{\n        height: 1,\n      }}\n    >\n      <Typography\n        variant=\"h4\"\n        sx={{\n          mb: { xs: 3, md: 5 },\n        }}\n      >\n        Kanban\n      </Typography>\n\n      {boardLoading && renderSkeleton}\n\n      {boardEmpty && (\n        <EmptyContent\n          filled\n          title=\"No Data\"\n          sx={{\n            py: 10,\n            maxHeight: { md: 480 },\n          }}\n        />\n      )}\n\n      {!!board?.ordered.length && (\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"board\" type=\"COLUMN\" direction=\"horizontal\">\n            {(provided) => (\n              <Scrollbar\n                autoHide={false}\n                sx={{\n                  height: 1,\n                  minHeight: {\n                    xs: '80vh',\n                    md: 'unset',\n                  },\n                }}\n              >\n                <Stack\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  spacing={3}\n                  direction=\"row\"\n                  alignItems=\"flex-start\"\n                  sx={{\n                    p: 0.25,\n                    height: 1,\n                  }}\n                >\n                  {board?.ordered.map((columnId, index) => (\n                    <KanbanColumn\n                      index={index}\n                      key={columnId}\n                      column={board?.columns[columnId]}\n                      tasks={board?.tasks}\n                    />\n                  ))}\n\n                  {provided.placeholder}\n\n                  <KanbanColumnAdd />\n                </Stack>\n              </Scrollbar>\n            )}\n          </Droppable>\n        </DragDropContext>\n      )}\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport { KanbanView } from 'src/sections/kanban/view';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Kanban</title>\n      </Helmet>\n\n      <KanbanView />\n    </>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n      })\n    : '';\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n"],"names":["shortDateLabel","startDate","endDate","getCurrentYear","Date","getFullYear","startDateYear","getYear","endDateYear","currentYear","sameDay","isSameDay","sameMonth","isSameMonth","fDate","concat","useDateRangePicker","start","end","open","setOpen","useState","setEndDate","setStartDate","error","getTime","onOpen","useCallback","onClose","onChangeStartDate","newValue","onChangeEndDate","onReset","selected","label","shortLabel","CustomDateRangePicker","_ref","title","variant","mdUp","useResponsive","isCalendarView","_jsxs","Dialog","fullWidth","maxWidth","PaperProps","sx","children","_jsx","DialogTitle","pb","DialogContent","overflow","Stack","justifyContent","spacing","direction","pt","_Fragment","Paper","borderRadius","borderColor","borderStyle","DateCalendar","value","onChange","DatePicker","FormHelperText","px","DialogActions","Button","color","onClick","disabled","useLightBox","slides","setSelected","slideUrl","slideIndex","findIndex","slide","type","poster","src","StyledLightbox","theme","useTheme","GlobalStyles","styles","alpha","palette","grey","fontSize","typography","h5","fontWeight","lineHeight","body2","filter","opacity","backgroundColor","common","black","ICON_SIZE","Lightbox","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","other","totalItems","length","ReactLightbox","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","_ref2","index","toolbar","buttons","DisplayTotal","render","iconClose","Iconify","width","icon","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","_ref3","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","_ref4","currentIndex","useLightboxState","Box","component","className","alignItems","display","URL","endpoints","kanban","options","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","async","moveTask","updateColumns","mutate","currentData","board","columns","KanbanTaskAdd","status","onAddTask","onCloseAddTask","name","setName","defaultTask","useMemo","id","uuidv4","trim","priority","attachments","labels","comments","assignee","due","reporter","_mock","fullName","avatarUrl","image","avatar","handleKeyUpAddTask","event","key","handleClickAddTask","handleChangeName","target","ClickAwayListener","onClickAway","bgcolor","boxShadow","customShadows","z1","InputBase","autoFocus","multiline","placeholder","onKeyUp","height","inputBaseClasses","input","KanbanInputName","root","py","borderWidth","transition","transitions","create","focused","pl","KanbanDetailsToolbar","liked","onLike","taskName","onDelete","taskStatus","onCloseDetails","smUp","confirm","useBoolean","popover","usePopover","setStatus","handleChangeStatus","p","Tooltip","IconButton","mr","size","endIcon","ml","flexGrow","onTrue","CustomPopover","arrow","map","option","MenuItem","ConfirmDialog","onFalse","content","action","ITEM_HEIGHT","KanbanContactsDialog","searchContact","setSearchContact","handleSearchContacts","dataFiltered","inputData","query","contact","toLowerCase","indexOf","email","applyFilter","_contacts","notFound","Typography","TextField","InputProps","startAdornment","InputAdornment","position","SearchNotFound","mt","mb","Scrollbar","checked","person","includes","ListItem","disableGutters","secondaryAction","startIcon","ListItemAvatar","Avatar","ListItemText","primaryTypographyProps","secondaryTypographyProps","primary","secondary","KanbanDetailsPriority","onChangePriority","flexWrap","ButtonBase","pr","textTransform","text","KanbanDetailsAttachments","files","setFiles","handleDrop","acceptedFiles","newFiles","file","Object","assign","preview","createObjectURL","handleRemoveFile","inputFile","filtered","MultiFilePreview","thumbnail","onRemove","UploadBox","onDrop","KanbanDetailsCommentList","comment","messageType","message","lightbox","fToNow","createdAt","Image","alt","cursor","close","KanbanDetailsCommentInput","user","useMockedUser","photoURL","displayName","rows","StyledLabel","styled","caption","flexShrink","fontWeightSemiBold","KanbanDetails","task","openDetails","onUpdateTask","onDeleteTask","setPriority","setTaskName","like","contacts","taskDescription","setTaskDescription","description","rangePicker","handleChangeTaskName","handleUpdateTask","console","handleChangeTaskDescription","handleChangePriority","renderHead","onToggle","renderName","renderReporter","renderAssignee","border","divider","renderLabel","Chip","renderDueDate","renderPriority","renderDescription","renderAttachments","renderComments","Drawer","anchor","slotProps","backdrop","invisible","xs","sm","Divider","flexDirection","KanbanTaskItem","top","right","renderImg","renderInfo","AvatarGroup","avatarGroupClasses","Draggable","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","z20","isDragging","bgBlur","background","default","KanbanColumnToolBar","columnName","onDeleteColumn","onClearColumn","onUpdateColumn","renameRef","useRef","confirmDialog","useEffect","current","focus","handleKeyUpUpdateColumn","blur","inputRef","KanbanColumn","column","tasks","enqueueSnackbar","useSnackbar","openAddTask","handleUpdateColumn","columnId","updateColumn","anchorOrigin","vertical","horizontal","handleClearColumn","taskIds","forEach","clearColumn","handleDeleteColumn","ordered","deleteColumn","handleAddTask","taskData","createTask","updateTask","handleDeleteTask","taskId","deleteTask","renderAddTask","Droppable","droppableId","dropProvided","droppableProps","taskIndex","KanbanColumnAdd","setColumnName","openAddColumn","handleCreateColumn","columnData","createColumn","handleKeyUpCreateColumn","minWidth","KanbanColumnSkeleton","Skeleton","paddingTop","Number","KanbanView","boardLoading","boardEmpty","data","isLoading","isValidating","useSWR","fetcher","boardError","boardValidating","useGetBoard","onDragEnd","destination","source","newOrdered","splice","moveColumn","sourceColumn","destinationColumn","newTaskIds","info","sourceTaskIds","destinationTaskIds","renderSkeleton","Array","_","Container","md","EmptyContent","filled","maxHeight","DragDropContext","autoHide","minHeight","KanbanPage","Helmet","date","newFormat","fm","format","fDateTime","fTimestamp","formatDistanceToNow","addSuffix","replace","c","r","Math","random","toString"],"sourceRoot":""}