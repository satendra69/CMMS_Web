{"version":3,"file":"static/js/4652.0734c11e.chunk.js","mappings":"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","sources":["sections/_examples/mui/list-view.js","pages/components/mui/list.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport Paper from '@mui/material/Paper';\nimport Avatar from '@mui/material/Avatar';\nimport Switch from '@mui/material/Switch';\nimport Divider from '@mui/material/Divider';\nimport Collapse from '@mui/material/Collapse';\nimport Checkbox from '@mui/material/Checkbox';\nimport Container from '@mui/material/Container';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport ListItemButton from '@mui/material/ListItemButton';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport ComponentBlock from '../component-block';\n\n// ----------------------------------------------------------------------\n\nfunction ListItemLink(props) {\n  return <ListItemButton component=\"a\" {...props} />;\n}\n\nexport default function ListView() {\n  const [open, setOpen] = useState(true);\n\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  const [checked, setChecked] = useState([0]);\n\n  const [toggle, setToggle] = useState(['wifi']);\n\n  const handleClick = useCallback(() => {\n    setOpen((prev) => !prev);\n  }, []);\n\n  const handleListItemClick = useCallback((event, index) => {\n    setSelectedIndex(index);\n  }, []);\n\n  const handleCheck = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const handleToggle = (value) => () => {\n    const currentIndex = toggle.indexOf(value);\n    const newChecked = [...toggle];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setToggle(newChecked);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"List\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Lists' },\n            ]}\n            moreLink={['https://mui.com/components/lists']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n          <ComponentBlock title=\"Simple\">\n            <Paper variant=\"outlined\" sx={{ width: 1 }}>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItemButton>\n                  <ListItemIcon>\n                    <Iconify icon=\"solar:inbox-in-bold\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Inbox\" />\n                </ListItemButton>\n                <ListItemButton>\n                  <ListItemIcon>\n                    <Iconify icon=\"fluent:mail-24-filled\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Drafts\" />\n                </ListItemButton>\n              </List>\n\n              <Divider />\n\n              <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                <ListItemButton>\n                  <ListItemText primary=\"Trash\" />\n                </ListItemButton>\n                <ListItemLink href=\"#simple-list\">\n                  <ListItemText primary=\"Spam\" />\n                </ListItemLink>\n              </List>\n            </Paper>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Nested\">\n            <Paper variant=\"outlined\" sx={{ width: 1 }}>\n              <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Nested List Items\n                  </ListSubheader>\n                }\n              >\n                <ListItemButton>\n                  <ListItemIcon>\n                    <Iconify icon=\"iconamoon:send-fill\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Sent mail\" />\n                </ListItemButton>\n                <ListItemButton>\n                  <ListItemIcon>\n                    <Iconify icon=\"fluent:mail-24-filled\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Drafts\" />\n                </ListItemButton>\n                <ListItemButton onClick={handleClick}>\n                  <ListItemIcon>\n                    <Iconify icon=\"solar:inbox-in-bold\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Inbox\" />\n                  {open ? (\n                    <Iconify icon=\"eva:arrow-ios-upward-fill\" />\n                  ) : (\n                    <Iconify icon=\"eva:arrow-ios-downward-fill\" />\n                  )}\n                </ListItemButton>\n                <Collapse in={open} unmountOnExit>\n                  <List component=\"div\" disablePadding>\n                    <ListItemButton>\n                      <ListItemIcon>\n                        <Iconify icon=\"ic:round-star-border\" width={24} />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Starred\" />\n                    </ListItemButton>\n                  </List>\n                </Collapse>\n              </List>\n            </Paper>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Folder\">\n            <Paper variant=\"outlined\" sx={{ width: 1 }}>\n              <List>\n                <ListItemButton>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <Iconify icon=\"ic:baseline-image\" width={24} />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\n                </ListItemButton>\n                <ListItemButton>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <Iconify icon=\"ic:baseline-work\" width={24} />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\n                </ListItemButton>\n                <ListItemButton>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <Iconify icon=\"ic:round-beach-access\" width={24} />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\n                </ListItemButton>\n              </List>\n            </Paper>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Selected\">\n            <Paper variant=\"outlined\" sx={{ width: 1 }}>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItemButton\n                  selected={selectedIndex === 0}\n                  onClick={(event) => handleListItemClick(event, 0)}\n                >\n                  <ListItemIcon>\n                    <Iconify icon=\"solar:inbox-in-bold\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Inbox\" />\n                </ListItemButton>\n                <ListItemButton\n                  selected={selectedIndex === 1}\n                  onClick={(event) => handleListItemClick(event, 1)}\n                >\n                  <ListItemIcon>\n                    <Iconify icon=\"fluent:mail-24-filled\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Drafts\" />\n                </ListItemButton>\n              </List>\n\n              <Divider />\n\n              <List component=\"nav\" aria-label=\"secondary mailbox folder\">\n                <ListItemButton\n                  selected={selectedIndex === 2}\n                  onClick={(event) => handleListItemClick(event, 2)}\n                >\n                  <ListItemText primary=\"Trash\" />\n                </ListItemButton>\n                <ListItemButton\n                  selected={selectedIndex === 3}\n                  onClick={(event) => handleListItemClick(event, 3)}\n                >\n                  <ListItemText primary=\"Spam\" />\n                </ListItemButton>\n              </List>\n            </Paper>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Controls\">\n            <Paper variant=\"outlined\" sx={{ width: 1 }}>\n              <List>\n                {[0, 1, 2, 3].map((value) => {\n                  const labelId = `checkbox-list-label-${value}`;\n                  return (\n                    <ListItemButton key={value} role={undefined} dense onClick={handleCheck(value)}>\n                      <ListItemIcon>\n                        <Checkbox\n                          edge=\"start\"\n                          checked={checked.indexOf(value) !== -1}\n                          tabIndex={-1}\n                          disableRipple\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </ListItemIcon>\n\n                      <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n\n                      <ListItemSecondaryAction>\n                        <IconButton edge=\"end\">\n                          <Iconify icon=\"solar:chat-round-dots-bold\" width={24} />\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListItemButton>\n                  );\n                })}\n              </List>\n            </Paper>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Switch\">\n            <Paper variant=\"outlined\" sx={{ width: 1 }}>\n              <List subheader={<ListSubheader>Settings</ListSubheader>}>\n                <ListItemButton>\n                  <ListItemIcon>\n                    <Iconify icon=\"ic:baseline-wifi\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText id=\"switch-list-label-wifi\" primary=\"Wi-Fi\" />\n                  <ListItemSecondaryAction>\n                    <Switch\n                      edge=\"end\"\n                      onChange={handleToggle('wifi')}\n                      checked={toggle.indexOf('wifi') !== -1}\n                      inputProps={{\n                        'aria-labelledby': 'switch-list-label-wifi',\n                      }}\n                    />\n                  </ListItemSecondaryAction>\n                </ListItemButton>\n                <ListItemButton>\n                  <ListItemIcon>\n                    <Iconify icon=\"ic:baseline-bluetooth\" width={24} />\n                  </ListItemIcon>\n                  <ListItemText id=\"switch-list-label-bluetooth\" primary=\"Bluetooth\" />\n                  <ListItemSecondaryAction>\n                    <Switch\n                      edge=\"end\"\n                      onChange={handleToggle('bluetooth')}\n                      checked={toggle.indexOf('bluetooth') !== -1}\n                      inputProps={{\n                        'aria-labelledby': 'switch-list-label-bluetooth',\n                      }}\n                    />\n                  </ListItemSecondaryAction>\n                </ListItemButton>\n              </List>\n            </Paper>\n          </ComponentBlock>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport ListView from 'src/sections/_examples/mui/list-view';\n\n// ----------------------------------------------------------------------\n\nexport default function ListPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: List</title>\n      </Helmet>\n\n      <ListView />\n    </>\n  );\n}\n"],"names":["ListItemLink","props","_jsx","ListItemButton","component","ListView","open","setOpen","useState","selectedIndex","setSelectedIndex","checked","setChecked","toggle","setToggle","handleClick","useCallback","prev","handleListItemClick","event","index","handleCheck","value","currentIndex","indexOf","newChecked","push","splice","handleToggle","_jsxs","_Fragment","children","Box","sx","py","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","moreLink","my","Masonry","columns","xs","md","spacing","ComponentBlock","title","Paper","variant","width","List","ListItemIcon","Iconify","icon","ListItemText","primary","Divider","subheader","ListSubheader","id","onClick","Collapse","in","unmountOnExit","disablePadding","ListItemAvatar","Avatar","secondary","selected","map","labelId","concat","role","undefined","dense","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemSecondaryAction","IconButton","Switch","onChange","ListPage","Helmet"],"sourceRoot":""}