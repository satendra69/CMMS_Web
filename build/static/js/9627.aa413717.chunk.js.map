{"version":3,"file":"static/js/9627.aa413717.chunk.js","mappings":"+NA4BA,SAASA,EAAUC,GAAqB,IAAbC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjC,MAAM,SAAEG,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAC1BC,GAAwBC,EAAAA,EAAAA,QAAO,MAC/BC,ECTV,SAAwBC,GACpB,MAAMD,GAAQE,EAAAA,EAAAA,IAAY,KAAMC,EAAAA,EAAAA,IAAYF,MAMtC,SAAEN,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAChC,GAAIF,EAAU,CACV,MAAO,CAAES,IAAaC,EAAAA,EAAAA,UAASJ,IAC/BK,EAAAA,EAAAA,YAAU,IAAMN,EAAMO,GAAG,SAAUH,IAAY,GACnD,CACA,OAAOJ,CACX,CDJkBQ,EAAeC,EAAAA,EAAAA,GAAcnB,GAAUA,EAAOoB,MAAQpB,GAC9DqB,EAAgBA,KACdb,EAAsBc,SACtBd,EAAsBc,QAAQC,MAClC,EAsCJ,OApCAC,EAAAA,EAAAA,qBAAmB,IACRd,EAAMe,QAAO,CAACC,EAAGC,KAKpB,GAAItB,EACA,OAAOsB,EAAID,GAcf,GAbAL,IACAb,EAAsBc,SAAUM,EAAAA,EAAAA,GAAa,CACzCC,UAAW,CAACnB,EAAMU,MAAOM,GACzBI,SAAUpB,EAAMqB,cAChBC,KAAM,SACNC,UAAW,KACXC,UAAW,OACRjC,EACHkC,SAAUR,KAKTS,EAAAA,UAAUC,aAAc,CACzB,MAAMC,EAAQC,YAAYC,MAAQJ,EAAAA,UAAUK,UACxCH,EAAQ,KACR9B,EAAsBc,QAAQoB,MAC1BC,EAAAA,EAAAA,GAAsBL,GAElC,CACA,OAAO5B,EAAMU,KAAK,GACnBC,IACJ,CAACuB,KAAKC,UAAU5C,MACnB6C,EAAAA,EAAAA,IAA0B,KACtB,IAAI3B,EAAAA,EAAAA,GAAcnB,GACd,OAAOA,EAAOiB,GAAG,UAAWS,GAAMhB,EAAMiB,IAAIoB,WAAWrB,KAC3D,GACD,CAAChB,IACGA,CACX,C,qCEnEe,SAASsC,EAAcC,GAMlC,IANmC,MACrCC,EAAQ,UAAS,KACjBC,EAAO,EAAC,gBACRC,EAAe,GACfC,KACGC,GACJL,EACC,MAAMM,EAASxD,EAAUqD,EAAiB,CACxCI,UAAW,IACXC,QAAS,GACTxB,UAAW,OAGb,OACEyB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,UAAWC,EAAAA,EAAEC,IACbT,GAAI,CACFU,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQf,EACRgB,OAAQ,KACRC,SAAU,QACVC,gBAAiB,KACjBC,QAAS,kBACK,YAAVpB,GAAuB,CACzBqB,WAAaC,GAAK,2BAAAC,OACWD,EAAME,QAAQxB,GAAOyB,MAAK,SAAAF,OAAQD,EAAME,QAAQxB,GAAO0B,KAAI,cAEvFvB,GAELwB,MAAO,CAAEtB,aACLD,GAGV,C,qLC1Be,SAASwB,IACtB,MAAMC,GAAetE,EAAAA,EAAAA,QAAO,MAEtBuE,GAAiBC,EAAAA,EAAAA,KAEjBC,GAAkBD,EAAAA,EAAAA,GAAU,CAAEE,UAAWJ,IAE/C,OACEK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACE5B,EAAAA,EAAAA,KAACV,EAAAA,EAAc,CAACI,gBAAiB4B,EAAe5B,mBAEhDM,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFN,GAAI,CACFkC,GAAI,EACJjB,QAAUE,GAAkC,UAAvBA,EAAME,QAAQc,KAAmB,WAAa,YACnEF,UAEF5B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CAAAH,UACR5B,EAAAA,EAAAA,KAACgC,EAAAA,EAAiB,CAChBC,QAAQ,kBACRC,MAAO,CACL,CACEC,KAAM,aACNC,KAAMC,EAAAA,EAAMC,YAEd,CAAEH,KAAM,2BAMhBT,EAAAA,EAAAA,MAACK,EAAAA,EAAS,CAACpC,GAAI,CAAE4C,GAAI,IAAKX,SAAA,EACxBF,EAAAA,EAAAA,MAACc,EAAAA,EAAI,CAAAZ,SAAA,EACH5B,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CAACC,MAAM,mBAAmB/C,GAAI,CAAEgD,GAAI,MAC/C3C,EAAAA,EAAAA,KAACV,EAAAA,EAAc,CACbI,gBAAiB8B,EAAgB9B,gBACjCF,MAAM,QACNG,GAAI,CAAEe,SAAU,QAASF,OAAQ,MAGnCR,EAAAA,EAAAA,KAAC4C,EAAAA,EAAW,CAACC,IAAKxB,EAAc1B,GAAI,CAAEa,OAAQ,IAAKsC,SAAU,QAASlB,SAAC,wqKAkEzE5B,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFN,GAAI,CACFoD,UAAW,IACXC,UAAW,SACXC,WAAY,KACZV,GAAI,IACJX,SACH,2CAMT,CCjIe,SAASsB,IACtB,OACExB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACE5B,EAAAA,EAAAA,KAACmD,EAAAA,GAAM,CAAAvB,UACL5B,EAAAA,EAAAA,KAAA,SAAA4B,SAAO,+BAGT5B,EAAAA,EAAAA,KAACoB,EAAkB,MAGzB,C","sources":["../node_modules/framer-motion/dist/es/value/use-spring.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","components/scroll-progress/scroll-progress.js","sections/_examples/extra/scroll-progress-view.js","pages/components/extra/scroll-progress.js"],"sourcesContent":["import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/animators/js/index.mjs';\nimport { millisecondsToSeconds } from '../utils/time-conversion.mjs';\nimport { frameData } from '../frameloop/frame.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            stopAnimation();\n            activeSpringAnimation.current = animateValue({\n                keyframes: [value.get(), v],\n                velocity: value.getVelocity(),\n                type: \"spring\",\n                restDelta: 0.001,\n                restSpeed: 0.01,\n                ...config,\n                onUpdate: set,\n            });\n            /**\n             * If we're between frames, resync the animation to the frameloop.\n             */\n            if (!frameData.isProcessing) {\n                const delta = performance.now() - frameData.timestamp;\n                if (delta < 30) {\n                    activeSpringAnimation.current.time =\n                        millisecondsToSeconds(delta);\n                }\n            }\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseFloat(v)));\n        }\n    }, [value]);\n    return value;\n}\n\nexport { useSpring };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import PropTypes from 'prop-types';\nimport { m, useSpring } from 'framer-motion';\n// @mui\nimport Box from '@mui/material/Box';\n\n// ----------------------------------------------------------------------\n\nexport default function ScrollProgress({\n  color = 'primary',\n  size = 3,\n  scrollYProgress,\n  sx,\n  ...other\n}) {\n  const scaleX = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001,\n  });\n\n  return (\n    <Box\n      component={m.div}\n      sx={{\n        top: 0,\n        left: 0,\n        right: 0,\n        height: size,\n        zIndex: 1999,\n        position: 'fixed',\n        transformOrigin: '0%',\n        bgcolor: 'text.primary',\n        ...(color !== 'inherit' && {\n          background: (theme) =>\n            `linear-gradient(135deg, ${theme.palette[color].light} 0%, ${theme.palette[color].main} 100%)`,\n        }),\n        ...sx,\n      }}\n      style={{ scaleX }}\n      {...other}\n    />\n  );\n}\n\nScrollProgress.propTypes = {\n  scrollYProgress: PropTypes.object,\n  size: PropTypes.number,\n  sx: PropTypes.object,\n  color: PropTypes.oneOf([\n    'inherit',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error',\n  ]),\n};\n","import { useRef } from 'react';\nimport { useScroll } from 'framer-motion';\n// @mui\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Container from '@mui/material/Container';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport ScrollProgress from 'src/components/scroll-progress';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nexport default function ScrollProgressView() {\n  const containerRef = useRef(null);\n\n  const scrollDocument = useScroll();\n\n  const scrollContainer = useScroll({ container: containerRef });\n\n  return (\n    <>\n      <ScrollProgress scrollYProgress={scrollDocument.scrollYProgress} />\n\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Scroll Progress\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Scroll Progress' },\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Card>\n          <CardHeader title=\"Scroll Container\" sx={{ pb: 3 }} />\n          <ScrollProgress\n            scrollYProgress={scrollContainer.scrollYProgress}\n            color=\"error\"\n            sx={{ position: 'unset', height: 6 }}\n          />\n\n          <CardContent ref={containerRef} sx={{ height: 320, overflow: 'auto' }}>\n            Donec mi odio, faucibus at, scelerisque quis, convallis in, nisi. Quisque ut nisi.\n            Suspendisse nisl elit, rhoncus eget, elementum ac, condimentum eget, diam. Vestibulum eu\n            odio. Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Cras ultricies mi eu\n            turpis hendrerit fringilla. Phasellus consectetuer vestibulum elit. Phasellus magna.\n            Nullam tincidunt adipiscing enim. Vestibulum volutpat pretium libero. Nullam quis ante.\n            Morbi mollis tellus ac sapien. Donec orci lectus, aliquam ut, faucibus non, euismod id,\n            nulla. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac\n            turpis egestas. Fusce ac felis sit amet ligula pharetra condimentum. Morbi mattis\n            ullamcorper velit. Vivamus consectetuer hendrerit lacus. Nullam quis ante. Praesent\n            turpis. Praesent porttitor, nulla vitae posuere iaculis, arcu nisl dignissim dolor, a\n            pretium mi sem ut ipsum. Donec mi odio, faucibus at, scelerisque quis, convallis in,\n            nisi. Quisque ut nisi. Suspendisse nisl elit, rhoncus eget, elementum ac, condimentum\n            eget, diam. Vestibulum eu odio. Proin sapien ipsum, porta a, auctor quis, euismod ut,\n            mi. Cras ultricies mi eu turpis hendrerit fringilla. Phasellus consectetuer vestibulum\n            elit. Phasellus magna. Nullam tincidunt adipiscing enim. Vestibulum volutpat pretium\n            libero. Nullam quis ante. Morbi mollis tellus ac sapien. Donec orci lectus, aliquam ut,\n            faucibus non, euismod id, nulla. Pellentesque habitant morbi tristique senectus et netus\n            et malesuada fames ac turpis egestas. Fusce ac felis sit amet ligula pharetra\n            condimentum. Morbi mattis ullamcorper velit. Vivamus consectetuer hendrerit lacus.\n            Nullam quis ante. Praesent turpis. Praesent porttitor, nulla vitae posuere iaculis, arcu\n            nisl dignissim dolor, a pretium mi sem ut ipsum. Donec mi odio, faucibus at, scelerisque\n            quis, convallis in, nisi. Quisque ut nisi. Suspendisse nisl elit, rhoncus eget,\n            elementum ac, condimentum eget, diam. Vestibulum eu odio. Proin sapien ipsum, porta a,\n            auctor quis, euismod ut, mi. Cras ultricies mi eu turpis hendrerit fringilla. Phasellus\n            consectetuer vestibulum elit. Phasellus magna. Nullam tincidunt adipiscing enim.\n            Vestibulum volutpat pretium libero. Nullam quis ante. Morbi mollis tellus ac sapien.\n            Donec orci lectus, aliquam ut, faucibus non, euismod id, nulla. Pellentesque habitant\n            morbi tristique senectus et netus et malesuada fames ac turpis egestas. Fusce ac felis\n            sit amet ligula pharetra condimentum. Morbi mattis ullamcorper velit. Vivamus\n            consectetuer hendrerit lacus. Nullam quis ante. Praesent turpis. Praesent porttitor,\n            nulla vitae posuere iaculis, arcu nisl dignissim dolor, a pretium mi sem ut ipsum. Donec\n            mi odio, faucibus at, scelerisque quis, convallis in, nisi. Quisque ut nisi. Suspendisse\n            nisl elit, rhoncus eget, elementum ac, condimentum eget, diam. Vestibulum eu odio. Proin\n            sapien ipsum, porta a, auctor quis, euismod ut, mi. Cras ultricies mi eu turpis\n            hendrerit fringilla. Phasellus consectetuer vestibulum elit. Phasellus magna. Nullam\n            tincidunt adipiscing enim. Vestibulum volutpat pretium libero. Nullam quis ante. Morbi\n            mollis tellus ac sapien. Donec orci lectus, aliquam ut, faucibus non, euismod id, nulla.\n            Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis\n            egestas. Fusce ac felis sit amet ligula pharetra condimentum. Morbi mattis ullamcorper\n            velit. Vivamus consectetuer hendrerit lacus. Nullam quis ante. Praesent turpis. Praesent\n            porttitor, nulla vitae posuere iaculis, arcu nisl dignissim dolor, a pretium mi sem ut\n            ipsum. Donec mi odio, faucibus at, scelerisque quis, convallis in, nisi. Quisque ut\n            nisi. Suspendisse nisl elit, rhoncus eget, elementum ac, condimentum eget, diam.\n            Vestibulum eu odio. Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Cras\n            ultricies mi eu turpis hendrerit fringilla. Phasellus consectetuer vestibulum elit.\n            Phasellus magna. Nullam tincidunt adipiscing enim. Vestibulum volutpat pretium libero.\n            Nullam quis ante. Morbi mollis tellus ac sapien. Donec orci lectus, aliquam ut, faucibus\n            non, euismod id, nulla. Pellentesque habitant morbi tristique senectus et netus et\n            malesuada fames ac turpis egestas. Fusce ac felis sit amet ligula pharetra condimentum.\n            Morbi mattis ullamcorper velit. Vivamus consectetuer hendrerit lacus. Nullam quis ante.\n            Praesent turpis. Praesent porttitor, nulla vitae posuere iaculis, arcu nisl dignissim\n            dolor, a pretium mi sem ut ipsum. Donec mi odio, faucibus at, scelerisque quis,\n            convallis in, nisi. Quisque ut nisi. Suspendisse nisl elit, rhoncus eget, elementum ac,\n            condimentum eget, diam. Vestibulum eu odio. Proin sapien ipsum, porta a, auctor quis,\n            euismod ut, mi. Cras ultricies mi eu turpis hendrerit fringilla. Phasellus consectetuer\n            vestibulum elit. Phasellus magna. Nullam tincidunt adipiscing enim. Vestibulum volutpat\n            pretium libero. Nullam quis ante. Morbi mollis tellus ac sapien. Donec orci lectus,\n            aliquam ut, faucibus non, euismod id, nulla. Pellentesque habitant morbi tristique\n            senectus et netus et malesuada fames ac turpis egestas. Fusce ac felis sit amet ligula\n            pharetra condimentum. Morbi mattis ullamcorper velit. Vivamus consectetuer hendrerit\n            lacus. Nullam quis ante. Praesent turpis. Praesent porttitor, nulla vitae posuere\n            iaculis, arcu nisl dignissim dolor, a pretium mi sem ut ipsum.\n          </CardContent>\n        </Card>\n\n        <Box\n          sx={{\n            minHeight: 2000,\n            textAlign: 'center',\n            typography: 'h6',\n            my: 10,\n          }}\n        >\n          👇 Scroll Down Document\n        </Box>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport ScrollProgressView from 'src/sections/_examples/extra/scroll-progress-view';\n\n// ----------------------------------------------------------------------\n\nexport default function ScrollProgressPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra: Scroll Progress</title>\n      </Helmet>\n\n      <ScrollProgressView />\n    </>\n  );\n}\n"],"names":["useSpring","source","config","arguments","length","undefined","isStatic","useContext","MotionConfigContext","activeSpringAnimation","useRef","value","initial","useConstant","motionValue","setLatest","useState","useEffect","on","useMotionValue","isMotionValue","get","stopAnimation","current","stop","useInsertionEffect","attach","v","set","animateValue","keyframes","velocity","getVelocity","type","restDelta","restSpeed","onUpdate","frameData","isProcessing","delta","performance","now","timestamp","time","millisecondsToSeconds","JSON","stringify","useIsomorphicLayoutEffect","parseFloat","ScrollProgress","_ref","color","size","scrollYProgress","sx","other","scaleX","stiffness","damping","_jsx","Box","component","m","div","top","left","right","height","zIndex","position","transformOrigin","bgcolor","background","theme","concat","palette","light","main","style","ScrollProgressView","containerRef","scrollDocument","useScroll","scrollContainer","container","_jsxs","_Fragment","children","py","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","my","Card","CardHeader","title","pb","CardContent","ref","overflow","minHeight","textAlign","typography","ScrollProgressPage","Helmet"],"sourceRoot":""}