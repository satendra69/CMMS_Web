{"version":3,"file":"static/js/3985.b188cdd0.chunk.js","mappings":"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","sources":["sections/_examples/extra/snackbar-view.js","pages/components/extra/snackbar.js"],"sourcesContent":["// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport { useSnackbar } from 'src/components/snackbar';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport ComponentBlock from '../component-block';\n\n// ----------------------------------------------------------------------\n\nexport default function SnackbarView() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const onSnackbarAction = (color, anchor) => {\n    enqueueSnackbar(`This is an ${color}`, {\n      variant: color,\n      anchorOrigin: anchor,\n      action: (key) => (\n        <>\n          <Button\n            size=\"small\"\n            color={color !== 'default' ? color : 'primary'}\n            onClick={() => {\n              console.info(`I belong to snackbar with key ${key}`);\n            }}\n          >\n            Alert\n          </Button>\n\n          <Button size=\"small\" color=\"inherit\" onClick={() => closeSnackbar(key)}>\n            Dismiss\n          </Button>\n        </>\n      ),\n    });\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Snackbar\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Snackbar' },\n            ]}\n            moreLink={['https://www.iamhosseindhv.com/notistack']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n          <ComponentBlock title=\"Simple\">\n            <Button\n              variant=\"contained\"\n              color=\"inherit\"\n              onClick={() =>\n                enqueueSnackbar('This is an default', {\n                  variant: 'default',\n                })\n              }\n            >\n              Default\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"info\"\n              onClick={() =>\n                enqueueSnackbar('This is an info', {\n                  variant: 'info',\n                })\n              }\n            >\n              Info\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              onClick={() =>\n                enqueueSnackbar('This is an success', {\n                  variant: 'success',\n                })\n              }\n            >\n              Success\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"warning\"\n              onClick={() =>\n                enqueueSnackbar('This is an warning', {\n                  variant: 'warning',\n                })\n              }\n            >\n              Warning\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              onClick={() =>\n                enqueueSnackbar('This is an error', {\n                  variant: 'error',\n                })\n              }\n            >\n              Error\n            </Button>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"With Action\">\n            <Button variant=\"contained\" color=\"inherit\" onClick={() => onSnackbarAction('default')}>\n              Default\n            </Button>\n            <Button variant=\"contained\" color=\"info\" onClick={() => onSnackbarAction('info')}>\n              Info\n            </Button>\n            <Button variant=\"contained\" color=\"success\" onClick={() => onSnackbarAction('success')}>\n              Success\n            </Button>\n            <Button variant=\"contained\" color=\"warning\" onClick={() => onSnackbarAction('warning')}>\n              Warning\n            </Button>\n            <Button variant=\"contained\" color=\"error\" onClick={() => onSnackbarAction('error')}>\n              Error\n            </Button>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"anchorOrigin\">\n            <Button\n              variant=\"text\"\n              color=\"inherit\"\n              onClick={() =>\n                onSnackbarAction('default', {\n                  vertical: 'top',\n                  horizontal: 'left',\n                })\n              }\n            >\n              Top Left\n            </Button>\n            <Button\n              variant=\"text\"\n              color=\"inherit\"\n              onClick={() =>\n                onSnackbarAction('default', {\n                  vertical: 'top',\n                  horizontal: 'center',\n                })\n              }\n            >\n              Top Center\n            </Button>\n            <Button variant=\"text\" color=\"inherit\" onClick={() => onSnackbarAction('default')}>\n              Top Right\n            </Button>\n            <Button\n              variant=\"text\"\n              color=\"inherit\"\n              onClick={() =>\n                onSnackbarAction('default', {\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                })\n              }\n            >\n              Bottom Left\n            </Button>\n            <Button\n              variant=\"text\"\n              color=\"inherit\"\n              onClick={() =>\n                onSnackbarAction('default', {\n                  vertical: 'bottom',\n                  horizontal: 'center',\n                })\n              }\n            >\n              Bottom Center\n            </Button>\n            <Button\n              variant=\"text\"\n              color=\"inherit\"\n              onClick={() =>\n                onSnackbarAction('default', {\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                })\n              }\n            >\n              Bottom Right\n            </Button>\n          </ComponentBlock>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport SnackbarView from 'src/sections/_examples/extra/snackbar-view';\n\n// ----------------------------------------------------------------------\n\nexport default function SnackbarPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra: Snackbar</title>\n      </Helmet>\n\n      <SnackbarView />\n    </>\n  );\n}\n"],"names":["SnackbarView","enqueueSnackbar","closeSnackbar","useSnackbar","onSnackbarAction","color","anchor","concat","variant","anchorOrigin","action","key","_jsxs","_Fragment","children","_jsx","Button","size","onClick","console","info","Box","sx","py","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","moreLink","my","Masonry","columns","xs","md","spacing","ComponentBlock","title","vertical","horizontal","SnackbarPage","Helmet"],"sourceRoot":""}