{"version":3,"file":"static/js/6605.dcd0ba0c.chunk.js","mappings":"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","sources":["sections/coming-soon/view.js","hooks/use-countdown.js","pages/coming-soon.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { outlinedInputClasses } from '@mui/material/OutlinedInput';\n// hooks\nimport { useCountdownDate } from 'src/hooks/use-countdown';\n// _mock\nimport { _socials } from 'src/_mock';\n// assets\nimport { ComingSoonIllustration } from 'src/assets/illustrations';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ComingSoonView() {\n  const { days, hours, minutes, seconds } = useCountdownDate(new Date('07/07/2024 21:30'));\n\n  return (\n    <>\n      <Typography variant=\"h3\" sx={{ mb: 2 }}>\n        Coming Soon!\n      </Typography>\n\n      <Typography sx={{ color: 'text.secondary' }}>\n        We are currently working hard on this page!\n      </Typography>\n\n      <ComingSoonIllustration sx={{ my: 10, height: 240 }} />\n\n      <Stack\n        direction=\"row\"\n        justifyContent=\"center\"\n        divider={<Box sx={{ mx: { xs: 1, sm: 2.5 } }}>:</Box>}\n        sx={{ typography: 'h2' }}\n      >\n        <TimeBlock label=\"Days\" value={days} />\n\n        <TimeBlock label=\"Hours\" value={hours} />\n\n        <TimeBlock label=\"Minutes\" value={minutes} />\n\n        <TimeBlock label=\"Seconds\" value={seconds} />\n      </Stack>\n\n      <TextField\n        fullWidth\n        placeholder=\"Enter your email\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <Button variant=\"contained\" size=\"large\">\n                Notify Me\n              </Button>\n            </InputAdornment>\n          ),\n          sx: {\n            pr: 0.5,\n            [`&.${outlinedInputClasses.focused}`]: {\n              boxShadow: (theme) => theme.customShadows.z20,\n              transition: (theme) =>\n                theme.transitions.create(['box-shadow'], {\n                  duration: theme.transitions.duration.shorter,\n                }),\n              [`& .${outlinedInputClasses.notchedOutline}`]: {\n                border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.32)}`,\n              },\n            },\n          },\n        }}\n        sx={{ my: 5 }}\n      />\n\n      <Stack spacing={1} alignItems=\"center\" justifyContent=\"center\" direction=\"row\">\n        {_socials.map((social) => (\n          <IconButton\n            key={social.name}\n            sx={{\n              color: social.color,\n              '&:hover': {\n                bgcolor: alpha(social.color, 0.08),\n              },\n            }}\n          >\n            <Iconify icon={social.icon} />\n          </IconButton>\n        ))}\n      </Stack>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction TimeBlock({ label, value }) {\n  return (\n    <div>\n      <Box> {value} </Box>\n      <Box sx={{ color: 'text.secondary', typography: 'body1' }}>{label}</Box>\n    </div>\n  );\n}\n\nTimeBlock.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n};\n","import { useState, useEffect, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport function useCountdownDate(date) {\n  const [countdown, setCountdown] = useState({\n    days: '00',\n    hours: '00',\n    minutes: '00',\n    seconds: '00',\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => setNewTime(), 1000);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const setNewTime = () => {\n    const startTime = date;\n\n    const endTime = new Date();\n\n    const distanceToNow = startTime.valueOf() - endTime.valueOf();\n\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\n\n    const getHours = `0${Math.floor(\n      (distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    )}`.slice(-2);\n\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\n\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\n\n    setCountdown({\n      days: getDays.toString() || '000',\n      hours: getHours || '000',\n      minutes: getMinutes || '000',\n      seconds: getSeconds || '000',\n    });\n  };\n\n  return {\n    days: countdown.days,\n    hours: countdown.hours,\n    minutes: countdown.minutes,\n    seconds: countdown.seconds,\n  };\n}\n\n// Usage\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\n\n// ----------------------------------------------------------------------\n\nexport function useCountdownSeconds(initCountdown) {\n  const [countdown, setCountdown] = useState(initCountdown);\n\n  const startCountdown = useCallback(() => {\n    let remainingSeconds = countdown;\n\n    const intervalId = setInterval(() => {\n      remainingSeconds -= 1;\n\n      if (remainingSeconds === 0) {\n        clearInterval(intervalId);\n        setCountdown(initCountdown);\n      } else {\n        setCountdown(remainingSeconds);\n      }\n    }, 1000);\n  }, [initCountdown, countdown]);\n\n  const counting = initCountdown > countdown;\n\n  return { counting, countdown, setCountdown, startCountdown };\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport ComingSoonView from 'src/sections/coming-soon/view';\n\n// ----------------------------------------------------------------------\n\nexport default function ComingSoonPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Coming Soon</title>\n      </Helmet>\n\n      <ComingSoonView />\n    </>\n  );\n}\n"],"names":["ComingSoonView","days","hours","minutes","seconds","date","countdown","setCountdown","useState","useEffect","interval","setInterval","setNewTime","clearInterval","startTime","endTime","Date","distanceToNow","valueOf","getDays","Math","floor","getHours","concat","slice","getMinutes","getSeconds","toString","useCountdownDate","_jsxs","_Fragment","children","_jsx","Typography","variant","sx","mb","color","ComingSoonIllustration","my","height","Stack","direction","justifyContent","divider","Box","mx","xs","sm","typography","TimeBlock","label","value","TextField","fullWidth","placeholder","InputProps","endAdornment","InputAdornment","position","Button","size","pr","outlinedInputClasses","focused","boxShadow","theme","customShadows","z20","transition","transitions","create","duration","shorter","notchedOutline","border","alpha","palette","grey","spacing","alignItems","_socials","map","social","IconButton","bgcolor","Iconify","icon","name","_ref","ComingSoonPage","Helmet"],"sourceRoot":""}