{"version":3,"file":"static/js/1376.8dff0b7b.chunk.js","mappings":"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","sources":["sections/_examples/mui/progress-view/progress-linear.js","sections/_examples/mui/progress-view/progress-circular.js","sections/_examples/mui/progress-view/index.js","pages/components/mui/progress.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport Typography from '@mui/material/Typography';\nimport LinearProgress from '@mui/material/LinearProgress';\n//\nimport ComponentBlock from '../../component-block';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['inherit', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\n\n// ----------------------------------------------------------------------\n\nexport default function ProgressLinear({ progress, buffer }) {\n  const renderLabel = (text) => (\n    <Typography variant=\"overline\" component=\"div\" sx={{ color: 'text.secondary', mb: 1 }}>\n      {text}\n    </Typography>\n  );\n\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n      <div>\n        {renderLabel('Indeterminate')}\n        <ComponentBlock sx={{ bgcolor: 'background.paper', borderRadius: 1.5 }}>\n          {COLORS.map((color) => (\n            <LinearProgress key={color} color={color} sx={{ mb: 2, width: 1 }} />\n          ))}\n        </ComponentBlock>\n      </div>\n\n      <div>\n        {renderLabel('Determinate')}\n        <ComponentBlock sx={{ bgcolor: 'background.paper', borderRadius: 1.5 }}>\n          {COLORS.map((color) => (\n            <LinearProgress\n              key={color}\n              color={color}\n              value={progress}\n              variant=\"determinate\"\n              sx={{ mb: 2, width: 1 }}\n            />\n          ))}\n        </ComponentBlock>\n      </div>\n\n      <div>\n        {renderLabel('Buffer')}\n        <ComponentBlock sx={{ bgcolor: 'background.paper', borderRadius: 1.5 }}>\n          {COLORS.map((color) => (\n            <LinearProgress\n              key={color}\n              color={color}\n              variant=\"buffer\"\n              value={progress}\n              valueBuffer={buffer}\n              sx={{ mb: 2, width: 1 }}\n            />\n          ))}\n        </ComponentBlock>\n      </div>\n\n      <div>\n        {renderLabel('Query')}\n        <ComponentBlock sx={{ bgcolor: 'background.paper', borderRadius: 1.5 }}>\n          {COLORS.map((color) => (\n            <LinearProgress\n              key={color}\n              color={color}\n              variant=\"query\"\n              value={progress}\n              valueBuffer={buffer}\n              sx={{ mb: 2, width: 1 }}\n            />\n          ))}\n        </ComponentBlock>\n      </div>\n    </Masonry>\n  );\n}\n\nProgressLinear.propTypes = {\n  buffer: PropTypes.number,\n  progress: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\n//\nimport ComponentBlock from '../../component-block';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['inherit', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\n\nexport default function ProgressCircular({ progress }) {\n  const renderLabel = (text) => (\n    <Typography variant=\"overline\" component=\"div\" sx={{ color: 'text.secondary', mb: 1 }}>\n      {text}\n    </Typography>\n  );\n\n  return (\n    <Masonry columns={{ xs: 1, md: 3 }} spacing={3}>\n      <div>\n        {renderLabel('Indeterminate')}\n        <ComponentBlock sx={{ bgcolor: 'background.paper', borderRadius: 1.5 }}>\n          {COLORS.map((color) => (\n            <CircularProgress key={color} color={color} />\n          ))}\n        </ComponentBlock>\n      </div>\n\n      <div>\n        {renderLabel('Determinate')}\n        <ComponentBlock sx={{ bgcolor: 'background.paper', borderRadius: 1.5 }}>\n          <CircularProgress color=\"info\" />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={25} />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={50} />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={75} />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={100} />\n          <CircularProgress color=\"info\" variant=\"determinate\" value={progress} />\n        </ComponentBlock>\n      </div>\n\n      <div>\n        {renderLabel('Sizes')}\n        <ComponentBlock sx={{ bgcolor: 'background.paper', borderRadius: 1.5 }}>\n          <CircularProgress size={48} color=\"info\" />\n          <CircularProgress color=\"info\" />\n          <CircularProgress size={32} color=\"info\" />\n          <CircularProgress size={24} color=\"info\" />\n        </ComponentBlock>\n      </div>\n    </Masonry>\n  );\n}\n\nProgressCircular.propTypes = {\n  progress: PropTypes.number,\n};\n","import { useState, useEffect, useRef } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport ProgressLinear from './progress-linear';\nimport ProgressCircular from './progress-circular';\nimport ComponentBlock from '../../component-block';\n\n// ----------------------------------------------------------------------\n\nexport default function ProgressView() {\n  const [progress, setProgress] = useState(0);\n\n  const [buffer, setBuffer] = useState(10);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const progressRef = useRef(() => {});\n\n  useEffect(() => {\n    progressRef.current = () => {\n      if (progress > 100) {\n        setProgress(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setProgress(progress + diff);\n        setBuffer(progress + diff + diff2);\n      }\n    };\n  });\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      progressRef.current();\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Progress\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Progress' },\n            ]}\n            moreLink={['https://mui.com/components/progress']}\n          />\n        </Container>\n      </Box>\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <ComponentBlock title=\"Circular\">\n            <ProgressCircular progress={progress} />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Linear\">\n            <ProgressLinear progress={progress} buffer={buffer} />\n          </ComponentBlock>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport ProgressView from 'src/sections/_examples/mui/progress-view';\n\n// ----------------------------------------------------------------------\n\nexport default function ProgressPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: Progress</title>\n      </Helmet>\n\n      <ProgressView />\n    </>\n  );\n}\n"],"names":["COLORS","ProgressLinear","_ref","progress","buffer","renderLabel","text","_jsx","Typography","variant","component","sx","color","mb","children","_jsxs","Masonry","columns","xs","md","spacing","ComponentBlock","bgcolor","borderRadius","map","LinearProgress","width","value","valueBuffer","ProgressCircular","CircularProgress","size","ProgressView","setProgress","useState","setBuffer","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","progressRef","useRef","current","diff2","_Fragment","Box","py","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","moreLink","my","Stack","title","ProgressPage","Helmet"],"sourceRoot":""}