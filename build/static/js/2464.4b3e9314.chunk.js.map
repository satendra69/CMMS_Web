{"version":3,"file":"static/js/2464.4b3e9314.chunk.js","mappings":"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","sources":["sections/_examples/mui/checkbox-view.js","pages/components/mui/checkbox.js"],"sourcesContent":["import { useState } from 'react';\n// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport Box from '@mui/material/Box';\nimport Checkbox from '@mui/material/Checkbox';\nimport Container from '@mui/material/Container';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport ComponentBlock from '../component-block';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\n\nconst PLACEMENTS = ['top', 'start', 'bottom', 'end'];\n\n// ----------------------------------------------------------------------\n\nexport default function CheckboxView() {\n  const [checked, setChecked] = useState([true, false]);\n\n  const handleChange1 = (event) => {\n    setChecked([event.target.checked, event.target.checked]);\n  };\n\n  const handleChange2 = (event) => {\n    setChecked([event.target.checked, checked[1]]);\n  };\n\n  const handleChange3 = (event) => {\n    setChecked([checked[0], event.target.checked]);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Checkboxes\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Checkboxes' },\n            ]}\n            moreLink={['https://mui.com/components/checkboxes']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n          <ComponentBlock title=\"Basic\">\n            <Checkbox size=\"medium\" />\n            <Checkbox size=\"medium\" defaultChecked />\n            <Checkbox size=\"medium\" defaultChecked indeterminate />\n            <Checkbox size=\"medium\" disabled />\n            <Checkbox size=\"medium\" disabled defaultChecked />\n            <Checkbox size=\"medium\" disabled indeterminate />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Size & Custom Icon\">\n            <FormControlLabel label=\"Normal\" control={<Checkbox size=\"medium\" defaultChecked />} />\n            <FormControlLabel label=\"Small\" control={<Checkbox size=\"small\" defaultChecked />} />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color=\"info\"\n                  size=\"small\"\n                  icon={<Iconify icon=\"solar:heart-bold\" />}\n                  checkedIcon={<Iconify icon=\"solar:heart-bold\" />}\n                />\n              }\n              label=\"Custom icon\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color=\"error\"\n                  size=\"small\"\n                  icon={<Iconify icon=\"eva:award-fill\" />}\n                  checkedIcon={<Iconify icon=\"eva:award-fill\" />}\n                />\n              }\n              label=\"Custom icon\"\n            />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Placement\">\n            <FormControl component=\"fieldset\">\n              <FormGroup aria-label=\"position\" row>\n                {PLACEMENTS.map((placement) => (\n                  <FormControlLabel\n                    key={placement}\n                    value={placement}\n                    label={placement}\n                    labelPlacement={placement}\n                    control={<Checkbox size=\"medium\" />}\n                    sx={{ textTransform: 'capitalize' }}\n                  />\n                ))}\n              </FormGroup>\n            </FormControl>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Colors\">\n            <FormGroup>\n              {COLORS.map((color) => (\n                <FormControlLabel\n                  key={color}\n                  control={<Checkbox size=\"medium\" defaultChecked color={color} />}\n                  label={color}\n                  sx={{ textTransform: 'capitalize' }}\n                />\n              ))}\n\n              <FormControlLabel\n                disabled\n                control={<Checkbox size=\"medium\" defaultChecked color=\"error\" />}\n                label=\"Disabled\"\n              />\n            </FormGroup>\n\n            <FormControl component=\"fieldset\">\n              <FormGroup>\n                {COLORS.map((color) => (\n                  <FormControlLabel\n                    key={color}\n                    control={<Checkbox size=\"medium\" defaultChecked indeterminate color={color} />}\n                    label={color}\n                    sx={{ textTransform: 'capitalize' }}\n                  />\n                ))}\n\n                <FormControlLabel\n                  disabled\n                  control={<Checkbox size=\"medium\" defaultChecked indeterminate color=\"error\" />}\n                  label=\"Disabled\"\n                />\n              </FormGroup>\n            </FormControl>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Indeterminate\">\n            <div>\n              <FormControlLabel\n                label=\"Parent\"\n                control={\n                  <Checkbox\n                    size=\"medium\"\n                    checked={checked[0] && checked[1]}\n                    indeterminate={checked[0] !== checked[1]}\n                    onChange={handleChange1}\n                  />\n                }\n              />\n              <div>\n                <FormControlLabel\n                  label=\"Child 1\"\n                  control={<Checkbox size=\"medium\" checked={checked[0]} onChange={handleChange2} />}\n                />\n                <FormControlLabel\n                  label=\"Child 2\"\n                  control={<Checkbox size=\"medium\" checked={checked[1]} onChange={handleChange3} />}\n                />\n              </div>\n            </div>\n          </ComponentBlock>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport CheckboxView from 'src/sections/_examples/mui/checkbox-view';\n\n// ----------------------------------------------------------------------\n\nexport default function CheckboxPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: Checkbox</title>\n      </Helmet>\n\n      <CheckboxView />\n    </>\n  );\n}\n"],"names":["COLORS","PLACEMENTS","CheckboxView","checked","setChecked","useState","_jsxs","_Fragment","children","_jsx","Box","sx","py","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","moreLink","my","Masonry","columns","xs","md","spacing","ComponentBlock","title","Checkbox","size","defaultChecked","indeterminate","disabled","FormControlLabel","label","control","color","icon","Iconify","checkedIcon","FormControl","component","FormGroup","row","map","placement","value","labelPlacement","textTransform","onChange","event","target","CheckboxPage","Helmet"],"sourceRoot":""}