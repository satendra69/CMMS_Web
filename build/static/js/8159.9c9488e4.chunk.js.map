{"version":3,"file":"static/js/8159.9c9488e4.chunk.js","mappings":"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","sources":["components/custom-date-range-picker/utils.js","components/custom-date-range-picker/use-date-range-picker.js","components/custom-date-range-picker/custom-date-range-picker.js","components/text-max-line/use-typography.js","components/text-max-line/text-max-line.js","hooks/use-double-click.js","sections/file-manager/file-manager-table-row.js","sections/file-manager/file-manager-table.js","sections/file-manager/file-manager-filters.js","sections/file-manager/file-manager-file-item.js","sections/file-manager/file-manager-action-selected.js","sections/file-manager/file-manager-grid-view.js","sections/file-manager/file-manager-filters-result.js","sections/file-manager/view/file-manager-view.js","pages/dashboard/file-manager.js"],"sourcesContent":["import { isSameDay, isSameMonth, getYear } from 'date-fns';\n// utils\nimport { fDate } from 'src/utils/format-time';\n\n// ----------------------------------------------------------------------\n\nexport function shortDateLabel(startDate, endDate) {\n  const getCurrentYear = new Date().getFullYear();\n\n  const startDateYear = startDate ? getYear(startDate) : null;\n\n  const endDateYear = endDate ? getYear(endDate) : null;\n\n  const currentYear = getCurrentYear === startDateYear && getCurrentYear === endDateYear;\n\n  const sameDay = startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\n\n  const sameMonth =\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\n\n  if (currentYear) {\n    if (sameMonth) {\n      if (sameDay) {\n        return fDate(endDate, 'dd MMM yy');\n      }\n      return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\n    }\n    return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\n  }\n\n  return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\n}\n","import { useState, useCallback } from 'react';\n// utils\nimport { fDate } from 'src/utils/format-time';\n//\nimport { shortDateLabel } from './utils';\n\n// ----------------------------------------------------------------------\n\nexport default function useDateRangePicker(start, end) {\n  const [open, setOpen] = useState(false);\n\n  const [endDate, setEndDate] = useState(end);\n\n  const [startDate, setStartDate] = useState(start);\n\n  const error = start && end ? new Date(start).getTime() > new Date(end).getTime() : false;\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const onChangeStartDate = useCallback((newValue) => {\n    setStartDate(newValue);\n  }, []);\n\n  const onChangeEndDate = useCallback(\n    (newValue) => {\n      if (error) {\n        setEndDate(null);\n      }\n      setEndDate(newValue);\n    },\n    [error]\n  );\n\n  const onReset = useCallback(() => {\n    setStartDate(null);\n    setEndDate(null);\n  }, []);\n\n  return {\n    startDate,\n    endDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    //\n    open,\n    onOpen,\n    onClose,\n    onReset,\n    //\n    selected: !!startDate && !!endDate,\n    error,\n    //\n    label: `${fDate(startDate)} - ${fDate(endDate)}`,\n    shortLabel: shortDateLabel(startDate, endDate),\n    //\n    setStartDate,\n    setEndDate,\n  };\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport FormHelperText from '@mui/material/FormHelperText';\n// hooks\nimport { useResponsive } from 'src/hooks/use-responsive';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomDateRangePicker({\n  title = 'Select date range',\n  variant = 'input',\n  //\n  startDate,\n  endDate,\n  //\n  onChangeStartDate,\n  onChangeEndDate,\n  //\n  open,\n  onClose,\n  //\n  error,\n}) {\n  const mdUp = useResponsive('up', 'md');\n\n  const isCalendarView = variant === 'calendar';\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth={isCalendarView ? false : 'xs'}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          ...(isCalendarView && {\n            maxWidth: 720,\n          }),\n        },\n      }}\n    >\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      <DialogContent\n        sx={{\n          ...(isCalendarView &&\n            mdUp && {\n              overflow: 'unset',\n            }),\n        }}\n      >\n        <Stack\n          justifyContent=\"center\"\n          spacing={isCalendarView ? 3 : 2}\n          direction={isCalendarView && mdUp ? 'row' : 'column'}\n          sx={{ pt: 1 }}\n        >\n          {isCalendarView ? (\n            <>\n              <Paper\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: 2,\n                  borderColor: 'divider',\n                  borderStyle: 'dashed',\n                }}\n              >\n                <DateCalendar value={startDate} onChange={onChangeStartDate} />\n              </Paper>\n\n              <Paper\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: 2,\n                  borderColor: 'divider',\n                  borderStyle: 'dashed',\n                }}\n              >\n                <DateCalendar value={endDate} onChange={onChangeEndDate} />\n              </Paper>\n            </>\n          ) : (\n            <>\n              <DatePicker label=\"Start date\" value={startDate} onChange={onChangeStartDate} />\n\n              <DatePicker label=\"End date\" value={endDate} onChange={onChangeEndDate} />\n            </>\n          )}\n        </Stack>\n\n        {error && (\n          <FormHelperText error sx={{ px: 2 }}>\n            End date must be later than start date\n          </FormHelperText>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n\n        <Button disabled={error} variant=\"contained\" onClick={onClose}>\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nCustomDateRangePicker.propTypes = {\n  error: PropTypes.bool,\n  onChangeEndDate: PropTypes.func,\n  onChangeStartDate: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  variant: PropTypes.oneOf(['input', 'calendar']),\n  startDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n  endDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n};\n","// @mui\nimport { useTheme } from '@mui/material/styles';\n// hooks\nimport { useWidth } from 'src/hooks/use-responsive';\n\n// ----------------------------------------------------------------------\n\nfunction remToPx(value) {\n  return Math.round(parseFloat(value) * 16);\n}\n\nexport default function useTypography(variant) {\n  const theme = useTheme();\n\n  const breakpoints = useWidth();\n\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\n\n  const hasResponsive =\n    variant === 'h1' ||\n    variant === 'h2' ||\n    variant === 'h3' ||\n    variant === 'h4' ||\n    variant === 'h5' ||\n    variant === 'h6';\n\n  const getFont =\n    hasResponsive && theme.typography[variant][key]\n      ? theme.typography[variant][key]\n      : theme.typography[variant];\n\n  const fontSize = remToPx(getFont.fontSize);\n\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\n\n  const { fontWeight, letterSpacing } = theme.typography[variant];\n\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// @mui\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\n//\nimport useTypography from './use-typography';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = useTypography(variant);\n\n    const styles = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    };\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nTextMaxLine.propTypes = {\n  asLink: PropTypes.bool,\n  children: PropTypes.node,\n  line: PropTypes.number,\n  persistent: PropTypes.bool,\n  sx: PropTypes.object,\n  variant: PropTypes.oneOf([\n    'body1',\n    'body2',\n    'button',\n    'caption',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'inherit',\n    'overline',\n    'subtitle1',\n    'subtitle2',\n  ]),\n};\n\nexport default TextMaxLine;\n","import { useCallback, useRef } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport function useDoubleClick({ click, doubleClick, timeout = 250 }) {\n  const clickTimeout = useRef();\n\n  const clearClickTimeout = () => {\n    if (clickTimeout) {\n      clearTimeout(clickTimeout.current);\n      clickTimeout.current = null;\n    }\n  };\n\n  return useCallback(\n    (event) => {\n      clearClickTimeout();\n      if (click && event.detail === 1) {\n        clickTimeout.current = setTimeout(() => {\n          click(event);\n        }, timeout);\n      }\n      if (event.detail % 2 === 0) {\n        doubleClick(event);\n      }\n    },\n    [click, doubleClick, timeout]\n  );\n}\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport MenuItem from '@mui/material/MenuItem';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport { alpha, useTheme } from '@mui/material/styles';\nimport TableRow, { tableRowClasses } from '@mui/material/TableRow';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useDoubleClick } from 'src/hooks/use-double-click';\nimport { useCopyToClipboard } from 'src/hooks/use-copy-to-clipboard';\n// utils\nimport { fData } from 'src/utils/format-number';\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\nimport { useSnackbar } from 'src/components/snackbar';\nimport { ConfirmDialog } from 'src/components/custom-dialog';\nimport FileThumbnail from 'src/components/file-thumbnail';\n//\nimport FileManagerShareDialog from './file-manager-share-dialog';\nimport FileManagerFileDetails from './file-manager-file-details';\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerTableRow({ row, selected, onSelectRow, onDeleteRow }) {\n  const theme = useTheme();\n\n  const { name, size, type, modifiedAt, shared, isFavorited } = row;\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const favorite = useBoolean(isFavorited);\n\n  const details = useBoolean();\n\n  const share = useBoolean();\n\n  const confirm = useBoolean();\n\n  const popover = usePopover();\n\n  const handleChangeInvite = useCallback((event) => {\n    setInviteEmail(event.target.value);\n  }, []);\n\n  const handleClick = useDoubleClick({\n    click: () => {\n      details.onTrue();\n    },\n    doubleClick: () => console.info('DOUBLE CLICK'),\n  });\n\n  const handleCopy = useCallback(() => {\n    enqueueSnackbar('Copied!');\n    copy(row.url);\n  }, [copy, enqueueSnackbar, row.url]);\n\n  const defaultStyles = {\n    borderTop: `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\n    borderBottom: `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\n    '&:first-of-type': {\n      borderTopLeftRadius: 16,\n      borderBottomLeftRadius: 16,\n      borderLeft: `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\n    },\n    '&:last-of-type': {\n      borderTopRightRadius: 16,\n      borderBottomRightRadius: 16,\n      borderRight: `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\n    },\n  };\n\n  return (\n    <>\n      <TableRow\n        selected={selected}\n        sx={{\n          borderRadius: 2,\n          [`&.${tableRowClasses.selected}, &:hover`]: {\n            backgroundColor: 'background.paper',\n            boxShadow: theme.customShadows.z20,\n            transition: theme.transitions.create(['background-color', 'box-shadow'], {\n              duration: theme.transitions.duration.shortest,\n            }),\n            '&:hover': {\n              backgroundColor: 'background.paper',\n              boxShadow: theme.customShadows.z20,\n            },\n          },\n          [`& .${tableCellClasses.root}`]: {\n            ...defaultStyles,\n          },\n          ...(details.value && {\n            [`& .${tableCellClasses.root}`]: {\n              ...defaultStyles,\n            },\n          }),\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={selected}\n            onDoubleClick={() => console.info('ON DOUBLE CLICK')}\n            onClick={onSelectRow}\n          />\n        </TableCell>\n\n        <TableCell onClick={handleClick}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <FileThumbnail file={type} sx={{ width: 36, height: 36 }} />\n\n            <Typography\n              noWrap\n              variant=\"inherit\"\n              sx={{\n                maxWidth: 360,\n                cursor: 'pointer',\n                ...(details.value && { fontWeight: 'fontWeightBold' }),\n              }}\n            >\n              {name}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell onClick={handleClick} sx={{ whiteSpace: 'nowrap' }}>\n          {fData(size)}\n        </TableCell>\n\n        <TableCell onClick={handleClick} sx={{ whiteSpace: 'nowrap' }}>\n          {type}\n        </TableCell>\n\n        <TableCell onClick={handleClick} sx={{ whiteSpace: 'nowrap' }}>\n          <ListItemText\n            primary={format(new Date(modifiedAt), 'dd MMM yyyy')}\n            secondary={format(new Date(modifiedAt), 'p')}\n            primaryTypographyProps={{ typography: 'body2' }}\n            secondaryTypographyProps={{\n              mt: 0.5,\n              component: 'span',\n              typography: 'caption',\n            }}\n          />\n        </TableCell>\n\n        <TableCell align=\"right\" onClick={handleClick}>\n          <AvatarGroup\n            max={4}\n            sx={{\n              display: 'inline-flex',\n              [`& .${avatarGroupClasses.avatar}`]: {\n                width: 24,\n                height: 24,\n                '&:first-of-type': {\n                  fontSize: 12,\n                },\n              },\n            }}\n          >\n            {shared &&\n              shared.map((person) => (\n                <Avatar key={person.id} alt={person.name} src={person.avatarUrl} />\n              ))}\n          </AvatarGroup>\n        </TableCell>\n\n        <TableCell\n          align=\"right\"\n          sx={{\n            px: 1,\n            whiteSpace: 'nowrap',\n          }}\n        >\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorite.value}\n            onChange={favorite.onToggle}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <CustomPopover\n        open={popover.open}\n        onClose={popover.onClose}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            popover.onClose();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            popover.onClose();\n            share.onTrue();\n          }}\n        >\n          <Iconify icon=\"solar:share-bold\" />\n          Share\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            confirm.onTrue();\n            popover.onClose();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\n          Delete\n        </MenuItem>\n      </CustomPopover>\n\n      <FileManagerFileDetails\n        item={row}\n        favorited={favorite.value}\n        onFavorite={favorite.onToggle}\n        onCopyLink={handleCopy}\n        open={details.value}\n        onClose={details.onFalse}\n        onDelete={onDeleteRow}\n      />\n\n      <FileManagerShareDialog\n        open={share.value}\n        shared={shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          share.onFalse();\n          setInviteEmail('');\n        }}\n      />\n\n      <ConfirmDialog\n        open={confirm.value}\n        onClose={confirm.onFalse}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\nFileManagerTableRow.propTypes = {\n  onDeleteRow: PropTypes.func,\n  onSelectRow: PropTypes.func,\n  row: PropTypes.object,\n  selected: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableBody from '@mui/material/TableBody';\nimport IconButton from '@mui/material/IconButton';\nimport TableContainer from '@mui/material/TableContainer';\nimport { tableCellClasses } from '@mui/material/TableCell';\nimport { tablePaginationClasses } from '@mui/material/TablePagination';\n// components\nimport Iconify from 'src/components/iconify';\nimport {\n  emptyRows,\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from 'src/components/table';\n//\nimport FileManagerTableRow from './file-manager-table-row';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name' },\n  { id: 'size', label: 'Size', width: 120 },\n  { id: 'type', label: 'Type', width: 120 },\n  { id: 'modifiedAt', label: 'Modified', width: 140 },\n  { id: 'shared', label: 'Shared', align: 'right', width: 140 },\n  { id: '', width: 88 },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerTable({\n  table,\n  tableData,\n  notFound,\n  onDeleteRow,\n  dataFiltered,\n  onOpenConfirm,\n}) {\n  const theme = useTheme();\n\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = table;\n\n  const denseHeight = dense ? 58 : 78;\n\n  return (\n    <>\n      <Box\n        sx={{\n          position: 'relative',\n          m: theme.spacing(-2, -3, -3, -3),\n        }}\n      >\n        <TableSelectedAction\n          dense={dense}\n          numSelected={selected.length}\n          rowCount={tableData.length}\n          onSelectAllRows={(checked) =>\n            onSelectAllRows(\n              checked,\n              tableData.map((row) => row.id)\n            )\n          }\n          action={\n            <>\n              <Tooltip title=\"Share\">\n                <IconButton color=\"primary\">\n                  <Iconify icon=\"solar:share-bold\" />\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip title=\"Delete\">\n                <IconButton color=\"primary\" onClick={onOpenConfirm}>\n                  <Iconify icon=\"solar:trash-bin-trash-bold\" />\n                </IconButton>\n              </Tooltip>\n            </>\n          }\n          sx={{\n            pl: 1,\n            pr: 2,\n            top: 16,\n            left: 24,\n            right: 24,\n            width: 'auto',\n            borderRadius: 1.5,\n          }}\n        />\n\n        <TableContainer\n          sx={{\n            p: theme.spacing(0, 3, 3, 3),\n          }}\n        >\n          <Table\n            size={dense ? 'small' : 'medium'}\n            sx={{\n              minWidth: 960,\n              borderCollapse: 'separate',\n              borderSpacing: '0 16px',\n            }}\n          >\n            <TableHeadCustom\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={tableData.length}\n              numSelected={selected.length}\n              onSort={onSort}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  tableData.map((row) => row.id)\n                )\n              }\n              sx={{\n                [`& .${tableCellClasses.head}`]: {\n                  '&:first-of-type': {\n                    borderTopLeftRadius: 12,\n                    borderBottomLeftRadius: 12,\n                  },\n                  '&:last-of-type': {\n                    borderTopRightRadius: 12,\n                    borderBottomRightRadius: 12,\n                  },\n                },\n              }}\n            />\n\n            <TableBody>\n              {dataFiltered\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <FileManagerTableRow\n                    key={row.id}\n                    row={row}\n                    selected={selected.includes(row.id)}\n                    onSelectRow={() => onSelectRow(row.id)}\n                    onDeleteRow={() => onDeleteRow(row.id)}\n                  />\n                ))}\n\n              <TableEmptyRows\n                height={denseHeight}\n                emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n              />\n\n              <TableNoData\n                notFound={notFound}\n                sx={{\n                  m: -2,\n                  borderRadius: 1.5,\n                  border: `dashed 1px ${theme.palette.divider}`,\n                }}\n              />\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n\n      <TablePaginationCustom\n        count={dataFiltered.length}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onPageChange={onChangePage}\n        onRowsPerPageChange={onChangeRowsPerPage}\n        //\n        dense={dense}\n        onChangeDense={onChangeDense}\n        sx={{\n          [`& .${tablePaginationClasses.toolbar}`]: {\n            borderTopColor: 'transparent',\n          },\n        }}\n      />\n    </>\n  );\n}\n\nFileManagerTable.propTypes = {\n  dataFiltered: PropTypes.array,\n  notFound: PropTypes.bool,\n  onDeleteRow: PropTypes.func,\n  onOpenConfirm: PropTypes.func,\n  table: PropTypes.object,\n  tableData: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport { useCallback } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport InputAdornment from '@mui/material/InputAdornment';\n// components\nimport Label from 'src/components/label';\nimport Iconify from 'src/components/iconify';\nimport FileThumbnail from 'src/components/file-thumbnail';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\nimport CustomDateRangePicker, { shortDateLabel } from 'src/components/custom-date-range-picker';\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerFilters({\n  openDateRange,\n  onCloseDateRange,\n  onOpenDateRange,\n  //\n  filters,\n  onFilters,\n  //\n  dateError,\n  typeOptions,\n}) {\n  const popover = usePopover();\n\n  const renderLabel = filters.type.length ? filters.type.slice(0, 2).join(',') : 'All type';\n\n  const handleFilterName = useCallback(\n    (event) => {\n      onFilters('name', event.target.value);\n    },\n    [onFilters]\n  );\n\n  const handleFilterStartDate = useCallback(\n    (newValue) => {\n      onFilters('startDate', newValue);\n    },\n    [onFilters]\n  );\n\n  const handleFilterEndDate = useCallback(\n    (newValue) => {\n      onFilters('endDate', newValue);\n    },\n    [onFilters]\n  );\n\n  const handleFilterType = useCallback(\n    (newValue) => {\n      const checked = filters.type.includes(newValue)\n        ? filters.type.filter((value) => value !== newValue)\n        : [...filters.type, newValue];\n      onFilters('type', checked);\n    },\n    [filters.type, onFilters]\n  );\n\n  const handleResetType = useCallback(() => {\n    popover.onClose();\n    onFilters('type', []);\n  }, [onFilters, popover]);\n\n  const renderFilterName = (\n    <TextField\n      value={filters.name}\n      onChange={handleFilterName}\n      placeholder=\"Search...\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n          </InputAdornment>\n        ),\n      }}\n      sx={{\n        width: { xs: 1, md: 260 },\n      }}\n    />\n  );\n\n  const renderFilterType = (\n    <>\n      <Button\n        color=\"inherit\"\n        onClick={popover.onOpen}\n        endIcon={\n          <Iconify\n            icon={popover.open ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\n            sx={{ ml: -0.5 }}\n          />\n        }\n      >\n        {renderLabel}\n        {filters.type.length > 2 && (\n          <Label color=\"info\" sx={{ ml: 1 }}>\n            +{filters.type.length - 2}\n          </Label>\n        )}\n      </Button>\n\n      <CustomPopover open={popover.open} onClose={popover.onClose} sx={{ p: 2.5 }}>\n        <Stack spacing={2.5}>\n          <Box\n            gap={1}\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(2, 1fr)',\n              sm: 'repeat(4, 1fr)',\n            }}\n          >\n            {typeOptions.map((type) => {\n              const selected = filters.type.includes(type);\n\n              return (\n                <CardActionArea\n                  key={type}\n                  onClick={() => handleFilterType(type)}\n                  sx={{\n                    p: 1,\n                    borderRadius: 1,\n                    cursor: 'pointer',\n                    border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.08)}`,\n                    ...(selected && {\n                      bgcolor: 'action.selected',\n                    }),\n                  }}\n                >\n                  <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n                    <FileThumbnail file={type} />\n                    <Typography variant={selected ? 'subtitle2' : 'body2'}>{type}</Typography>\n                  </Stack>\n                </CardActionArea>\n              );\n            })}\n          </Box>\n\n          <Stack spacing={1.5} direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Button variant=\"outlined\" color=\"inherit\" onClick={handleResetType}>\n              Clear\n            </Button>\n\n            <Button variant=\"contained\" onClick={popover.onClose}>\n              Apply\n            </Button>\n          </Stack>\n        </Stack>\n      </CustomPopover>\n    </>\n  );\n\n  const renderFilterDate = (\n    <>\n      <Button\n        color=\"inherit\"\n        onClick={onOpenDateRange}\n        endIcon={\n          <Iconify\n            icon={openDateRange ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\n            sx={{ ml: -0.5 }}\n          />\n        }\n      >\n        {!!filters.startDate && !!filters.endDate\n          ? shortDateLabel(filters.startDate, filters.endDate)\n          : 'Select Date'}\n      </Button>\n\n      <CustomDateRangePicker\n        variant=\"calendar\"\n        startDate={filters.startDate}\n        endDate={filters.endDate}\n        onChangeStartDate={handleFilterStartDate}\n        onChangeEndDate={handleFilterEndDate}\n        open={openDateRange}\n        onClose={onCloseDateRange}\n        selected={!!filters.startDate && !!filters.endDate}\n        error={dateError}\n      />\n    </>\n  );\n\n  return (\n    <Stack\n      spacing={1}\n      direction={{ xs: 'column', md: 'row' }}\n      alignItems={{ xs: 'flex-end', md: 'center' }}\n      sx={{ width: 1 }}\n    >\n      {renderFilterName}\n\n      <Stack spacing={1} direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" flexGrow={1}>\n        {renderFilterDate}\n\n        {renderFilterType}\n      </Stack>\n    </Stack>\n  );\n}\n\nFileManagerFilters.propTypes = {\n  dateError: PropTypes.bool,\n  filters: PropTypes.object,\n  onCloseDateRange: PropTypes.func,\n  onFilters: PropTypes.func,\n  onOpenDateRange: PropTypes.func,\n  openDateRange: PropTypes.bool,\n  typeOptions: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport MenuItem from '@mui/material/MenuItem';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useCopyToClipboard } from 'src/hooks/use-copy-to-clipboard';\n// utils\nimport { fDateTime } from 'src/utils/format-time';\nimport { fData } from 'src/utils/format-number';\n\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\nimport { useSnackbar } from 'src/components/snackbar';\nimport TextMaxLine from 'src/components/text-max-line';\nimport FileThumbnail from 'src/components/file-thumbnail';\nimport { ConfirmDialog } from 'src/components/custom-dialog';\n//\nimport FileManagerShareDialog from './file-manager-share-dialog';\nimport FileManagerFileDetails from './file-manager-file-details';\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerFileItem({ file, selected, onSelect, onDelete, sx, ...other }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const checkbox = useBoolean();\n\n  const share = useBoolean();\n\n  const confirm = useBoolean();\n\n  const details = useBoolean();\n\n  const favorite = useBoolean(file.isFavorited);\n\n  const popover = usePopover();\n\n  const handleChangeInvite = useCallback((event) => {\n    setInviteEmail(event.target.value);\n  }, []);\n\n  const handleCopy = useCallback(() => {\n    enqueueSnackbar('Copied!');\n    copy(file.url);\n  }, [copy, enqueueSnackbar, file.url]);\n\n  const renderIcon =\n    (checkbox.value || selected) && onSelect ? (\n      <Checkbox\n        size=\"medium\"\n        checked={selected}\n        onClick={onSelect}\n        icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n        checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n        sx={{ p: 0.75 }}\n      />\n    ) : (\n      <FileThumbnail file={file.type} sx={{ width: 36, height: 36 }} />\n    );\n\n  const renderAction = (\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ top: 8, right: 8, position: 'absolute' }}>\n      <Checkbox\n        color=\"warning\"\n        icon={<Iconify icon=\"eva:star-outline\" />}\n        checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n        checked={favorite.value}\n        onChange={favorite.onToggle}\n      />\n\n      <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    </Stack>\n  );\n\n  const renderText = (\n    <>\n      <TextMaxLine\n        persistent\n        variant=\"subtitle2\"\n        onClick={details.onTrue}\n        sx={{ width: 1, mt: 2, mb: 0.5 }}\n      >\n        {file.name}\n      </TextMaxLine>\n\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        sx={{\n          maxWidth: 0.99,\n          whiteSpace: 'nowrap',\n          typography: 'caption',\n          color: 'text.disabled',\n        }}\n      >\n        {fData(file.size)}\n\n        <Box\n          component=\"span\"\n          sx={{\n            mx: 0.75,\n            width: 2,\n            height: 2,\n            flexShrink: 0,\n            borderRadius: '50%',\n            bgcolor: 'currentColor',\n          }}\n        />\n        <Typography noWrap component=\"span\" variant=\"caption\">\n          {fDateTime(file.modifiedAt)}\n        </Typography>\n      </Stack>\n    </>\n  );\n\n  const renderAvatar = (\n    <AvatarGroup\n      max={3}\n      sx={{\n        mt: 1,\n        [`& .${avatarGroupClasses.avatar}`]: {\n          width: 24,\n          height: 24,\n          '&:first-of-type': {\n            fontSize: 12,\n          },\n        },\n      }}\n    >\n      {file.shared?.map((person) => (\n        <Avatar key={person.id} alt={person.name} src={person.avatarUrl} />\n      ))}\n    </AvatarGroup>\n  );\n\n  return (\n    <>\n      <Stack\n        component={Paper}\n        variant=\"outlined\"\n        alignItems=\"flex-start\"\n        sx={{\n          p: 2.5,\n          borderRadius: 2,\n          bgcolor: 'unset',\n          cursor: 'pointer',\n          position: 'relative',\n          ...((checkbox.value || selected) && {\n            bgcolor: 'background.paper',\n            boxShadow: (theme) => theme.customShadows.z20,\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        <Box onMouseEnter={checkbox.onTrue} onMouseLeave={checkbox.onFalse}>\n          {renderIcon}\n        </Box>\n\n        {renderText}\n\n        {renderAvatar}\n\n        {renderAction}\n      </Stack>\n\n      <CustomPopover\n        open={popover.open}\n        onClose={popover.onClose}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            popover.onClose();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            popover.onClose();\n            share.onTrue();\n          }}\n        >\n          <Iconify icon=\"solar:share-bold\" />\n          Share\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            confirm.onTrue();\n            popover.onClose();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\n          Delete\n        </MenuItem>\n      </CustomPopover>\n\n      <FileManagerFileDetails\n        item={file}\n        favorited={favorite.value}\n        onFavorite={favorite.onToggle}\n        onCopyLink={handleCopy}\n        open={details.value}\n        onClose={details.onFalse}\n        onDelete={() => {\n          details.onFalse();\n          onDelete();\n        }}\n      />\n\n      <FileManagerShareDialog\n        open={share.value}\n        shared={file.shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          share.onFalse();\n          setInviteEmail('');\n        }}\n      />\n\n      <ConfirmDialog\n        open={confirm.value}\n        onClose={confirm.onFalse}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\nFileManagerFileItem.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  onDelete: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool,\n  sx: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Portal from '@mui/material/Portal';\nimport Checkbox from '@mui/material/Checkbox';\nimport Typography from '@mui/material/Typography';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerActionSelected({\n  action,\n  selected,\n  rowCount,\n  numSelected,\n  onSelectAllItems,\n  sx,\n  ...other\n}) {\n  return (\n    <Portal>\n      <Box\n        sx={{\n          right: 0,\n          zIndex: 9,\n          bottom: 0,\n          display: 'flex',\n          borderRadius: 1.5,\n          position: 'fixed',\n          alignItems: 'center',\n          bgcolor: 'text.primary',\n          p: (theme) => theme.spacing(1.5, 2, 1.5, 1),\n          boxShadow: (theme) => theme.customShadows.z20,\n          m: { xs: 2, md: 3 },\n          ...sx,\n        }}\n        {...other}\n      >\n        <Checkbox\n          indeterminate={!!numSelected && numSelected < rowCount}\n          checked={!!rowCount && numSelected === rowCount}\n          onChange={(event) => onSelectAllItems(event.target.checked)}\n          icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n          checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          indeterminateIcon={<Iconify icon=\"eva:minus-circle-fill\" />}\n        />\n\n        {selected && (\n          <Typography\n            variant=\"subtitle2\"\n            sx={{\n              mr: 2,\n              color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\n            }}\n          >\n            {selected.length} Items selected\n          </Typography>\n        )}\n\n        {action && action}\n      </Box>\n    </Portal>\n  );\n}\n\nFileManagerActionSelected.propTypes = {\n  action: PropTypes.node,\n  numSelected: PropTypes.number,\n  onSelectAllItems: PropTypes.func,\n  rowCount: PropTypes.number,\n  selected: PropTypes.array,\n  sx: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useRef, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Collapse from '@mui/material/Collapse';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\n//\nimport FileManagerPanel from './file-manager-panel';\nimport FileManagerFileItem from './file-manager-file-item';\nimport FileManagerFolderItem from './file-manager-folder-item';\nimport FileManagerActionSelected from './file-manager-action-selected';\nimport FileManagerShareDialog from './file-manager-share-dialog';\nimport FileManagerNewFolderDialog from './file-manager-new-folder-dialog';\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerGridView({\n  table,\n  data,\n  dataFiltered,\n  onDeleteItem,\n  onOpenConfirm,\n}) {\n  const { selected, onSelectRow: onSelectItem, onSelectAllRows: onSelectAllItems } = table;\n\n  const containerRef = useRef(null);\n\n  const [folderName, setFolderName] = useState('');\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const share = useBoolean();\n\n  const newFolder = useBoolean();\n\n  const upload = useBoolean();\n\n  const files = useBoolean();\n\n  const folders = useBoolean();\n\n  const handleChangeInvite = useCallback((event) => {\n    setInviteEmail(event.target.value);\n  }, []);\n\n  const handleChangeFolderName = useCallback((event) => {\n    setFolderName(event.target.value);\n  }, []);\n\n  return (\n    <>\n      <Box ref={containerRef}>\n        <FileManagerPanel\n          title=\"Folders\"\n          subTitle={`${data.filter((item) => item.type === 'folder').length} folders`}\n          onOpen={newFolder.onTrue}\n          collapse={folders.value}\n          onCollapse={folders.onToggle}\n        />\n\n        <Collapse in={!folders.value} unmountOnExit>\n          <Box\n            gap={3}\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(4, 1fr)',\n            }}\n          >\n            {dataFiltered\n              .filter((i) => i.type === 'folder')\n              .map((folder) => (\n                <FileManagerFolderItem\n                  key={folder.id}\n                  folder={folder}\n                  selected={selected.includes(folder.id)}\n                  onSelect={() => onSelectItem(folder.id)}\n                  onDelete={() => onDeleteItem(folder.id)}\n                  sx={{ maxWidth: 'auto' }}\n                />\n              ))}\n          </Box>\n        </Collapse>\n\n        <Divider sx={{ my: 5, borderStyle: 'dashed' }} />\n\n        <FileManagerPanel\n          title=\"Files\"\n          subTitle={`${data.filter((item) => item.type !== 'folder').length} files`}\n          onOpen={upload.onTrue}\n          collapse={files.value}\n          onCollapse={files.onToggle}\n        />\n\n        <Collapse in={!files.value} unmountOnExit>\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(4, 1fr)',\n            }}\n            gap={3}\n          >\n            {dataFiltered\n              .filter((i) => i.type !== 'folder')\n              .map((file) => (\n                <FileManagerFileItem\n                  key={file.id}\n                  file={file}\n                  selected={selected.includes(file.id)}\n                  onSelect={() => onSelectItem(file.id)}\n                  onDelete={() => onDeleteItem(file.id)}\n                  sx={{ maxWidth: 'auto' }}\n                />\n              ))}\n          </Box>\n        </Collapse>\n\n        {!!selected?.length && (\n          <FileManagerActionSelected\n            numSelected={selected.length}\n            rowCount={data.length}\n            selected={selected}\n            onSelectAllItems={(checked) =>\n              onSelectAllItems(\n                checked,\n                data.map((row) => row.id)\n              )\n            }\n            action={\n              <>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\n                  onClick={onOpenConfirm}\n                  sx={{ mr: 1 }}\n                >\n                  Delete\n                </Button>\n\n                <Button\n                  color=\"primary\"\n                  size=\"small\"\n                  variant=\"contained\"\n                  startIcon={<Iconify icon=\"solar:share-bold\" />}\n                  onClick={share.onTrue}\n                >\n                  Share\n                </Button>\n              </>\n            }\n          />\n        )}\n      </Box>\n\n      <FileManagerShareDialog\n        open={share.value}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onClose={() => {\n          share.onFalse();\n          setInviteEmail('');\n        }}\n      />\n\n      <FileManagerNewFolderDialog open={upload.value} onClose={upload.onFalse} />\n\n      <FileManagerNewFolderDialog\n        open={newFolder.value}\n        onClose={newFolder.onFalse}\n        title=\"New Folder\"\n        onCreate={() => {\n          newFolder.onFalse();\n          setFolderName('');\n          console.info('CREATE NEW FOLDER', folderName);\n        }}\n        folderName={folderName}\n        onChangeFolderName={handleChangeFolderName}\n      />\n    </>\n  );\n}\n\nFileManagerGridView.propTypes = {\n  data: PropTypes.array,\n  dataFiltered: PropTypes.array,\n  onDeleteItem: PropTypes.func,\n  onOpenConfirm: PropTypes.func,\n  table: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n// components\nimport Iconify from 'src/components/iconify';\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerFiltersResult({\n  filters,\n  onFilters,\n  //\n  canReset,\n  onResetFilters,\n  //\n  results,\n  ...other\n}) {\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\n\n  const handleRemoveTypes = (inputValue) => {\n    const newValue = filters.type.filter((item) => item !== inputValue);\n    onFilters('type', newValue);\n  };\n\n  const handleRemoveDate = () => {\n    onFilters('startDate', null);\n    onFilters('endDate', null);\n  };\n\n  return (\n    <Stack spacing={1.5} {...other}>\n      <Box sx={{ typography: 'body2' }}>\n        <strong>{results}</strong>\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\n          results found\n        </Box>\n      </Box>\n\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n        {!!filters.type.length && (\n          <Block label=\"Types:\">\n            {filters.type.map((item) => (\n              <Chip key={item} label={item} size=\"small\" onDelete={() => handleRemoveTypes(item)} />\n            ))}\n          </Block>\n        )}\n\n        {filters.startDate && filters.endDate && (\n          <Block label=\"Date:\">\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\n          </Block>\n        )}\n\n        {canReset && (\n          <Button\n            color=\"error\"\n            onClick={onResetFilters}\n            startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\n          >\n            Clear\n          </Button>\n        )}\n      </Stack>\n    </Stack>\n  );\n}\n\nFileManagerFiltersResult.propTypes = {\n  canReset: PropTypes.bool,\n  filters: PropTypes.object,\n  onFilters: PropTypes.func,\n  onResetFilters: PropTypes.func,\n  results: PropTypes.number,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Block({ label, children, sx, ...other }) {\n  return (\n    <Stack\n      component={Paper}\n      variant=\"outlined\"\n      spacing={1}\n      direction=\"row\"\n      sx={{\n        p: 1,\n        borderRadius: 1,\n        overflow: 'hidden',\n        borderStyle: 'dashed',\n        ...sx,\n      }}\n      {...other}\n    >\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\n        {label}\n      </Box>\n\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {children}\n      </Stack>\n    </Stack>\n  );\n}\n\nBlock.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  sx: PropTypes.object,\n};\n","import { useState, useCallback } from 'react';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n// utils\nimport { fTimestamp } from 'src/utils/format-time';\n// _mock\nimport { _allFiles, FILE_TYPE_OPTIONS } from 'src/_mock';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\nimport EmptyContent from 'src/components/empty-content';\nimport { fileFormat } from 'src/components/file-thumbnail';\nimport { ConfirmDialog } from 'src/components/custom-dialog';\nimport { useSettingsContext } from 'src/components/settings';\nimport { useTable, getComparator } from 'src/components/table';\n//\nimport FileManagerTable from '../file-manager-table';\nimport FileManagerFilters from '../file-manager-filters';\nimport FileManagerGridView from '../file-manager-grid-view';\nimport FileManagerFiltersResult from '../file-manager-filters-result';\nimport FileManagerNewFolderDialog from '../file-manager-new-folder-dialog';\n\n// ----------------------------------------------------------------------\n\nconst defaultFilters = {\n  name: '',\n  type: [],\n  startDate: null,\n  endDate: null,\n};\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerView() {\n  const table = useTable({ defaultRowsPerPage: 10 });\n\n  const settings = useSettingsContext();\n\n  const openDateRange = useBoolean();\n\n  const confirm = useBoolean();\n\n  const upload = useBoolean();\n\n  const [view, setView] = useState('list');\n\n  const [tableData, setTableData] = useState(_allFiles);\n\n  const [filters, setFilters] = useState(defaultFilters);\n\n  const dateError =\n    filters.startDate && filters.endDate\n      ? filters.startDate.getTime() > filters.endDate.getTime()\n      : false;\n\n  const dataFiltered = applyFilter({\n    inputData: tableData,\n    comparator: getComparator(table.order, table.orderBy),\n    filters,\n    dateError,\n  });\n\n  const dataInPage = dataFiltered.slice(\n    table.page * table.rowsPerPage,\n    table.page * table.rowsPerPage + table.rowsPerPage\n  );\n\n  const canReset =\n    !!filters.name || !!filters.type.length || (!!filters.startDate && !!filters.endDate);\n\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\n\n  const handleChangeView = useCallback((event, newView) => {\n    if (newView !== null) {\n      setView(newView);\n    }\n  }, []);\n\n  const handleFilters = useCallback(\n    (name, value) => {\n      table.onResetPage();\n      setFilters((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    },\n    [table]\n  );\n\n  const handleDeleteItem = useCallback(\n    (id) => {\n      const deleteRow = tableData.filter((row) => row.id !== id);\n      setTableData(deleteRow);\n\n      table.onUpdatePageDeleteRow(dataInPage.length);\n    },\n    [dataInPage.length, table, tableData]\n  );\n\n  const handleDeleteItems = useCallback(() => {\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\n    setTableData(deleteRows);\n\n    table.onUpdatePageDeleteRows({\n      totalRows: tableData.length,\n      totalRowsInPage: dataInPage.length,\n      totalRowsFiltered: dataFiltered.length,\n    });\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\n\n  const handleResetFilters = useCallback(() => {\n    setFilters(defaultFilters);\n  }, []);\n\n  const renderFilters = (\n    <Stack\n      spacing={2}\n      direction={{ xs: 'column', md: 'row' }}\n      alignItems={{ xs: 'flex-end', md: 'center' }}\n    >\n      <FileManagerFilters\n        openDateRange={openDateRange.value}\n        onCloseDateRange={openDateRange.onFalse}\n        onOpenDateRange={openDateRange.onTrue}\n        //\n        filters={filters}\n        onFilters={handleFilters}\n        //\n        dateError={dateError}\n        typeOptions={FILE_TYPE_OPTIONS}\n      />\n\n      <ToggleButtonGroup size=\"small\" value={view} exclusive onChange={handleChangeView}>\n        <ToggleButton value=\"list\">\n          <Iconify icon=\"solar:list-bold\" />\n        </ToggleButton>\n\n        <ToggleButton value=\"grid\">\n          <Iconify icon=\"mingcute:dot-grid-fill\" />\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack>\n  );\n\n  const renderResults = (\n    <FileManagerFiltersResult\n      filters={filters}\n      onResetFilters={handleResetFilters}\n      //\n      canReset={canReset}\n      onFilters={handleFilters}\n      //\n      results={dataFiltered.length}\n    />\n  );\n\n  return (\n    <>\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography variant=\"h4\">File Manager</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Iconify icon=\"eva:cloud-upload-fill\" />}\n            onClick={upload.onTrue}\n          >\n            Upload\n          </Button>\n        </Stack>\n\n        <Stack\n          spacing={2.5}\n          sx={{\n            my: { xs: 3, md: 5 },\n          }}\n        >\n          {renderFilters}\n\n          {canReset && renderResults}\n        </Stack>\n\n        {notFound ? (\n          <EmptyContent\n            filled\n            title=\"No Data\"\n            sx={{\n              py: 10,\n            }}\n          />\n        ) : (\n          <>\n            {view === 'list' ? (\n              <FileManagerTable\n                table={table}\n                tableData={tableData}\n                dataFiltered={dataFiltered}\n                onDeleteRow={handleDeleteItem}\n                notFound={notFound}\n                onOpenConfirm={confirm.onTrue}\n              />\n            ) : (\n              <FileManagerGridView\n                table={table}\n                data={tableData}\n                dataFiltered={dataFiltered}\n                onDeleteItem={handleDeleteItem}\n                onOpenConfirm={confirm.onTrue}\n              />\n            )}\n          </>\n        )}\n      </Container>\n\n      <FileManagerNewFolderDialog open={upload.value} onClose={upload.onFalse} />\n\n      <ConfirmDialog\n        open={confirm.value}\n        onClose={confirm.onFalse}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\n          </>\n        }\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              handleDeleteItems();\n              confirm.onFalse();\n            }}\n          >\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\n  const { name, type, startDate, endDate } = filters;\n\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  if (name) {\n    inputData = inputData.filter(\n      (file) => file.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\n    );\n  }\n\n  if (type.length) {\n    inputData = inputData.filter((file) => type.includes(fileFormat(file.type)));\n  }\n\n  if (!dateError) {\n    if (startDate && endDate) {\n      inputData = inputData.filter(\n        (file) =>\n          fTimestamp(file.createdAt) >= fTimestamp(startDate) &&\n          fTimestamp(file.createdAt) <= fTimestamp(endDate)\n      );\n    }\n  }\n\n  return inputData;\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport { FileManagerView } from 'src/sections/file-manager/view';\n\n// ----------------------------------------------------------------------\n\nexport default function FileManagerPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: File Manager</title>\n      </Helmet>\n\n      <FileManagerView />\n    </>\n  );\n}\n"],"names":["shortDateLabel","startDate","endDate","getCurrentYear","Date","getFullYear","startDateYear","getYear","endDateYear","currentYear","sameDay","isSameDay","sameMonth","isSameMonth","fDate","concat","useDateRangePicker","start","end","open","setOpen","useState","setEndDate","setStartDate","error","getTime","onOpen","useCallback","onClose","onChangeStartDate","newValue","onChangeEndDate","onReset","selected","label","shortLabel","CustomDateRangePicker","_ref","title","variant","mdUp","useResponsive","isCalendarView","_jsxs","Dialog","fullWidth","maxWidth","PaperProps","sx","children","_jsx","DialogTitle","pb","DialogContent","overflow","Stack","justifyContent","spacing","direction","pt","_Fragment","Paper","borderRadius","borderColor","borderStyle","DateCalendar","value","onChange","DatePicker","FormHelperText","px","DialogActions","Button","color","onClick","disabled","useTypography","theme","useTheme","breakpoints","useWidth","key","up","getFont","typography","fontSize","Math","round","parseFloat","lineHeight","Number","fontWeight","letterSpacing","forwardRef","ref","asLink","line","persistent","other","styles","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","height","Link","Typography","useDoubleClick","click","doubleClick","timeout","clickTimeout","useRef","event","clearTimeout","current","detail","setTimeout","FileManagerTableRow","row","onSelectRow","onDeleteRow","name","size","type","modifiedAt","shared","isFavorited","enqueueSnackbar","useSnackbar","copy","useCopyToClipboard","inviteEmail","setInviteEmail","favorite","useBoolean","details","share","confirm","popover","usePopover","handleChangeInvite","target","handleClick","onTrue","console","info","handleCopy","url","defaultStyles","borderTop","alpha","palette","grey","borderBottom","borderTopLeftRadius","borderBottomLeftRadius","borderLeft","borderTopRightRadius","borderBottomRightRadius","borderRight","TableRow","tableRowClasses","backgroundColor","boxShadow","customShadows","z20","transition","transitions","create","duration","shortest","tableCellClasses","root","TableCell","padding","Checkbox","checked","onDoubleClick","alignItems","FileThumbnail","file","width","noWrap","cursor","whiteSpace","fData","ListItemText","primary","format","secondary","primaryTypographyProps","secondaryTypographyProps","mt","component","align","AvatarGroup","max","avatarGroupClasses","avatar","map","person","Avatar","alt","src","avatarUrl","id","icon","Iconify","checkedIcon","onToggle","p","IconButton","CustomPopover","arrow","MenuItem","Divider","FileManagerFileDetails","item","favorited","onFavorite","onCopyLink","onFalse","onDelete","FileManagerShareDialog","onChangeInvite","ConfirmDialog","content","action","TABLE_HEAD","FileManagerTable","table","tableData","notFound","dataFiltered","onOpenConfirm","dense","page","order","orderBy","rowsPerPage","onSelectAllRows","onSort","onChangeDense","onChangePage","onChangeRowsPerPage","denseHeight","Box","position","m","TableSelectedAction","numSelected","length","rowCount","Tooltip","pl","pr","top","left","right","TableContainer","Table","minWidth","borderCollapse","borderSpacing","TableHeadCustom","headLabel","head","TableBody","slice","includes","TableEmptyRows","emptyRows","TableNoData","border","divider","TablePaginationCustom","count","onPageChange","onRowsPerPageChange","tablePaginationClasses","toolbar","borderTopColor","FileManagerFilters","openDateRange","onCloseDateRange","onOpenDateRange","filters","onFilters","dateError","typeOptions","renderLabel","join","handleFilterName","handleFilterStartDate","handleFilterEndDate","handleFilterType","filter","handleResetType","renderFilterName","TextField","placeholder","InputProps","startAdornment","InputAdornment","xs","md","renderFilterType","endIcon","ml","Label","gap","gridTemplateColumns","sm","CardActionArea","bgcolor","renderFilterDate","flexGrow","FileManagerFileItem","_file$shared","onSelect","checkbox","renderIcon","renderAction","renderText","TextMaxLine","mb","mx","flexShrink","fDateTime","renderAvatar","onMouseEnter","onMouseLeave","FileManagerActionSelected","onSelectAllItems","Portal","zIndex","bottom","indeterminate","indeterminateIcon","mr","mode","FileManagerGridView","data","onDeleteItem","onSelectItem","containerRef","folderName","setFolderName","newFolder","upload","files","folders","handleChangeFolderName","FileManagerPanel","subTitle","collapse","onCollapse","Collapse","in","unmountOnExit","lg","i","folder","FileManagerFolderItem","my","startIcon","FileManagerNewFolderDialog","onCreate","onChangeFolderName","FileManagerFiltersResult","canReset","onResetFilters","results","flexWrap","Block","Chip","inputValue","handleRemoveTypes","handleRemoveDate","_ref2","defaultFilters","FileManagerView","useTable","defaultRowsPerPage","settings","useSettingsContext","view","setView","setTableData","_allFiles","setFilters","inputData","comparator","stabilizedThis","el","index","sort","a","b","toLowerCase","indexOf","fileFormat","fTimestamp","createdAt","applyFilter","getComparator","dataInPage","handleChangeView","newView","handleFilters","onResetPage","prevState","handleDeleteItem","deleteRow","onUpdatePageDeleteRow","handleDeleteItems","deleteRows","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleResetFilters","renderFilters","FILE_TYPE_OPTIONS","ToggleButtonGroup","exclusive","ToggleButton","renderResults","Container","themeStretch","EmptyContent","filled","py","FileManagerPage","Helmet"],"sourceRoot":""}