{"version":3,"file":"static/js/7659.fbb48bbc.chunk.js","mappings":"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","sources":["sections/_examples/mui/accordion-view.js","pages/components/mui/accordion.js"],"sourcesContent":["import { useState } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n// routes\nimport { paths } from 'src/routes/paths';\n// _mock\nimport { _mock } from 'src/_mock';\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport ComponentBlock from '../component-block';\n\n// ----------------------------------------------------------------------\n\nconst _accordions = [...Array(4)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Accordion ${index + 1}`,\n  subHeading: _mock.postTitle(index),\n  detail: _mock.description(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function AccordionView() {\n  const [controlled, setControlled] = useState(false);\n\n  const handleChangeControlled = (panel) => (event, isExpanded) => {\n    setControlled(isExpanded ? panel : false);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Accordion\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Accordion' },\n            ]}\n            moreLink={['https://mui.com/components/accordion']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <ComponentBlock title=\"Simple\" spacing={0}>\n            {_accordions.map((accordion, index) => (\n              <Accordion key={accordion.value} disabled={index === 3}>\n                <AccordionSummary expandIcon={<Iconify icon=\"eva:arrow-ios-downward-fill\" />}>\n                  <Typography variant=\"subtitle1\">{accordion.heading}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>{accordion.detail}</Typography>\n                </AccordionDetails>\n              </Accordion>\n            ))}\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Controlled\" spacing={0}>\n            {_accordions.map((item, index) => (\n              <Accordion\n                key={item.value}\n                disabled={index === 3}\n                expanded={controlled === item.value}\n                onChange={handleChangeControlled(item.value)}\n              >\n                <AccordionSummary expandIcon={<Iconify icon=\"eva:arrow-ios-downward-fill\" />}>\n                  <Typography variant=\"subtitle1\" sx={{ width: '33%', flexShrink: 0 }}>\n                    {item.heading}\n                  </Typography>\n                  <Typography sx={{ color: 'text.secondary' }}>{item.subHeading}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>{item.detail}</Typography>\n                </AccordionDetails>\n              </Accordion>\n            ))}\n          </ComponentBlock>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport AccordionView from 'src/sections/_examples/mui/accordion-view';\n\n// ----------------------------------------------------------------------\n\nexport default function AccordionPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: Accordion</title>\n      </Helmet>\n\n      <AccordionView />\n    </>\n  );\n}\n"],"names":["_accordions","Array","map","_","index","id","_mock","value","concat","heading","subHeading","postTitle","detail","description","AccordionView","controlled","setControlled","useState","_jsxs","_Fragment","children","_jsx","Box","sx","py","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","links","name","href","paths","components","moreLink","my","Stack","spacing","ComponentBlock","title","accordion","Accordion","disabled","AccordionSummary","expandIcon","Iconify","icon","Typography","variant","AccordionDetails","item","expanded","onChange","panel","event","isExpanded","width","flexShrink","color","AccordionPage","Helmet"],"sourceRoot":""}