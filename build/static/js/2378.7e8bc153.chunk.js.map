{"version":3,"file":"static/js/2378.7e8bc153.chunk.js","mappings":"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","sources":["sections/Asset/AssetParentIdList.js","sections/Asset/Asset_module/AssetCheckList.js","sections/Asset/Asset_module/AssetSpares.js","sections/Asset/Asset_module/AssetSpecification.js","sections/Asset/Asset_module/AssetUsage.js","sections/Asset/Asset_module/AssetWoHistory.js","sections/Asset/Asset_module/PmSetup.js","sections/Asset/Asset_module/RelocationHistory.js","sections/maintenance/component_module/Planning/WorkStockNoPopupData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Swal from \"sweetalert2\";\r\nimport MaterialTable from \"material-table\";\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst AssetParentIdList = ({ onRowClick, onChangePage, onSearchChange,asset  }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [data, setData] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(null);\r\n  const startTime = window.performance.now();\r\n  const [viewedRows, setViewedRows] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    httpCommon\r\n      .get(\"/get_asset_from_parentId_list.php?site_cd=\" + site_ID + \"&vlu=\" + asset)\r\n      .then((response) => {\r\n       // console.log(\"response__NET\", response);\r\n        const endTime = window.performance.now();\r\n        const loadTime = endTime - startTime;\r\n       // console.log(`API load time: ${loadTime} milliseconds`);\r\n        Swal.close();\r\n        //setData(response.data.data.result);\r\n        setData(response.data.data.WorkAssetNo);\r\n        onRowClick(response.data.data.WorkAssetNo.length);\r\n        // setTotalData(response.data.data.WorkAssetNo.length);\r\n        const endTime2 = window.performance.now();\r\n        const loadTime2 = endTime2 - startTime;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //Table colums\r\n  const columns = [\r\n    {\r\n      title: \"Asset No\",\r\n      field: \"ast_mst_asset_no\",\r\n      render: (rowData) => renderIcon(rowData),\r\n    },\r\n    { title: \"Long Description\", field: \"ast_mst_asset_longdesc\",width: 450 },\r\n    { title: \"Level\", field: \"ast_mst_ast_lvl\",width: 40 },\r\n    { title: \"Zone\", field: \"ast_mst_work_area\",width: 40 },\r\n    { title: \"Asset Location\", field: \"ast_mst_asset_locn\",width: 150 },\r\n    { title: \"Cost Center\", field: \"ast_mst_cost_center\",width: 40 },\r\n    { title: \"Asset Type\", field: \"ast_mst_asset_type\",width: 200 },\r\n    { title: \"Status\", field: \"ast_mst_asset_status\",width: 40 },\r\n    { title: \"Customer Code\", field: \"ast_det_cus_code\",width: 40 },\r\n  ];\r\n\r\n  const renderIcon = (rowData) => {\r\n    if (rowData.ast_mst_asset_no === selectedRowKeys) {\r\n      return (\r\n        <div>\r\n          <Iconify\r\n            icon=\"mingcute:save-fill\"\r\n            style={{\r\n              marginRight: \"0px\",\r\n              marginTop: \"2px\",\r\n              float: \"left\",\r\n              fontSize: \"16px\",\r\n              color: \"#289e49\",\r\n            }}\r\n          />\r\n          {rowData.ast_mst_asset_no}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{rowData.ast_mst_asset_no}</div>;\r\n  };\r\n  const handleRowClick = (event, rowData) => {\r\n    if (selectedRowKeys && selectedRowKeys === rowData.ast_mst_asset_no) {\r\n      onRowClick(data.length, rowData.ast_mst_asset_no+' : '+rowData.ast_mst_asset_shortdesc, 1);\r\n    }\r\n    setSelectedRowKeys(rowData.ast_mst_asset_no);\r\n    onRowClick(data.length, rowData.ast_mst_asset_no+' : '+rowData.ast_mst_asset_shortdesc);\r\n  };\r\n  const handlePageChange = (page) => {\r\n    const pageSize = 10; // Assuming each page displays 10 rows\r\n    const viewedRowsCount = page * pageSize;\r\n    setViewedRows(viewedRowsCount);\r\n    onChangePage(viewedRowsCount);\r\n  };\r\n\r\n  // const handleSearch = (searchText) => {\r\n  //   // Filter the data based on the search text\r\n  //   const filteredData = data.filter(\r\n  //     (item) =>\r\n  //       item.ast_mst_asset_no\r\n  //         .toLowerCase()\r\n  //         .includes(searchText.toLowerCase()) ||\r\n  //       item.ast_mst_asset_longdesc\r\n  //         .toLowerCase()\r\n  //         .includes(searchText.toLowerCase()) ||\r\n  //       item.ast_mst_work_area\r\n  //         .toLowerCase()\r\n  //         .includes(searchText.toLowerCase()) ||\r\n  //       item.ast_mst_asset_type.toLowerCase().includes(searchText.toLowerCase())\r\n  //   );\r\n\r\n  //   // setData(filteredData);\r\n  //   //setSearchedDataCount(filteredData.length);\r\n  //   onSearchChange(filteredData.length);\r\n  // };\r\n  const handleSearch = (searchText) => {\r\n    // Filter the data based on the search text\r\n    const filteredData = data.filter((item) => {\r\n      const assetNo = item.ast_mst_asset_no ? item.ast_mst_asset_no.toLowerCase() : '';\r\n      const assetDesc = item.ast_mst_asset_longdesc ? item.ast_mst_asset_longdesc.toLowerCase() : '';\r\n      const workArea = item.ast_mst_work_area ? item.ast_mst_work_area.toLowerCase() : '';\r\n      const assetType = item.ast_mst_asset_type ? item.ast_mst_asset_type.toLowerCase() : '';\r\n  \r\n      return (\r\n        assetNo.includes(searchText.toLowerCase()) ||\r\n        assetDesc.includes(searchText.toLowerCase()) ||\r\n        workArea.includes(searchText.toLowerCase()) ||\r\n        assetType.includes(searchText.toLowerCase())\r\n      );\r\n    });\r\n  \r\n    // setData(filteredData);\r\n    //setSearchedDataCount(filteredData.length);\r\n    onSearchChange(filteredData.length);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"container Ordertbl\">\r\n          <MaterialTable\r\n            title=\"\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              pageSize: 10,\r\n              pageSizeOptions: false,\r\n              overflowY: \"auto\",\r\n              paginationPosition: \"top\",\r\n              toolbarButtonAlignment: \"right\",\r\n              paginationType: \"normal\",\r\n              rowStyle: (rowData) => ({\r\n                backgroundColor:\r\n                  rowData.ast_mst_asset_no === selectedRowKeys\r\n                    ? \"#a9ebb9\"\r\n                    : \"#FFF\",\r\n                fontSize: \"12px !important\",\r\n              }),\r\n            }}\r\n            onRowClick={handleRowClick}\r\n            onChangePage={handlePageChange}\r\n            onSearchChange={(searchText) => handleSearch(searchText)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssetParentIdList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport {\r\n  differenceInMilliseconds,\r\n  differenceInDays,\r\n  differenceInHours,\r\n  differenceInMinutes,\r\n} from \"date-fns\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport httpCommon from \"src/http-common\";\r\nimport { format, setHours } from \"date-fns\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport logo from \"../../../assets/img/relocation.png\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst CheckList = ({ data, onDataFromSecondComponent }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const { RowID } = data;\r\n  const { Asset_No } = data;\r\n  const { WorkOrderNo } = data;\r\n\r\n  const location = useLocation();\r\n  const [Header, setHeader] = React.useState([\"Check List Code\",\"Check List Description\",\"Carry to Work Order\"]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const [EmployeeID, setEmployeeID] = useState([]);\r\n  const [selected_EmployeeID, setSelected_EmployeeID] = useState([]);\r\n\r\n  const [Craft, setCraft] = useState([]);\r\n  const [selected_Craft, setSelected_Craft] = useState([]);\r\n\r\n  const [TimeCardDate, setTimeCardDate] = useState(new Date());\r\n  const [EndTimeCardDate, setEndTimeCardDate] = useState(new Date());\r\n\r\n  const [HourType, setHourType] = useState([]);\r\n  const [selected_HourType, setSelected_HourType] = useState([]);\r\n\r\n  const [ActualHour, setActualHour] = useState(\"0\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [CreditCostCenter, setCreditCostCenter] = useState([]);\r\n  const [selected_CreditCostCenter, setSelected_CreditCostCenter] = useState(\r\n    []\r\n  );\r\n  const [EmpDropData, setEmpDropData] = useState([]);\r\n  const [CreditAccount, setCreditAccount] = useState([]);\r\n  const [selected_CreditAccount, setSelected_CreditAccount] = useState([]);\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID2, setRowID2] = useState(\"\");\r\n\r\n  const [AssetNo, setAssetNo] = useState(\"\");\r\n  const [Rate, setRate] = useState(\"\");\r\n  const [Multiplier, setMultiplier] = useState(\"\");\r\n  const [Adder, setAdder] = useState(\"\");\r\n  const [ActualCost, setActualCost] = useState(\"\");\r\n  const [TimeCardNo, setTimeCardNo] = useState(\"\");\r\n  const [isEmpNoEmpty, setIsEmpEmpty] = useState(false);\r\n  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n\r\n  // Get Header Data\r\n  const get_assetchecklist = async (site_ID, RowID) => {\r\n    try { \r\n      \r\n      const response = await httpCommon.get(\r\n        `/get_assetchecklist.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n      //  console.log(\"response_____setuplist\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n       // setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n    get_assetchecklist(site_ID, RowID);\r\n\r\n    get_workorder_status(site_ID, \"All\");\r\n  }, [location]);\r\n\r\n \r\n  const get_workorder_status = async (site_ID, type) => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `get_dropdown.php?site_cd=${site_ID}&type=${type}`\r\n      );\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        let EmployeeID = response.data.data.Employee_Supervisor_Id.map(\r\n          (item) => ({\r\n            label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n            value: item.emp_mst_empl_id,\r\n          })\r\n        );\r\n        setEmployeeID(EmployeeID);\r\n\r\n        let Craft = response.data.data.Employee_Primary_Craft.map((item) => ({\r\n          label: item.crf_mst_crf_cd + \" : \" + item.crf_mst_desc,\r\n          value: item.crf_mst_crf_cd,\r\n        }));\r\n        // setCraft(Craft);\r\n\r\n        let HourType = response.data.data.HoursType.map((item) => ({\r\n          label: item.hours_type_cd,\r\n          value: item.hours_type_cd,\r\n        }));\r\n        setHourType(HourType);\r\n\r\n        let ChargeCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setChargeCostCenter(ChargeCostCenter);\r\n\r\n        let ChargeAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setChargeAccount(ChargeAccount);\r\n\r\n        let CreditCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setCreditCostCenter(CreditCostCenter);\r\n\r\n        let CreditAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setCreditAccount(CreditAccount);\r\n\r\n        //get_dropdown_ParentFlag(site_ID,selected_asset);\r\n        // get_workordermaster_select(site_ID,selected_asset);\r\n        // New_WorkOrderTimeCard();\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // console.error(\"Error fetching data:\", error);\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      textAlign:\"left\",\r\n      padding:\"0px\"\r\n    };\r\n    return (\r\n      <>\r\n      \r\n        <TableCell key=\"select\"></TableCell>\r\n        {Header.map((attr, index) => (\r\n        <TableCell key={index} style={cellStyle}>\r\n            {attr.toUpperCase()}\r\n        </TableCell>\r\n        \r\n        ))}\r\n        <TableCell key=\"view\" style={cellStyle}>View</TableCell> {/* Add \"View\" column */}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderTableRows = () => {\r\n    \r\n    return Result.map((result, index) => (\r\n      <TableRow key={index}>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"left\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"left\" }}>\r\n          {result.ast_job_job_cd}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"left\" }}>\r\n          {result.job_mst_desc}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n        {\r\n            result.ast_job_carry == \"1\" ? (\r\n            \r\n                <Checkbox {...label} defaultChecked />\r\n            ) : (\r\n            \r\n                <Checkbox {...label} />\r\n            )\r\n            }\r\n\r\n        </TableCell>\r\n            <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n                <Button variant=\"contained\" color=\"primary\">View</Button> {/* \"View\" button */}\r\n            </TableCell>\r\n        \r\n      </TableRow>\r\n    ));\r\n  };\r\n//   const formatDate = (dateObject) => {\r\n//     const date = new Date(dateObject.date);\r\n\r\n//     const day = date.getDate().toString().padStart(2, \"0\");\r\n//     const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n//     const year = date.getFullYear();\r\n\r\n//     const hours = date.getHours().toString().padStart(2, \"0\");\r\n//     const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n//     const seconds = date.getSeconds().toString().padStart(2, \"0\");\r\n\r\n//     return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\r\n//   };\r\n\r\n  const totalQty = Result.reduce(\r\n    (acc, item) => acc + (parseFloat(item.wko_ls8_hrs) || 0),\r\n    0\r\n  );\r\n  const totalCost = Result.reduce(\r\n    (acc, item) =>\r\n      acc +\r\n      (parseFloat(item.wko_ls8_hrs) || 0) *\r\n        (parseFloat(item.wko_ls8_act_cost) || 0),\r\n    0\r\n  );\r\n  const handleEmployeeIDChange = async (event, value) => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    setSelected_EmployeeID(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `get_time_cart_reate_craft.php?site_cd=${site_ID}&empId=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          let Craft = response.data.data.result.map((item) => ({\r\n            label: item.emp_ls1_craft + \" : \" + item.crf_mst_desc,\r\n            value: item.emp_ls1_craft,\r\n            rate: item.emp_ls1_charge_rate,\r\n          }));\r\n          setCraft(Craft);\r\n\r\n          setSelected_Craft(response.data.data.result[0].emp_ls1_craft);\r\n          setRate(response.data.data.result[0].emp_ls1_charge_rate);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleHourTypeChange = async (event, value) => {\r\n    setSelected_HourType(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `TimeCartHourTypeGet.php?site_cd=${site_ID}&hourstype=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          setAdder(response.data.data.result[0].hours_type_adder);\r\n          setMultiplier(response.data.data.result[0].hours_type_multiplier);\r\n\r\n          const start = new Date(TimeCardDate);\r\n          const end = new Date(EndTimeCardDate);\r\n          // const range = new Moment.range(start, end);\r\n\r\n          const msDiff = differenceInMilliseconds(end, start);\r\n          const days = differenceInDays(end, start);\r\n          const hours = Math.floor(msDiff / (1000 * 60 * 60)); // Total hours\r\n          const min = Math.floor(msDiff / (1000 * 60));\r\n\r\n          const Min = Math.floor(msDiff / (1000 * 60));\r\n          const act_hour = Math.floor(Min / 60);\r\n\r\n          const h = parseFloat(hours);\r\n          const r = parseFloat(Rate);\r\n          const a = parseFloat(response.data.data.result[0].hours_type_adder);\r\n          const m = parseFloat(\r\n            response.data.data.result[0].hours_type_multiplier\r\n          );\r\n\r\n          const f3 = act_hour * (r + a) * m;\r\n          setActualCost(f3);\r\n          setActualHour(hours);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const resetData = () => {\r\n    setSelected_ChargeAccount(\"\");\r\n    setSelected_ChargeCostCenter(\"\");\r\n    setSelected_Craft(\"\");\r\n    setSelected_CreditAccount(\"\");\r\n    setSelected_CreditCostCenter(\"\");\r\n    setSelected_EmployeeID(\"\");\r\n    setSelected_HourType(\"\");\r\n    setActualHour(\"\");\r\n  };\r\n  const handleSubmitTimecard = async () => {\r\n    if (selected_EmployeeID == \"\" || selected_EmployeeID == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Employee ID is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_Craft == \"\" || selected_Craft == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Craft is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field End Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_HourType == \"\" || selected_HourType == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Hour Type is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else {\r\n      let selectedHourType;\r\n      if (\r\n        !selected_HourType ||\r\n        selected_HourType.length === 0 ||\r\n        !selected_HourType.label\r\n      ) {\r\n        selectedHourType = \"\";\r\n      } else {\r\n        const selectedHourType2 = selected_HourType.label.split(\":\");\r\n        selectedHourType = selectedHourType2[0].trim();\r\n      }\r\n\r\n      let date_1 = \"\";\r\n      if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n        date_1 = \"\";\r\n      } else {\r\n        date_1 = Moment(TimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n\r\n      let date_2 = \"\";\r\n      if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n        date_2 = \"\";\r\n      } else {\r\n        date_2 = Moment(EndTimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n      var json_workorderTimeCart = {\r\n        site_cd: site_ID,\r\n        wko_mst_wo_no: WorkOrderNo,\r\n        mst_RowID: RowID,\r\n        assetno: Asset_No,\r\n        selectedEmployeeID: selected_EmployeeID.value,\r\n        selectedCraft:\r\n        selected_Craft && typeof selected_Craft === \"object\"\r\n            ? selected_Craft.value\r\n            : selected_Craft,\r\n        TimeCardDate: date_1,\r\n        EndTimeCardDate: date_2,\r\n        selected_HourType: selectedHourType,\r\n        ActualHour: ActualHour,\r\n        Rate: Rate,\r\n        Multiplier: Multiplier,\r\n        Adder: Adder,\r\n        ActualCost: ActualCost,\r\n        selected_ChargeCostCenter: selected_ChargeCostCenter.value,\r\n        selected_ChargeAccount: selected_ChargeAccount.value,\r\n        selected_CreditCostCenter: selected_CreditCostCenter.value,\r\n        selected_CreditAccount: selected_CreditAccount.value,\r\n        auditUser: emp_owner,\r\n      };\r\n\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_time_card.php\",\r\n          JSON.stringify(json_workorderTimeCart)\r\n        );\r\n        if (response.data.status == \"SUCCESS\") {\r\n          handleClose();\r\n          get_assetchecklist();\r\n          resetData();\r\n          onDataFromSecondComponent(\"SubmitFrom\");\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"8px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n              paddingBottom: \"10px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div style={{ backgroundColor: \"white\" }}>\r\n                <div\r\n                  className=\"template-demo\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <div style={{ marginRight: \"10px\" }}>\r\n                    <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n                  </div>\r\n                  <div\r\n                    className=\"template-demo\"\r\n                    style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  >\r\n                    <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n                    Check List\r\n                    </div>\r\n                    {/* <div className=\"TimeCartPartCosting\">\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {(totalQty * 1).toFixed(2)}\r\n                      </span>{\" \"}\r\n                      Total Parts Costing{\" \"}\r\n                      <span style={{ color: \"#19d895\" }}>\r\n                        ${totalCost.toFixed(2)}\r\n                      </span>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>{renderTableHeader()}</TableRow>\r\n                  </TableHead>\r\n                  <TableBody>{renderTableRows()}</TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            <div>\r\n              <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={show}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n                disableBackdropClick\r\n                sx={{\r\n                  width: \"50vw\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  <img src={logo} style={{ width: \"30px\", height: \"30px\",marginRight: \"2px\" }} />\r\n                  Check List\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \"15px\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      spacing={1.5}\r\n                      className=\"timeCartPopuplabel\"\r\n                    >\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Employee ID:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={EmployeeID}\r\n                          value={selected_EmployeeID}\r\n                          onChange={(event, value) =>\r\n                            handleEmployeeIDChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Craft:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={Craft}\r\n                          value={selected_Craft}\r\n                          onChange={(event, value) => {\r\n                            setSelected_Craft(value || null);\r\n                            setRate(value ? value.rate : null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={TimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card End Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={EndTimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setEndTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Hour Type:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={HourType}\r\n                          value={selected_HourType}\r\n                          onChange={(event, value) =>\r\n                            handleHourTypeChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Actual Hour:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          className=\"Extrasize\"\r\n                          fullWidth\r\n                          disabled\r\n                          value={ActualHour}\r\n                          onChange={(e) => {\r\n                            setActualHour(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeCostCenter}\r\n                          value={selected_ChargeCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeAccount}\r\n                          value={selected_ChargeAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditCostCenter}\r\n                          value={selected_CreditCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditAccount}\r\n                          value={selected_CreditAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <div className=\"timeCartSubmit\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"button\" // Remove this line\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        handleSubmitTimecard();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              {/* <button\r\n                type=\"button\"\r\n                style={{\r\n                  padding: \"5px 10px\",\r\n                  background: \"none\",\r\n                  color: \"blue\",\r\n                  border: \"none\",\r\n                  borderRadius: \"4px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={handleShow}\r\n              >\r\n                + Add Check List\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Iconify from \"src/components/iconify\";\r\n//import WorkStockNoPopupData from \"./WorkStockNoPopupData\";\r\nimport WorkStockNoPopupData from \"src/sections/maintenance/component_module/Planning/WorkStockNoPopupData\";\r\n//import logo from \"../../../../assets/img/screw.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport httpCommon from \"src/http-common\";\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\nconst AssetSpares = ({ onRowClick, data }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [MaterialOrderResult, setMaterialOrderResult] = React.useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n \r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setInputFields(updatedInputFields);\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [StockNo, setStockNo] = useState([]);\r\n  const [selected_StockNo, setSelected_StockNo] = useState([]);\r\n  const [Description, setDescription] = useState(\"\");\r\n\r\n  const [PartNo, setPartNo] = useState(\"\");\r\n\r\n  const [TotalOh, setTotalOh] = useState(\"\");\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"\");\r\n\r\n\r\n  const [StockLocation, setStockLocation] = useState([]);\r\n  const [selected_StockLocation, setSelected_StockLocation] = useState([]);\r\n\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  \r\n  \r\n\r\n  const location = useLocation();\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(data.RowID);\r\n  const [RowID2, setRowID2] = useState(\"\");\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(data.WorkOrderNo);\r\n  const [selected_Charge_Cost_Center, setselected_Charge_Cost_Center] =\r\n    useState(data.selected_Charge_Cost_Center);\r\n\r\n  //const [AssetNo, setAssetNo] = useState(data.Asset_No.split(' : ')[0]);\r\n  const [AssetNo, setAssetNo] = useState();\r\n  const [UOM, setUOM] = useState(\"\");\r\n  const [ItemCost, setItemCost] = useState(\"\");\r\n  const [MaterialRequestNo, setMaterialRequestNo] = useState(\"\");\r\n  const [MrLineNo, setMrLineNo] = useState(\"\");\r\n  const [MrApprovalStatus, setMrApprovalStatus] = useState(\"\");\r\n  const [ActualQuantity, setActualQuantity] = useState(\"\");\r\n  const [ContractPoNo, setContractPoNo] = useState(\"\");\r\n  const [ContractPoLine, setContractPoLine] = useState(\"\");\r\n  const [getStockNo, setGetStockNo] = useState([]);\r\n  const [modalOpenAsset, setModalOpenAsset] = useState(false);\r\n  const [modalRowDt, setmodalRowDt] = useState(\"\");\r\n\r\n  const [astMstLabel, setAstMstLabel] = useState([]);\r\n  const [AssetMandatoryFiled, setAssetMandatoryFiled] = useState([]);\r\n \r\n\r\n  useEffect(() => {\r\n    get_Asset_Spares(site_ID, RowID);\r\n    getAssetSparesFromLebel();\r\n    getAssetMandatoryfiled();\r\n  }, [location]);\r\n  // First Api\r\n  const get_Asset_Spares = async (site_ID, RowID) => {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_asset_spares.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n     //  console.log(\"response____Asset_Spares___\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n        Swal.close();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      textAlign: \"center\" ,\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\" ></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  //Body\r\n  const renderTableRows = () => {\r\n\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index} onClick={(event) => handleRowClick(result, event)} \r\n      style={{ cursor: \"pointer\", transition: \"background-color 0.3s\" }}\r\n      onMouseEnter={(event) => event.currentTarget.style.backgroundColor = \"#f0f0f0\"}\r\n      onMouseLeave={(event) => event.currentTarget.style.backgroundColor = \"transparent\"}\r\n      >\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls1_stock_no}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls1_varchar1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.itm_mst_desc}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls1_qty_needed}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.itm_mst_ttl_oh}\r\n        </TableCell>\r\n       \r\n      </TableRow>\r\n    ));\r\n  };\r\n\r\n// Get All Filed label Name\r\nconst getAssetSparesFromLebel = async () => {\r\n  try {\r\n    const response = await httpCommon.get(\"/get_asset_spares_and_usage_from_lebal.php\");\r\n    if (response.data.status === \"SUCCESS\") {\r\n      setAstMstLabel(response.data.data.ast_ls1);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n};\r\n  // Get All Filed label Name\r\n  const getAssetMandatoryfiled = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\"/get_asset_spares_and_usage_from_mandatory_filed.php\");\r\n      \r\n      if (response.data && response.data.data && response.data.data.MandatoryField) {\r\n\r\n        if (response.data.data.MandatoryField.length > 0) {\r\n          \r\n          setAssetMandatoryFiled(response.data.data.MandatoryField);\r\n  \r\n        }\r\n  \r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\nconst findCustomizeLabel = (columnName) => {\r\n  if (!Array.isArray(astMstLabel)) return \"\";\r\n  const matchingColumn = astMstLabel.find(\r\n    (item) => item.column_name === columnName\r\n  );\r\n  return matchingColumn ? matchingColumn.customize_label : \"\";\r\n\r\n};\r\n\r\nconst findCustomizerequiredLabel = (columnName) => {\r\n  const foundItem = AssetMandatoryFiled.find(item => item.column_name === columnName);\r\n  if (foundItem && foundItem.cf_label_required === \"1\") {\r\n      return \"Requiredlabel\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\n  const handleRowClick = (data) => {\r\n   // console.log(\"clickRow__\",data)\r\n    setRowID2(data.RowID);\r\n    setStockNo(data.ast_ls1_stock_no);\r\n    setPartNo(data.ast_ls1_varchar1);\r\n    setDescription(data.ast_ls1_desc);\r\n    setQtyNeeded(data.ast_ls1_qty_needed);\r\n    setTotalOh(data.itm_mst_ttl_oh);\r\n\r\n    setShowModal(true);\r\n  };\r\n  const resetData = () => {\r\n    setSelected_StockNo(\"\");\r\n    setPartNo(\"\");\r\n    setTotalOh(\"\");\r\n    setmodalRowDt(\"\");\r\n    setDescription(\"\");\r\n    setQtyNeeded(\"\");\r\n   \r\n  };\r\n  function CustomTextField({ rightIcons, ...props }) {\r\n    return (\r\n      <TextField\r\n        {...props}\r\n        InputProps={{\r\n          endAdornment: rightIcons && (\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"row\", color: \"#000\" }}\r\n            >\r\n              {rightIcons.map((icon, index) => (\r\n                <IconButton key={index}>{icon}</IconButton>\r\n              ))}\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  // Add New Row button click\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      site_ID: site_ID,\r\n      mst_RowID: RowID,\r\n      emp_mst_login_id: emp_mst_login_id,\r\n      selectStock: \"\",\r\n      setDescription: \"\",\r\n      setPartNo:\"\",\r\n      setTotalOh: \"\",\r\n      setQtyNeeded:\"\",\r\n    },\r\n  ]);\r\n  // Add New button funcation\r\n  const addInputField = (event) => {\r\n    event.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.selectStock.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Stock No is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setDescription.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setPartNo === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Part Number is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n          site_ID: site_ID,\r\n          mst_RowID: RowID,\r\n          emp_mst_login_id: emp_mst_login_id,\r\n          selectStock: \"\",\r\n          setDescription: \"\",\r\n          setPartNo:\"\",\r\n          setQtyNeeded:\"\",\r\n          setTotalOh: \"\",\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    if (index !== undefined) {\r\n      rows.splice(index, 1);\r\n    } else {\r\n      rows.splice(1, rows.length);\r\n    }\r\n\r\n    setInputFields(rows);\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    resetData();\r\n    removeInputFields();\r\n  };\r\n  // Clear State data\r\n  const updatedInputFields = inputFields.map((field) => {\r\n    return {\r\n      ...field,\r\n      selectStock: \"\",\r\n      setDescription: \"\",\r\n      setPartNo:\"\",\r\n      setQtyNeeded: \"\",\r\n      setTotalOh:\"\",\r\n\r\n    };\r\n  });\r\n\r\n  const handleEditClick = async () => {\r\n    setModalOpenAsset(true);\r\n  };\r\n\r\n  const handleCloseModal2 = () => {\r\n    setModalOpenAsset(false);\r\n  };\r\n\r\n  // Stock Popup Data Get onclcik\r\n  const handleRowPopupData = async (\r\n    index,\r\n    rowData,\r\n    RowDescp,\r\n    secondRowData\r\n  ) => {\r\n    // Use the row data in the second component\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    if (rowData !== undefined && rowData !== null) {\r\n      setmodalRowDt(rowData);\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_Asset_StockNo_dataMaterial.php?site_cd=\" +\r\n            site_ID +\r\n            \"&itm_mst_stockno=\" +\r\n            rowData\r\n        );\r\n        if (response.data.status === \"SUCCESS\") {\r\n         \r\n          setGetStockNo(response.data.data);\r\n          setStockNo(modalRowDt + \":\" + response.data.data[0].itm_mst_desc);\r\n\r\n          \r\n          const list = [...inputFields];\r\n\r\n          const stockDt = modalRowDt;\r\n          list[index][\"selectStock\"] = stockDt;\r\n          setInputFields(list);\r\n\r\n          const newData = response.data.data[0].itm_mst_desc;\r\n          list[index][\"setDescription\"] = newData;\r\n          setInputFields(list);\r\n\r\n          const newData2 = response.data.data[0].itm_mst_partno;\r\n          list[index][\"setPartNo\"] = newData2;\r\n          setInputFields(list);\r\n\r\n          const newData3 = response.data.data[0].itm_det_ttl_oh;\r\n          list[index][\"setTotalOh\"] = newData3;\r\n          setInputFields(list);\r\n\r\n          Swal.close();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n    if (secondRowData == \"1\") {\r\n      setModalOpenAsset(false);\r\n    }\r\n  };\r\n\r\n  const PopupRowDataSelect = () => {\r\n    if (modalRowDt === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Please select one option!\",\r\n      });\r\n    } else {\r\n      setModalOpenAsset(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setmodalRowDt(\"\");\r\n  };\r\n\r\n  const handleNumericInputChange_14 = (e, setterFunction) => {\r\n    let { value } = e.target;\r\n    value = value.replace(/[^\\d.]/g, ''); // Remove non-numeric characters except decimal\r\n    value = value.slice(0, 14); // Limit to 16 characters including decimals and commas\r\n\r\n    const parts = value.split('.');\r\n    let integerPart = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    if (integerPart.length > 11) {\r\n      integerPart = integerPart.slice(0, 12) + '.' + integerPart.slice(12, 14);\r\n    }\r\n    let decimalPart = parts[1] ? parts[1].slice(0, 2) : '';\r\n\r\n    const formattedValue = decimalPart ? `${integerPart}.${decimalPart}` : integerPart;\r\n    setterFunction(formattedValue); // Set the state for the respective UDFNumber state\r\n   \r\n  };\r\n\r\n  const handleChange = async (index, fieldName, value, event) => {\r\n    const list = [...inputFields];\r\n    if (fieldName == \"setQtyNeeded\") {\r\n      \r\n      handleNumericInputChange_14(event, (value) => {\r\n\r\n        list[index][fieldName] = value;\r\n    \r\n        setInputFields(list);\r\n    \r\n      });\r\n      setQtyNeeded(value);\r\n    } else if(fieldName == \"setPartNo\"){\r\n      list[index][fieldName] = value.slice(0, 16);\r\n      setPartNo(value);\r\n    }else {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n    }\r\n\r\n    // if (fieldName == \"setQtyNeeded\") {\r\n    //   setQtyNeeded(value);\r\n    // }\r\n  };\r\n\r\n  // Submit Data in database\r\n  const handleAddButtonClick = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.selectStock.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Stock No is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setPartNo.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Part Number is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }else if (inputFields.setDescription.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n    //  Swal.showLoading();\r\n      \r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_asset_spares_table_data.php\",\r\n          inputFields\r\n        );\r\n       // console.log(\"response_____sparec__\",response);\r\n\r\n        if (response.data.status === \"SUCCESS\") {\r\n          Swal.close();\r\n          Swal.fire({\r\n            title: \"Asset Spare Request!\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            text: response.data.message,\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            setResult([...Result, inputFields]);\r\n            get_Asset_Spares(site_ID, RowID);\r\n            // console.log(\"inputFields_after\",inputFields);\r\n\r\n            if (result.isConfirmed) {\r\n              // Call the next function when the user clicks the \"OK\" button\r\n\r\n              removeInputFields();\r\n              handleClose();\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handel Update button click\r\n  const handleUpdateButtonClick = async (e) =>{\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    var json_UpdateAsset = {\r\n      site_cd: site_ID,\r\n      PartNo:PartNo.trim(),\r\n      QtyNeeded:QtyNeeded.trim(),\r\n      RowID:RowID2,\r\n      auditUser:emp_mst_login_id,\r\n    }\r\n    console.log(\"json_UpdateAsset____\",json_UpdateAsset);\r\n    //update_asset_Specification\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/update_asset_Spares.php\",\r\n        JSON.stringify(json_UpdateAsset)\r\n      );\r\n    //  console.log(\"json_Asset Data\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n         Swal.close();\r\n        \r\n         Swal.fire({\r\n           icon: \"success\",\r\n           customClass: {\r\n             container: \"swalcontainercustom\",\r\n           },\r\n           title: response.data.status,\r\n           text: response.data.message,\r\n         }).then((result) => {\r\n          setResult([...Result, inputFields]);\r\n          get_Asset_Spares(site_ID, RowID);\r\n    \r\n          if (result.isConfirmed) {\r\n             handleCloseModal();\r\n          }\r\n        });\r\n       }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops somthing is wrong...\",\r\n        text: error,\r\n      });\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div>\r\n        <div style={{ paddingBottom: \"20px\", backgroundColor: \"white\" }}>\r\n          <div\r\n            className=\"template-demo\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div style={{ marginRight: \"5px\" }}>\r\n            <Iconify\r\n                      icon=\"fluent:window-dev-tools-20-regular\"\r\n                      width=\"30px\" height=\"30px\"\r\n                      style={{ fontSize: \"24px\" }}\r\n                    />\r\n            </div>\r\n            <div\r\n              className=\"template-demo\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n              Spares\r\n              </div>\r\n            \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>{renderTableHeader()}</TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={show}\r\n            maxWidth=\"lg\"\r\n            fullWidth\r\n            disableBackdropClick\r\n            sx={{\r\n              width: \"50vw\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <DialogTitle\r\n              sx={{ m: 0, p: 2, display: 'flex', alignItems: 'center' }}\r\n              id=\"customized-dialog-title\"\r\n              className=\"dailogTitWork\"\r\n            >\r\n              <Iconify\r\n              \r\n                icon=\"fluent:window-dev-tools-20-regular\"\r\n                width=\"30px\"\r\n                height=\"30px\"\r\n                style={{ fontSize: \"24px\", marginRight: \"5px\" }} // Add margin-right for spacing\r\n              />\r\n              <div>Add Spares</div> {/* Title */}\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n              }}\r\n            >\r\n              <Iconify icon=\"material-symbols:close\" />\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 WrkOdrMtb\">\r\n                    {inputFields.map((data, index) => {\r\n                      const {\r\n                        selectStock,\r\n                        setDescription,\r\n                        setPartNo,\r\n                        setQtyNeeded,\r\n                        setTotalOh,\r\n                      } = data;\r\n                      return (\r\n                        <div className=\"row my-3 tb\" key={index}>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#2196f3\",\r\n                                  textDecoration: \"underline\",\r\n                                  fontWeight: 600,\r\n                                  fontSize: 16,\r\n                                }}\r\n                              >\r\n                                Line {index + 1}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} sx={{ textAlign: \"right\" }}>\r\n                              {inputFields.length !== 1 && (\r\n                                <Button\r\n                                  className=\"workmarerial_dlt\"\r\n                                  onClick={() => removeInputFields(index)}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faCircleXmark} />\r\n                                </Button>\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            container\r\n                            spacing={1.5}\r\n                            className=\"timeCartPopuplabel\"\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls1_stock_no\") || \"Requiredlabel\"}> {findCustomizeLabel(\"ast_ls1_stock_no\") ||\r\n                                    \"Stock No:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <CustomTextField\r\n                                id=\"outlined-basic\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                value={\r\n                                  data.selectStock != \"\" ? data.selectStock : \"\"\r\n                                }\r\n                                disabled\r\n                                placeholder=\"Select...\"\r\n                                style={{ color: \"#000\" }}\r\n                                rightIcons={[\r\n                                  <Iconify\r\n                                    icon=\"material-symbols:close\"\r\n                                    onClick={handleCancelClick}\r\n                                  />,\r\n                                  <Iconify\r\n                                    icon=\"tabler:edit\"\r\n                                    onClick={handleEditClick}\r\n                                  />,\r\n                                ]}\r\n                              />\r\n                            </Grid>\r\n                            {/* Model stock no  */}\r\n                            <Dialog\r\n                              onClose={handleCloseModal2}\r\n                              aria-labelledby=\"customized-dialog-title\"\r\n                              open={modalOpenAsset}\r\n                              maxWidth=\"lg\"\r\n                              fullWidth\r\n                              disableBackdropClick\r\n                              sx={{\r\n                                width: \"100vw\",\r\n                                marginLeft: \"auto\",\r\n                                marginRight: \"auto\",\r\n                                marginTop: \"20px\",\r\n                              }}\r\n                            >\r\n                              \r\n                              <DialogTitle\r\n                                sx={{ m: 0, p: 2, display: 'flex', alignItems: 'center' }}\r\n                                id=\"customized-dialog-title\"\r\n                                className=\"dailogTitWork\"\r\n                              >\r\n                                <Iconify\r\n                                  icon=\"flowbite:list-outline\"\r\n                                  width=\"30px\"\r\n                                  height=\"30px\"\r\n                                  style={{ fontSize: \"24px\", marginRight: \"5px\" }} // Add margin-right for spacing\r\n                                />\r\n                                <div> Stock</div> {/* Title */}\r\n                              </DialogTitle>\r\n                              <IconButton\r\n                                aria-label=\"close\"\r\n                                onClick={handleCloseModal2}\r\n                                sx={{\r\n                                  position: \"absolute\",\r\n                                  right: 8,\r\n                                  top: 8,\r\n                                  color: (theme) => theme.palette.grey[500],\r\n                                }}\r\n                              >\r\n                                <Iconify icon=\"material-symbols:close\" />\r\n                              </IconButton>\r\n                              <DialogContent dividers>\r\n                                <div\r\n                                  style={{\r\n                                    width: \"100%\",\r\n                                    marginTop: \"15px\",\r\n                                  }}\r\n                                >\r\n                                  <WorkStockNoPopupData\r\n                                    onRowClick={(\r\n                                      rowData,\r\n                                      RowDescp,\r\n                                      secondRowData\r\n                                    ) =>\r\n                                      handleRowPopupData(\r\n                                        index,\r\n                                        rowData,\r\n                                        RowDescp,\r\n                                        secondRowData\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </div>\r\n                              </DialogContent>\r\n                              <DialogActions\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"space-between\",\r\n                                  padding: \"10px\",\r\n                                }}\r\n                              >\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  type=\"button\"\r\n                                  size=\"small\"\r\n                                  startIcon={\r\n                                    <Iconify icon=\"material-symbols:close\" />\r\n                                  }\r\n                                  className=\"Material_Close_btn\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    handleCloseModal2();\r\n                                  }}\r\n                                >\r\n                                  Close\r\n                                </Button>\r\n\r\n                                <div className=\"timeCartSubmit\">\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    size=\"small\"\r\n                                    className=\"Material_Submit_btn\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      PopupRowDataSelect();\r\n                                    }}\r\n                                    style={{ marginLeft: \"5px\" }}\r\n                                  >\r\n                                    Select\r\n                                  </Button>\r\n                                </div>\r\n                              </DialogActions>\r\n                            </Dialog>\r\n                            {/* End of stock model */}\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                md={4}\r\n                                style={{ padding: \"10px\" }}\r\n                              >\r\n                                <label className={findCustomizerequiredLabel(\"ast_ls1_varchar1\") || \"Requiredlabel\"}>{findCustomizeLabel(\"ast_ls1_varchar1\") ||\r\n                                    \"Part Number:\"}</label>\r\n                              </Grid>\r\n                              <Grid item xs={12} md={8}>\r\n                                <TextField\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  className=\"Extrasize\"\r\n                                  fullWidth\r\n                                \r\n                                  value={data.setPartNo.toUpperCase()}\r\n                                  // onChange={(e) => {\r\n                                  //   // setActualHour(e.target.value);\r\n                                  // }}\r\n                                 \r\n                                  onChange={(e) =>\r\n                                    handleChange(index, 'setPartNo', e.target.value)\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                md={4}\r\n                                style={{ padding: \"10px\" }}\r\n                              >\r\n                                <label className={findCustomizerequiredLabel(\"ast_ls1_desc\")}>{findCustomizeLabel(\"ast_ls1_desc\") ||\r\n                                    \"Description:\"}</label>\r\n                              </Grid>\r\n                              <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  type=\"text\"\r\n                                  className=\"Extrasize\"\r\n                                  fullWidth\r\n                                  value={\r\n                                    data.setDescription != \"\"\r\n                                      ? data.setDescription\r\n                                      : \"\"\r\n                                  }\r\n                                \r\n                                \r\n                                />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                md={4}\r\n                                style={{ padding: \"10px\" }}\r\n                              >\r\n                                <label className={findCustomizerequiredLabel(\"ast_ls1_qty_needed\")}>{findCustomizeLabel(\"ast_ls1_qty_needed\") ||\r\n                                    \"Quantity Needed:\"}</label>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  className=\"Extrasize\"\r\n                                  type=\"text\"\r\n                                  fullWidth\r\n                                  value={setQtyNeeded}\r\n                                  onChange={(event) =>\r\n                                    handleChange(\r\n                                      index,\r\n                                      \"setQtyNeeded\",\r\n                                      event.target.value,\r\n                                      event\r\n                                    )\r\n                                  }\r\n                                  InputProps={{\r\n                                    inputProps: { style: { textAlign: 'right' } }\r\n                                    }}\r\n                                  placeholder=\".000\"\r\n                                />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                md={4}\r\n                                style={{ padding: \"10px\" }}\r\n                              >\r\n                                <label className={findCustomizerequiredLabel(\"ast_ls1_ttl_oh\")}>{findCustomizeLabel(\"ast_ls1_ttl_oh\") ||\r\n                                    \"Total OH:\"}</label>\r\n                              </Grid>\r\n                              <Grid item xs={12} md={8}>\r\n                                <TextField\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  className=\"Extrasize\"\r\n                                  fullWidth\r\n                                  value={\r\n                                    data.setTotalOh != \"\"\r\n                                      ? data.setTotalOh\r\n                                      : \"\"\r\n                                  }\r\n                                  onChange={(e) => {\r\n                                    // setActualHour(e.target.value);\r\n                                  }}\r\n                                />\r\n                              \r\n                              </Grid>\r\n\r\n                              \r\n                            </Grid>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </DialogContent>\r\n              <DialogActions\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                \r\n                <Button\r\n                      variant=\"soft\"\r\n                      color=\"error\"\r\n                      className=\"CloseButton\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        handleClose();\r\n                      }}\r\n                      startIcon={<Iconify icon=\"jam:close\" />}\r\n                    >\r\n                      Close\r\n                </Button>\r\n\r\n                <div className=\"timeCartSubmit\" style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  \r\n                  <Button\r\n                  \r\n                  variant=\"contained\"\r\n                  className='AddNewButton'\r\n                  startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                  onClick={addInputField}\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n              \r\n              Add\r\n                </Button>\r\n                  \r\n                  <Button\r\n                  variant=\"contained\"\r\n                  className=\"SaveButton assetSpares\"\r\n                  startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                  style={{\r\n                    backgroundColor: \"#4CAF50\",\r\n                    color: \"white\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                  onClick={handleAddButtonClick}\r\n                  \r\n                >\r\n                  Save\r\n                </Button>\r\n                </div>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"button\"\r\n              className=\"tabAddButton\"\r\n              onClick={handleShow}\r\n            >\r\n              + Add Spares\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n      {/*  Row Click to open model popup */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showModal}\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n         \r\n          <Iconify\r\n                      icon=\"fluent:window-dev-tools-20-regular\"\r\n                      width=\"25px\" height=\"25px\"\r\n                      style={{fontSize: \"24px\", marginRight: \"5px\"  }}\r\n                    />\r\n          <div>Update Spares</div> {/* Title */}\r\n        </DialogTitle>\r\n\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseModal}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginTop: \"15px\",\r\n            }}\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 WrkOdrMtb\">\r\n         \r\n                 \r\n                    <div className=\"row my-3 tb\">\r\n                    \r\n                      <Grid\r\n                        container\r\n                        spacing={1.5}\r\n                        className=\"timeCartPopuplabel\"\r\n                      >\r\n                        <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                        <label className={findCustomizerequiredLabel(\"ast_ls1_stock_no\") || \"Requiredlabel\"}> {findCustomizeLabel(\"ast_ls1_stock_no\") ||\r\n                                    \"Stock No:\"}</label>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"Extrasize\"\r\n                            fullWidth\r\n                            disabled\r\n                            value={StockNo}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                        <label className={findCustomizerequiredLabel(\"ast_ls1_varchar1\") || \"Requiredlabel\"}>{findCustomizeLabel(\"ast_ls1_varchar1\") ||\r\n                                    \"Part Number:\"}</label>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={8}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"Extrasize\"\r\n                            fullWidth\r\n                            value={PartNo}\r\n                           // onChange={(event) => setPartNo(event.target.value)}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              if (value.length <= 25 ) {\r\n                                setPartNo(value);\r\n                              }\r\n                              \r\n                              }}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                        <label className={findCustomizerequiredLabel(\"ast_ls1_desc\")}>{findCustomizeLabel(\"ast_ls1_desc\") ||\r\n                                    \"Description:\"}</label>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} md={8}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"Extrasize\"\r\n                            fullWidth\r\n                            disabled\r\n                            value={Description}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                        <label className={findCustomizerequiredLabel(\"ast_ls1_qty_needed\")}>{findCustomizeLabel(\"ast_ls1_qty_needed\") ||\r\n                                    \"Quantity Needed:\"}</label>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} md={8}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            type=\"text\"\r\n                            className=\"Extrasize\"\r\n                            fullWidth\r\n                            value={QtyNeeded}\r\n                           // onChange={(event) => setQtyNeeded(event.target.value)}\r\n                            onChange={(e) => handleNumericInputChange_14(e, setQtyNeeded)}\r\n                            InputProps={{\r\n                              inputProps: { style: { textAlign: 'right' } }\r\n                            }}\r\n                          />\r\n                        \r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                        <label className={findCustomizerequiredLabel(\"ast_ls1_ttl_oh\")}>{findCustomizeLabel(\"ast_ls1_ttl_oh\") ||\r\n                            \"Total OH:\"}</label>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} md={8}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"Extrasize\"\r\n                            fullWidth\r\n                            disabled\r\n                            value={TotalOh}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  \r\n              \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"soft\"\r\n            color=\"error\"\r\n            className=\"CloseButton\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleCloseModal();\r\n            }}\r\n            startIcon={<Iconify icon=\"jam:close\" />}\r\n          >\r\n            Close\r\n          </Button>\r\n\r\n          <div\r\n            className=\"timeCartSubmit\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"SaveButton assetSpares\"\r\n              startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                color: \"white\",\r\n                marginRight: \"10px\",\r\n              }}\r\n              onClick={handleUpdateButtonClick}\r\n            >\r\n              Save\r\n            </Button>\r\n           \r\n          </div>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssetSpares;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\n//import WorkStockNoPopupData from \"./WorkStockNoPopupData\";\r\nimport WorkStockNoPopupData from \"src/sections/maintenance/component_module/Planning/WorkStockNoPopupData\";\r\n//import logo from \"../../../../assets/img/screw.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AssetSpecification = ({ onRowClick, data }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [MaterialOrderResult, setMaterialOrderResult] = React.useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setInputFields(updatedInputFields);\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [StockNo, setStockNo] = useState([]);\r\n  const [selected_StockNo, setSelected_StockNo] = useState([]);\r\n\r\n  const [StockLocation, setStockLocation] = useState([]);\r\n  const [selected_StockLocation, setSelected_StockLocation] = useState([]);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [PartNo, setPartNo] = useState(\"\");\r\n  const [TotalOh, setTotalOh] = useState(\"\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(data.RowID);\r\n  const [RowID2, setRowID2] = useState(\"\");\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(data.WorkOrderNo);\r\n  const [selected_Charge_Cost_Center, setselected_Charge_Cost_Center] =\r\n    useState(data.selected_Charge_Cost_Center);\r\n\r\n  //const [AssetNo, setAssetNo] = useState(data.Asset_No.split(' : ')[0]);\r\n  const [getDescription, setGetDescription] = useState();\r\n  const [UOM, setUOM] = useState(\"\");\r\n  const [Rating,setRating] = useState(\"\");\r\n  const [ItemCost, setItemCost] = useState(\"\");\r\n  const [MaterialRequestNo, setMaterialRequestNo] = useState(\"\");\r\n  const [MrLineNo, setMrLineNo] = useState(\"\");\r\n  const [MrApprovalStatus, setMrApprovalStatus] = useState(\"\");\r\n  const [ActualQuantity, setActualQuantity] = useState(\"\");\r\n  const [ContractPoNo, setContractPoNo] = useState(\"\");\r\n  const [ContractPoLine, setContractPoLine] = useState(\"\");\r\n  const [getStockNo, setGetStockNo] = useState([]);\r\n  //const [modalOpenAsset, setModalOpenAsset] = useState(false);\r\n  const [modalRowDt, setmodalRowDt] = useState(\"\");\r\n  const [UsageUOM, setUsageUOM] = useState([]);\r\n  const [selectedUom, setSelectedUom] = useState([]);\r\n  const [MeterInstallDate, setMeterInstallDate] = useState(new Date());\r\n  const [UsageDate, setUsageDate] = useState(new Date());\r\n  const [MeterID, setMeterID] = useState();\r\n  const [Selected_UsageUOM, setSelected_UsageUOM] = useState([]);\r\n\r\n  const [astRetLabel, setRetLabel] = useState([]);\r\n\r\n  const [AssetSpecificationMandatoryFiled, setAssetSpecificationMandatoryFiled] = useState([]);\r\n\r\n  useEffect(() => {\r\n    get_Asset_Specification(site_ID, RowID);\r\n    getSpecificationUOM(site_ID);\r\n    getAssetSpecificationFromLebel();\r\n    getAssetSpecificationMandatoryfiled();\r\n  }, [location]);\r\n\r\n  // First Api\r\n  const get_Asset_Specification = async (site_ID, RowID) => {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n   \r\n      const response = await httpCommon.get(\r\n        `/get_asset_specification.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n      // console.log(\"response____Asset_Specfication___\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n        Swal.close();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  // Get UOM\r\n  const getSpecificationUOM = async () => {\r\n    try {\r\n     // console.log(\"ht again_____\");\r\n      const response = await httpCommon.get(\r\n        `/getSpecificationUOM.php?site_cd=${site_ID}`\r\n      );\r\n      //console.log(\"response____Asset_Usage___\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setUsageUOM(response.data.data.result);\r\n        let UOMLIST = response.data.data.result.map((item) => ({\r\n          label: item.uom_mst_uom + \" : \" + item.uom_mst_desc,\r\n          value: item.uom_mst_desc,\r\n          key: item.uom_mst_uom,\r\n        }));\r\n        setUsageUOM(UOMLIST);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  // Get All Filed label Name\r\nconst getAssetSpecificationFromLebel = async () => {\r\n  try {\r\n    const response = await httpCommon.get(\"/get_asset_specification_form_lebel.php\");\r\n   \r\n    if (response.data.status === \"SUCCESS\") {\r\n      setRetLabel(response.data.data.ast_rat);\r\n      //setAstdetLabel(response.data.data.ast_ls2);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n};\r\n\r\nconst getAssetSpecificationMandatoryfiled = async () => {\r\n  try {\r\n    const response = await httpCommon.get(\"/get_asset_specification_from_mandatory_filed.php\");\r\n    \r\n    if (response.data && response.data.data && response.data.data.MandatoryField) {\r\n\r\n      if (response.data.data.MandatoryField.length > 0) {\r\n        \r\n        setAssetSpecificationMandatoryFiled(response.data.data.MandatoryField);\r\n\r\n      }\r\n\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n};\r\n\r\nconst findCustomizeLabel = (columnName) => {\r\n  if (!Array.isArray(astRetLabel)) return \"\";\r\n  const matchingColumn = astRetLabel.find(\r\n    (item) => item.column_name === columnName\r\n  );\r\n  return matchingColumn ? matchingColumn.customize_label : \"\";\r\n\r\n};\r\n\r\nconst findCustomizerequiredLabel = (columnName) => {\r\n  const foundItem = AssetSpecificationMandatoryFiled.find(item => item.column_name === columnName);\r\n  if (foundItem && foundItem.cf_label_required === \"1\") {\r\n      return \"Requiredlabel\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\n\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      textAlign: \"left\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  //Body\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index} onClick={(event) => handleRowClick(result, event)}\r\n      style={{ cursor: \"pointer\", transition: \"background-color 0.3s\" }}\r\n      // Add hover effect\r\n      onMouseEnter={(event) => event.currentTarget.style.backgroundColor = \"#f0f0f0\"}\r\n      onMouseLeave={(event) => event.currentTarget.style.backgroundColor = \"transparent\"}\r\n      >\r\n        <TableCell style={{ padding: \"5px 15px\", textAlign: \"left\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px 15px\", textAlign: \"left\" }}>\r\n          {result.ast_rat_desc}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px 15px\", textAlign: \"left\" }}>\r\n          {result.ast_rat_rating}\r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px 15px\", textAlign: \"left\" }}>\r\n          {result.ast_rat_uom}\r\n        </TableCell>\r\n      </TableRow>\r\n    ));\r\n  };\r\n  const handleRowClick = (data) => {\r\n   \r\n    setGetDescription(data.ast_rat_desc);\r\n    setRating(data.ast_rat_rating);\r\n    setUOM(data.ast_rat_uom);\r\n    setRowID2(data.RowID);\r\n    \r\n    setShowModal(true);\r\n  };\r\n  const resetData = () => {\r\n    setSelected_StockNo(\"\");\r\n    setPartNo(\"\");\r\n    setTotalOh(\"\");\r\n    setmodalRowDt(\"\");\r\n    setDescription(\"\");\r\n    setQtyNeeded(\"\");\r\n  };\r\n\r\n  // Add New Row button click\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      site_ID: site_ID,\r\n      mst_RowID: RowID,\r\n      emp_mst_login_id: emp_mst_login_id,\r\n      ast_rat_uom: \"\",\r\n      ast_rat_rating: \"\",\r\n      ast_rat_desc: \"\",\r\n    },\r\n  ]);\r\n  // Add New button funcation\r\n  const addInputField = (event) => {\r\n    event.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.ast_rat_desc.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n          site_ID: site_ID,\r\n          mst_RowID: RowID,\r\n          emp_mst_login_id: emp_mst_login_id,\r\n          ast_rat_uom: \"\",\r\n          ast_rat_desc: \"\",\r\n          ast_rat_rating: \"\",\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    if (index !== undefined) {\r\n      rows.splice(index, 1);\r\n    } else {\r\n      rows.splice(1, rows.length);\r\n    }\r\n\r\n    setInputFields(rows);\r\n  };\r\n  \r\n  // Clear State data\r\n  const updatedInputFields = inputFields.map((field) => {\r\n    return {\r\n      ...field,\r\n      ast_rat_uom: \"\",\r\n      ast_rat_desc: \"\",\r\n      ast_rat_rating: \"\",\r\n    };\r\n  });\r\n\r\n  const handleChange = async (index, fieldName, value) => {\r\n    const list = [...inputFields];\r\n    if (fieldName == \"ast_rat_desc\") {\r\n      list[index][fieldName] = value.slice(0, 255);\r\n      setInputFields(list);\r\n     \r\n    } else if (fieldName == \"ast_rat_rating\") {\r\n      list[index][fieldName] = value.slice(0, 10);\r\n      setInputFields(list);\r\n     \r\n    } else {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n    }\r\n    if (fieldName == \"ast_rat_uom\") {\r\n      //setSelected_ChargeCostCenter(value);\r\n      setSelected_UsageUOM(value);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    resetData();\r\n    removeInputFields();\r\n  };\r\n  // Submit Data in database\r\n  const handleAddButtonClick = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.ast_rat_desc.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n        Swal.showLoading();\r\n      // console.log(\"inputFields____post\",inputFields);\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_asset_specification_table_data.php\",\r\n          inputFields\r\n        );\r\n      //  console.log(\"inputFields____postAfter22\", response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          Swal.close();\r\n          Swal.fire({\r\n            title: \"Asset Specification Request!\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            text: response.data.message,\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            setResult([...Result, inputFields]);\r\n            get_Asset_Specification(site_ID, RowID);\r\n            // console.log(\"inputFields_after\",inputFields);\r\n\r\n            if (result.isConfirmed) {\r\n              // Call the next function when the user clicks the \"OK\" button\r\n\r\n              removeInputFields();\r\n              handleClose();\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n  };\r\n  //Sum calculation\r\n  const handleUpdateButtonClick = async (e) =>{\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    var json_UpdateAsset = {\r\n      site_cd: site_ID,\r\n      getDescription:getDescription.trim(),\r\n      Rating:Rating.trim(),\r\n      UOM:UOM,\r\n      RowID:RowID2,\r\n      auditUser:emp_mst_login_id,\r\n    }\r\n    //update_asset_Specification\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/update_asset_specification.php\",\r\n        JSON.stringify(json_UpdateAsset)\r\n      );\r\n     // console.log(\"json_Asset Data\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n         Swal.close();\r\n        \r\n        \r\n         Swal.fire({\r\n           icon: \"success\",\r\n           customClass: {\r\n             container: \"swalcontainercustom\",\r\n           },\r\n           title: response.data.status,\r\n           text: response.data.message,\r\n         }).then((result) => {\r\n          setResult([...Result, inputFields]);\r\n          get_Asset_Specification(site_ID, RowID);\r\n    \r\n          if (result.isConfirmed) {\r\n             handleCloseModal();\r\n          }\r\n        });\r\n       }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops somthing is wrong...\",\r\n        text: error,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div style={{ paddingBottom: \"20px\", backgroundColor: \"white\" }}>\r\n          <div\r\n            className=\"template-demo\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div style={{ marginRight: \"10px\" }}>\r\n              <Iconify\r\n                icon=\"mdi:axis-arrow-info\"\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                style={{ fontSize: \"30px\" }}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"template-demo\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n                Specification\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>{renderTableHeader()}</TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={show}\r\n            maxWidth=\"lg\"\r\n            fullWidth\r\n            disableBackdropClick\r\n            sx={{\r\n              width: \"50vw\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <DialogTitle\r\n              sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n              id=\"customized-dialog-title\"\r\n              className=\"dailogTitWork\"\r\n            >\r\n              <Iconify\r\n                icon=\"mdi:axis-arrow-info\"\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                style={{ fontSize: \"24px\", marginRight: \"5px\" }} // Add margin-right for spacing\r\n              />\r\n              <div>Add Specification</div> {/* Title */}\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n              }}\r\n            >\r\n              <Iconify icon=\"material-symbols:close\" />\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 WrkOdrMtb\">\r\n                    {inputFields.map((data, index) => {\r\n                      const { ast_rat_uom, ast_rat_desc, ast_rat_rating } =\r\n                        data;\r\n                      return (\r\n                        <div className=\"row my-3 tb\" key={index}>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#2196f3\",\r\n                                  textDecoration: \"underline\",\r\n                                  fontWeight: 600,\r\n                                  fontSize: 16,\r\n                                }}\r\n                              >\r\n                                Line {index + 1}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} sx={{ textAlign: \"right\" }}>\r\n                              {inputFields.length !== 1 && (\r\n                                <Button\r\n                                  className=\"workmarerial_dlt\"\r\n                                  onClick={() => removeInputFields(index)}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faCircleXmark} />\r\n                                </Button>\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            container\r\n                            spacing={1.5}\r\n                            className=\"timeCartPopuplabel\"\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n          \r\n                              <label className={findCustomizerequiredLabel(\"ast_rat_desc\") || \"Requiredlabel\"}> {findCustomizeLabel(\"ast_rat_desc\") ||\r\n                                    \"Description:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextareaAutosize\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                minRows={2.9}\r\n                                className=\"TxtAra\"\r\n                                style={{ width: '100%' }} \r\n                                fullWidth\r\n                                value={ast_rat_desc}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_rat_desc\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_rat_rating\") }> {findCustomizeLabel(\"ast_rat_rating\") ||\r\n                                    \"Rating:\"}</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={ast_rat_rating}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_rat_rating\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                            \r\n                              <label className={findCustomizerequiredLabel(\"ast_rat_uom\")}> {findCustomizeLabel(\"ast_rat_uom\") ||\r\n                                    \"UOM:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={UsageUOM}\r\n                                value={data.ast_rat_uom}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(index, \"ast_rat_uom\", newValue)\r\n                                }\r\n                                disableAnimation\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"soft\"\r\n                color=\"error\"\r\n                className=\"CloseButton\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleClose();\r\n                }}\r\n                startIcon={<Iconify icon=\"jam:close\" />}\r\n              >\r\n                Close\r\n              </Button>\r\n\r\n              <div\r\n                className=\"timeCartSubmit\"\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"AddNewButton\"\r\n                  startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                  onClick={addInputField}\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  Add\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"SaveButton assetSpares\"\r\n                  startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                  style={{\r\n                    backgroundColor: \"#4CAF50\",\r\n                    color: \"white\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                  onClick={handleAddButtonClick}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <Button\r\n            \r\n            type=\"button\"\r\n            className=\"tabAddButton\"\r\n            onClick={handleShow}\r\n          >\r\n            + Add Specification\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {/*  Row Click to open model popup */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showModal}\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify\r\n            icon=\"mdi:axis-arrow-info\"\r\n            width=\"25px\"\r\n            height=\"25px\"\r\n            style={{ fontSize: \"24px\", marginRight: \"5px\" }} // Add margin-right for spacing\r\n          />\r\n          <div>Update Specification</div> {/* Title */}\r\n        </DialogTitle>\r\n\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseModal}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginTop: \"15px\",\r\n            }}\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 WrkOdrMtb\">\r\n         \r\n                 \r\n                    <div className=\"row my-3 tb\">\r\n                    \r\n                      <Grid\r\n                        container\r\n                        spacing={1.5}\r\n                        className=\"timeCartPopuplabel\"\r\n                      >\r\n                        <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                        <label className={findCustomizerequiredLabel(\"ast_rat_desc\") || \"Requiredlabel\"}> {findCustomizeLabel(\"ast_rat_desc\") ||\r\n                             \"Description:\"}</label>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"Extrasize\"\r\n                            fullWidth\r\n                            value={getDescription}\r\n                           // onChange={(event) => setGetDescription(event.target.value)}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              if (value.length <= 255) {\r\n                                setGetDescription(value);\r\n                              }\r\n                              \r\n                              }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                        <label className={findCustomizerequiredLabel(\"ast_rat_rating\") }> {findCustomizeLabel(\"ast_rat_rating\") ||\r\n                                    \"Rating:\"}</label>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={8}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"Extrasize\"\r\n                            fullWidth\r\n                            value={Rating}\r\n                           // onChange={(event) => setRating(event.target.value)}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              if (value.length <= 10) {\r\n                                setRating(value);\r\n                              }\r\n                              \r\n                              }}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                        <label className={findCustomizerequiredLabel(\"ast_rat_uom\")}> {findCustomizeLabel(\"ast_rat_uom\") ||\r\n                                    \"UOM:\"}</label>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} md={8}>\r\n                          <Autocomplete\r\n                            options={UsageUOM}\r\n                            value={UOM}\r\n                           \r\n                            onChange={(event, newValue) => setUOM(newValue)}\r\n                            disableAnimation\r\n                          //  getOptionLabel={(option) => option.label}\r\n                            \r\n                            renderInput={(params) => (\r\n                              <div>\r\n                                <TextField\r\n                                  {...params}\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  className=\"Extrasize\"\r\n                                />\r\n                              </div>\r\n                            )}\r\n                         \r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  \r\n              \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"soft\"\r\n            color=\"error\"\r\n            className=\"CloseButton\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleCloseModal();\r\n            }}\r\n            startIcon={<Iconify icon=\"jam:close\" />}\r\n          >\r\n            Close\r\n          </Button>\r\n\r\n          <div\r\n            className=\"timeCartSubmit\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"SaveButton assetSpares\"\r\n              startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                color: \"white\",\r\n                marginRight: \"10px\",\r\n              }}\r\n              onClick={handleUpdateButtonClick}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssetSpecification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Iconify from \"src/components/iconify\";\r\n//import WorkStockNoPopupData from \"./WorkStockNoPopupData\";\r\nimport WorkStockNoPopupData from \"src/sections/maintenance/component_module/Planning/WorkStockNoPopupData\";\r\n//import logo from \"../../../../assets/img/screw.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\n\r\nimport httpCommon from \"src/http-common\";\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\nconst AssetUsage = ({ onRowClick, data }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [MaterialOrderResult, setMaterialOrderResult] = React.useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setInputFields(updatedInputFields);\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [StockNo, setStockNo] = useState([]);\r\n  const [selected_StockNo, setSelected_StockNo] = useState([]);\r\n\r\n  const [StockLocation, setStockLocation] = useState([]);\r\n  const [selected_StockLocation, setSelected_StockLocation] = useState([]);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [PartNo, setPartNo] = useState(\"\");\r\n  const [TotalOh, setTotalOh] = useState(\"\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(data.RowID);\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(data.WorkOrderNo);\r\n  const [selected_Charge_Cost_Center, setselected_Charge_Cost_Center] =\r\n    useState(data.selected_Charge_Cost_Center);\r\n\r\n  //const [AssetNo, setAssetNo] = useState(data.Asset_No.split(' : ')[0]);\r\n  const [AssetNo, setAssetNo] = useState();\r\n  const [UOM, setUOM] = useState(\"\");\r\n  const [ItemCost, setItemCost] = useState(\"\");\r\n  const [MaterialRequestNo, setMaterialRequestNo] = useState(\"\");\r\n  const [MrLineNo, setMrLineNo] = useState(\"\");\r\n  const [MrApprovalStatus, setMrApprovalStatus] = useState(\"\");\r\n  const [ActualQuantity, setActualQuantity] = useState(\"\");\r\n  const [ContractPoNo, setContractPoNo] = useState(\"\");\r\n  const [ContractPoLine, setContractPoLine] = useState(\"\");\r\n  const [getStockNo, setGetStockNo] = useState([]);\r\n  //const [modalOpenAsset, setModalOpenAsset] = useState(false);\r\n  const [modalRowDt, setmodalRowDt] = useState(\"\");\r\n\r\n  const [MeterInstallDate, setMeterInstallDate] = useState(new Date());\r\n  const [UsageDate, setUsageDate] = useState(new Date());\r\n \r\n  const [Selected_UsageUOM, setSelected_UsageUOM] = useState([]);\r\n\r\n\r\n  const [MeterID, setMeterID] = useState();\r\n  const [UsageUOM, setUsageUOM] = useState([]);\r\n  const [selectedUom, setSelectedUom] = useState([]);\r\n  const [TotalRunning, setTotalRunning] = useState(false);\r\n  const [MeterPoint, setMeterPoint] = useState(\"\");\r\n  const [AstLs2Desc,setAstLs2Desc] = useState(\"\");\r\n  const [GetMasterInstallDate, setgetMasterInstallDate] = useState('');\r\n  const [GetUsageDate, setgetUsageDate] = useState('');\r\n  const [GetUsageReading,setGetUsageReading] = useState(\"\");\r\n  const [AvgUsage, setAvgUsage] = useState(\"\");\r\n  const [MeterInstalledUsage,setMeterInstalledUsage] = useState(\"\");\r\n  const [LtdUsage, setLtdUsage] = useState(\"\");\r\n  const [Maxavgusage,setMaxavgusage] = useState(\"\");\r\n  const [GetWarrantyUsage, setWarrantyUsage] = useState(\"\");\r\n  const [GetMeterMaximum,setGetMeterMaximum] = useState(\"\");\r\n  const [MeterInstallWO,setMeterInstallWO] = useState(\"\");\r\n  const [AlertROFlag,setAlertROFlag] = useState(null);\r\n  const [AlertMAFlag,setAlertMAFlag] = useState(null);\r\n  const [RowID2,setRowID2] = useState(\"\");\r\n\r\n  const [astls2Label, setAstls2Label] = useState([]);\r\n\r\n  const [AssetUsageMandatoryFiled, setAssetUsageMandatoryFiled] = useState([]);\r\n  const [errorField, setErrorField] = useState(null);\r\n\r\n  \r\n  useEffect(() => {\r\n    get_Asset_Usage(site_ID, RowID);\r\n    getUsageUOM(site_ID);\r\n    getAssetUsageFromLebel();\r\n    getAssetUsageMandatoryfiled();\r\n    // get_workorder_status(site_ID, \"All\", location.state.select);\r\n  }, [location]);\r\n\r\n  // First Api\r\n  const get_Asset_Usage = async (site_ID, RowID) => {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_asset_usage.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n      // console.log(\"response____Asset_Spares___\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n        Swal.close();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  // Get UOM\r\n  const getUsageUOM = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/getUsageUOM.php?site_cd=${site_ID}`\r\n      );\r\n      //    console.log(\"response____Asset_Usage___\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setUsageUOM(response.data.data.result);\r\n        let UOMLIST = response.data.data.result.map((item) => ({\r\n          label: item.uom_mst_uom + \" : \" + item.uom_mst_desc,\r\n          value: item.uom_mst_desc,\r\n          key: item.uom_mst_uom,\r\n        }));\r\n        setUsageUOM(UOMLIST);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Get All Filed label Name\r\nconst getAssetUsageFromLebel = async () => {\r\n  try {\r\n    const response = await httpCommon.get(\"/get_asset_spares_and_usage_from_lebal.php\");\r\n    // console.log(\"response____getLabel\",response);\r\n    if (response.data.status === \"SUCCESS\") {\r\n      setAstls2Label(response.data.data.ast_ls2);\r\n      //setAstdetLabel(response.data.data.ast_ls2);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n};\r\n  // Get All Filed label Name\r\n  const getAssetUsageMandatoryfiled = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\"/get_asset_spares_and_usage_from_mandatory_filed.php\");\r\n      \r\n      if (response.data && response.data.data && response.data.data.MandatoryField) {\r\n\r\n        if (response.data.data.MandatoryField.length > 0) {\r\n          \r\n          setAssetUsageMandatoryFiled(response.data.data.MandatoryField);\r\n  \r\n        }\r\n  \r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const findCustomizeLabel = (columnName) => {\r\n    if (!Array.isArray(astls2Label)) return \"\";\r\n    const matchingColumn = astls2Label.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n  \r\n  };\r\n  \r\n  const findCustomizerequiredLabel = (columnName) => {\r\n    const foundItem = AssetUsageMandatoryFiled.find(item => item.column_name === columnName);\r\n    if (foundItem && foundItem.cf_label_required === \"1\") {\r\n        return \"Requiredlabel\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      textAlign: \"center\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const formatDateTime = (dateTimeString) => {\r\n    if (!dateTimeString) return \"No date available\"; \r\n\r\n    const dateObj = new Date(dateTimeString);\r\n    const timeZoneOffset = dateObj.getTimezoneOffset(); // Get the time zone offset in minutes\r\n    const utcDate = new Date(dateObj.getTime() - timeZoneOffset * 60000); // Adjust date to UTC\r\n\r\n    // Format the date\r\n    const formattedDate = utcDate.toISOString().slice(0, 16).replace(\"T\", \" \");\r\n\r\n    return formattedDate;\r\n};\r\n\r\n  //Body\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow\r\n        key={index}\r\n        onClick={(event) => handleRowClick(result, event)}\r\n        style={{ cursor: \"pointer\", transition: \"background-color 0.3s\" }}\r\n        onMouseEnter={(event) =>\r\n          (event.currentTarget.style.backgroundColor = \"#f0f0f0\")\r\n        }\r\n        onMouseLeave={(event) =>\r\n          (event.currentTarget.style.backgroundColor = \"transparent\")\r\n        }\r\n      >\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_meter_id}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_usage_uom}\r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          <FormControlLabel\r\n            value=\"top\"\r\n            \r\n            control={\r\n              <Checkbox\r\n                checked={result.ast_ls2_incr_usage_flag === \"Y\"}\r\n                \r\n              />\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_meter_point}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_meter_desc}\r\n        </TableCell>\r\n\r\n        {result.ast_ls2_meter_install_date &&\r\n        result.ast_ls2_meter_install_date.date ? (\r\n          <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n            {formatDateTime(result.ast_ls2_meter_install_date.date)}\r\n          </TableCell>\r\n        ) : (\r\n          <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n            {/* Render empty value */}\r\n          </TableCell>\r\n        )}\r\n        {result.ast_ls2_usage_date && result.ast_ls2_usage_date.date ? (\r\n          <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n            {formatDateTime(result.ast_ls2_usage_date.date)}\r\n          </TableCell>\r\n        ) : (\r\n          <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n            {/* Render empty value */}\r\n          </TableCell>\r\n        )}\r\n     \r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_usage_reading}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_avg_usage}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_old_ltd_usage}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_ltd_usage}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_max_avg_usage}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_warranty_usage}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_meter_maximum}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          <FormControlLabel\r\n            value=\"top\"\r\n            \r\n            control={\r\n              <Checkbox\r\n                checked={result.ast_ls2_alert_ma_flag === \"Y\"}\r\n                \r\n              />\r\n            }\r\n          />\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          <FormControlLabel\r\n            value=\"top\"\r\n            \r\n            control={\r\n              <Checkbox\r\n                checked={result.ast_ls2_alert_ro_flag === \"Y\"}\r\n                \r\n              />\r\n            }\r\n          />\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_ls2_meter_install_wo}\r\n        </TableCell>\r\n      </TableRow>\r\n    ));\r\n  };\r\n  const handleRowClick = (data) => {\r\n   // console.log(\"clickRow__\", data);\r\n    setRowID2(data.RowID);\r\n    setMeterID(data.ast_ls2_meter_id);\r\n    setSelectedUom(data.ast_ls2_usage_uom);\r\n    setTotalRunning(data.ast_ls2_incr_usage_flag);\r\n    setMeterPoint(data.ast_ls2_meter_point);\r\n    setAstLs2Desc(data.ast_ls2_meter_desc);\r\n    setgetMasterInstallDate(data.ast_ls2_meter_install_date);\r\n    setgetUsageDate(data.ast_ls2_usage_date);\r\n    setGetUsageReading(data.ast_ls2_usage_reading);\r\n    setAvgUsage(data.ast_ls2_max_avg_usage);\r\n    setMeterInstalledUsage(data.ast_ls2_old_ltd_usage);\r\n    setLtdUsage(data.ast_ls2_old_ltd_usage);\r\n    setMaxavgusage(data.ast_ls2_max_avg_usage);\r\n    setWarrantyUsage(data.ast_ls2_warranty_usage);\r\n    setGetMeterMaximum(data.ast_ls2_meter_maximum);\r\n    setMeterInstallWO(data.ast_ls2_meter_install_wo);\r\n    setAlertROFlag(data.ast_ls2_alert_ro_flag);\r\n    setAlertMAFlag(data.ast_ls2_alert_ma_flag);\r\n\r\n    setShowModal(true);\r\n  };\r\n  const resetData = () => {\r\n    setSelected_StockNo(\"\");\r\n    setPartNo(\"\");\r\n    setTotalOh(\"\");\r\n    setmodalRowDt(\"\");\r\n    setDescription(\"\");\r\n    setQtyNeeded(\"\");\r\n  };\r\n  function CustomTextField({ rightIcons, ...props }) {\r\n    return (\r\n      <TextField\r\n        {...props}\r\n        InputProps={{\r\n          endAdornment: rightIcons && (\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"row\", color: \"#000\" }}\r\n            >\r\n              {rightIcons.map((icon, index) => (\r\n                <IconButton key={index}>{icon}</IconButton>\r\n              ))}\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  // Add New Row button click\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      site_ID: site_ID,\r\n      mst_RowID: RowID,\r\n      emp_mst_login_id: emp_mst_login_id,\r\n      ast_ls2_usage_uom: \"\",\r\n      ast_ls2_meter_desc: \"\",\r\n      ast_ls2_usage_date: UsageDate,\r\n      ast_ls2_usage_reading: \"0.00\",\r\n      ast_ls2_avg_usage: \"0.00\",\r\n      ast_ls2_old_ltd_usage: \"\",\r\n      ast_ls2_ltd_usage: \"0.00\",\r\n      ast_ls2_meter_point: \"\",\r\n      ast_ls2_meter_id: \"\",\r\n      ast_ls2_max_avg_usage: \"\",\r\n      ast_ls2_warranty_usage: \"\",\r\n      ast_ls2_meter_maximum: \"\",\r\n      ast_ls2_meter_install_wo: \"\",\r\n      ast_ls2_incr_usage_flag: \"\",\r\n      ast_ls2_alert_ma_flag: \"\",\r\n    },\r\n  ]);\r\n  // Add New button funcation\r\n  const addInputField = (event) => {\r\n    event.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (\r\n        !inputFields.ast_ls2_meter_id ||\r\n        inputFields.ast_ls2_meter_id.trim() === \"\"\r\n      ) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Meter ID is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (\r\n        !inputFields.ast_ls2_usage_uom ||\r\n        inputFields.ast_ls2_usage_uom.label.trim() === \"\"\r\n      ) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Usage UOM is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n          site_ID: site_ID,\r\n          mst_RowID: RowID,\r\n          emp_mst_login_id: emp_mst_login_id,\r\n          ast_ls2_usage_uom: \"\",\r\n          ast_ls2_meter_desc: \"\",\r\n          ast_ls2_usage_date: UsageDate,\r\n          ast_ls2_usage_reading: \"0.00\",\r\n          ast_ls2_avg_usage: \"0.00\",\r\n          ast_ls2_old_ltd_usage: \"\",\r\n          ast_ls2_ltd_usage: \"0.00\",\r\n          ast_ls2_meter_id: \"\",\r\n          ast_ls2_meter_point: \"\",\r\n          ast_ls2_max_avg_usage: \"\",\r\n          ast_ls2_warranty_usage: \"\",\r\n          ast_ls2_meter_maximum: \"\",\r\n          ast_ls2_meter_install_wo: \"\",\r\n          ast_ls2_incr_usage_flag: \"\",\r\n          ast_ls2_alert_ma_flag: \"\",\r\n          ast_ls2_alert_ro_flag: \"\",\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    if (index !== undefined) {\r\n      rows.splice(index, 1);\r\n    } else {\r\n      rows.splice(1, rows.length);\r\n    }\r\n\r\n    setInputFields(rows);\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    resetData();\r\n    removeInputFields();\r\n  };\r\n  // Clear State data\r\n  const updatedInputFields = inputFields.map((field) => {\r\n    return {\r\n      ...field,\r\n      ast_ls2_usage_uom: \"\",\r\n      ast_ls2_meter_desc: \"\",\r\n      ast_ls2_old_ltd_usage: \"\",\r\n      ast_ls2_meter_id: \"\",\r\n      ast_ls2_meter_point: \"\",\r\n      ast_ls2_max_avg_usage: \"\",\r\n      ast_ls2_warranty_usage: \"\",\r\n      ast_ls2_meter_maximum: \"\",\r\n      ast_ls2_meter_install_wo: \"\",\r\n      ast_ls2_incr_usage_flag: \"\",\r\n      ast_ls2_alert_ma_flag: \"\",\r\n      ast_ls2_alert_ro_flag: \"\",\r\n    };\r\n  });\r\n  const handleNumericInputChange_14 = (e, setterFunction) => {\r\n    let { value } = e.target;\r\n    value = value.replace(/[^\\d.]/g, ''); // Remove non-numeric characters except decimal\r\n    value = value.slice(0, 14); // Limit to 16 characters including decimals and commas\r\n\r\n    const parts = value.split('.');\r\n    let integerPart = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    if (integerPart.length > 11) {\r\n      integerPart = integerPart.slice(0, 12) + '.' + integerPart.slice(12, 14);\r\n    }\r\n    let decimalPart = parts[1] ? parts[1].slice(0, 2) : '';\r\n\r\n    const formattedValue = decimalPart ? `${integerPart}.${decimalPart}` : integerPart;\r\n    setterFunction(formattedValue); // Set the state for the respective UDFNumber state\r\n    setErrorField(null);\r\n  };\r\n\r\n \r\n\r\n  const handleChange = async (index, fieldName, value,event) => {\r\n    const list = [...inputFields];\r\n    if (fieldName == \"ast_ls2_meter_id\") {\r\n      list[index][fieldName] = value.slice(0, 50);\r\n      setInputFields(list);\r\n      setMeterID(value);\r\n\r\n    }else if(fieldName == \"ast_ls2_meter_point\"){\r\n      list[index][fieldName] = value.slice(0, 40);\r\n      setInputFields(list);\r\n     \r\n\r\n    }else if(fieldName == \"ast_ls2_meter_desc\"){\r\n      list[index][fieldName] = value.slice(0, 80);\r\n      setInputFields(list);\r\n    \r\n      \r\n    } else if(fieldName == \"ast_ls2_old_ltd_usage\"){\r\n      \r\n      handleNumericInputChange_14(event, (value) => {\r\n\r\n        list[index][fieldName] = value;\r\n    \r\n        setInputFields(list);\r\n    \r\n      });\r\n      \r\n    }else if(fieldName == \"ast_ls2_max_avg_usage\"){\r\n    \r\n      handleNumericInputChange_14(event, (value) => {\r\n\r\n        list[index][fieldName] = value;\r\n    \r\n        setInputFields(list);\r\n    \r\n      });\r\n    \r\n      \r\n    }else if(fieldName == \"ast_ls2_warranty_usage\"){\r\n    \r\n      handleNumericInputChange_14(event, (value) => {\r\n\r\n        list[index][fieldName] = value;\r\n    \r\n        setInputFields(list);\r\n    \r\n      });\r\n     \r\n      \r\n    }else if(fieldName == \"ast_ls2_meter_maximum\"){\r\n      handleNumericInputChange_14(event, (value) => {\r\n\r\n        list[index][fieldName] = value;\r\n    \r\n        setInputFields(list);\r\n    \r\n      });\r\n      \r\n    }else if(fieldName == \"ast_ls2_meter_install_wo\"){\r\n      list[index][fieldName] = value.slice(0, 11);\r\n      setInputFields(list);\r\n      \r\n    }else {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n    }\r\n    if (fieldName == \"ast_ls2_usage_uom\") {\r\n      //setSelected_ChargeCostCenter(value);\r\n      setSelected_UsageUOM(value);\r\n    }\r\n  };\r\n\r\n  // Submit Data in database\r\n  const handleAddButtonClick = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.ast_ls2_meter_id.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Meter ID is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      \r\n      }else if(Result.some((result) => result.ast_ls2_meter_id === inputFields.ast_ls2_meter_id.trim())){\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Meter ID already exists!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.ast_ls2_usage_uom.label.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Usage UOM is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n        //Swal.showLoading();\r\n      // console.log(\"inputFields____post\",inputFields);\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_asset_usage_table_data.php\",\r\n          inputFields\r\n        );\r\n        //  console.log(\"inputFields____postAfter\",response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          Swal.close();\r\n          Swal.fire({\r\n            title: \"Asset Usage Request!\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            text: response.data.message,\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            setResult([...Result, inputFields]);\r\n            get_Asset_Usage(site_ID, RowID);\r\n            // console.log(\"inputFields_after\",inputFields);\r\n\r\n            if (result.isConfirmed) {\r\n              // Call the next function when the user clicks the \"OK\" button\r\n\r\n              removeInputFields();\r\n              handleClose();\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handel Update button click\r\n  const handleUpdateButtonClick = async (e) =>{\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    // Swal.showLoading();\r\n    var json_UpdateAsset = {\r\n      site_cd: site_ID,\r\n      RowID:RowID2,\r\n      auditUser:emp_mst_login_id,\r\n      ast_ls2_usage_uom:selectedUom,\r\n      ast_ls2_incr_usage_flag:TotalRunning,\r\n      ast_ls2_meter_point:MeterPoint.trim(),\r\n      ast_ls2_meter_desc:AstLs2Desc.trim(),\r\n      ast_ls2_meter_install_date:GetMasterInstallDate,\r\n      ast_ls2_old_ltd_usage:MeterInstalledUsage.trim(),\r\n      ast_ls2_max_avg_usage:Maxavgusage.trim(),\r\n      ast_ls2_warranty_usage:GetWarrantyUsage.trim(),\r\n      ast_ls2_meter_maximum:GetMeterMaximum.trim(),\r\n      ast_ls2_alert_ma_flag:AlertMAFlag,\r\n      ast_ls2_alert_ro_flag:AlertROFlag,\r\n      ast_ls2_meter_install_wo:MeterInstallWO.trim(),\r\n    \r\n    }\r\n    console.log(\"json_UpdateAsset____\",json_UpdateAsset);\r\n    //update_asset_Specification\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/update_asset_usages_tb_data.php\",\r\n        JSON.stringify(json_UpdateAsset)\r\n      );\r\n    //  console.log(\"json_Asset output\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n         Swal.close();\r\n        \r\n         Swal.fire({\r\n           icon: \"success\",\r\n           customClass: {\r\n             container: \"swalcontainercustom\",\r\n           },\r\n           title: response.data.status,\r\n           text: response.data.message,\r\n         }).then((result) => {\r\n          setResult([...Result, inputFields]);\r\n          get_Asset_Usage(site_ID, RowID);\r\n    \r\n          if (result.isConfirmed) {\r\n             handleCloseModal();\r\n          }\r\n        });\r\n       }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops somthing is wrong...\",\r\n        text: error,\r\n      });\r\n    }\r\n  }\r\n \r\n  const formatDate2 = (dateString) => {\r\n    const dateObject = new Date(dateString);\r\n    const formattedDate = dateObject.toLocaleString('en-GB', { timeZone: 'UTC', day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' });\r\n    return formattedDate;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const dateObject = new Date(dateString);\r\n    return dateObject; // Return Date object\r\n  };\r\n\r\n\r\n  //console.log(\"inputFields____\",inputFields);\r\n//console.log(\"AssetUsageMandatoryFiled____\",AssetUsageMandatoryFiled);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div style={{ paddingBottom: \"20px\", backgroundColor: \"white\" }}>\r\n          <div\r\n            className=\"template-demo\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div style={{ marginRight: \"5px\" }}>\r\n              <Iconify\r\n                icon=\"fluent:calendar-data-bar-24-regular\"\r\n                width=\"30px\"\r\n                height=\"30px\"\r\n                style={{ fontSize: \"45px\" }}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"template-demo\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n                Usage\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>{renderTableHeader()}</TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={show}\r\n            maxWidth=\"lg\"\r\n            fullWidth\r\n            disableBackdropClick\r\n            sx={{\r\n              width: \"50vw\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <DialogTitle\r\n              sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n              id=\"customized-dialog-title\"\r\n              className=\"dailogTitWork\"\r\n            >\r\n              <Iconify\r\n                icon=\"fluent:calendar-data-bar-24-regular\"\r\n                width=\"30px\"\r\n                height=\"30px\"\r\n                style={{ fontSize: \"24px\", marginRight: \"5px\" }} // Add margin-right for spacing\r\n              />\r\n              <div>Add Usage</div> {/* Title */}\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n              }}\r\n            >\r\n              <Iconify icon=\"material-symbols:close\" />\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 WrkOdrMtb\">\r\n                    {inputFields.map((data, index) => {\r\n                      const {\r\n                        ast_ls2_usage_uom,\r\n                        ast_ls2_meter_desc,\r\n                        ast_ls2_incr_usage_flag,\r\n                        ast_ls2_old_ltd_usage,\r\n                        ast_ls2_meter_id,\r\n                        ast_ls2_meter_point,\r\n                        ast_ls2_max_avg_usage,\r\n                        ast_ls2_warranty_usage,\r\n                        ast_ls2_meter_maximum,\r\n                        ast_ls2_meter_install_wo,\r\n                        ast_ls2_alert_ma_flag,\r\n                        ast_ls2_alert_ro_flag,\r\n                      } = data;\r\n                      return (\r\n                        <div className=\"row my-3 tb\" key={index}>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#2196f3\",\r\n                                  textDecoration: \"underline\",\r\n                                  fontWeight: 600,\r\n                                  fontSize: 16,\r\n                                }}\r\n                              >\r\n                                Line {index + 1}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} sx={{ textAlign: \"right\" }}>\r\n                              {inputFields.length !== 1 && (\r\n                                <Button\r\n                                  className=\"workmarerial_dlt\"\r\n                                  onClick={() => removeInputFields(index)}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faCircleXmark} />\r\n                                </Button>\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            container\r\n                            spacing={1.5}\r\n                            className=\"timeCartPopuplabel\"\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_meter_id\") || \"Requiredlabel\"}> {findCustomizeLabel(\"ast_ls2_meter_id\") ||\r\n                                    \"Meter ID:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={ast_ls2_meter_id}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_meter_id\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                          \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_usage_uom\") || \"Requiredlabel\"}> {findCustomizeLabel(\"ast_ls2_usage_uom\") ||\r\n                                    \"Usage UOM:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={UsageUOM}\r\n                                value={data.ast_ls2_usage_uom}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_usage_uom\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                disableAnimation\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_incr_usage_flag\")}> {findCustomizeLabel(\"ast_ls2_incr_usage_flag\") ||\r\n                                    \"Total Running Meter:\"}</label>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={8}\r\n                              style={{ textAlign: \"right\" }}\r\n                            >\r\n                              <FormControlLabel\r\n                                value=\"top\"\r\n                               \r\n                                control={<Checkbox defaultChecked={false} />}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_incr_usage_flag\",\r\n                                    event.target.checked ? \"Y\" : \"N\"\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_meter_point\")}> {findCustomizeLabel(\"ast_ls2_meter_point\") ||\r\n                                    \"Meter Point:\"}</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={ast_ls2_meter_point}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_meter_point\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                           \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_meter_desc\")}> {findCustomizeLabel(\"ast_ls2_meter_desc\") ||\r\n                                    \"Description:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                             \r\n                               <TextareaAutosize\r\n                                aria-label=\"empty textarea\"\r\n                                minRows={2.9}\r\n                                value={ast_ls2_meter_desc}\r\n                                fullWidth\r\n                                style={{ width: '100%' }} \r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_meter_desc\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                              className={errorField === \"ast_mst_safety_rqmts\" ? \"erroBorderadd\" : \"TxtAra\"}\r\n                            />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_meter_install_date\")}> {findCustomizeLabel(\"ast_ls2_meter_install_date\") ||\r\n                                    \"Meter Install Date:\"}</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={8}>\r\n                              <DateTimePicker\r\n                                value={MeterInstallDate}\r\n                                format=\"dd/MM/yyyy HH:mm\"\r\n                                onChange={(newDate) => {\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_meter_install_date\",\r\n                                    newDate\r\n                                  );\r\n                                }}\r\n                                slotProps={{\r\n                                  textField: {\r\n                                    fullWidth: true,\r\n                                  },\r\n                                }}\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                             \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_usage_date\")}> {findCustomizeLabel(\"ast_ls2_usage_date\") ||\r\n                                    \"Usage Date:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <DateTimePicker\r\n                                disabled\r\n                                value={UsageDate}\r\n                                format=\"dd/MM/yyyy HH:mm\"\r\n                                onChange={(newDate) => {\r\n                                  setUsageDate(newDate); // Update your state with the new value\r\n                                }}\r\n                                slotProps={{\r\n                                  textField: {\r\n                                    fullWidth: true,\r\n                                  },\r\n                                }}\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                             \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_usage_reading\")}> {findCustomizeLabel(\"ast_ls2_usage_reading\") ||\r\n                                    \"Usage Reading:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                disabled\r\n                                value={\".00\"}\r\n                                onChange={(e) => {\r\n                                  // setActualHour(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                             \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_avg_usage\")}> {findCustomizeLabel(\"ast_ls2_avg_usage\") ||\r\n                                    \"Average Usage:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                disabled\r\n                                value=\".00\"\r\n                                onChange={(e) => {\r\n                                  // setActualHour(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_old_ltd_usage\")}> {findCustomizeLabel(\"ast_ls2_old_ltd_usage\") ||\r\n                                    \"Meter Installed Usage:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={ast_ls2_old_ltd_usage}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_old_ltd_usage\",\r\n                                    event.target.value,\r\n                                    event\r\n                                  )\r\n                                }\r\n                                InputProps={{\r\n                                  inputProps: { style: { textAlign: 'right' } }\r\n                                  }}\r\n                              />\r\n                              \r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_ltd_usage\")}> {findCustomizeLabel(\"ast_ls2_ltd_usage\") ||\r\n                                    \"LTD Usage:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                disabled\r\n                                value=\".00\"\r\n                                onChange={(e) => {\r\n                                  // setActualHour(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_max_avg_usage\")}> {findCustomizeLabel(\"ast_ls2_max_avg_usage\") ||\r\n                                    \"Max Average Usage:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={ast_ls2_max_avg_usage}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_max_avg_usage\",\r\n                                    event.target.value,\r\n                                    event\r\n                                  )\r\n                                }\r\n                                InputProps={{\r\n                                  inputProps: { style: { textAlign: 'right' } }\r\n                                  }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                             \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_warranty_usage\")}> {findCustomizeLabel(\"ast_ls2_warranty_usage\") ||\r\n                                    \"Warranty Usage:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={ast_ls2_warranty_usage}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_warranty_usage\",\r\n                                    event.target.value,\r\n                                    event\r\n                                  )\r\n                                }\r\n                                InputProps={{\r\n                                  inputProps: { style: { textAlign: 'right' } }\r\n                                  }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_meter_maximum\")}> {findCustomizeLabel(\"ast_ls2_meter_maximum\") ||\r\n                                    \"Meter Maximum:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={ast_ls2_meter_maximum}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_meter_maximum\",\r\n                                    event.target.value,\r\n                                    event\r\n                                  )\r\n                                }\r\n                                InputProps={{\r\n                                  inputProps: { style: { textAlign: 'right' } }\r\n                                  }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_alert_ma_flag\")}> {findCustomizeLabel(\"ast_ls2_alert_ma_flag\") ||\r\n                                    \"Alert MA Flag:\"}</label>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={8}\r\n                              style={{ textAlign: \"right\" }}\r\n                            >\r\n                              <FormControlLabel\r\n                                value=\"top\"\r\n                                control={<Checkbox />}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_alert_ma_flag\",\r\n\r\n                                    event.target.checked ? \"Y\" : \"N\"\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_alert_ro_flag\")}> {findCustomizeLabel(\"ast_ls2_alert_ro_flag\") ||\r\n                                    \"Alert RO Flag:\"}</label>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={8}\r\n                              style={{ textAlign: \"right\" }}\r\n                            >\r\n                              <FormControlLabel\r\n                                value=\"top\"\r\n                                control={<Checkbox defaultChecked={false} />}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_alert_ro_flag\",\r\n                                    event.target.checked ? \"Y\" : \"N\"\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              \r\n                              <label className={findCustomizerequiredLabel(\"ast_ls2_meter_install_wo\")}> {findCustomizeLabel(\"ast_ls2_meter_install_wo\") ||\r\n                                    \"Meter Install WO:\"}</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={ast_ls2_meter_install_wo}\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"ast_ls2_meter_install_wo\",\r\n                                    event.target.value,\r\n                                    event\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"soft\"\r\n                color=\"error\"\r\n                className=\"CloseButton\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleClose();\r\n                }}\r\n                startIcon={<Iconify icon=\"jam:close\" />}\r\n              >\r\n                Close\r\n              </Button>\r\n\r\n              <div\r\n                className=\"timeCartSubmit\"\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"AddNewButton\"\r\n                  startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                  onClick={addInputField}\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  Add\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"SaveButton assetSpares\"\r\n                  startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                  style={{\r\n                    backgroundColor: \"#4CAF50\",\r\n                    color: \"white\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                  onClick={handleAddButtonClick}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <Button type=\"button\" className=\"tabAddButton\" onClick={handleShow}>\r\n            + Add Usage\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {/*  Row Click to open model popup */}\r\n      <BootstrapDialog\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={showModal}\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, display: \"flex\", alignItems: \"center\" }}\r\n          id=\"customized-dialog-title\"\r\n          className=\"dailogTitWork\"\r\n        >\r\n          <Iconify\r\n                icon=\"fluent:calendar-data-bar-24-regular\"\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                style={{ fontSize: \"24px\", marginRight: \"5px\" }}\r\n              />\r\n          <div>Update Usage</div> {/* Title */}\r\n        </DialogTitle>\r\n\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleCloseModal}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols:close\" />\r\n        </IconButton>\r\n        <DialogContent dividers>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginTop: \"15px\",\r\n            }}\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 WrkOdrMtb\">\r\n                <div className=\"row my-3 tb\">\r\n                  <Grid container spacing={1.5} className=\"timeCartPopuplabel\">\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_meter_id\") || \"Requiredlabel\"}> {findCustomizeLabel(\"ast_ls2_meter_id\") ||\r\n                          \"Meter ID:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                        value={MeterID}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_usage_uom\") || \"Requiredlabel\"}> {findCustomizeLabel(\"ast_ls2_usage_uom\") ||\r\n                            \"Usage UOM:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <Autocomplete\r\n                        options={UsageUOM}\r\n                        value={selectedUom}\r\n                        onChange={(event, newValue) => {\r\n                         \r\n                          setSelectedUom(newValue); \r\n                        }}\r\n                        disableAnimation\r\n                        renderInput={(params) => (\r\n                          <div>\r\n                            <TextField\r\n                              {...params}\r\n                              placeholder=\"Select...\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              className=\"Extrasize\"\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_incr_usage_flag\")}> {findCustomizeLabel(\"ast_ls2_incr_usage_flag\") ||\r\n                          \"Total Running Meter:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8} style={{ textAlign: \"right\" }}>\r\n                      <FormControlLabel\r\n                        value=\"top\"\r\n                        control={\r\n                          <Checkbox\r\n                          checked={TotalRunning === \"Y\"}\r\n                          onChange={(event) => setTotalRunning(event.target.checked ? \"Y\" : \"N\")}\r\n                          />\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_meter_point\")}> {findCustomizeLabel(\"ast_ls2_meter_point\") ||\r\n                            \"Meter Point:\"}</label>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                        value={MeterPoint}\r\n                       // onChange={(event) => setMeterPoint(event.target.value)}\r\n                        onChange={(event) =>\r\n                          {\r\n                            const value = event.target.value;\r\n                            if (value.length <= 40) {\r\n                              setMeterPoint(value);\r\n                            }\r\n                           // setMeterInstallWO(event.target.value);\r\n                          }\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_meter_desc\")}> {findCustomizeLabel(\"ast_ls2_meter_desc\") ||\r\n                            \"Description:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                        value={AstLs2Desc}\r\n                        \r\n                        //onChange={(event) => setAstLs2Desc(event.target.value)}\r\n                        onChange={(event) =>\r\n                          {\r\n                            const value = event.target.value;\r\n                            if (value.length <= 80) {\r\n                              setAstLs2Desc(value);\r\n                            }\r\n                           // setMeterInstallWO(event.target.value);\r\n                          }\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_meter_install_date\")}> {findCustomizeLabel(\"ast_ls2_meter_install_date\") ||\r\n                          \"Meter Install Date:\"}</label>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={8}>\r\n                       <DateTimePicker\r\n                          value={GetMasterInstallDate ? formatDate(GetMasterInstallDate.date) : null} \r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          onChange={(newDate) => setgetMasterInstallDate(newDate)}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                          className=\"Extrasize\"\r\n                        />\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_usage_date\")}> {findCustomizeLabel(\"ast_ls2_usage_date\") ||\r\n                          \"Usage Date:\"}</label>\r\n                    </Grid>\r\n                   \r\n                    <Grid item xs={12} md={8}>\r\n                      \r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                        disabled\r\n                        value={GetUsageDate ? formatDate2(GetUsageDate.date) : null}   \r\n                        \r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_usage_reading\")}> {findCustomizeLabel(\"ast_ls2_usage_reading\") ||\r\n                            \"Usage Reading:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                        disabled\r\n                        value={GetUsageReading}\r\n                        onChange={(e) => {\r\n                          setGetUsageReading(e.target.value);\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_avg_usage\")}> {findCustomizeLabel(\"ast_ls2_avg_usage\") ||\r\n                              \"Average Usage:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                        disabled\r\n                        value={AvgUsage}\r\n                        onChange={(e) => {\r\n                          setAvgUsage(e.target.value);\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_old_ltd_usage\")}> {findCustomizeLabel(\"ast_ls2_old_ltd_usage\") ||\r\n                            \"Meter Installed Usage:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                        \r\n                         value={MeterInstalledUsage}\r\n                       \r\n                        onChange={(e) => handleNumericInputChange_14(e, setMeterInstalledUsage)}\r\n                       InputProps={{\r\n                         inputProps: { style: { textAlign: 'right' } }\r\n                       }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_ltd_usage\")}> {findCustomizeLabel(\"ast_ls2_ltd_usage\") ||\r\n                            \"LTD Usage:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                        disabled\r\n                        value={LtdUsage}\r\n                        onChange={(e) => {\r\n                           setLtdUsage(e.target.value);\r\n                        }}\r\n                        InputProps={{\r\n                          inputProps: { style: { textAlign: 'right' } }\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_max_avg_usage\")}> {findCustomizeLabel(\"ast_ls2_max_avg_usage\") ||\r\n                          \"Max Average Usage:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                         value={Maxavgusage}\r\n                         \r\n                       onChange={(e) => handleNumericInputChange_14(e, setMaxavgusage)}\r\n                       InputProps={{\r\n                         inputProps: { style: { textAlign: 'right' } }\r\n                       }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_warranty_usage\")}> {findCustomizeLabel(\"ast_ls2_warranty_usage\") ||\r\n                          \"Warranty Usage:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                    \r\n                        value={GetWarrantyUsage}\r\n                       \r\n                       onChange={(e) => handleNumericInputChange_14(e, setWarrantyUsage)}\r\n                       InputProps={{\r\n                         inputProps: { style: { textAlign: 'right' } }\r\n                       }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_meter_maximum\")}> {findCustomizeLabel(\"ast_ls2_meter_maximum\") ||\r\n                        \"Meter Maximum:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                       \r\n                         value={GetMeterMaximum}\r\n                          // onChange={(e) =>{\r\n                          //   setGetMeterMaximum(e.target.value);\r\n                          // }}\r\n                          onChange={(e) => handleNumericInputChange_14(e, setGetMeterMaximum)}\r\n                            InputProps={{\r\n                              inputProps: { style: { textAlign: 'right' } }\r\n                            }}\r\n                      />\r\n                    </Grid>\r\n                   \r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_alert_ma_flag\")}> {findCustomizeLabel(\"ast_ls2_alert_ma_flag\") ||\r\n                          \"Alert MA Flag:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8} style={{ textAlign: \"right\" }}>\r\n                      <FormControlLabel\r\n                        value=\"top\"\r\n                        control={\r\n                          <Checkbox\r\n                            \r\n                            checked={AlertMAFlag === \"Y\"}\r\n                            onChange={(event) => setAlertMAFlag(event.target.checked ? \"Y\" : \"N\")}\r\n                          />\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_alert_ro_flag\")}> {findCustomizeLabel(\"ast_ls2_alert_ro_flag\") ||\r\n                          \"Alert RO Flag:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8} style={{ textAlign: \"right\" }}>\r\n                      <FormControlLabel\r\n                        value=\"top\"\r\n                        control={\r\n                          <Checkbox\r\n                            checked={AlertROFlag === \"Y\"}\r\n                            onChange={(event) => setAlertROFlag(event.target.checked ? \"Y\" : \"N\")}\r\n                          />\r\n                        }\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={4} style={{ padding: \"10px\" }}>\r\n                    <label className={findCustomizerequiredLabel(\"ast_ls2_meter_install_wo\")}> {findCustomizeLabel(\"ast_ls2_meter_install_wo\") ||\r\n                            \"Meter Install WO:\"}</label>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"Extrasize\"\r\n                        fullWidth\r\n                         value={MeterInstallWO}\r\n                        onChange={(event) =>\r\n                          {\r\n                            const value = event.target.value;\r\n                            if (value.length <= 11) {\r\n                              setMeterInstallWO(value);\r\n                            }\r\n                           // setMeterInstallWO(event.target.value);\r\n                          }\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"soft\"\r\n            color=\"error\"\r\n            className=\"CloseButton\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleCloseModal();\r\n            }}\r\n            startIcon={<Iconify icon=\"jam:close\" />}\r\n          >\r\n            Close\r\n          </Button>\r\n\r\n          <div\r\n            className=\"timeCartSubmit\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"SaveButton assetSpares\"\r\n              startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                color: \"white\",\r\n                marginRight: \"10px\",\r\n              }}\r\n               onClick={handleUpdateButtonClick}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssetUsage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport {\r\n  differenceInMilliseconds,\r\n  differenceInDays,\r\n  parseISO,\r\n  format,\r\n} from \"date-fns\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport httpCommon from \"src/http-common\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { Chrono } from \"react-chrono\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport logo from \"../../../assets/img/browser-tab.png\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst WoHistory = ({ data, onDataFromSecondComponent }) => {\r\n // console.log(\"data_____\",data);\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const { RowID } = data;\r\n  const { Asset_No } = data;\r\n  const { WorkOrderNo } = data;\r\n\r\n  const location = useLocation();\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const [EmployeeID, setEmployeeID] = useState([]);\r\n  const [selected_EmployeeID, setSelected_EmployeeID] = useState([]);\r\n\r\n  const [Craft, setCraft] = useState([]);\r\n  const [selected_Craft, setSelected_Craft] = useState([]);\r\n\r\n  const [TimeCardDate, setTimeCardDate] = useState(new Date());\r\n  const [EndTimeCardDate, setEndTimeCardDate] = useState(new Date());\r\n\r\n  const [HourType, setHourType] = useState([]);\r\n  const [selected_HourType, setSelected_HourType] = useState([]);\r\n\r\n  const [ActualHour, setActualHour] = useState(\"0\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [CreditCostCenter, setCreditCostCenter] = useState([]);\r\n  const [selected_CreditCostCenter, setSelected_CreditCostCenter] = useState(\r\n    []\r\n  );\r\n  const [EmpDropData, setEmpDropData] = useState([]);\r\n  const [CreditAccount, setCreditAccount] = useState([]);\r\n  const [selected_CreditAccount, setSelected_CreditAccount] = useState([]);\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID2, setRowID2] = useState(\"\");\r\n\r\n  const [AssetNo, setAssetNo] = useState(\"\");\r\n  const [Rate, setRate] = useState(\"\");\r\n  const [Multiplier, setMultiplier] = useState(\"\");\r\n  const [Adder, setAdder] = useState(\"\");\r\n  const [ActualCost, setActualCost] = useState(\"\");\r\n  const [TimeCardNo, setTimeCardNo] = useState(\"\");\r\n  const [isEmpNoEmpty, setIsEmpEmpty] = useState(false);\r\n  \r\n  \r\n  // Get Header Data\r\n  const get_assetwohistory = async (site_ID, RowID) => {\r\n    //console.log(\"RowID______\",RowID);\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_assetwohistory.php?site_cd=${site_ID}&wko_mst_assetno=${Asset_No}&wrk_sts_typ_cd='Open'`\r\n      );\r\n        console.log(\"response_____setupHistory\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n    get_assetwohistory(site_ID, RowID);\r\n\r\n    get_workorder_status(site_ID, \"All\");\r\n  }, [location]);\r\n\r\n\r\n  const get_workorder_status = async (site_ID, type) => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `get_dropdown.php?site_cd=${site_ID}&type=${type}`\r\n      );\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        let EmployeeID = response.data.data.Employee_Supervisor_Id.map(\r\n          (item) => ({\r\n            label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n            value: item.emp_mst_empl_id,\r\n          })\r\n        );\r\n        setEmployeeID(EmployeeID);\r\n\r\n        let Craft = response.data.data.Employee_Primary_Craft.map((item) => ({\r\n          label: item.crf_mst_crf_cd + \" : \" + item.crf_mst_desc,\r\n          value: item.crf_mst_crf_cd,\r\n        }));\r\n        // setCraft(Craft);\r\n\r\n        let HourType = response.data.data.HoursType.map((item) => ({\r\n          label: item.hours_type_cd,\r\n          value: item.hours_type_cd,\r\n        }));\r\n        setHourType(HourType);\r\n\r\n        let ChargeCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setChargeCostCenter(ChargeCostCenter);\r\n\r\n        let ChargeAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setChargeAccount(ChargeAccount);\r\n\r\n        let CreditCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setCreditCostCenter(CreditCostCenter);\r\n\r\n        let CreditAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setCreditAccount(CreditAccount);\r\n\r\n        //get_dropdown_ParentFlag(site_ID,selected_asset);\r\n        // get_workordermaster_select(site_ID,selected_asset);\r\n        // New_WorkOrderTimeCard();\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // console.error(\"Error fetching data:\", error);\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {/* {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr.toUpperCase()}\r\n          </TableCell>\r\n        ))} */}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderTableRows = () => {\r\n    // return Result.map((result, index) => (\r\n    //   <TableRow key={index}>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {index + 1}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.prm_mst_pm_no}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.prm_mst_curr_wo}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.prm_mst_freq_code}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {formatDate(result.prm_mst_desc)}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {formatDate(result.prm_mst_meter_id)}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.prm_mst_lpm_usg}\r\n    //     </TableCell>\r\n\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.prm_mst_lpm_uom}\r\n    //     </TableCell>\r\n    //     {/* <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_rate}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_multiplier}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_adder}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_act_cost}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_chg_costcenter}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_chg_account}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_crd_costcenter}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_crd_account}\r\n    //     </TableCell>\r\n    //     <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n    //       {result.wko_ls8_time_card_no}\r\n    //     </TableCell> */}\r\n    //   </TableRow>\r\n    // ));\r\n  };\r\n  const formatDate = (dateObject) => {\r\n    const date = new Date(dateObject.date);\r\n\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n\r\n    const hours = date.getHours().toString().padStart(2, \"0\");\r\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n    const seconds = date.getSeconds().toString().padStart(2, \"0\");\r\n\r\n    return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  // const totalQty = Result.reduce(\r\n  //   (acc, item) => acc + (parseFloat(item.wko_ls8_hrs) || 0),\r\n  //   0\r\n  // );\r\n  // const totalCost = Result.reduce(\r\n  //   (acc, item) =>\r\n  //     acc +\r\n  //     (parseFloat(item.wko_ls8_hrs) || 0) *\r\n  //       (parseFloat(item.wko_ls8_act_cost) || 0),\r\n  //   0\r\n  // );\r\n\r\n  const handleEmployeeIDChange = async (event, value) => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    setSelected_EmployeeID(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `get_time_cart_reate_craft.php?site_cd=${site_ID}&empId=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          let Craft = response.data.data.result.map((item) => ({\r\n            label: item.emp_ls1_craft + \" : \" + item.crf_mst_desc,\r\n            value: item.emp_ls1_craft,\r\n            rate: item.emp_ls1_charge_rate,\r\n          }));\r\n          setCraft(Craft);\r\n\r\n          setSelected_Craft(response.data.data.result[0].emp_ls1_craft);\r\n          setRate(response.data.data.result[0].emp_ls1_charge_rate);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleHourTypeChange = async (event, value) => {\r\n    setSelected_HourType(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `TimeCartHourTypeGet.php?site_cd=${site_ID}&hourstype=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          setAdder(response.data.data.result[0].hours_type_adder);\r\n          setMultiplier(response.data.data.result[0].hours_type_multiplier);\r\n\r\n          const start = new Date(TimeCardDate);\r\n          const end = new Date(EndTimeCardDate);\r\n          // const range = new Moment.range(start, end);\r\n\r\n          const msDiff = differenceInMilliseconds(end, start);\r\n          const days = differenceInDays(end, start);\r\n          const hours = Math.floor(msDiff / (1000 * 60 * 60)); // Total hours\r\n          const min = Math.floor(msDiff / (1000 * 60));\r\n\r\n          const Min = Math.floor(msDiff / (1000 * 60));\r\n          const act_hour = Math.floor(Min / 60);\r\n\r\n          const h = parseFloat(hours);\r\n          const r = parseFloat(Rate);\r\n          const a = parseFloat(response.data.data.result[0].hours_type_adder);\r\n          const m = parseFloat(\r\n            response.data.data.result[0].hours_type_multiplier\r\n          );\r\n\r\n          const f3 = act_hour * (r + a) * m;\r\n          setActualCost(f3);\r\n          setActualHour(hours);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const resetData = () => {\r\n    setSelected_ChargeAccount(\"\");\r\n    setSelected_ChargeCostCenter(\"\");\r\n    setSelected_Craft(\"\");\r\n    setSelected_CreditAccount(\"\");\r\n    setSelected_CreditCostCenter(\"\");\r\n    setSelected_EmployeeID(\"\");\r\n    setSelected_HourType(\"\");\r\n    setActualHour(\"\");\r\n  };\r\n  const handleSubmitTimecard = async () => {\r\n    if (selected_EmployeeID == \"\" || selected_EmployeeID == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Employee ID is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_Craft == \"\" || selected_Craft == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Craft is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field End Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_HourType == \"\" || selected_HourType == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Hour Type is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else {\r\n      let selectedHourType;\r\n      if (\r\n        !selected_HourType ||\r\n        selected_HourType.length === 0 ||\r\n        !selected_HourType.label\r\n      ) {\r\n        selectedHourType = \"\";\r\n      } else {\r\n        const selectedHourType2 = selected_HourType.label.split(\":\");\r\n        selectedHourType = selectedHourType2[0].trim();\r\n      }\r\n\r\n      let date_1 = \"\";\r\n      if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n        date_1 = \"\";\r\n      } else {\r\n        date_1 = Moment(TimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n\r\n      let date_2 = \"\";\r\n      if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n        date_2 = \"\";\r\n      } else {\r\n        date_2 = Moment(EndTimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n      var json_workorderTimeCart = {\r\n        site_cd: site_ID,\r\n        wko_mst_wo_no: WorkOrderNo,\r\n        mst_RowID: RowID,\r\n        assetno: Asset_No,\r\n        selectedEmployeeID: selected_EmployeeID.value,\r\n        selectedCraft:\r\n        selected_Craft && typeof selected_Craft === \"object\"\r\n            ? selected_Craft.value\r\n            : selected_Craft,\r\n        TimeCardDate: date_1,\r\n        EndTimeCardDate: date_2,\r\n        selected_HourType: selectedHourType,\r\n        ActualHour: ActualHour,\r\n        Rate: Rate,\r\n        Multiplier: Multiplier,\r\n        Adder: Adder,\r\n        ActualCost: ActualCost,\r\n        selected_ChargeCostCenter: selected_ChargeCostCenter.value,\r\n        selected_ChargeAccount: selected_ChargeAccount.value,\r\n        selected_CreditCostCenter: selected_CreditCostCenter.value,\r\n        selected_CreditAccount: selected_CreditAccount.value,\r\n        auditUser: emp_owner,\r\n      };\r\n\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_time_card.php\",\r\n          JSON.stringify(json_workorderTimeCart)\r\n        );\r\n        if (response.data.status == \"SUCCESS\") {\r\n          handleClose();\r\n          get_assetwohistory();\r\n          resetData();\r\n          onDataFromSecondComponent(\"SubmitFrom\");\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // const items = [{\r\n  //   title: \"May 1940\",\r\n  //   cardTitle: \"Dunkirk\",\r\n  //   url: \"http://www.history.com\",\r\n  //   cardSubtitle:\"Men of the British Expeditionary Force (BEF) wade out to..\",\r\n  //   cardDetailedText: \"Men of the British Expeditionary Force (BEF) wade out to..\",\r\n\r\n  // },{\r\n  //   title: \"May 1940\",\r\n  //   cardTitle: \"Dunkirk\",\r\n  //   url: \"http://www.history.com\",\r\n  //   cardSubtitle:\"Men of the British Expeditionary Force (BEF) wade out to..\",\r\n  //   cardDetailedText: \"Men of the British Expeditionary Force (BEF) wade out to..\",\r\n   \r\n  // }]\r\n//   const items = Result.map(data => ({\r\n//     title: data.wko_mst_org_date.date, // You may need to format the date as required\r\n//     cardTitle: data.wko_mst_wo_no,\r\n//     url: \"\", // Provide the URL as needed\r\n//     cardSubtitle: data.wko_mst_status,\r\n//    phoneNumber : data.wko_mst_wo_no,\r\n//     text: data.wko_mst_descs,\r\n//     cardDetailedText: data.wko_mst_descs || \"\" // Use the appropriate field or provide a default value\r\n// }));\r\nconst items = Result.map(data => ({\r\n  title: format(parseISO(data.wko_mst_org_date.date), 'dd-MMM-yy'), // For\r\n  cardTitle: \"Work Order No: \" + data.wko_mst_wo_no,\r\n  url: \"\", // Provide the URL as needed\r\n  cardSubtitle: \"Status: \" + data.wko_mst_status,\r\n  cardDetailedText: \"Des: \" + data.wko_mst_descs || \"\" // Use the appropriate field or provide a default value\r\n}));\r\n  console.log(\"Result____\",Result);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"8px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n              paddingBottom: \"10px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div style={{ backgroundColor: \"white\" }}>\r\n                <div\r\n                  className=\"template-demo\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <div style={{ marginRight: \"10px\" }}>\r\n                    <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n                  </div>\r\n                  <div\r\n                    className=\"template-demo\"\r\n                    style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  >\r\n                    <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n                    WO History\r\n                    </div>\r\n                    <div className=\"TimeCartPartCosting\">\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {/* {(totalQty * 1).toFixed(2)} */}\r\n                      </span>{\" \"}\r\n                      {/* Total Parts Costing{\" \"} */}\r\n                      <span style={{ color: \"#19d895\" }}>\r\n                        {/* ${totalCost.toFixed(2)} */}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n            <div style={{ width: \"800px\", height: \"100vh\" }}>\r\n              {console.log(\"items_____\",items)}\r\n              {/* <Chrono items={items} mode=\"VERTICAL\"/> */}\r\n              {Result.length > 0 && <Chrono items={items} mode=\"VERTICAL\" />}\r\n            </div>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>{renderTableHeader()}</TableRow>\r\n                  </TableHead>\r\n                  <TableBody>{renderTableRows()}</TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            <div>\r\n              <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={show}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n                disableBackdropClick\r\n                sx={{\r\n                  width: \"50vw\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  <img src={logo} style={{ width: \"30px\", height: \"30px\",marginRight: \"2px\" }} />\r\n                  WO History\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \"15px\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      spacing={1.5}\r\n                      className=\"timeCartPopuplabel\"\r\n                    >\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Employee ID:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={EmployeeID}\r\n                          value={selected_EmployeeID}\r\n                          onChange={(event, value) =>\r\n                            handleEmployeeIDChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Craft:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={Craft}\r\n                          value={selected_Craft}\r\n                          onChange={(event, value) => {\r\n                            setSelected_Craft(value || null);\r\n                            setRate(value ? value.rate : null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={TimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card End Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={EndTimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setEndTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Hour Type:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={HourType}\r\n                          value={selected_HourType}\r\n                          onChange={(event, value) =>\r\n                            handleHourTypeChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Actual Hour:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          className=\"Extrasize\"\r\n                          fullWidth\r\n                          disabled\r\n                          value={ActualHour}\r\n                          onChange={(e) => {\r\n                            setActualHour(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeCostCenter}\r\n                          value={selected_ChargeCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeAccount}\r\n                          value={selected_ChargeAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditCostCenter}\r\n                          value={selected_CreditCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditAccount}\r\n                          value={selected_CreditAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <div className=\"timeCartSubmit\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"button\" // Remove this line\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        handleSubmitTimecard();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              {/* <button\r\n                type=\"button\"\r\n                style={{\r\n                  padding: \"5px 10px\",\r\n                  background: \"none\",\r\n                  color: \"blue\",\r\n                  border: \"none\",\r\n                  borderRadius: \"4px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={handleShow}\r\n              >\r\n                + Add WO History\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WoHistory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport {\r\n  differenceInMilliseconds,\r\n  differenceInDays,\r\n  differenceInHours,\r\n  differenceInMinutes,\r\n} from \"date-fns\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport httpCommon from \"src/http-common\";\r\nimport { format, setHours } from \"date-fns\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport logo from \"../../../assets/img/work-time.png\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst PmSetup = ({ data, onDataFromSecondComponent }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const { RowID } = data;\r\n  const { Asset_No } = data;\r\n  const { WorkOrderNo } = data;\r\n\r\n  const location = useLocation();\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const [EmployeeID, setEmployeeID] = useState([]);\r\n  const [selected_EmployeeID, setSelected_EmployeeID] = useState([]);\r\n\r\n  const [Craft, setCraft] = useState([]);\r\n  const [selected_Craft, setSelected_Craft] = useState([]);\r\n\r\n  const [TimeCardDate, setTimeCardDate] = useState(new Date());\r\n  const [EndTimeCardDate, setEndTimeCardDate] = useState(new Date());\r\n\r\n  const [HourType, setHourType] = useState([]);\r\n  const [selected_HourType, setSelected_HourType] = useState([]);\r\n\r\n  const [ActualHour, setActualHour] = useState(\"0\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [CreditCostCenter, setCreditCostCenter] = useState([]);\r\n  const [selected_CreditCostCenter, setSelected_CreditCostCenter] = useState(\r\n    []\r\n  );\r\n  const [EmpDropData, setEmpDropData] = useState([]);\r\n  const [CreditAccount, setCreditAccount] = useState([]);\r\n  const [selected_CreditAccount, setSelected_CreditAccount] = useState([]);\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID2, setRowID2] = useState(\"\");\r\n\r\n  const [AssetNo, setAssetNo] = useState(\"\");\r\n  const [Rate, setRate] = useState(\"\");\r\n  const [Multiplier, setMultiplier] = useState(\"\");\r\n  const [Adder, setAdder] = useState(\"\");\r\n  const [ActualCost, setActualCost] = useState(\"\");\r\n  const [TimeCardNo, setTimeCardNo] = useState(\"\");\r\n  const [isEmpNoEmpty, setIsEmpEmpty] = useState(false);\r\n  // Get Header Data\r\n  const get_assetmSetup = async (site_ID, RowID) => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_assetpmsetup.php?site_cd=${site_ID}&RowID=${RowID}&wko_mst_assetno=${Asset_No}`\r\n      );\r\n      //  console.log(\"response_____PMsetup\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n    get_assetmSetup(site_ID, RowID);\r\n\r\n    get_workorder_status(site_ID, \"All\");\r\n  }, [location]);\r\n\r\n \r\n  const get_workorder_status = async (site_ID, type) => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `get_dropdown.php?site_cd=${site_ID}&type=${type}`\r\n      );\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        let EmployeeID = response.data.data.Employee_Supervisor_Id.map(\r\n          (item) => ({\r\n            label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n            value: item.emp_mst_empl_id,\r\n          })\r\n        );\r\n        setEmployeeID(EmployeeID);\r\n\r\n        let Craft = response.data.data.Employee_Primary_Craft.map((item) => ({\r\n          label: item.crf_mst_crf_cd + \" : \" + item.crf_mst_desc,\r\n          value: item.crf_mst_crf_cd,\r\n        }));\r\n        // setCraft(Craft);\r\n\r\n        let HourType = response.data.data.HoursType.map((item) => ({\r\n          label: item.hours_type_cd,\r\n          value: item.hours_type_cd,\r\n        }));\r\n        setHourType(HourType);\r\n\r\n        let ChargeCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setChargeCostCenter(ChargeCostCenter);\r\n\r\n        let ChargeAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setChargeAccount(ChargeAccount);\r\n\r\n        let CreditCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setCreditCostCenter(CreditCostCenter);\r\n\r\n        let CreditAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setCreditAccount(CreditAccount);\r\n\r\n        //get_dropdown_ParentFlag(site_ID,selected_asset);\r\n        // get_workordermaster_select(site_ID,selected_asset);\r\n        // New_WorkOrderTimeCard();\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // console.error(\"Error fetching data:\", error);\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr.toUpperCase()}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index}>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.prm_mst_pm_no}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.prm_mst_curr_wo}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.prm_mst_freq_code}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n         \r\n          {result.prm_mst_desc}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          \r\n              {result.prm_mst_meter_id}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.prm_mst_lpm_usg}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.prm_mst_lpm_uom}\r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n         {formatDate(result.prm_mst_next_create)}\r\n        </TableCell>\r\n        \r\n\r\n        {/* {/* <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_rate}\r\n        </TableCell> */}\r\n        {/* <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_multiplier}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_adder}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_act_cost}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_chg_costcenter}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_chg_account}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_crd_costcenter}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_crd_account}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_time_card_no}\r\n        </TableCell> */} \r\n      </TableRow>\r\n    ));\r\n  };\r\n  const formatDate = (dateObject) => {\r\n    const date = new Date(dateObject.date);\r\n\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n\r\n    const hours = date.getHours().toString().padStart(2, \"0\");\r\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n    const seconds = date.getSeconds().toString().padStart(2, \"0\");\r\n\r\n    return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const totalQty = Result.reduce(\r\n    (acc, item) => acc + (parseFloat(item.wko_ls8_hrs) || 0),\r\n    0\r\n  );\r\n  const totalCost = Result.reduce(\r\n    (acc, item) =>\r\n      acc +\r\n      (parseFloat(item.wko_ls8_hrs) || 0) *\r\n        (parseFloat(item.wko_ls8_act_cost) || 0),\r\n    0\r\n  );\r\n  const handleEmployeeIDChange = async (event, value) => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    setSelected_EmployeeID(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `get_time_cart_reate_craft.php?site_cd=${site_ID}&empId=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          let Craft = response.data.data.result.map((item) => ({\r\n            label: item.emp_ls1_craft + \" : \" + item.crf_mst_desc,\r\n            value: item.emp_ls1_craft,\r\n            rate: item.emp_ls1_charge_rate,\r\n          }));\r\n          setCraft(Craft);\r\n\r\n          setSelected_Craft(response.data.data.result[0].emp_ls1_craft);\r\n          setRate(response.data.data.result[0].emp_ls1_charge_rate);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleHourTypeChange = async (event, value) => {\r\n    setSelected_HourType(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `TimeCartHourTypeGet.php?site_cd=${site_ID}&hourstype=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          setAdder(response.data.data.result[0].hours_type_adder);\r\n          setMultiplier(response.data.data.result[0].hours_type_multiplier);\r\n\r\n          const start = new Date(TimeCardDate);\r\n          const end = new Date(EndTimeCardDate);\r\n          // const range = new Moment.range(start, end);\r\n\r\n          const msDiff = differenceInMilliseconds(end, start);\r\n          const days = differenceInDays(end, start);\r\n          const hours = Math.floor(msDiff / (1000 * 60 * 60)); // Total hours\r\n          const min = Math.floor(msDiff / (1000 * 60));\r\n\r\n          const Min = Math.floor(msDiff / (1000 * 60));\r\n          const act_hour = Math.floor(Min / 60);\r\n\r\n          const h = parseFloat(hours);\r\n          const r = parseFloat(Rate);\r\n          const a = parseFloat(response.data.data.result[0].hours_type_adder);\r\n          const m = parseFloat(\r\n            response.data.data.result[0].hours_type_multiplier\r\n          );\r\n\r\n          const f3 = act_hour * (r + a) * m;\r\n          setActualCost(f3);\r\n          setActualHour(hours);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const resetData = () => {\r\n    setSelected_ChargeAccount(\"\");\r\n    setSelected_ChargeCostCenter(\"\");\r\n    setSelected_Craft(\"\");\r\n    setSelected_CreditAccount(\"\");\r\n    setSelected_CreditCostCenter(\"\");\r\n    setSelected_EmployeeID(\"\");\r\n    setSelected_HourType(\"\");\r\n    setActualHour(\"\");\r\n  };\r\n  const handleSubmitTimecard = async () => {\r\n    if (selected_EmployeeID == \"\" || selected_EmployeeID == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Employee ID is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_Craft == \"\" || selected_Craft == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Craft is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field End Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_HourType == \"\" || selected_HourType == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Hour Type is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else {\r\n      let selectedHourType;\r\n      if (\r\n        !selected_HourType ||\r\n        selected_HourType.length === 0 ||\r\n        !selected_HourType.label\r\n      ) {\r\n        selectedHourType = \"\";\r\n      } else {\r\n        const selectedHourType2 = selected_HourType.label.split(\":\");\r\n        selectedHourType = selectedHourType2[0].trim();\r\n      }\r\n\r\n      let date_1 = \"\";\r\n      if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n        date_1 = \"\";\r\n      } else {\r\n        date_1 = Moment(TimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n\r\n      let date_2 = \"\";\r\n      if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n        date_2 = \"\";\r\n      } else {\r\n        date_2 = Moment(EndTimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n      var json_workorderTimeCart = {\r\n        site_cd: site_ID,\r\n        wko_mst_wo_no: WorkOrderNo,\r\n        mst_RowID: RowID,\r\n        assetno: Asset_No,\r\n        selectedEmployeeID: selected_EmployeeID.value,\r\n        selectedCraft:\r\n        selected_Craft && typeof selected_Craft === \"object\"\r\n            ? selected_Craft.value\r\n            : selected_Craft,\r\n        TimeCardDate: date_1,\r\n        EndTimeCardDate: date_2,\r\n        selected_HourType: selectedHourType,\r\n        ActualHour: ActualHour,\r\n        Rate: Rate,\r\n        Multiplier: Multiplier,\r\n        Adder: Adder,\r\n        ActualCost: ActualCost,\r\n        selected_ChargeCostCenter: selected_ChargeCostCenter.value,\r\n        selected_ChargeAccount: selected_ChargeAccount.value,\r\n        selected_CreditCostCenter: selected_CreditCostCenter.value,\r\n        selected_CreditAccount: selected_CreditAccount.value,\r\n        auditUser: emp_owner,\r\n      };\r\n\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_time_card.php\",\r\n          JSON.stringify(json_workorderTimeCart)\r\n        );\r\n        if (response.data.status == \"SUCCESS\") {\r\n          handleClose();\r\n          get_assetmSetup();\r\n          resetData();\r\n          onDataFromSecondComponent(\"SubmitFrom\");\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"8px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n              paddingBottom: \"10px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div style={{ backgroundColor: \"white\" }}>\r\n                <div\r\n                  className=\"template-demo\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <div style={{ marginRight: \"10px\" }}>\r\n                    <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n                  </div>\r\n                  <div\r\n                    className=\"template-demo\"\r\n                    style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  >\r\n                    <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n                    PM Setup\r\n                    </div>\r\n                    <div className=\"TimeCartPartCosting\">\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {(totalQty * 1).toFixed(2)}\r\n                      </span>{\" \"}\r\n                      Total Parts Costing{\" \"}\r\n                      <span style={{ color: \"#19d895\" }}>\r\n                        ${totalCost.toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>{renderTableHeader()}</TableRow>\r\n                  </TableHead>\r\n                  <TableBody>{renderTableRows()}</TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            <div>\r\n              <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={show}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n                disableBackdropClick\r\n                sx={{\r\n                  width: \"50vw\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  <img src={logo} style={{ width: \"30px\", height: \"30px\",marginRight: \"2px\" }} />\r\n                  PM Setup\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \"15px\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      spacing={1.5}\r\n                      className=\"timeCartPopuplabel\"\r\n                    >\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Employee ID:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={EmployeeID}\r\n                          value={selected_EmployeeID}\r\n                          onChange={(event, value) =>\r\n                            handleEmployeeIDChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Craft:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={Craft}\r\n                          value={selected_Craft}\r\n                          onChange={(event, value) => {\r\n                            setSelected_Craft(value || null);\r\n                            setRate(value ? value.rate : null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={TimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card End Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={EndTimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setEndTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Hour Type:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={HourType}\r\n                          value={selected_HourType}\r\n                          onChange={(event, value) =>\r\n                            handleHourTypeChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Actual Hour:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          className=\"Extrasize\"\r\n                          fullWidth\r\n                          disabled\r\n                          value={ActualHour}\r\n                          onChange={(e) => {\r\n                            setActualHour(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeCostCenter}\r\n                          value={selected_ChargeCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeAccount}\r\n                          value={selected_ChargeAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditCostCenter}\r\n                          value={selected_CreditCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditAccount}\r\n                          value={selected_CreditAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <div className=\"timeCartSubmit\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"button\" // Remove this line\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        handleSubmitTimecard();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              {/* <button\r\n                type=\"button\"\r\n                style={{\r\n                  padding: \"5px 10px\",\r\n                  background: \"none\",\r\n                  color: \"blue\",\r\n                  border: \"none\",\r\n                  borderRadius: \"4px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={handleShow}\r\n              >\r\n                + Add PM Setup\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PmSetup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport {\r\n  differenceInMilliseconds,\r\n  differenceInDays,\r\n  differenceInHours,\r\n  differenceInMinutes,\r\n} from \"date-fns\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport httpCommon from \"src/http-common\";\r\nimport { format, setHours } from \"date-fns\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport logo from \"../../../assets/img/relocation.png\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst RelocationHistory = ({ data, onDataFromSecondComponent }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const { RowID } = data;\r\n  const { Asset_No } = data;\r\n  const { WorkOrderNo } = data;\r\n\r\nconsole.log(\"RowID___\",RowID);\r\nconsole.log(\"Asset_No____\",Asset_No);\r\n\r\n  const location = useLocation();\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const [EmployeeID, setEmployeeID] = useState([]);\r\n  const [selected_EmployeeID, setSelected_EmployeeID] = useState([]);\r\n\r\n  const [Craft, setCraft] = useState([]);\r\n  const [selected_Craft, setSelected_Craft] = useState([]);\r\n\r\n  const [TimeCardDate, setTimeCardDate] = useState(new Date());\r\n  const [EndTimeCardDate, setEndTimeCardDate] = useState(new Date());\r\n\r\n  const [HourType, setHourType] = useState([]);\r\n  const [selected_HourType, setSelected_HourType] = useState([]);\r\n\r\n  const [ActualHour, setActualHour] = useState(\"0\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [CreditCostCenter, setCreditCostCenter] = useState([]);\r\n  const [selected_CreditCostCenter, setSelected_CreditCostCenter] = useState(\r\n    []\r\n  );\r\n  const [EmpDropData, setEmpDropData] = useState([]);\r\n  const [CreditAccount, setCreditAccount] = useState([]);\r\n  const [selected_CreditAccount, setSelected_CreditAccount] = useState([]);\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID2, setRowID2] = useState(\"\");\r\n\r\n  const [AssetNo, setAssetNo] = useState(\"\");\r\n  const [Rate, setRate] = useState(\"\");\r\n  const [Multiplier, setMultiplier] = useState(\"\");\r\n  const [Adder, setAdder] = useState(\"\");\r\n  const [ActualCost, setActualCost] = useState(\"\");\r\n  const [TimeCardNo, setTimeCardNo] = useState(\"\");\r\n  const [isEmpNoEmpty, setIsEmpEmpty] = useState(false);\r\n  // Get Header Data\r\n  const get_assetrelocationhistory = async (site_ID, RowID) => {\r\n    try { \r\n      const response = await httpCommon.get(\r\n        `/get_assetrelocationhistory.php?site_cd=${site_ID}&Asset_No=${Asset_No}`\r\n      );\r\n        console.log(\"response_____setup\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n       // setHeader(response.data.data.header);\r\n       setHeader([\"add\",\"sss\"]);\r\n        setResult(response.data.data.result);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n    get_assetrelocationhistory(site_ID, RowID);\r\n\r\n    get_workorder_status(site_ID, \"All\");\r\n  }, [location]);\r\n\r\n \r\n  const get_workorder_status = async (site_ID, type) => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `get_dropdown.php?site_cd=${site_ID}&type=${type}`\r\n      );\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        let EmployeeID = response.data.data.Employee_Supervisor_Id.map(\r\n          (item) => ({\r\n            label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n            value: item.emp_mst_empl_id,\r\n          })\r\n        );\r\n        setEmployeeID(EmployeeID);\r\n\r\n        let Craft = response.data.data.Employee_Primary_Craft.map((item) => ({\r\n          label: item.crf_mst_crf_cd + \" : \" + item.crf_mst_desc,\r\n          value: item.crf_mst_crf_cd,\r\n        }));\r\n        // setCraft(Craft);\r\n\r\n        let HourType = response.data.data.HoursType.map((item) => ({\r\n          label: item.hours_type_cd,\r\n          value: item.hours_type_cd,\r\n        }));\r\n        setHourType(HourType);\r\n\r\n        let ChargeCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setChargeCostCenter(ChargeCostCenter);\r\n\r\n        let ChargeAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setChargeAccount(ChargeAccount);\r\n\r\n        let CreditCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setCreditCostCenter(CreditCostCenter);\r\n\r\n        let CreditAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setCreditAccount(CreditAccount);\r\n\r\n        //get_dropdown_ParentFlag(site_ID,selected_asset);\r\n        // get_workordermaster_select(site_ID,selected_asset);\r\n        // New_WorkOrderTimeCard();\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // console.error(\"Error fetching data:\", error);\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n       \r\n          <TableCell style={cellStyle}>\r\n            Ast Loc S Asset Olocn\r\n          </TableCell>\r\n\r\n          <TableCell style={cellStyle}>\r\n            Old Loc Desc\r\n          </TableCell>\r\n\r\n          <TableCell style={cellStyle}>\r\n            Ast Loc S Asset Nlocn\r\n          </TableCell>\r\n\r\n          <TableCell style={cellStyle}>\r\n            New Loc Desc\r\n          </TableCell>\r\n\r\n          <TableCell style={cellStyle}>\r\n            Ast Loc S Asset Reason\r\n          </TableCell>\r\n          <TableCell style={cellStyle}>\r\n            Audit User\r\n          </TableCell>\r\n          <TableCell style={cellStyle}>\r\n            Audit Date\r\n          </TableCell>\r\n\r\n          \r\n        \r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index}>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_loc_s_asset_olocn}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.old_loc_desc}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_loc_s_asset_nlocn}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n         {result.new_loc_desc}\r\n        </TableCell>\r\n       \r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.ast_loc_s_asset_reason}\r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.audit_user}\r\n        </TableCell>\r\n         <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {formatDate(result.audit_date)}\r\n        </TableCell>\r\n        \r\n      </TableRow>\r\n    ));\r\n  };\r\n  const formatDate = (dateObject) => {\r\n    if (dateObject && dateObject.date) {\r\n   \r\n    const date = new Date(dateObject.date);\r\n\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n\r\n    const hours = date.getHours().toString().padStart(2, \"0\");\r\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n    //const seconds = date.getSeconds().toString().padStart( \"0\");\r\n\r\n    return `${day}-${month}-${year} ${hours}:${minutes}`;\r\n    }\r\n  };\r\n\r\n  const totalQty = Result.reduce(\r\n    (acc, item) => acc + (parseFloat(item.wko_ls8_hrs) || 0),\r\n    0\r\n  );\r\n  const totalCost = Result.reduce(\r\n    (acc, item) =>\r\n      acc +\r\n      (parseFloat(item.wko_ls8_hrs) || 0) *\r\n        (parseFloat(item.wko_ls8_act_cost) || 0),\r\n    0\r\n  );\r\n  const handleEmployeeIDChange = async (event, value) => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    setSelected_EmployeeID(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `get_time_cart_reate_craft.php?site_cd=${site_ID}&empId=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          let Craft = response.data.data.result.map((item) => ({\r\n            label: item.emp_ls1_craft + \" : \" + item.crf_mst_desc,\r\n            value: item.emp_ls1_craft,\r\n            rate: item.emp_ls1_charge_rate,\r\n          }));\r\n          setCraft(Craft);\r\n\r\n          setSelected_Craft(response.data.data.result[0].emp_ls1_craft);\r\n          setRate(response.data.data.result[0].emp_ls1_charge_rate);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleHourTypeChange = async (event, value) => {\r\n    setSelected_HourType(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `TimeCartHourTypeGet.php?site_cd=${site_ID}&hourstype=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          setAdder(response.data.data.result[0].hours_type_adder);\r\n          setMultiplier(response.data.data.result[0].hours_type_multiplier);\r\n\r\n          const start = new Date(TimeCardDate);\r\n          const end = new Date(EndTimeCardDate);\r\n          // const range = new Moment.range(start, end);\r\n\r\n          const msDiff = differenceInMilliseconds(end, start);\r\n          const days = differenceInDays(end, start);\r\n          const hours = Math.floor(msDiff / (1000 * 60 * 60)); // Total hours\r\n          const min = Math.floor(msDiff / (1000 * 60));\r\n\r\n          const Min = Math.floor(msDiff / (1000 * 60));\r\n          const act_hour = Math.floor(Min / 60);\r\n\r\n          const h = parseFloat(hours);\r\n          const r = parseFloat(Rate);\r\n          const a = parseFloat(response.data.data.result[0].hours_type_adder);\r\n          const m = parseFloat(\r\n            response.data.data.result[0].hours_type_multiplier\r\n          );\r\n\r\n          const f3 = act_hour * (r + a) * m;\r\n          setActualCost(f3);\r\n          setActualHour(hours);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const resetData = () => {\r\n    setSelected_ChargeAccount(\"\");\r\n    setSelected_ChargeCostCenter(\"\");\r\n    setSelected_Craft(\"\");\r\n    setSelected_CreditAccount(\"\");\r\n    setSelected_CreditCostCenter(\"\");\r\n    setSelected_EmployeeID(\"\");\r\n    setSelected_HourType(\"\");\r\n    setActualHour(\"\");\r\n  };\r\n  const handleSubmitTimecard = async () => {\r\n    if (selected_EmployeeID == \"\" || selected_EmployeeID == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Employee ID is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_Craft == \"\" || selected_Craft == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Craft is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field End Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_HourType == \"\" || selected_HourType == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Hour Type is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else {\r\n      let selectedHourType;\r\n      if (\r\n        !selected_HourType ||\r\n        selected_HourType.length === 0 ||\r\n        !selected_HourType.label\r\n      ) {\r\n        selectedHourType = \"\";\r\n      } else {\r\n        const selectedHourType2 = selected_HourType.label.split(\":\");\r\n        selectedHourType = selectedHourType2[0].trim();\r\n      }\r\n\r\n      let date_1 = \"\";\r\n      if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n        date_1 = \"\";\r\n      } else {\r\n        date_1 = Moment(TimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n\r\n      let date_2 = \"\";\r\n      if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n        date_2 = \"\";\r\n      } else {\r\n        date_2 = Moment(EndTimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n      var json_workorderTimeCart = {\r\n        site_cd: site_ID,\r\n        wko_mst_wo_no: WorkOrderNo,\r\n        mst_RowID: RowID,\r\n        assetno: Asset_No,\r\n        selectedEmployeeID: selected_EmployeeID.value,\r\n        selectedCraft:\r\n        selected_Craft && typeof selected_Craft === \"object\"\r\n            ? selected_Craft.value\r\n            : selected_Craft,\r\n        TimeCardDate: date_1,\r\n        EndTimeCardDate: date_2,\r\n        selected_HourType: selectedHourType,\r\n        ActualHour: ActualHour,\r\n        Rate: Rate,\r\n        Multiplier: Multiplier,\r\n        Adder: Adder,\r\n        ActualCost: ActualCost,\r\n        selected_ChargeCostCenter: selected_ChargeCostCenter.value,\r\n        selected_ChargeAccount: selected_ChargeAccount.value,\r\n        selected_CreditCostCenter: selected_CreditCostCenter.value,\r\n        selected_CreditAccount: selected_CreditAccount.value,\r\n        auditUser: emp_owner,\r\n      };\r\n\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_time_card.php\",\r\n          JSON.stringify(json_workorderTimeCart)\r\n        );\r\n        if (response.data.status == \"SUCCESS\") {\r\n          handleClose();\r\n          get_assetrelocationhistory();\r\n          resetData();\r\n          onDataFromSecondComponent(\"SubmitFrom\");\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"8px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n              paddingBottom: \"10px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div style={{ backgroundColor: \"white\" }}>\r\n                <div\r\n                  className=\"template-demo\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <div style={{ marginRight: \"10px\" }}>\r\n                    <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n                  </div>\r\n                  <div\r\n                    className=\"template-demo\"\r\n                    style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  >\r\n                    <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n                    Relocation History\r\n                    </div>\r\n                    <div className=\"TimeCartPartCosting\">\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {(totalQty * 1).toFixed(2)}\r\n                      </span>{\" \"}\r\n                      Total Parts Costing{\" \"}\r\n                      <span style={{ color: \"#19d895\" }}>\r\n                        ${totalCost.toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>{renderTableHeader()}</TableRow>\r\n                  </TableHead>\r\n                  <TableBody>{renderTableRows()}</TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            <div>\r\n              <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={show}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n                disableBackdropClick\r\n                sx={{\r\n                  width: \"50vw\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  <img src={logo} style={{ width: \"30px\", height: \"30px\",marginRight: \"2px\" }} />\r\n                  Relocation History\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \"15px\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      spacing={1.5}\r\n                      className=\"timeCartPopuplabel\"\r\n                    >\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Employee ID:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={EmployeeID}\r\n                          value={selected_EmployeeID}\r\n                          onChange={(event, value) =>\r\n                            handleEmployeeIDChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Craft:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={Craft}\r\n                          value={selected_Craft}\r\n                          onChange={(event, value) => {\r\n                            setSelected_Craft(value || null);\r\n                            setRate(value ? value.rate : null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={TimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card End Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={EndTimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setEndTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Hour Type:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={HourType}\r\n                          value={selected_HourType}\r\n                          onChange={(event, value) =>\r\n                            handleHourTypeChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Actual Hour:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          className=\"Extrasize\"\r\n                          fullWidth\r\n                          disabled\r\n                          value={ActualHour}\r\n                          onChange={(e) => {\r\n                            setActualHour(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeCostCenter}\r\n                          value={selected_ChargeCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeAccount}\r\n                          value={selected_ChargeAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditCostCenter}\r\n                          value={selected_CreditCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditAccount}\r\n                          value={selected_CreditAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <div className=\"timeCartSubmit\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"button\" // Remove this line\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        handleSubmitTimecard();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              {/* <button\r\n                type=\"button\"\r\n                style={{\r\n                  padding: \"5px 10px\",\r\n                  background: \"none\",\r\n                  color: \"blue\",\r\n                  border: \"none\",\r\n                  borderRadius: \"4px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={handleShow}\r\n              >\r\n                + Add Relocation History\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RelocationHistory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport MaterialTable from \"material-table\";\r\nimport httpCommon from \"src/http-common\";\r\nimport Iconify from \"src/components/iconify\";\r\n\r\nconst WorkStockNoPopupData = ({ onRowClick }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [data, setData] = useState([]);\r\n  const [totalData, setTotalData] = useState(0);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(null);\r\n  const [viewedRows, setViewedRows] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    httpCommon\r\n      .get(\"/get_stock_no_popup_data.php?site_cd=\" + site_ID)\r\n      .then((response) => {\r\n        //console.log(\"response__NET\", response);\r\n        Swal.close();\r\n        setData(response.data.data);\r\n        setTotalData(response.data.data.length);\r\n        // onRowClick(response.data.data.WorkAssetNo.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //Table colums\r\n  const columns = [\r\n    {\r\n      title: \"Stock No\",\r\n      field: \"itm_mst_stockno\",\r\n      cellStyle: {\r\n        width: '60px', // Set the width as per your requirement\r\n      },\r\n      render: (rowData) => renderIcon(rowData),\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      field: \"itm_mst_desc\",\r\n      cellStyle: {\r\n        width: '350px', // Set the width as per your requirement\r\n      },\r\n      render: (rowData) =>\r\n        rowData.itm_mst_desc.length > 40\r\n          ? `${rowData.itm_mst_desc.substring(0, 40)}...`\r\n          : rowData.itm_mst_desc,\r\n    },\r\n    { title: \"Extended Description\", field: \"itm_mst_ext_desc\", cellStyle: {\r\n        width: '250px', // Set the width as per your requirement\r\n      },},\r\n    { title: \"Part No\", field: \"itm_mst_partno\" },\r\n    { title: \"Total OH\", field: \"itm_mst_ttl_oh\" },\r\n    { title: \"Type\", field: \"itm_mst_type\" },\r\n    { title: \"Commodity Code\", field: \"itm_mst_com_code\", cellStyle: {\r\n        width: '250px', // Set the width as per your requirement\r\n      }, },\r\n    { title: \"Stock Group\", field: \"itm_mst_itm_grp\",cellStyle: {\r\n        width: '200px', // Set the width as per your requirement\r\n      }, },\r\n  ];\r\n\r\n  const renderIcon = (rowData) => {\r\n    if (rowData.itm_mst_stockno === selectedRowKeys) {\r\n      return (\r\n        <div>\r\n          <Iconify\r\n            icon=\"simple-line-icons:check\"\r\n            style={{\r\n              marginRight: \"0px\",\r\n              marginTop: \"2px\",\r\n              float: \"left\",\r\n              fontSize: \"16px\",\r\n              color: \"#289e49\",\r\n            }}\r\n          />\r\n\r\n          {rowData.itm_mst_stockno}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{rowData.itm_mst_stockno}</div>;\r\n  };\r\n  const handleRowClick = (event, rowData) => {\r\n    if (selectedRowKeys && selectedRowKeys === rowData.itm_mst_stockno) {\r\n      onRowClick(rowData.itm_mst_stockno, rowData.itm_mst_desc, 1);\r\n    }\r\n    setSelectedRowKeys(rowData.itm_mst_stockno);\r\n    onRowClick(rowData.itm_mst_stockno, rowData.itm_mst_desc);\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"container Ordertbl\">\r\n          <MaterialTable\r\n            title=\"\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              pageSize:10,\r\n              pageSizeOptions: false,\r\n              overflowY: \"auto\",\r\n              paginationPosition: \"top\",\r\n              toolbarButtonAlignment: \"right\",\r\n              paginationType: \"normal\",\r\n              rowStyle: (rowData) => ({\r\n                backgroundColor:\r\n                  rowData.itm_mst_stockno === selectedRowKeys\r\n                    ? \"#a9ebb9\"\r\n                    : \"#FFF\",\r\n                fontSize: \"12px !important\",\r\n              }),\r\n            }}\r\n            onRowClick={handleRowClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkStockNoPopupData;\r\n"],"names":["_ref","onRowClick","onChangePage","onSearchChange","asset","site_ID","localStorage","getItem","data","setData","useState","selectedRowKeys","setSelectedRowKeys","viewedRows","setViewedRows","window","performance","now","useEffect","Swal","title","allowOutsideClick","httpCommon","get","then","response","WorkAssetNo","length","catch","error","console","log","columns","field","render","rowData","renderIcon","width","ast_mst_asset_no","_jsxs","children","_jsx","Iconify","icon","style","marginRight","marginTop","float","fontSize","color","_Fragment","class","MaterialTable","options","search","paging","pageSize","pageSizeOptions","overflowY","paginationPosition","toolbarButtonAlignment","paginationType","rowStyle","backgroundColor","handleRowClick","event","ast_mst_asset_shortdesc","page","viewedRowsCount","searchText","filteredData","filter","item","assetNo","toLowerCase","assetDesc","ast_mst_asset_longdesc","workArea","ast_mst_work_area","assetType","ast_mst_asset_type","includes","handleSearch","MySwal","withReactContent","onDataFromSecondComponent","emp_owner","RowID","Asset_No","WorkOrderNo","location","useLocation","Header","setHeader","React","Result","setResult","show","setShow","showModal","setShowModal","handleClose","EmployeeID","setEmployeeID","selected_EmployeeID","setSelected_EmployeeID","Craft","setCraft","selected_Craft","setSelected_Craft","TimeCardDate","setTimeCardDate","Date","EndTimeCardDate","setEndTimeCardDate","HourType","setHourType","selected_HourType","setSelected_HourType","ActualHour","setActualHour","ChargeCostCenter","setChargeCostCenter","selected_ChargeCostCenter","setSelected_ChargeCostCenter","ChargeAccount","setChargeAccount","selected_ChargeAccount","setSelected_ChargeAccount","CreditCostCenter","setCreditCostCenter","selected_CreditCostCenter","setSelected_CreditCostCenter","EmpDropData","setEmpDropData","CreditAccount","setCreditAccount","selected_CreditAccount","setSelected_CreditAccount","Button_save","setButton_save","RowID2","setRowID2","AssetNo","setAssetNo","Rate","setRate","Multiplier","setMultiplier","Adder","setAdder","ActualCost","setActualCost","TimeCardNo","setTimeCardNo","isEmpNoEmpty","setIsEmpEmpty","label","inputProps","get_assetchecklist","async","concat","status","result","text","message","get_workorder_status","type","customClass","container","Employee_Supervisor_Id","map","emp_mst_empl_id","emp_mst_name","value","Employee_Primary_Craft","crf_mst_crf_cd","crf_mst_desc","HoursType","hours_type_cd","CostCenter","costcenter","descs","account","handleSubmitTimecard","reduce","acc","parseFloat","wko_ls8_hrs","wko_ls8_act_cost","fire","position","popup","html","showConfirmButton","timer","backdrop","selectedHourType","split","trim","date_1","Moment","format","date_2","json_workorderTimeCart","site_cd","wko_mst_wo_no","mst_RowID","assetno","selectedEmployeeID","selectedCraft","auditUser","post","JSON","stringify","className","borderRadius","boxShadow","paddingBottom","display","alignItems","src","logo","height","flexDirection","fontWeight","TableContainer","component","Paper","Table","TableHead","TableRow","renderTableHeader","cellStyle","whiteSpace","overflow","textOverflow","textAlign","padding","TableCell","attr","index","toUpperCase","TableBody","ast_job_job_cd","job_mst_desc","ast_job_carry","Checkbox","defaultChecked","Button","variant","Dialog","onClose","open","maxWidth","fullWidth","disableBackdropClick","sx","marginLeft","DialogTitle","m","p","id","IconButton","onClick","right","top","theme","palette","grey","DialogContent","dividers","Grid","spacing","xs","md","Autocomplete","onChange","labelParts","beforeColonValue","emp_ls1_craft","rate","emp_ls1_charge_rate","handleEmployeeIDChange","renderInput","params","TextField","size","placeholder","DateTimePicker","newDate","slotProps","textField","hours_type_adder","hours_type_multiplier","start","end","msDiff","differenceInMilliseconds","hours","differenceInDays","Math","floor","Min","act_hour","r","a","handleHourTypeChange","disabled","e","target","DialogActions","justifyContent","preventDefault","BootstrapDialog","styled","_ref2","emp_mst_login_id","MaterialOrderResult","setMaterialOrderResult","handleCloseModal","StockNo","setStockNo","selected_StockNo","setSelected_StockNo","Description","setDescription","PartNo","setPartNo","TotalOh","setTotalOh","QtyNeeded","setQtyNeeded","StockLocation","setStockLocation","selected_StockLocation","setSelected_StockLocation","setRowID","setWorkOrderNo","selected_Charge_Cost_Center","setselected_Charge_Cost_Center","UOM","setUOM","ItemCost","setItemCost","MaterialRequestNo","setMaterialRequestNo","MrLineNo","setMrLineNo","MrApprovalStatus","setMrApprovalStatus","ActualQuantity","setActualQuantity","ContractPoNo","setContractPoNo","ContractPoLine","setContractPoLine","getStockNo","setGetStockNo","modalOpenAsset","setModalOpenAsset","modalRowDt","setmodalRowDt","astMstLabel","setAstMstLabel","AssetMandatoryFiled","setAssetMandatoryFiled","get_Asset_Spares","getAssetSparesFromLebel","getAssetMandatoryfiled","header","ast_ls1","MandatoryField","findCustomizeLabel","columnName","Array","isArray","matchingColumn","find","column_name","customize_label","findCustomizerequiredLabel","foundItem","cf_label_required","ast_ls1_stock_no","ast_ls1_varchar1","ast_ls1_desc","ast_ls1_qty_needed","itm_mst_ttl_oh","CustomTextField","_ref3","rightIcons","props","InputProps","endAdornment","inputFields","setInputFields","selectStock","removeInputFields","rows","undefined","splice","updatedInputFields","handleEditClick","handleCloseModal2","handleCancelClick","handleNumericInputChange_14","setterFunction","replace","slice","parts","integerPart","decimalPart","handleChange","fieldName","list","Object","keys","cursor","transition","onMouseEnter","currentTarget","onMouseLeave","itm_mst_desc","Typography","textDecoration","FontAwesomeIcon","faCircleXmark","WorkStockNoPopupData","RowDescp","secondRowData","stockDt","newData","newData2","itm_mst_partno","newData3","itm_det_ttl_oh","handleRowPopupData","startIcon","isValid","forEach","confirmButtonText","isConfirmed","handleShow","json_UpdateAsset","getDescription","setGetDescription","Rating","setRating","UsageUOM","setUsageUOM","selectedUom","setSelectedUom","MeterInstallDate","setMeterInstallDate","UsageDate","setUsageDate","MeterID","setMeterID","Selected_UsageUOM","setSelected_UsageUOM","astRetLabel","setRetLabel","AssetSpecificationMandatoryFiled","setAssetSpecificationMandatoryFiled","get_Asset_Specification","getSpecificationUOM","getAssetSpecificationFromLebel","getAssetSpecificationMandatoryfiled","UOMLIST","uom_mst_uom","uom_mst_desc","key","ast_rat","ast_rat_desc","ast_rat_rating","ast_rat_uom","TextareaAutosize","minRows","newValue","disableAnimation","TotalRunning","setTotalRunning","MeterPoint","setMeterPoint","AstLs2Desc","setAstLs2Desc","GetMasterInstallDate","setgetMasterInstallDate","GetUsageDate","setgetUsageDate","GetUsageReading","setGetUsageReading","AvgUsage","setAvgUsage","MeterInstalledUsage","setMeterInstalledUsage","LtdUsage","setLtdUsage","Maxavgusage","setMaxavgusage","GetWarrantyUsage","setWarrantyUsage","GetMeterMaximum","setGetMeterMaximum","MeterInstallWO","setMeterInstallWO","AlertROFlag","setAlertROFlag","AlertMAFlag","setAlertMAFlag","astls2Label","setAstls2Label","AssetUsageMandatoryFiled","setAssetUsageMandatoryFiled","errorField","setErrorField","get_Asset_Usage","getUsageUOM","getAssetUsageFromLebel","getAssetUsageMandatoryfiled","ast_ls2","formatDateTime","dateTimeString","dateObj","timeZoneOffset","getTimezoneOffset","getTime","toISOString","ast_ls2_meter_id","ast_ls2_usage_uom","ast_ls2_incr_usage_flag","ast_ls2_meter_point","ast_ls2_meter_desc","ast_ls2_meter_install_date","ast_ls2_usage_date","ast_ls2_usage_reading","ast_ls2_max_avg_usage","ast_ls2_old_ltd_usage","ast_ls2_warranty_usage","ast_ls2_meter_maximum","ast_ls2_meter_install_wo","ast_ls2_alert_ro_flag","ast_ls2_alert_ma_flag","ast_ls2_avg_usage","ast_ls2_ltd_usage","FormControlLabel","control","checked","date","some","dateString","toLocaleString","timeZone","day","month","year","hour","minute","formatDate2","get_assetwohistory","items","parseISO","wko_mst_org_date","cardTitle","url","cardSubtitle","wko_mst_status","cardDetailedText","wko_mst_descs","Chrono","mode","renderTableRows","get_assetmSetup","formatDate","dateObject","getDate","toString","padStart","getMonth","getFullYear","getHours","minutes","getMinutes","seconds","getSeconds","totalQty","totalCost","toFixed","prm_mst_pm_no","prm_mst_curr_wo","prm_mst_freq_code","prm_mst_desc","prm_mst_meter_id","prm_mst_lpm_usg","prm_mst_lpm_uom","prm_mst_next_create","get_assetrelocationhistory","ast_loc_s_asset_olocn","old_loc_desc","ast_loc_s_asset_nlocn","new_loc_desc","ast_loc_s_asset_reason","audit_user","audit_date","totalData","setTotalData","substring","itm_mst_stockno"],"sourceRoot":""}