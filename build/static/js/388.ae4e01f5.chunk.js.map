{"version":3,"file":"static/js/388.ae4e01f5.chunk.js","mappings":"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","sources":["components/lightbox/use-light-box.js","components/lightbox/styles.js","components/lightbox/lightbox.js","sections/_examples/extra/lightbox-view.js","pages/components/extra/lightbox.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useLightBox(slides) {\n  const [selected, setSelected] = useState(-1);\n\n  const handleOpen = useCallback(\n    (slideUrl) => {\n      const slideIndex = slides.findIndex((slide) =>\n        slide.type === 'video' ? slide.poster === slideUrl : slide.src === slideUrl\n      );\n\n      setSelected(slideIndex);\n    },\n    [slides]\n  );\n\n  const handleClose = useCallback(() => {\n    setSelected(-1);\n  }, []);\n\n  return {\n    selected,\n    open: selected >= 0,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    setSelected,\n  };\n}\n","// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport GlobalStyles from '@mui/material/GlobalStyles';\n\n// ----------------------------------------------------------------------\n\nexport default function StyledLightbox() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.yarl__root': {\n          '--yarl__thumbnails_thumbnail_padding': 0,\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\n        },\n        // Caption\n        '.yarl__slide_title': {\n          fontSize: theme.typography.h5.fontSize,\n          fontWeight: theme.typography.h5.fontWeight,\n          lineHeight: theme.typography.h5.lineHeight,\n        },\n        '.yarl__slide_description': {\n          fontSize: theme.typography.body2.fontSize,\n          fontWeight: theme.typography.body2.fontWeight,\n          lineHeight: theme.typography.body2.lineHeight,\n        },\n        // Button\n        '.yarl__button': {\n          filter: 'unset',\n        },\n        // Thumbnails\n        '.yarl__thumbnails_thumbnail': {\n          opacity: 0.48,\n          '&.yarl__thumbnails_thumbnail_active': {\n            opacity: 1,\n          },\n        },\n        '.yarl__thumbnails_vignette': {\n          '--yarl__thumbnails_vignette_size': 0,\n        },\n        // Video\n        '.yarl__video_container': {\n          backgroundColor: theme.palette.common.black,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n","import PropTypes from 'prop-types';\nimport ReactLightbox, { useLightboxState } from 'yet-another-react-lightbox';\nimport Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\n// @mui\nimport Box from '@mui/material/Box';\n//\nimport Iconify from '../iconify';\n//\nimport StyledLightbox from './styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = 24;\n\nexport default function Lightbox({\n  slides,\n  disabledZoom,\n  disabledVideo,\n  disabledTotal,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n  onGetCurrentIndex,\n  ...other\n}) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <>\n      <StyledLightbox />\n\n      <ReactLightbox\n        slides={slides}\n        animation={{ swipe: 240 }}\n        carousel={{ finite: totalItems < 5 }}\n        controller={{ closeOnBackdropClick: true }}\n        plugins={getPlugins({\n          disabledZoom,\n          disabledVideo,\n          disabledCaptions,\n          disabledSlideshow,\n          disabledThumbnails,\n          disabledFullscreen,\n        })}\n        on={{\n          view: ({ index }) => {\n            if (onGetCurrentIndex) {\n              onGetCurrentIndex(index);\n            }\n          },\n        }}\n        toolbar={{\n          buttons: [\n            <DisplayTotal key={0} totalItems={totalItems} disabledTotal={disabledTotal} />,\n            'close',\n          ],\n        }}\n        render={{\n          iconClose: () => <Iconify width={ICON_SIZE} icon=\"carbon:close\" />,\n          iconZoomIn: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-in\" />,\n          iconZoomOut: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-out\" />,\n          iconSlideshowPlay: () => <Iconify width={ICON_SIZE} icon=\"carbon:play\" />,\n          iconSlideshowPause: () => <Iconify width={ICON_SIZE} icon=\"carbon:pause\" />,\n          iconPrev: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-left\" />,\n          iconNext: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-right\" />,\n          iconExitFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:center-to-fit\" />,\n          iconEnterFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:fit-to-screen\" />,\n        }}\n        {...other}\n      />\n    </>\n  );\n}\n\nLightbox.propTypes = {\n  disabledCaptions: PropTypes.bool,\n  disabledFullscreen: PropTypes.bool,\n  disabledSlideshow: PropTypes.bool,\n  disabledThumbnails: PropTypes.bool,\n  disabledTotal: PropTypes.bool,\n  disabledVideo: PropTypes.bool,\n  disabledZoom: PropTypes.bool,\n  onGetCurrentIndex: PropTypes.func,\n  slides: PropTypes.array,\n};\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disabledZoom,\n  disabledVideo,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n}) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disabledThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disabledCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disabledFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disabledSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disabledZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disabledVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n\n// ----------------------------------------------------------------------\n\nexport function DisplayTotal({ totalItems, disabledTotal }) {\n  const { currentIndex } = useLightboxState();\n\n  if (disabledTotal) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"span\"\n      className=\"yarl__button\"\n      sx={{\n        typography: 'body2',\n        alignItems: 'center',\n        display: 'inline-flex',\n        justifyContent: 'center',\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Box>\n  );\n}\n\nDisplayTotal.propTypes = {\n  disabledTotal: PropTypes.bool,\n  totalItems: PropTypes.number,\n};\n","import { useState } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Switch from '@mui/material/Switch';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// routes\nimport { paths } from 'src/routes/paths';\n// _mock\nimport { _mock } from 'src/_mock';\n// components\nimport Image from 'src/components/image';\nimport Lightbox, { useLightBox } from 'src/components/lightbox';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nconst images = [...Array(4)].map((_, index) => ({\n  src: _mock.image.cover(index + 1),\n  title: 'Flamingo',\n  description: 'Vicko Mozara \\n Veliki zali, Dubravica, Croatia',\n}));\n\nconst slides = [\n  ...images,\n  {\n    type: 'video',\n    width: 1280,\n    height: 720,\n    poster:\n      'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg',\n    sources: [\n      {\n        src: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',\n        type: 'video/mp4',\n      },\n    ],\n  },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function LightboxView() {\n  const lightbox = useLightBox(slides);\n\n  const [state, setState] = useState({\n    disabledZoom: false,\n    disabledVideo: false,\n    disabledTotal: false,\n    disabledCaptions: false,\n    disabledSlideshow: false,\n    disabledThumbnails: false,\n    disabledFullscreen: false,\n  });\n\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Lightbox\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Lightbox' },\n            ]}\n            moreLink={['https://www.npmjs.com/package/yet-another-react-lightbox']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Card sx={{ p: 3 }}>\n          <Grid container spacing={3}>\n            <Grid xs={12} md={9}>\n              <Box\n                gap={1}\n                display=\"grid\"\n                gridTemplateColumns={{\n                  xs: 'repeat(2, 1fr)',\n                  sm: 'repeat(3, 1fr)',\n                  md: 'repeat(4, 1fr)',\n                }}\n              >\n                {slides.map((slide) => {\n                  const thumbnail = slide.type === 'video' ? slide.poster : slide.src;\n\n                  return (\n                    <Image\n                      key={thumbnail}\n                      alt={thumbnail}\n                      src={thumbnail}\n                      ratio=\"1/1\"\n                      onClick={() => lightbox.onOpen(`${thumbnail}`)}\n                      sx={{\n                        borderRadius: 1,\n                        cursor: 'pointer',\n                      }}\n                    />\n                  );\n                })}\n              </Box>\n            </Grid>\n\n            <Grid xs={12} md={3}>\n              <Paper sx={{ p: 3, bgcolor: 'background.neutral', borderRadius: 2 }}>\n                <FormControl component=\"fieldset\" variant=\"standard\">\n                  <Stack spacing={2}>\n                    <FormLabel component=\"legend\" sx={{ typography: 'body2' }}>\n                      Controls\n                    </FormLabel>\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          size=\"small\"\n                          name=\"disabledZoom\"\n                          checked={state.disabledZoom}\n                          onChange={handleChange}\n                        />\n                      }\n                      label=\"Disabled Zoom\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          size=\"small\"\n                          name=\"disabledTotal\"\n                          checked={state.disabledTotal}\n                          onChange={handleChange}\n                        />\n                      }\n                      label=\"Disabled Total\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          size=\"small\"\n                          name=\"disabledVideo\"\n                          checked={state.disabledVideo}\n                          onChange={handleChange}\n                        />\n                      }\n                      label=\"Disabled Video\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          size=\"small\"\n                          name=\"disabledCaptions\"\n                          checked={state.disabledCaptions}\n                          onChange={handleChange}\n                        />\n                      }\n                      label=\"Disabled Captions\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          size=\"small\"\n                          name=\"disabledSlideshow\"\n                          checked={state.disabledSlideshow}\n                          onChange={handleChange}\n                        />\n                      }\n                      label=\"Disabled Slideshow\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          size=\"small\"\n                          name=\"disabledThumbnails\"\n                          checked={state.disabledThumbnails}\n                          onChange={handleChange}\n                        />\n                      }\n                      label=\"Disabled Thumbnails\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          size=\"small\"\n                          name=\"disabledFullscreen\"\n                          checked={state.disabledFullscreen}\n                          onChange={handleChange}\n                        />\n                      }\n                      label=\"Disabled Fullscreen\"\n                    />\n                  </Stack>\n                </FormControl>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Card>\n      </Container>\n\n      <Lightbox\n        open={lightbox.open}\n        close={lightbox.onClose}\n        slides={slides}\n        index={lightbox.selected}\n        disabledZoom={state.disabledZoom}\n        disabledTotal={state.disabledTotal}\n        disabledVideo={state.disabledVideo}\n        disabledCaptions={state.disabledCaptions}\n        disabledSlideshow={state.disabledSlideshow}\n        disabledThumbnails={state.disabledThumbnails}\n        disabledFullscreen={state.disabledFullscreen}\n      />\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport LightboxView from 'src/sections/_examples/extra/lightbox-view';\n\n// ----------------------------------------------------------------------\n\nexport default function LightboxPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra: Lightbox</title>\n      </Helmet>\n\n      <LightboxView />\n    </>\n  );\n}\n"],"names":["useLightBox","slides","selected","setSelected","useState","open","onOpen","useCallback","slideUrl","slideIndex","findIndex","slide","type","poster","src","onClose","StyledLightbox","theme","useTheme","_jsx","GlobalStyles","styles","alpha","palette","grey","fontSize","typography","h5","fontWeight","lineHeight","body2","filter","opacity","backgroundColor","common","black","ICON_SIZE","Lightbox","_ref","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","other","totalItems","length","_jsxs","_Fragment","children","ReactLightbox","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","_ref2","index","toolbar","buttons","DisplayTotal","render","iconClose","Iconify","width","icon","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","_ref3","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","_ref4","currentIndex","useLightboxState","Box","component","className","sx","alignItems","display","justifyContent","Array","map","_","_mock","image","cover","title","description","height","sources","LightboxView","lightbox","state","setState","handleChange","event","target","name","checked","py","bgcolor","mode","Container","CustomBreadcrumbs","heading","links","href","paths","components","moreLink","my","Card","p","Grid","container","spacing","xs","md","gap","gridTemplateColumns","sm","thumbnail","Image","alt","ratio","onClick","concat","borderRadius","cursor","Paper","FormControl","variant","Stack","FormLabel","FormControlLabel","control","Switch","size","onChange","label","close","LightboxPage","Helmet"],"sourceRoot":""}