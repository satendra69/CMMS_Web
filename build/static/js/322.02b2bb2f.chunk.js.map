{"version":3,"file":"static/js/322.02b2bb2f.chunk.js","mappings":"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","sources":["sections/_examples/mui/menu-view.js","pages/components/mui/menu.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Menu from '@mui/material/Menu';\nimport List from '@mui/material/List';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport Container from '@mui/material/Container';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport ComponentBlock from '../component-block';\n\n// ----------------------------------------------------------------------\n\nconst OPTIONS = [\n  'Show some love to Material-UI',\n  'Show all notification content',\n  'Hide sensitive notification content',\n  'Hide all notification content',\n];\n\nconst OPTIONS_MAXHEIGHT = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\n// ----------------------------------------------------------------------\n\nexport default function MenuView() {\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  const [isOpen, setOpen] = useState(null);\n\n  const [isOpenList, setOpenList] = useState(null);\n\n  const [isOpenMaxHeight, setOpenMaxHeight] = useState(null);\n\n  const handleClick = useCallback((event) => {\n    setOpenMaxHeight(event.currentTarget);\n  }, []);\n\n  const handleClickListItem = useCallback((event) => {\n    setOpenList(event.currentTarget);\n  }, []);\n\n  const handleMenuItemClick = useCallback((event, index) => {\n    setSelectedIndex(index);\n    setOpenList(null);\n  }, []);\n\n  const handleOpen = useCallback((event) => {\n    setOpen(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(null);\n  }, []);\n\n  const handleMaxHeightClose = useCallback(() => {\n    setOpenMaxHeight(null);\n  }, []);\n\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Menu\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Menu' },\n            ]}\n            moreLink={['https://mui.com/components/menus']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Box\n          gap={3}\n          display=\"grid\"\n          gridTemplateColumns={{\n            xs: 'repeat(1, 1fr)',\n            md: 'repeat(3, 1fr)',\n          }}\n        >\n          <ComponentBlock title=\"Simple\">\n            <Button variant=\"outlined\" onClick={handleOpen}>\n              Open Menu\n            </Button>\n            <Menu id=\"simple-menu\" anchorEl={isOpen} onClose={handleClose} open={Boolean(isOpen)}>\n              {['Profile', 'My account', 'Logout'].map((option) => (\n                <MenuItem key={option} selected={option === 'Profile'} onClick={handleClose}>\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Selected\">\n            <List component=\"nav\" aria-label=\"Device settings\">\n              <ListItemButton\n                aria-haspopup=\"true\"\n                aria-controls=\"lock-menu\"\n                aria-label=\"when device is locked\"\n                onClick={handleClickListItem}\n              >\n                <ListItemText primary=\"When device is locked\" secondary={OPTIONS[selectedIndex]} />\n              </ListItemButton>\n            </List>\n\n            <Menu\n              id=\"lock-menu\"\n              anchorEl={isOpenList}\n              onClose={handleClose}\n              open={Boolean(isOpenList)}\n            >\n              {OPTIONS.map((option, index) => (\n                <MenuItem\n                  key={option}\n                  disabled={index === 0}\n                  selected={index === selectedIndex}\n                  onClick={(event) => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Max height\">\n            <IconButton\n              aria-label=\"more\"\n              aria-controls=\"long-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              <Iconify icon=\"eva:more-vertical-fill\" />\n            </IconButton>\n\n            <Menu\n              id=\"long-menu\"\n              anchorEl={isOpenMaxHeight}\n              onClose={handleMaxHeightClose}\n              open={Boolean(isOpenMaxHeight)}\n              slotProps={{\n                paper: {\n                  sx: {\n                    width: '20ch',\n                    maxHeight: 48 * 4.5,\n                  },\n                },\n              }}\n            >\n              {OPTIONS_MAXHEIGHT.map((option) => (\n                <MenuItem key={option} selected={option === 'Pyxis'} onClick={handleMaxHeightClose}>\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </ComponentBlock>\n        </Box>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport MenuView from 'src/sections/_examples/mui/menu-view';\n\n// ----------------------------------------------------------------------\n\nexport default function MenuPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: Accordion</title>\n      </Helmet>\n\n      <MenuView />\n    </>\n  );\n}\n"],"names":["OPTIONS","OPTIONS_MAXHEIGHT","MenuView","selectedIndex","setSelectedIndex","useState","isOpen","setOpen","isOpenList","setOpenList","isOpenMaxHeight","setOpenMaxHeight","handleClick","useCallback","event","currentTarget","handleClickListItem","handleMenuItemClick","index","handleOpen","handleClose","handleMaxHeightClose","_jsxs","_Fragment","children","_jsx","Box","sx","py","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","moreLink","my","gap","display","gridTemplateColumns","xs","md","ComponentBlock","title","Button","variant","onClick","Menu","id","anchorEl","onClose","open","Boolean","map","option","MenuItem","selected","List","component","ListItemButton","ListItemText","primary","secondary","disabled","IconButton","Iconify","icon","slotProps","paper","width","maxHeight","MenuPage","Helmet"],"sourceRoot":""}