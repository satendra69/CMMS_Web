{"version":3,"file":"static/js/7460.47c20b0c.chunk.js","mappings":"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","sources":["sections/Asset/Asset_QrcodePrint/AssetPrintQrReport.js","sections/Asset/Asset_QrcodePrint/AssetPrintQrCode.js"],"sourcesContent":["/* eslint react/prop-types: 0 */\r\nimport React, { useRef , forwardRef ,useState, useEffect } from 'react';\r\nimport ReactToPrint from 'react-to-print';\r\nimport QRCode from \"react-qr-code\";\r\n\r\nconst DataToPrint = React.forwardRef(({ data }, ref) => {\r\n    \r\n    function truncateText(text, maxLength) {\r\n        if (text && text.length > maxLength) {\r\n          return text.substring(0, maxLength) + '...';\r\n        } else {\r\n          return text;\r\n        }\r\n      }\r\n    return (\r\n      <div ref={ref}>\r\n     \r\n        {data.map((item, index) => (\r\n           <div key={index} className='AssetPrintmainDiv'>\r\n        \r\n           <div className='AssetPrintfirstDiv'>\r\n               {/* <QRCode value=\"1111\" size={item.FontSize !== \"undefined\" ? item.FontSize : 100} /> */}\r\n               <QRCode value={item.ast_mst_asset_no} size={60} width={100}/>\r\n\r\n           </div>\r\n           <div className='AssetPrintsecondDiv'>\r\n               <div style={{ marginBottom: '10px' }}>\r\n                   <span style={{ display: 'block', fontSize: item.FontSize,fontWeight: \"600\"  }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}># :</span> {item.ast_mst_asset_no}</span>\r\n                   <span style={{ display: 'block',fontSize: item.FontSize,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>C :</span> {item.ast_mst_cost_center}</span>\r\n                   <span style={{ display: 'block',fontSize: item.FontSize,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>L :</span> {item.ast_mst_asset_locn}</span>\r\n                   <span style={{ display: 'block',fontSize: item.FontSize,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>D :</span> {truncateText(item.ast_mst_asset_shortdesc, 25)}</span>\r\n               </div>\r\n           </div>\r\n       </div>\r\n       \r\n        ))}\r\n      \r\n      </div>\r\n    );\r\n  });\r\nconst AssetPrintQrReport = React.memo(({data}) => {\r\n    const componentRef = useRef();\r\n     \r\n  return (\r\n    <>\r\n    <div>\r\n    <div>\r\n      <ReactToPrint\r\n        trigger={() => <button style={{\r\n        background: \"#252c46\",\r\n        color: \"#fff\",\r\n        cursor: \"pointer\",\r\n        border: \"none\",\r\n        fontSize: \"16px\"\r\n        }}>Print</button>}\r\n        content={() => componentRef.current}\r\n        pageStyle=\"@page { size: A4; }\"\r\n        bodyClass=\"print-body\"\r\n        bodyStyle={{ width: '500px', height: '500px' }}\r\n      />\r\n      <div style={{ display: 'none' }}>\r\n      {/* <DataToPrint ref={componentRef} data={data} /> */}\r\n      <DataToPrint\r\n            ref={componentRef}\r\n            data={data}\r\n            \r\n          />\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default AssetPrintQrReport\r\n","import React, { useState ,useEffect } from 'react';\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\n\r\n//import Select from 'react-select';\r\n//import APIServices from \"../services/APIServices\";\r\n//import '../style.css';\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { ThreeCircles } from 'react-loader-spinner';\r\nimport httpCommon from '../../../http-common';\r\n//import Grid from \"@mui/material/Unstable_Grid2\";\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n// import AssetPdfCreate from '../Asset_report/pdf/AssetPdfCreate';\r\nimport AssetPrintQrReport from './AssetPrintQrReport';\r\nimport { Typography, Box, Container, Grid, Paper } from \"@mui/material\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    \"& .MuiDialogContent-root\": {\r\n      padding: theme.spacing(2),\r\n    },\r\n    \"& .MuiDialogActions-root\": {\r\n      padding: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n\r\n  \r\nconst AssetPrintQrCode = () => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [dataAllData2, setAllData2] = useState([]);\r\n  const [SelecteddataAll, setSelecteddataAll] = useState([]);\r\n\r\n  const [AssetNO, setAssetNO] = useState(\"\")\r\n \r\n  const [isLoading, setIsLoading] = useState(true);\r\n \r\n  const location = useLocation();\r\n  const state = location.state || {};\r\n  const { RowID,selectedVlue,ItemID } = state || {};\r\n  const [FontSize, setFontSize] = useState(\"10\");\r\n  const [heightAdd, setheight] = useState(\"\");\r\n  const [WidthAdd, setWidthAdd] = useState(\"\");\r\n  const [RowBetween, setRowBetween] = useState(\"\");\r\n\r\n//Popup model\r\nconst [showdd2, setShowdd2] = useState(false);\r\nconst handleClosedd2 = () => setShowdd2(false);\r\nconst AssetPopupClick =(e) =>{\r\n    setShowdd2(true);\r\n  }\r\n\r\n// Get all select value api\r\nconst get_asset_printData = async () =>{\r\n  setIsLoading(true);\r\n  try {\r\n    const responseJson = await httpCommon.get(\r\n      `/getAssetPrintQrCodeData.php?site_cd=${site_ID}&RowId=${RowID}&selectedVlue=${selectedVlue}&ItemID=${ItemID}`\r\n    );\r\n     console.log(\"responseJson____\",responseJson);\r\n      if (responseJson.data.status === 'SUCCESS') {   \r\n        setAllData2(responseJson.data.data.Selected1);\r\n        setSelecteddataAll(responseJson.data.data.All);\r\n        if(responseJson.data.data.Selected1.length !== 0){\r\n          setAssetNO(responseJson.data.data.Selected1['0'].ast_mst_asset_no);\r\n        }\r\n          setIsLoading(false);\r\n      }\r\n  \r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n}\r\n\r\nuseEffect(() => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  get_asset_printData();\r\n},[])\r\n\r\nconst handleFontSizeChange = ( event,value) => {\r\n  setFontSize(value);\r\n  const updatedData = dataAllData2.map(item => ({\r\n    ...item,\r\n    FontSize: value + 'px'\r\n  }));\r\n  setAllData2(updatedData);\r\n  const updatedataAll = SelecteddataAll.map(item => ({\r\n    ...item,\r\n    FontSize: value + 'px'\r\n  }));\r\n  setSelecteddataAll(updatedataAll);\r\n};\r\nconst handleHeightChange = (event) => {\r\n  setheight(event.target.value);\r\n};\r\nconst handleWidthChange = (event) => {\r\n  setWidthAdd(event.target.value);\r\n};\r\nconst handleRowBetWeenChange  = (event) => {\r\n  setRowBetween(event.target.value);\r\n};\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  handleClosedd2();\r\n}\r\nfunction truncateText(text, maxLength) {\r\n  if (text && text.length > maxLength) {\r\n    return text.substring(0, maxLength) + '...';\r\n  } else {\r\n    return text;\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n     <Container>\r\n     \r\n    <div>\r\n    <button className=\"btn btn-dark btn-sm mt-2 mb-4 mr-2\" style={{marginRight: '5px'}}> \r\n      <AssetPrintQrReport \r\n        data={(dataAllData2 && Object.keys(dataAllData2).length !== 0) ? dataAllData2 : SelecteddataAll}\r\n        FontSize={FontSize}\r\n      />\r\n     </button>\r\n\r\n    <button className=\"btn btn-dark btn-sm mt-2 mb-4 mr-2\" onClick={e =>{e.preventDefault(); AssetPopupClick()}}>Option</button>\r\n      \r\n    </div>\r\n    \r\n   \r\n   \r\n    <Box m={2} className=\"printCodeCss\" style={{ width: \"50%\" }}>\r\n  <div>\r\n    {/* Loader */}\r\n    <Dialog open={isLoading} aria-labelledby=\"loading-dialog-title\" PaperProps={{\r\n      style: {\r\n        backgroundColor: \"transparent\", // Set your desired background color here\r\n      },\r\n    }} BackdropProps={{\r\n      className: \"yourbackdropclass\",\r\n    }}>\r\n      <DialogTitle id=\"loading-dialog-title\" style={{ textAlign: 'center' }}></DialogTitle>\r\n      <DialogContent>\r\n        <div style={{ textAlign: 'center', paddingTop: '10px' }}>\r\n          <ThreeCircles\r\n            radius=\"9\"\r\n            visible={true}\r\n            ariaLabel=\"three-circles-loading\"\r\n            color=\"green\"\r\n          />\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n\r\n    {/* Asset details */}\r\n    {!isLoading && (\r\n      <>\r\n        {dataAllData2 && Object.keys(dataAllData2).length !== 0 && (\r\n          <div className='AssetPrintmainDiv'>\r\n            <div className='AssetPrintfirstDiv'>\r\n              <QRCode value={AssetNO} size={dataAllData2.FontSize !== undefined && dataAllData2.FontSize !== null && dataAllData2.FontSize !== \"\" ? dataAllData2.FontSize : 60} width={50} />\r\n            </div>\r\n            <div className='AssetPrintsecondDiv'>\r\n            {dataAllData2.map((item, index) => (\r\n                <div key={index} style={{ marginBottom: '10px' }}>\r\n                    <span style={{ display: 'block', fontSize: item.FontSize,fontWeight: \"600\"  }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}># :</span> {item.ast_mst_asset_no}</span>\r\n\r\n                    <span style={{ display: 'block', fontSize: item.FontSize,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>C :</span> {item.ast_mst_cost_center}</span>\r\n\r\n                    <span style={{ display: 'block', fontSize: item.FontSize,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>L :</span> {item.ast_mst_asset_locn}</span>\r\n                    <span style={{ display: 'block', fontSize: item.FontSize,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>D :</span> {truncateText(item.ast_mst_asset_shortdesc, 25)}</span>\r\n                </div>\r\n            ))}\r\n              \r\n            </div>\r\n          </div>\r\n        )}\r\n        {SelecteddataAll && SelecteddataAll.length !== 0 && (\r\n          <>\r\n            {SelecteddataAll.map((item, index) => (\r\n              <div key={index} className='AssetPrintmainDiv'>\r\n                <div className='AssetPrintfirstDiv'>\r\n                  <QRCode value={item.ast_mst_asset_no} size={60} width={60} />\r\n                </div>\r\n                <div className='AssetPrintsecondDiv'>\r\n                <span style={{ display: 'block', fontSize: item.FontSize ,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}># :</span> {item.ast_mst_asset_no}</span>\r\n\r\n                <span style={{ display: 'block', fontSize: item.FontSize,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>C :</span> {item.ast_mst_cost_center}</span>\r\n\r\n                <span style={{ display: 'block', fontSize: item.FontSize,fontWeight: \"600\" }}><span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>L :</span> {item.ast_mst_asset_locn}</span>\r\n\r\n                <span style={{ display: 'block', fontSize: item.FontSize,fontWeight: \"600\" }}>\r\n                  <span className=\"highlight\" style={{ fontSize: item.FontSize,fontWeight: \"600\"  }}>D :</span> {truncateText(item.ast_mst_asset_shortdesc, 25)}</span>\r\n                \r\n\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </>\r\n    )}\r\n     \r\n  </div>\r\n</Box>\r\n      \r\n     \r\n     </Container>\r\n    \r\n    <BootstrapDialog\r\n                onClose={handleClosedd2}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={showdd2}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Tagging Options\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleClosedd2}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div style={{padding:\"0px 15px\"}}>\r\n                    \r\n                    <Grid container spacing={2} alignItems=\"center\" sx={{ mb:1 }}>\r\n                        <Grid item xs={4} sx={{ pl: 2 }}>\r\n                            <FormControlLabel\r\n                                control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                                label=\"Font Size:\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <Autocomplete\r\n                                options={['1','2','3','4','5','6','7','8','9','10','11','12','50']} \r\n                                defaultValue={setFontSize} \r\n                                onChange={handleFontSizeChange} \r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        size=\"small\"\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth // Ensure the TextField takes up full width\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2} alignItems=\"center\" sx={{ mb:1 }}>\r\n                        <Grid item xs={4} sx={{ pl: 2 }}>\r\n                            <FormControlLabel\r\n                                control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                                label=\"Height (cm):\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                        <TextField\r\n                          type=\"number\"\r\n                          aria-label=\"Height (cm)\"\r\n                          placeholder=\"Type Height…\"\r\n                          value={heightAdd}\r\n                          onChange={handleHeightChange}\r\n                          className=\"PrintInput\"\r\n                          fullWidth\r\n                        />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2} alignItems=\"center\" sx={{ mb:1 }}>\r\n                        <Grid item xs={4} sx={{ pl: 2 }}>\r\n                            <FormControlLabel\r\n                                control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                                label=\"Width (cm):\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                        <TextField\r\n                          type=\"number\"\r\n                          aria-label=\"Height (cm)\"\r\n                          placeholder=\"Type Width…\"\r\n                          value={WidthAdd}\r\n                          onChange={handleWidthChange}\r\n                          className=\"PrintInput\"\r\n                          fullWidth\r\n                        />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2} alignItems=\"center\" sx={{ mb:1 }}>\r\n                        <Grid item xs={4} sx={{ pl: 2 }}>\r\n                            <FormControlLabel\r\n                                control={<div />} // Empty control to avoid rendering checkbox or radio button\r\n                                label=\"Between Rows (cm):\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                        <TextField\r\n                          type=\"number\"\r\n                          aria-label=\"Height (cm)\"\r\n                          placeholder=\"Type Row Between…\"\r\n                          value={RowBetween}\r\n                          onChange={handleRowBetWeenChange}\r\n                          \r\n                          fullWidth\r\n                          className=\"PrintInput\"\r\n                        />\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                  </div>\r\n                </DialogContent>\r\n                    <DialogActions>\r\n                    {/* <Grid item>\r\n                        <Button variant=\"outlined\" onClick={onClickApprove}>\r\n                    \r\n                        <Iconify icon=\"mingcute:save-line\" /> Approve\r\n                        </Button>\r\n                    </Grid> */}\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                    {/* {errorMessage && (\r\n                        <Grid item>\r\n                        <div style={{ color: 'red', marginRight: '10px' }}>{errorMessage}</div>\r\n                        </Grid>\r\n                    )} */}\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" onClick={handleSubmit}>\r\n                         OK\r\n                        </Button>\r\n                    </Grid>\r\n                    \r\n                    </Grid>\r\n                    </DialogActions>\r\n     </BootstrapDialog>\r\n              \r\n      <ToastContainer />\r\n    </>\r\n  )\r\n}\r\n\r\n  \r\nexport default AssetPrintQrCode;\r\n"],"names":["DataToPrint","React","_ref","ref","data","_jsx","children","map","item","index","_jsxs","className","QRCode","value","ast_mst_asset_no","size","width","style","marginBottom","display","fontSize","FontSize","fontWeight","ast_mst_cost_center","ast_mst_asset_locn","text","ast_mst_asset_shortdesc","maxLength","length","substring","_ref2","componentRef","useRef","_Fragment","ReactToPrint","trigger","background","color","cursor","border","content","current","pageStyle","bodyClass","bodyStyle","height","BootstrapDialog","styled","Dialog","theme","padding","spacing","AssetPrintQrCode","site_ID","localStorage","getItem","dataAllData2","setAllData2","useState","SelecteddataAll","setSelecteddataAll","AssetNO","setAssetNO","isLoading","setIsLoading","state","useLocation","RowID","selectedVlue","ItemID","setFontSize","heightAdd","setheight","WidthAdd","setWidthAdd","RowBetween","setRowBetween","showdd2","setShowdd2","handleClosedd2","get_asset_printData","async","responseJson","httpCommon","get","concat","console","log","status","Selected1","All","error","useEffect","truncateText","Container","marginRight","AssetPrintQrReport","Object","keys","onClick","e","preventDefault","Box","m","open","PaperProps","backgroundColor","BackdropProps","DialogTitle","id","textAlign","DialogContent","paddingTop","ThreeCircles","radius","visible","ariaLabel","undefined","onClose","maxWidth","fullWidth","sx","p","IconButton","position","right","top","palette","grey","Iconify","icon","dividers","Grid","container","alignItems","mb","xs","pl","FormControlLabel","control","label","Autocomplete","options","defaultValue","onChange","handleFontSizeChange","event","updatedData","updatedataAll","renderInput","params","TextField","placeholder","variant","type","target","DialogActions","Button","ToastContainer"],"sourceRoot":""}