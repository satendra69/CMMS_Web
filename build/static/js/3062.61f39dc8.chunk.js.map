{"version":3,"file":"static/js/3062.61f39dc8.chunk.js","mappings":"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","sources":["sections/maintenance/component_module/WordOrderTimeCard.js","sections/maintenance/component_module/Planning/WorkOrderMaterial.js","sections/maintenance/component_module/Planning/WorkOrderSpecial.js","sections/maintenance/component_module/Planning/WorkOrderOutsource.js","sections/maintenance/component_module/Planning/WorkOrderMisc.js","sections/maintenance/component_module/Planning/WorkOrderSpecialOrder.js","sections/maintenance/Form/WorkOrderNewFrom.js","sections/maintenance/WorkOrderAssetNo.js","sections/maintenance/component_module/Planning/WorkStockNoPopupData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport {\r\n  differenceInMilliseconds,\r\n  differenceInDays,\r\n  differenceInHours,\r\n  differenceInMinutes,\r\n} from \"date-fns\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport httpCommon from \"src/http-common\";\r\nimport { format, setHours } from \"date-fns\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport logo from \"../../../assets/img/credit-card.png\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst WorkOrderTimeCard = ({ data, onDataFromSecondComponent }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const emp_owner = localStorage.getItem(\"emp_mst_empl_id\");\r\n  const { RowID } = data;\r\n  const { Asset_No } = data;\r\n  const { WorkOrderNo } = data;\r\n\r\n  const location = useLocation();\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n \r\n  const handleShow = () => setShow(true);\r\n  const [EmployeeID, setEmployeeID] = useState([]);\r\n  const [selected_EmployeeID, setSelected_EmployeeID] = useState([]);\r\n\r\n  const [Craft, setCraft] = useState([]);\r\n  const [selected_Craft, setSelected_Craft] = useState([]);\r\n\r\n  const [TimeCardDate, setTimeCardDate] = useState(new Date());\r\n  const [EndTimeCardDate, setEndTimeCardDate] = useState(null);\r\n\r\n  const [HourType, setHourType] = useState([]);\r\n  const [selected_HourType, setSelected_HourType] = useState([]);\r\n\r\n  const [ActualHour, setActualHour] = useState(\"0\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [CreditCostCenter, setCreditCostCenter] = useState([]);\r\n  const [selected_CreditCostCenter, setSelected_CreditCostCenter] = useState(\r\n    []\r\n  );\r\n  const [EmpDropData, setEmpDropData] = useState([]);\r\n  const [CreditAccount, setCreditAccount] = useState([]);\r\n  const [selected_CreditAccount, setSelected_CreditAccount] = useState([]);\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID2, setRowID2] = useState(\"\");\r\n\r\n  const [AssetNo, setAssetNo] = useState(\"\");\r\n  const [Rate, setRate] = useState(\"\");\r\n  const [Multiplier, setMultiplier] = useState(\"\");\r\n  const [Adder, setAdder] = useState(\"\");\r\n  const [ActualCost, setActualCost] = useState(\"\");\r\n  const [TimeCardNo, setTimeCardNo] = useState(\"\");\r\n  const [isEmpNoEmpty, setIsEmpEmpty] = useState(false);\r\n  // Get Header Data\r\n  const get_workordermaster_timecard = async (site_ID, RowID) => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_workordermaster_timecard.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n    get_workordermaster_timecard(site_ID, RowID);\r\n\r\n    get_workorder_status(site_ID, \"All\");\r\n  }, [location]);\r\n\r\n \r\n  const get_workorder_status = async (site_ID, type) => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `get_dropdown.php?site_cd=${site_ID}&type=${type}`\r\n      );\r\n     // console.log(\"TimeCard Responce____\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        let EmployeeID = response.data.data.Employee_List_Supervisor_Id.map(\r\n          (item) => ({\r\n            label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n            value: item.emp_mst_empl_id,\r\n          })\r\n        );\r\n        setEmployeeID(EmployeeID);\r\n\r\n        let Craft = response.data.data.Employee_Primary_Craft.map((item) => ({\r\n          label: item.crf_mst_crf_cd + \" : \" + item.crf_mst_desc,\r\n          value: item.crf_mst_crf_cd,\r\n        }));\r\n         setCraft(Craft);\r\n\r\n        let HourType = response.data.data.HoursType.map((item) => ({\r\n          label: item.hours_type_cd,\r\n          value: item.hours_type_cd,\r\n        }));\r\n        setHourType(HourType);\r\n\r\n        let ChargeCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setChargeCostCenter(ChargeCostCenter);\r\n\r\n        let ChargeAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setChargeAccount(ChargeAccount);\r\n\r\n        let CreditCostCenter = response.data.data.CostCenter.map((item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.costcenter,\r\n        }));\r\n        setCreditCostCenter(CreditCostCenter);\r\n\r\n        let CreditAccount = response.data.data.account.map((item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.account,\r\n        }));\r\n        setCreditAccount(CreditAccount);\r\n\r\n        //get_dropdown_ParentFlag(site_ID,selected_asset);\r\n        // get_workordermaster_select(site_ID,selected_asset);\r\n        // New_WorkOrderTimeCard();\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // console.error(\"Error fetching data:\", error);\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n  const formatDate = (dateObject) => {\r\n    if (!dateObject) {\r\n      return ''; // or any default value you prefer\r\n    }\r\n    const date = new Date(dateObject.date);\r\n\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n\r\n    const hours = date.getHours().toString().padStart(2, \"0\");\r\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n    const seconds = date.getSeconds().toString().padStart(2, \"0\");\r\n\r\n    return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index}>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n            {result.wko_ls8_assetno.split(':')[0]}\r\n        \r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_empl_id}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_craft}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {formatDate(result.wko_ls8_datetime1)}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {formatDate(result.wko_ls8_datetime2)}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_hours_type}\r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_hrs}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_rate}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_multiplier}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_adder}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_act_cost}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_chg_costcenter}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_chg_account}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_crd_costcenter}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_crd_account}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls8_time_card_no}\r\n        </TableCell>\r\n      </TableRow>\r\n    ));\r\n  };\r\n\r\n\r\n  const totalQty = Result.reduce(\r\n    (acc, item) => acc + (parseFloat(item.wko_ls8_hrs) || 0),\r\n    0\r\n  );\r\n  const totalCost = Result.reduce(\r\n    (acc, item) =>\r\n      acc +\r\n      (parseFloat(item.wko_ls8_hrs) || 0) *\r\n        (parseFloat(item.wko_ls8_act_cost) || 0),\r\n    0\r\n  );\r\n  const handleEmployeeIDChange = async (event, value) => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    setSelected_EmployeeID(value);\r\n   \r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n      console.log(\"value____Empt____\",beforeColonValue);\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `get_time_cart_reate_craft.php?site_cd=${site_ID}&empId=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          let Craft = response.data.data.result.map((item) => ({\r\n            label: item.emp_ls1_craft + \" : \" + item.crf_mst_desc,\r\n            value: item.emp_ls1_craft,\r\n            rate: item.emp_ls1_charge_rate,\r\n          }));\r\n          setCraft(Craft);\r\n\r\n          setSelected_Craft(response.data.data.result[0].emp_ls1_craft);\r\n          setRate(response.data.data.result[0].emp_ls1_charge_rate);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleHourTypeChange = async (event, value) => {\r\n    setSelected_HourType(value);\r\n    const labelParts = value ? value.label.split(\" : \") : [];\r\n    const beforeColonValue = labelParts.length > 0 ? labelParts[0] : \"\";\r\n    if (beforeColonValue !== \"\" && beforeColonValue != null) {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          `TimeCartHourTypeGet.php?site_cd=${site_ID}&hourstype=${beforeColonValue}`\r\n        );\r\n\r\n        if (response.data.data.result.length > 0) {\r\n          setAdder(response.data.data.result[0].hours_type_adder);\r\n          setMultiplier(response.data.data.result[0].hours_type_multiplier);\r\n\r\n          const start = new Date(TimeCardDate);\r\n          const end = new Date(EndTimeCardDate);\r\n          // const range = new Moment.range(start, end);\r\n\r\n          const msDiff = differenceInMilliseconds(end, start);\r\n          const days = differenceInDays(end, start);\r\n          const hours = Math.floor(msDiff / (1000 * 60 * 60)); // Total hours\r\n          const min = Math.floor(msDiff / (1000 * 60));\r\n\r\n          const Min = Math.floor(msDiff / (1000 * 60));\r\n          const act_hour = Math.floor(Min / 60);\r\n\r\n          const h = parseFloat(hours);\r\n          const r = parseFloat(Rate);\r\n          const a = parseFloat(response.data.data.result[0].hours_type_adder);\r\n          const m = parseFloat(\r\n            response.data.data.result[0].hours_type_multiplier\r\n          );\r\n\r\n          const f3 = act_hour * (r + a) * m;\r\n          setActualCost(f3);\r\n         // setActualHour(hours);\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const resetData = () => {\r\n    setSelected_ChargeAccount(\"\");\r\n    setSelected_ChargeCostCenter(\"\");\r\n    setSelected_Craft(\"\");\r\n    setSelected_CreditAccount(\"\");\r\n    setSelected_CreditCostCenter(\"\");\r\n    setSelected_EmployeeID(\"\");\r\n    setSelected_HourType(\"\");\r\n    setActualHour(\"\");\r\n    setEndTimeCardDate(\"\");\r\n  };\r\n  const handleSubmitTimecard = async () => {\r\n    if (selected_EmployeeID == \"\" || selected_EmployeeID == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Employee ID is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (selected_Craft == \"\" || selected_Craft == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Craft is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Time Card Date is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    // } else if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n    //   MySwal.fire({\r\n    //     position: \"top\",\r\n    //     customClass: {\r\n    //       popup: \"top-center\",\r\n    //       container: \"swalcontainercustom TimeCard\",\r\n    //     },\r\n\r\n    //     html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field End Time Card Date is required </div>',\r\n    //     showConfirmButton: false,\r\n    //     timer: 4000,\r\n    //     backdrop: false,\r\n    //   });\r\n     } else if (selected_HourType == \"\" || selected_HourType == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom TimeCard\",\r\n        },\r\n\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 15px; font-weight: 600; line-height: 26px;\">Please fill the required field Hour Type is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        backdrop: false,\r\n      });\r\n    } else {\r\n      let selectedHourType;\r\n      if (\r\n        !selected_HourType ||\r\n        selected_HourType.length === 0 ||\r\n        !selected_HourType.label\r\n      ) {\r\n        selectedHourType = \"\";\r\n      } else {\r\n        const selectedHourType2 = selected_HourType.label.split(\":\");\r\n        selectedHourType = selectedHourType2[0].trim();\r\n      }\r\n\r\n      let EmptyAsset;\r\n    if (Asset_No == \"\" || Asset_No == null) {\r\n      EmptyAsset = \"\";\r\n    } else {\r\n      // Asset_No = selected_Asset_No.label.split(\":\")\r\n      const EmptyAssetSplit = Asset_No.split(\":\");\r\n      EmptyAsset = EmptyAssetSplit[0];\r\n    }\r\n\r\n      let date_1 = \"\";\r\n      if (TimeCardDate == \"\" || TimeCardDate == null) {\r\n        date_1 = \"\";\r\n      } else {\r\n        date_1 = Moment(TimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n\r\n      let date_2 = \"\";\r\n      if (EndTimeCardDate == \"\" || EndTimeCardDate == null) {\r\n        date_2 = \"\";\r\n      } else {\r\n        date_2 = Moment(EndTimeCardDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      }\r\n \r\n      var json_workorderTimeCart = {\r\n        site_cd: site_ID,\r\n        wko_mst_wo_no: WorkOrderNo,\r\n        mst_RowID: RowID,\r\n        assetno: EmptyAsset,\r\n        selectedEmployeeID: selected_EmployeeID.value,\r\n        selectedCraft:\r\n        selected_Craft && typeof selected_Craft === \"object\"\r\n            ? selected_Craft.value\r\n            : selected_Craft,\r\n        TimeCardDate: date_1,\r\n        EndTimeCardDate: date_2,\r\n        selected_HourType: selectedHourType,\r\n        ActualHour: ActualHour,\r\n        Rate: Rate,\r\n        Multiplier: Multiplier,\r\n        Adder: Adder,\r\n        ActualCost: ActualCost,\r\n        selected_ChargeCostCenter: selected_ChargeCostCenter.value,\r\n        selected_ChargeAccount: selected_ChargeAccount.value,\r\n        selected_CreditCostCenter: selected_CreditCostCenter.value,\r\n        selected_CreditAccount: selected_CreditAccount.value,\r\n        auditUser: emp_owner,\r\n      };\r\n      console.log(\"json_workorderTimeCart_____\",json_workorderTimeCart);\r\n      try {\r\n        Swal.fire({\r\n          title: \"Please Wait!\",\r\n          allowOutsideClick: false,\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n     //   Swal.showLoading();\r\n        const response = await httpCommon.post(\r\n          \"/insert_time_card.php\",\r\n          JSON.stringify(json_workorderTimeCart)\r\n        );\r\n        console.log(\"insert_time_card_____\",response);\r\n        if (response.data.status == \"SUCCESS\") {\r\n         \r\n          Swal.close();\r\n          get_workordermaster_timecard();\r\n          handleClose();\r\n          onDataFromSecondComponent(\"SubmitFrom\");\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_sitecode...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    resetData();\r\n  };\r\n  useEffect(() => {\r\n    const calculateActualHours = () => {\r\n      if (TimeCardDate && EndTimeCardDate) { \r\n        const startDate = new Date(TimeCardDate);\r\n        const endDate = new Date(EndTimeCardDate);\r\n        const differenceInMilliseconds = endDate - startDate;\r\n        const differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);\r\n\r\n        setActualHour(differenceInHours.toFixed(2)); \r\n      }\r\n    };\r\n\r\n    calculateActualHours();\r\n  }, [TimeCardDate, EndTimeCardDate]);\r\n  \r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"8px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n              paddingBottom: \"10px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div style={{ backgroundColor: \"white\" }}>\r\n                <div\r\n                  className=\"template-demo\"\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <div style={{ marginRight: \"10px\" }}>\r\n                    <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n                  </div>\r\n                  <div\r\n                    className=\"template-demo\"\r\n                    style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  >\r\n                    <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n                      Time Card\r\n                    </div>\r\n                    <div className=\"TimeCartPartCosting\">\r\n                      <span style={{ color: \"blue\" }}>\r\n                        {(totalQty * 1).toFixed(2)}\r\n                      </span>{\" \"}\r\n                      Total Parts Costing{\" \"}\r\n                      <span style={{ color: \"#19d895\" }}>\r\n                        ${totalCost.toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>{renderTableHeader()}</TableRow>\r\n                  </TableHead>\r\n                  <TableBody>{renderTableRows()}</TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            <div>\r\n              <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={show}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n                disableBackdropClick\r\n                sx={{\r\n                  width: \"50vw\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  <img src={logo} style={{ width: \"30px\", height: \"30px\",marginRight: \"2px\" }} />\r\n                  Time Card\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \"15px\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      spacing={1.5}\r\n                      className=\"timeCartPopuplabel\"\r\n                    >\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Employee ID:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={EmployeeID}\r\n                          value={selected_EmployeeID}\r\n                          onChange={(event, value) =>\r\n                            handleEmployeeIDChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Craft:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={Craft}\r\n                          value={selected_Craft}\r\n                          onChange={(event, value) => {\r\n                            setSelected_Craft(value || null);\r\n                            setRate(value ? value.rate : null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={TimeCardDate}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Time Card End Date:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <DateTimePicker\r\n                          value={EndTimeCardDate || ''}\r\n                          format=\"dd/MM/yyyy HH:mm\"\r\n                          className=\"Extrasize\"\r\n                          sx={{ fontSize: \"0.875rem\" }}\r\n                          onChange={(newDate) => {\r\n                            setEndTimeCardDate(newDate); // Update your state with the new value\r\n                          }}\r\n                          slotProps={{\r\n                            textField: {\r\n                              fullWidth: true,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Hour Type:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={HourType}\r\n                          value={selected_HourType}\r\n                          onChange={(event, value) =>\r\n                            handleHourTypeChange(event, value)\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Actual Hour:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          className=\"Extrasize\"\r\n                          fullWidth\r\n                          disabled\r\n                          value={ActualHour}\r\n                          onChange={(e) => {\r\n                            setActualHour(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeCostCenter}\r\n                          value={selected_ChargeCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Charge Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={ChargeAccount}\r\n                          value={selected_ChargeAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_ChargeAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Cost Center:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditCostCenter}\r\n                          value={selected_CreditCostCenter}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditCostCenter(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <label>Credit Account:</label>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Autocomplete\r\n                          options={CreditAccount}\r\n                          value={selected_CreditAccount}\r\n                          onChange={(event, value) => {\r\n                            setSelected_CreditAccount(value || null);\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <div>\r\n                              <TextField\r\n                                {...params}\r\n                                size=\"small\"\r\n                                placeholder=\"Select...\"\r\n                                variant=\"outlined\"\r\n                                className=\"Extrasize\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <div className=\"timeCartSubmit\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"button\" // Remove this line\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        handleSubmitTimecard();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <Button\r\n                type=\"button\"\r\n                className=\"tabAddButton\"\r\n              \r\n                onClick={handleShow}\r\n              >\r\n                + Add Time Card\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkOrderTimeCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport WorkStockNoPopupData from \"./WorkStockNoPopupData\";\r\nimport logo from \"../../../../assets/img/screw.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst WorkOrderMaterial = ({ onRowClick, data }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [MaterialOrderResult, setMaterialOrderResult] = React.useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setInputFields(updatedInputFields);\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [StockNo, setStockNo] = useState([]);\r\n  const [selected_StockNo, setSelected_StockNo] = useState([]);\r\n\r\n  const [StockLocation, setStockLocation] = useState([]);\r\n  const [selected_StockLocation, setSelected_StockLocation] = useState([]);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState(\r\n    []\r\n  );\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(data.RowID);\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(data.WorkOrderNo);\r\n  const [selected_Charge_Cost_Center, setselected_Charge_Cost_Center] =\r\n    useState(data.selected_Charge_Cost_Center);\r\n\r\n  const [AssetNo, setAssetNo] = useState(data.Asset_No ? data.Asset_No.split(' : ')[0] : '');\r\n\r\n  const [UOM, setUOM] = useState(\"\");\r\n  const [ItemCost, setItemCost] = useState(\"\");\r\n  const [MaterialRequestNo, setMaterialRequestNo] = useState(\"\");\r\n  const [MrLineNo, setMrLineNo] = useState(\"\");\r\n  const [MrApprovalStatus, setMrApprovalStatus] = useState(\"\");\r\n  const [ActualQuantity, setActualQuantity] = useState(\"\");\r\n  const [ContractPoNo, setContractPoNo] = useState(\"\");\r\n  const [ContractPoLine, setContractPoLine] = useState(\"\");\r\n  const [getStockNo, setGetStockNo] = useState([]);\r\n  const [modalOpenAsset, setModalOpenAsset] = useState(false);\r\n  const [modalRowDt, setmodalRowDt] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    get_workordermaster_material(site_ID, RowID);\r\n    // get_workorder_status(site_ID, \"All\", location.state.select);\r\n  }, [location]);\r\n\r\n  // First Api\r\n  const get_workordermaster_material = async (site_ID, RowID) => {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_workordermaster_material.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n      // console.log(\"response____material___\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n        Swal.close();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  //Body\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index} onClick={(event) => handleRowClick(result, event)}>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_stockno}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_stk_locn}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_desc}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_chg_costcenter}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_chg_account}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_qty_needed}\r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_mtl_uom}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_item_cost}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls2_mr_no}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          <span\r\n            style={{\r\n              backgroundColor:\r\n                result.mtr_mst_status === \"W\"\r\n                  ? \"#FF6258\"\r\n                  : result.mtr_mst_status === \"A\"\r\n                  ? \"#19D895\"\r\n                  : result.mtr_mst_status === \"D\"\r\n                  ? \"#2196F3\"\r\n                  : null,\r\n              color: \"white\",\r\n              padding: \"5px\",\r\n              borderRadius: \"5px\",\r\n              fontSize: \"13px\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {result.mtr_mst_status === \"W\"\r\n              ? \"Awaiting (W)\"\r\n              : result.mtr_mst_status === \"A\"\r\n              ? \"Approve (A)\"\r\n              : result.mtr_mst_status === \"D\"\r\n              ? \"Disapprove (D)\"\r\n              : result.mtr_mst_status}\r\n          </span>\r\n        </TableCell>\r\n      </TableRow>\r\n    ));\r\n  };\r\n  const handleRowClick = (data) => {\r\n    //console.log(\"clickRow__\",data)\r\n\r\n    setAssetNo(data.wko_ls2_assetno);\r\n    setStockNo(data.wko_ls2_stockno);\r\n    setStockLocation(data.wko_ls2_stk_locn);\r\n    setDescription(data.wko_ls2_desc);\r\n    setChargeCostCenter(data.wko_ls2_chg_costcenter);\r\n    setChargeAccount(data.wko_ls2_chg_account);\r\n    setQtyNeeded(data.wko_ls2_qty_needed);\r\n    setUOM(data.wko_ls2_mtl_uom);\r\n    setItemCost(data.wko_ls2_item_cost);\r\n    setMaterialRequestNo(data.wko_ls2_mr_no);\r\n    setMrLineNo(data.wko_ls2_mr_lineno);\r\n    setMrApprovalStatus(data.mtr_mst_status);\r\n    setActualQuantity(data.mtr_ls1_rcv_qty);\r\n    setContractPoNo(data.wko_ls2_po_no);\r\n    setContractPoLine(data.wko_ls2_po_lineno);\r\n\r\n    setShowModal(true);\r\n  };\r\n  const resetData = () => {\r\n    setSelected_StockNo(\"\");\r\n    setmodalRowDt(\"\");\r\n    setSelected_StockLocation(\"\");\r\n    setDescription(\"\");\r\n    setSelected_ChargeCostCenter(\"\");\r\n    setSelected_ChargeAccount([]);\r\n    setQtyNeeded(\"\");\r\n  };\r\n  function CustomTextField({ rightIcons, ...props }) {\r\n    return (\r\n      <TextField\r\n        {...props}\r\n        InputProps={{\r\n          endAdornment: rightIcons && (\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"row\", color: \"#000\" }}\r\n            >\r\n              {rightIcons.map((icon, index) => (\r\n                <IconButton key={index}>{icon}</IconButton>\r\n              ))}\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  // Add New Row button click\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      site_ID: site_ID,\r\n      mst_RowID: RowID,\r\n      emp_mst_login_id: emp_mst_login_id,\r\n      mtr_mst_wo_no: WorkOrderNo,\r\n      wko_ls2_mtl_uom: \"\",\r\n      wko_ls2_item_cost: \"\",\r\n      mtr_ls1_rcv_qty: \".0000\",\r\n      mtr_mst_assetno: AssetNo,\r\n      selectStock: \"\",\r\n      selectStockLocation: \"\",\r\n      setDescription: \"\",\r\n      selectChargeCostCenter: \"\",\r\n      selectChargeAccount: \"\",\r\n      setQtyNeeded: \"\",\r\n    },\r\n  ]);\r\n  // Add New button funcation\r\n  const addInputField = (event) => {\r\n    event.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.selectStock.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Stock No is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setDescription.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectChargeCostCenter === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Charge Cost Center is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectChargeAccount === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Charge Account is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setQtyNeeded === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Qty Needed is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n          site_ID: site_ID,\r\n          mst_RowID: RowID,\r\n          emp_mst_login_id: emp_mst_login_id,\r\n          mtr_mst_wo_no: WorkOrderNo,\r\n          wko_ls2_mtl_uom: \"\",\r\n          wko_ls2_item_cost: \"\",\r\n          mtr_ls1_rcv_qty: \".0000\",\r\n          mtr_mst_assetno: AssetNo,\r\n          selectStock: \"\",\r\n          selectStockLocation: \"\",\r\n          setDescription: \"\",\r\n          selectChargeCostCenter: \"\",\r\n          selectChargeAccount: \"\",\r\n          setQtyNeeded: \"\",\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    if (index !== undefined) {\r\n      rows.splice(index, 1);\r\n    } else {\r\n      rows.splice(1, rows.length);\r\n    }\r\n\r\n    setInputFields(rows);\r\n  };\r\n  // Clear State data\r\n  const updatedInputFields = inputFields.map((field) => {\r\n    return {\r\n      ...field,\r\n      selectStock: \"\",\r\n      selectStockLocation: \"\",\r\n      selectChargeCostCenter: \"\",\r\n      setDescription: \"\",\r\n      setQtyNeeded: \"\",\r\n    };\r\n  });\r\n\r\n  const handleEditClick = async () => {\r\n    setModalOpenAsset(true);\r\n  };\r\n  const handleCloseModal2 = () => {\r\n    setModalOpenAsset(false);\r\n  };\r\n  // Stock Popup Data Get onclcik\r\n  const handleRowPopupData = async (\r\n    index,\r\n    rowData,\r\n    RowDescp,\r\n    secondRowData\r\n  ) => {\r\n    // Use the row data in the second component\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    if (rowData !== undefined && rowData !== null) {\r\n      setmodalRowDt(rowData);\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_Stock _No_dataMaterial.php?site_cd=\" +\r\n            site_ID +\r\n            \"&itm_mst_stockno=\" +\r\n            rowData\r\n        );\r\n        if (response.data.status === \"SUCCESS\") {\r\n          setGetStockNo(response.data.data);\r\n          setStockNo(modalRowDt + \":\" + response.data.data[0].itm_mst_desc);\r\n          console.log(\"Raam\", response.data.data[0]);\r\n          let StockLocation = response.data.data.map((item) => ({\r\n            label: item.itm_mst_mstr_locn,\r\n            value: item.itm_mst_mstr_locn,\r\n          }));\r\n\r\n          const list = [...inputFields];\r\n\r\n          const stockDt = modalRowDt;\r\n          list[index][\"selectStock\"] = stockDt;\r\n          setInputFields(list);\r\n\r\n          const newData = response.data.data[0].itm_mst_desc;\r\n          list[index][\"setDescription\"] = newData;\r\n          setInputFields(list);\r\n\r\n          const DataLoction = response.data.data[0].itm_mst_mstr_locn;\r\n          list[index][\"selectStockLocation\"] = DataLoction;\r\n          setInputFields(list);\r\n\r\n          const Umo = response.data.data[0].itm_mst_issue_uom;\r\n          list[index][\"wko_ls2_mtl_uom\"] = Umo;\r\n          setInputFields(list);\r\n\r\n          const Price = response.data.data[0].itm_det_issue_price;\r\n          list[index][\"wko_ls2_item_cost\"] = Price;\r\n          setInputFields(list);\r\n\r\n          const Cost_Center = selected_Charge_Cost_Center;\r\n          list[index][\"selectChargeCostCenter\"] = Cost_Center;\r\n          setInputFields(list);\r\n          Swal.close();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n    if (secondRowData == \"1\") {\r\n      setModalOpenAsset(false);\r\n    }\r\n  };\r\n\r\n  const PopupRowDataSelect = () => {\r\n    if (modalRowDt === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Please select one option!\",\r\n      });\r\n    } else {\r\n      setModalOpenAsset(false);\r\n    }\r\n  };\r\n  const handleCancelClick = () => {\r\n    setmodalRowDt(\"\");\r\n  };\r\n\r\n  const handleChange = async (index, fieldName, value) => {\r\n    const list = [...inputFields];\r\n    if (fieldName == \"setQtyNeeded\") {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n      setQtyNeeded(value);\r\n    } else {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n    }\r\n\r\n    if (fieldName == \"selectChargeCostCenter\") {\r\n      setSelected_ChargeCostCenter(value);\r\n    } else if (fieldName == \"selectChargeAccount\") {\r\n      setSelected_ChargeAccount(value);\r\n    } else if (fieldName == \"setQtyNeeded\") {\r\n      setQtyNeeded(value);\r\n    }\r\n  };\r\n\r\n  const handleClickChargeCostCenter = async () => {\r\n    const CostType = \"CostCenter\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + CostType\r\n      );\r\n      let ChargeCostCenter = response.data.data.CostCenter.map((item) => ({\r\n        label: item.costcenter + \" : \" + item.descs,\r\n        value: item.costcenter,\r\n      }));\r\n      setChargeCostCenter(ChargeCostCenter);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickChargeAccount = async () => {\r\n    const AccountType = \"WKO_Labor_Account\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + AccountType\r\n      );\r\n      let ChargeAccount = response.data.data.WKO_Labor_Account.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.account,\r\n      }));\r\n      setChargeAccount(ChargeAccount);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  // Submit Data in database\r\n  const handleAddButtonClick = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.selectStock.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Stock No is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setDescription.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectChargeCostCenter === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Charge Cost Center is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectChargeAccount === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Charge Account is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setQtyNeeded === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Qty Needed is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n    //  console.log(\"inputFields____post\",inputFields);\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_wordOrderPlanningMaterial.php\",\r\n          inputFields\r\n        );\r\n       // console.log(\"API Response:\", response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          Swal.close();\r\n          Swal.fire({\r\n            title: \"Material Request!\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            text: response.data.message,\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            setResult([...Result, inputFields]);\r\n            get_workordermaster_material(site_ID, RowID);\r\n            // console.log(\"inputFields_after\",inputFields);\r\n\r\n            if (result.isConfirmed) {\r\n              // Call the next function when the user clicks the \"OK\" button\r\n\r\n              removeInputFields();\r\n              handleClose();\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n  };\r\n  //Sum calculation\r\n  const totalQty = Result.reduce(\r\n    (acc, item) => acc + (parseFloat(item.wko_ls2_qty_needed) || 0),\r\n    0\r\n  );\r\n\r\n  //Multiply calculation\r\n  const totalCost = Result.reduce(\r\n    (acc, item) =>\r\n      acc +\r\n      (parseFloat(item.wko_ls2_qty_needed) || 0) *\r\n        (parseFloat(item.wko_ls2_item_cost) || 0),\r\n    0\r\n  );\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    resetData();\r\n    removeInputFields();\r\n  };\r\n  //console.log(\"inputFields____material\", inputFields);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div style={{ paddingBottom: \"20px\", backgroundColor: \"white\" }}>\r\n          <div\r\n            className=\"template-demo\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div style={{ marginRight: \"10px\" }}>\r\n              <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n            </div>\r\n            <div\r\n              className=\"template-demo\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n                Material\r\n              </div>\r\n              <div>\r\n                <span style={{ color: \"blue\" }}>\r\n                  {(totalQty * 1).toFixed(2)}\r\n                </span>{\" \"}\r\n                Total Parts Costing{\" \"}\r\n                <span style={{ color: \"#19d895\" }}>\r\n                  ${totalCost.toFixed(2)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>{renderTableHeader()}</TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={show}\r\n            maxWidth=\"lg\"\r\n            fullWidth\r\n            disableBackdropClick\r\n            sx={{\r\n              width: \"50vw\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <DialogTitle\r\n              sx={{ m: 0, p: 2 }}\r\n              id=\"customized-dialog-title\"\r\n              className=\"dailogTitWork\"\r\n            >\r\n              <img\r\n                src={logo}\r\n                style={{ width: \"30px\", height: \"30px\", marginRight: \"2px\" }}\r\n              />\r\n              Material\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n              }}\r\n            >\r\n              <Iconify icon=\"material-symbols:close\" />\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 WrkOdrMtb\">\r\n                    {/* {console.log(\"datadatadatadata____\", data)} */}\r\n                    {inputFields.map((data, index) => {\r\n                      const {\r\n                        selectStock,\r\n                        selectStockLocation,\r\n                        setDescription,\r\n                        selectChargeCostCenter,\r\n                        selectChargeAccount,\r\n                        setQtyNeeded,\r\n                      } = data;\r\n                      return (\r\n                        <div className=\"row my-3 tb\" key={index}>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#2196f3\",\r\n                                  textDecoration: \"underline\",\r\n                                  fontWeight: 600,\r\n                                  fontSize: 16,\r\n                                }}\r\n                              >\r\n                                Line {index + 1}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} sx={{ textAlign: \"right\" }}>\r\n                              {inputFields.length !== 1 && (\r\n                                <Button\r\n                                  className=\"workmarerial_dlt\"\r\n                                  onClick={() => removeInputFields(index)}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faCircleXmark} />\r\n                                </Button>\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            container\r\n                            spacing={1.5}\r\n                            className=\"timeCartPopuplabel\"\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Stock No:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <CustomTextField\r\n                                id=\"outlined-basic\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                value={\r\n                                  data.selectStock != \"\" ? data.selectStock : \"\"\r\n                                }\r\n                                disabled\r\n                                placeholder=\"Select...\"\r\n                                style={{ color: \"#000\" }}\r\n                                rightIcons={[\r\n                                  <Iconify\r\n                                    icon=\"material-symbols:close\"\r\n                                    onClick={handleCancelClick}\r\n                                  />,\r\n                                  <Iconify\r\n                                    icon=\"tabler:edit\"\r\n                                    onClick={handleEditClick}\r\n                                  />,\r\n                                ]}\r\n                              />\r\n                            </Grid>\r\n                            {/* Model stock no  */}\r\n                            <Dialog\r\n                              onClose={handleCloseModal2}\r\n                              aria-labelledby=\"customized-dialog-title\"\r\n                              open={modalOpenAsset}\r\n                              maxWidth=\"lg\"\r\n                              fullWidth\r\n                              disableBackdropClick\r\n                              sx={{\r\n                                width: \"100vw\",\r\n                                marginLeft: \"auto\",\r\n                                marginRight: \"auto\",\r\n                                marginTop: \"20px\",\r\n                              }}\r\n                            >\r\n                              <DialogTitle\r\n                                sx={{ m: 0, p: 2 }}\r\n                                id=\"customized-dialog-title\"\r\n                                className=\"dailogTitWork\"\r\n                              >\r\n                                <img\r\n                                  src={logo}\r\n                                  style={{\r\n                                    width: \"30px\",\r\n                                    height: \"30px\",\r\n                                    marginRight: \"2px\",\r\n                                  }}\r\n                                />\r\n                                Stock No\r\n                              </DialogTitle>\r\n                              <IconButton\r\n                                aria-label=\"close\"\r\n                                onClick={handleCloseModal2}\r\n                                sx={{\r\n                                  position: \"absolute\",\r\n                                  right: 8,\r\n                                  top: 8,\r\n                                  color: (theme) => theme.palette.grey[500],\r\n                                }}\r\n                              >\r\n                                <Iconify icon=\"material-symbols:close\" />\r\n                              </IconButton>\r\n                              <DialogContent dividers>\r\n                                <div\r\n                                  style={{\r\n                                    width: \"100%\",\r\n                                    marginTop: \"15px\",\r\n                                  }}\r\n                                >\r\n                                  <WorkStockNoPopupData\r\n                                    onRowClick={(\r\n                                      rowData,\r\n                                      RowDescp,\r\n                                      secondRowData\r\n                                    ) =>\r\n                                      handleRowPopupData(\r\n                                        index,\r\n                                        rowData,\r\n                                        RowDescp,\r\n                                        secondRowData\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </div>\r\n                              </DialogContent>\r\n                              <DialogActions\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"space-between\",\r\n                                  padding: \"10px\",\r\n                                }}\r\n                              >\r\n                                <Button\r\n                                  type=\"button\"\r\n                                  size=\"small\"\r\n                                  startIcon={\r\n                                    <Iconify icon=\"material-symbols:close\" />\r\n                                  }\r\n                                  variant=\"soft\"\r\n                                  color=\"error\"\r\n                                  className=\"CloseButton\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    handleCloseModal2();\r\n                                  }}\r\n                                >\r\n                                  Close\r\n                                </Button>\r\n\r\n                                <div className=\"timeCartSubmit\">\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    size=\"small\"\r\n                                    className=\"SaveButton assetSpares\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      PopupRowDataSelect();\r\n                                    }}\r\n                                    style={{ marginLeft: \"5px\" }}\r\n                                  >\r\n                                    Select\r\n                                  </Button>\r\n                                </div>\r\n                              </DialogActions>\r\n                            </Dialog>\r\n                            {/* End of stock model */}\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Description:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={\r\n                                  data.setDescription != \"\"\r\n                                    ? data.setDescription\r\n                                    : \"\"\r\n                                }\r\n                                onChange={(e) => {\r\n                                  // setActualHour(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Stock Location:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={selected_StockLocation}\r\n                                value={data.selectStockLocation}\r\n                                onChange={(event, value) => {\r\n                                  // setSelected_StockLocation(value || null);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Charge Cost Center:</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={ChargeCostCenter}\r\n                                value={data.selectChargeCostCenter}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectChargeCostCenter\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickChargeCostCenter}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Charge Account:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={ChargeAccount}\r\n                                value={data.selectChargeAccount}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectChargeAccount\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickChargeAccount}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Qty Needed:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"number\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                placeholder=\"1.000\"\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"setQtyNeeded\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                value={setQtyNeeded}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}>\r\n                              <div className=\"col-sm-1 form-label bgClr\">\r\n                                EACH\r\n                              </div>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"soft\"\r\n                color=\"error\"\r\n                className=\"CloseButton\"\r\n                startIcon={<Iconify icon=\"jam:close\" />}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n\r\n              <div\r\n                className=\"timeCartSubmit\"\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"AddNewButton\"\r\n                  startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                  onClick={addInputField}\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"SaveButton assetSpares\"\r\n                  startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                  style={{\r\n                    backgroundColor: \"#4CAF50\",\r\n                    color: \"white\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                  onClick={handleAddButtonClick}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"button\"\r\n            className=\"tabAddButton\"\r\n           \r\n            onClick={handleShow}\r\n          >\r\n            + Add Material\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkOrderMaterial;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport logo from \"../../../../assets/img/Special_Order.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst WorkOrderSpecial = ({ onRowClick, data }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [MaterialOrderResult, setMaterialOrderResult] = React.useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    resetData();\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setInputFields(updatedInputFields);\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [Supplier, setSupplier] = useState([]);\r\n  const [selected_Supplier, setSelected_Supplier] = useState([]);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n\r\n  const [TaxCode, setTaxCode] = useState([]);\r\n  const [selected_TaxCode, setSelected_TaxCode] = useState([]);\r\n\r\n  const [UOM, setUOM] = useState([]);\r\n  const [selected_UOM, setSelected_UOM] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"0\");\r\n\r\n  const [ItemCost, setItemCost] = useState(\"0\");\r\n\r\n  const [CostCenter, setCostCenter] = useState([]);\r\n  const [selected_CostCenter, setSelected_CostCenter] = useState([]);\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n\r\n  const location = useLocation();\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(data.RowID);\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(data.WorkOrderNo);\r\n  const [selected_Charge_Cost_Center, setselected_Charge_Cost_Center] =\r\n    useState(data.selected_Charge_Cost_Center);\r\n\r\n\r\n  const [AssetNo, setAssetNo] = useState(data.Asset_No ? data.Asset_No.split(' : ')[0] : '');\r\n  const [PrNo, setPrNo] = useState(\"\");\r\n  const [PrLineNo, setPrLineNo] = useState(\"\");\r\n  const [ApprovalStatus, setApprovalStatus] = useState(\"\");\r\n  const [PoNo, setPoNo] = useState(\"\");\r\n  const [PoLineNo, setPoLineNo] = useState(\"\");\r\n  const [ContractPoNo, setContractPoNo] = useState(\"\");\r\n  const [ContractPoLine, setContractPoLine] = useState(\"\");\r\n\r\n\r\n\r\n  const [getStockNo, setGetStockNo] = useState([]);\r\n  const [modalOpenAsset, setModalOpenAsset] = useState(false);\r\n  const [modalRowDt, setmodalRowDt] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    get_workordermaster_specialorder(site_ID, RowID);\r\n    // get_workorder_status(site_ID, \"All\", location.state.select);\r\n  }, [location]);\r\n\r\n  // First Api\r\n  const get_workordermaster_specialorder = async (site_ID, RowID) => {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_workordermaster_specialorder.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n      \r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n        Swal.close();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  //Body\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index} onClick={(event) => handleRowClick(result, event)}>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls3_rec_supplier}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls3_descr}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls3_mtl_uom}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls3_qty_needed}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls3_item_cost}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          \r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          <span\r\n            style={{\r\n              backgroundColor:\r\n                result.pur_mst_purq_approve === \"W\"\r\n                  ? \"#FF6258\"\r\n                  : result.pur_mst_purq_approve === \"A\"\r\n                  ? \"#19D895\"\r\n                  : result.pur_mst_purq_approve === \"D\"\r\n                  ? \"#2196F3\"\r\n                  : null,\r\n              color: \"white\",\r\n              padding: \"5px\",\r\n              borderRadius: \"5px\",\r\n              fontSize: \"13px\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {result.pur_mst_purq_approve === \"W\"\r\n              ? \"Awaiting (W)\"\r\n              : result.pur_mst_purq_approve === \"A\"\r\n              ? \"Approve (A)\"\r\n              : result.pur_mst_purq_approve === \"D\"\r\n              ? \"Disapprove (D)\"\r\n              : result.pur_mst_purq_approve}\r\n          </span>\r\n        </TableCell>\r\n      </TableRow>\r\n    ));\r\n  };\r\n  const handleRowClick = (data) => {\r\n    //console.log(\"clickRow__\",data)\r\n\r\n    setAssetNo(data.wko_ls3_assetno)\r\n    setSupplier(data.wko_ls3_rec_supplier)\r\n    setDescription(data.wko_ls3_descr)\r\n    setTaxCode(data.wko_ls3_tax_cd)\r\n    setUOM(data.wko_ls3_mtl_uom)\r\n    setQtyNeeded(data.wko_ls3_qty_needed)\r\n    setItemCost(data.wko_ls3_item_cost)\r\n    setCostCenter(data.wko_ls3_chg_costcenter)\r\n    setChargeAccount(data.wko_ls3_chg_account)\r\n    setPrNo(data.wko_ls3_pr_no)\r\n    setPrLineNo(data.wko_ls3_pr_lineno)\r\n    setApprovalStatus(data.pur_mst_purq_approve)\r\n    setPoNo(data.pur_ls1_po_no)\r\n    setPoLineNo(data.pur_ls1_po_lineno)\r\n    setContractPoNo(data.wko_ls3_po_no)\r\n    setContractPoLine(data.wko_ls3_po_lineno)\r\n\r\n    setShowModal(true);\r\n  };\r\n  const resetData = () => {\r\n        setSelected_Supplier(\"\");\r\n        setDescription(\"\");\r\n        setSelected_TaxCode(\"\");\r\n        setSelected_UOM(\"\");\r\n        setQtyNeeded(\"\");\r\n        setItemCost(\"\");\r\n        setSelected_CostCenter(\"\");\r\n        setSelected_ChargeAccount(\"\");\r\n  };\r\n  // Add New Row button click\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n        pur_ls1_po_lineno: null,\r\n        pur_ls1_po_no: null,\r\n        mtr_mst_wo_no: WorkOrderNo,\r\n        mtr_mst_assetno: AssetNo,\r\n        emp_mst_login_id: emp_mst_login_id,\r\n        pur_mst_purq_approve: \"W\",\r\n        wko_ls3_pr_lineno: \"1\",\r\n        wko_ls3_pr_no: \"PR100002\",\r\n        site_cd: site_ID,\r\n        mst_RowID: RowID,\r\n        selectedSupplier:\"\",\r\n        setDescription:\"\",\r\n        selectedTaxCode:\"\",\r\n        selectedUOM:\"\",\r\n        setQtyNeeded:\"\",\r\n        setItemCost:\"\",\r\n        selectedCostCenter:\"\",\r\n        selectedChargeAccount:\"\",\r\n\r\n    },\r\n  ]);\r\n  // Add New button funcation\r\n  const addInputField = (event) => {\r\n    event.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.selectedSupplier === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Supplier is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setDescription.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedTaxCode === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Tax Code is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedUOM === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"UOM is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setQtyNeeded.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Qty Needed is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.setItemCost.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Item Cost is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedCostCenter === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Cost Center is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedChargeAccount === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Account is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n        \r\n        pur_ls1_po_lineno: null,\r\n        pur_ls1_po_no: null,\r\n        mtr_mst_wo_no: WorkOrderNo,\r\n        mtr_mst_assetno: AssetNo,\r\n        emp_mst_login_id: emp_mst_login_id,\r\n        pur_mst_purq_approve: \"W\",\r\n        wko_ls3_pr_lineno: \"1\",\r\n        wko_ls3_pr_no: \"PR100002\",\r\n        site_cd: site_ID,\r\n        mst_RowID: RowID,\r\n        selectedSupplier:\"\",\r\n        setDescription:\"\",\r\n        selectedTaxCode:\"\",\r\n        selectedUOM:\"\",\r\n        setQtyNeeded:\"\",\r\n        setItemCost:\"\",\r\n        selectedCostCenter:\"\",\r\n        selectedChargeAccount:\"\",\r\n    \r\n        },\r\n      ]);\r\n    }\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    if (index !== undefined) {\r\n      rows.splice(index, 1);\r\n    } else {\r\n      rows.splice(1, rows.length);\r\n    }\r\n\r\n    setInputFields(rows);\r\n  };\r\n  // Clear State data\r\n  const updatedInputFields = inputFields.map((field) => {\r\n    return {\r\n      ...field,\r\n      selectedSupplier:\"\",\r\n      setDescription:\"\",\r\n      selectedTaxCode:\"\",\r\n      selectedUOM:\"\",\r\n      setQtyNeeded:\"\",\r\n      setItemCost:\"\",\r\n      selectedCostCenter:\"\",\r\n      selectedChargeAccount:\"\",\r\n    };\r\n  });\r\n\r\n\r\n  const handleChange = async (index, fieldName, value) => {\r\n    const list = [...inputFields];\r\n    if (fieldName == \"setQtyNeeded\") {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n      setQtyNeeded(value);\r\n    } else {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n    }\r\n\r\n    if (fieldName == \"selectedSupplier\") {\r\n        setSelected_Supplier(value);\r\n    } else if (fieldName == \"setDescription\") {\r\n        setDescription(value);\r\n    } else if (fieldName == \"selectedTaxCode\") {\r\n        setSelected_TaxCode(value);\r\n    }else if (fieldName == \"selectedUOM\") {\r\n        setSelected_UOM(value);\r\n    }else if (fieldName == \"selectedTaxCode\") {\r\n        setSelected_TaxCode(value);\r\n    }else if (fieldName == \"setItemCost\") {\r\n        setItemCost(value);\r\n    }else if (fieldName == \"selectedCostCenter\") {\r\n        setSelected_CostCenter(value);\r\n    }else if (fieldName == \"selectedChargeAccount\") {\r\n        setSelected_ChargeAccount(value);\r\n    }\r\n  };\r\n\r\n  const handleClickSupplier = async () => {\r\n    const Supplier2 = \"supplier\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + Supplier2\r\n      );\r\n     \r\n      let SupplierGet = response.data.data.supplier.map(item => ({\r\n        label: item.sup_mst_supplier_cd + \" : \" + item.sup_mst_desc,\r\n        value: item.sup_mst_supplier_cd\r\n    }));\r\n    \r\n    setSupplier(SupplierGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  const handleClickTaxCode = async () => {\r\n    const ItmTaxCode = \"ITM_Tax_Code\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + ItmTaxCode\r\n      );\r\n     \r\n      let ItmTaxCodeGet = response.data.data.ITM_Tax_Code.map(item => ({\r\n        label: item.tax_mst_tax_cd + \" : \" + item.tax_mst_desc,\r\n        value: item.tax_mst_tax_cd\r\n    }));\r\n    \r\n    setTaxCode(ItmTaxCodeGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleClickUOM = async () => {\r\n    const ItmUOM = \"ITM_Issue_UOM\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + ItmUOM\r\n      );\r\n     \r\n      let ItmUOMGet = response.data.data.ITM_Issue_UOM.map(item => ({\r\n        label: item.uom_mst_uom + \" : \" + item.uom_mst_desc,\r\n        value: item.uom_mst_uom\r\n    }));\r\n    \r\n    setUOM(ItmUOMGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  const handleClickCostCenter = async () => {\r\n    const ItmCostCenter = \"CostCenter\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + ItmCostCenter\r\n      );\r\n     \r\n      let ItmCostCenterGet = response.data.data.CostCenter.map(item => ({\r\n        label: item.costcenter + \" : \" + item.descs,\r\n        value: item.costcenter\r\n    }));\r\n    \r\n    setCostCenter(ItmCostCenterGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickChargeAccount = async () => {\r\n    const AccountType = \"WKO_Labor_Account\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + AccountType\r\n      );\r\n      let ChargeAccount = response.data.data.WKO_Labor_Account.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.account,\r\n      }));\r\n      setChargeAccount(ChargeAccount);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n \r\n  // Submit Data in database\r\n  const handleAddButtonClick = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n        \r\n      if (inputFields.selectedSupplier === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Supplier is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setDescription.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedTaxCode === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Tax Code is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedUOM === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"UOM is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setQtyNeeded.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Qty Needed is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.setItemCost.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Item Cost is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedCostCenter === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Cost Center is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedChargeAccount === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Account is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/inser_workOrderSpecialOrder.php\",\r\n          inputFields\r\n        );\r\n        console.log(\"API Response_speccial:\", response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          Swal.close();\r\n          Swal.fire({\r\n            title: \"Special Order Request!\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            text: response.data.message,\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            setResult([...Result, inputFields]);\r\n            get_workordermaster_specialorder(site_ID, RowID);\r\n            // console.log(\"inputFields_after\",inputFields);\r\n\r\n            if (result.isConfirmed) {\r\n              // Call the next function when the user clicks the \"OK\" button\r\n\r\n              removeInputFields();\r\n              handleClose();\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n  };\r\n  //Sum calculation\r\n  const totalQty = Result.reduce(\r\n    (acc, item) => acc + (parseFloat(item.wko_ls3_qty_needed) || 0),\r\n    0\r\n  );\r\n\r\n  //Multiply calculation\r\n  const totalCost = Result.reduce(\r\n    (acc, item) =>\r\n      acc +\r\n      (parseFloat(item.wko_ls3_qty_needed) || 0) *\r\n        (parseFloat(item.wko_ls3_item_cost) || 0),\r\n    0\r\n  );\r\n // console.log(\"inputFields____\", inputFields);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div style={{ paddingBottom: \"20px\", backgroundColor: \"white\" }}>\r\n          <div\r\n            className=\"template-demo\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div style={{ marginRight: \"10px\" }}>\r\n              <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n            </div>\r\n            <div\r\n              className=\"template-demo\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n              Special Order\r\n              </div>\r\n              <div>\r\n                <span style={{ color: \"blue\" }}>\r\n                  {(totalQty * 1).toFixed(2)}\r\n                </span>{\" \"}\r\n                Total Parts Costing{\" \"}\r\n                <span style={{ color: \"#19d895\" }}>\r\n                  ${totalCost.toFixed(2)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>{renderTableHeader()}</TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={show}\r\n            maxWidth=\"lg\"\r\n            fullWidth\r\n            disableBackdropClick\r\n            sx={{\r\n              width: \"50vw\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <DialogTitle\r\n              sx={{ m: 0, p: 2 }}\r\n              id=\"customized-dialog-title\"\r\n              className=\"dailogTitWork\"\r\n            >\r\n              <img\r\n                src={logo}\r\n                style={{ width: \"30px\", height: \"30px\", marginRight: \"2px\" }}\r\n              />\r\n              Special Order (PR)\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n              }}\r\n            >\r\n              <Iconify icon=\"material-symbols:close\" />\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 WrkOdrMtb\">\r\n                    {/* {console.log(\"datadatadatadata____\", data)} */}\r\n                    {inputFields.map((data, index) => {\r\n\r\n                      const { selectedSupplier, setDescription,selectedTaxCode, selectedUOM, setQtyNeeded, setItemCost, selectedCostCenter,selectedChargeAccount } = data;\r\n                      return (\r\n                        <div className=\"row my-3 tb\" key={index}>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#2196f3\",\r\n                                  textDecoration: \"underline\",\r\n                                  fontWeight: 600,\r\n                                  fontSize: 16,\r\n                                }}\r\n                              >\r\n                                Line {index + 1}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} sx={{ textAlign: \"right\" }}>\r\n                              {inputFields.length !== 1 && (\r\n                                <Button\r\n                                  className=\"workmarerial_dlt\"\r\n                                  onClick={() => removeInputFields(index)}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faCircleXmark} />\r\n                                </Button>\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            container\r\n                            spacing={1.5}\r\n                            className=\"timeCartPopuplabel\"\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Supplier:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={Supplier}\r\n                                value={data.selectedSupplier}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedSupplier\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickSupplier}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                           \r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Description:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={\r\n                                  data.setDescription != \"\"\r\n                                    ? data.setDescription\r\n                                    : \"\"\r\n                                }\r\n                                onChange={(event) =>\r\n                                    handleChange(\r\n                                      index,\r\n                                      \"setDescription\",\r\n                                      event.target.value\r\n                                    )\r\n                                  }\r\n                              />\r\n                            \r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Tax Code:</label>\r\n                            </Grid>\r\n                              <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={TaxCode}\r\n                                value={data.selectedTaxCode}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedTaxCode\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickTaxCode}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>UOM:</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={UOM}\r\n                                value={data.selectedUOM}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedUOM\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickUOM}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Qty Needed:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"number\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                placeholder=\"1.000\"\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"setQtyNeeded\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                value={setQtyNeeded}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Item Cost:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                 type=\"number\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                placeholder=\"1.000\"\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"setItemCost\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                value={setItemCost}\r\n                              />\r\n                            </Grid>\r\n                            \r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Cost Center:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={CostCenter}\r\n                                value={data.selectedCostCenter}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedCostCenter\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickCostCenter}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Account:</label>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={ChargeAccount}\r\n                                value={data.selectedChargeAccount}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedChargeAccount\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickChargeAccount}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <Button\r\n              variant=\"soft\"\r\n              color=\"error\"\r\n              className=\"CloseButton\"\r\n              startIcon={<Iconify icon=\"jam:close\" />}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n\r\n              <div className=\"timeCartSubmit\"\r\n                style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"AddNewButton\"\r\n                  startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                  style={{ marginRight: \"10px\" }}\r\n                  onClick={addInputField}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"SaveButton assetSpares\"\r\n                  startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                  style={{\r\n                    backgroundColor: \"#4CAF50\",\r\n                    color: \"white\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                  onClick={handleAddButtonClick}\r\n                  \r\n                >\r\n                   Save\r\n                </Button>\r\n              </div>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"button\"\r\n            className=\"tabAddButton\"\r\n            onClick={handleShow}\r\n          >\r\n            + Add Special Order\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkOrderSpecial;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport logo from \"../../../../assets/img/setup.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst WorkOrderOutsource = ({ onRowClick, data }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [MaterialOrderResult, setMaterialOrderResult] = React.useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    resetData();\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setInputFields(updatedInputFields);\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  const [Supplier, setSupplier] = useState([]);\r\n  const [selected_Supplier, setSelected_Supplier] = useState([]);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n\r\n  const [TaxCode, setTaxCode] = useState([]);\r\n  const [selected_TaxCode, setSelected_TaxCode] = useState([]);\r\n\r\n  const [UOM, setUOM] = useState([]);\r\n  const [selected_UOM, setSelected_UOM] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"0\");\r\n\r\n  const [EstimateCost, setEstimateCost] = useState(\"0\");\r\n\r\n  const [CostCenter, setCostCenter] = useState([]);\r\n  const [selected_CostCenter, setSelected_CostCenter] = useState([]);\r\n\r\n  const [Account, setAccount] = useState([]);\r\n  const [selected_Account, setSelected_Account] = useState([]);\r\n\r\n  const location = useLocation();\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(data.RowID);\r\n  \r\n\r\n  const [StockNo, setStockNo] = useState(\"\");\r\n  const [MaterialRequestNo, setMaterialRequestNo] = useState(\"\");\r\n  const [PrNo, setPrNo] = useState(\"\");\r\n  const [PrLineNo, setPrLineNo] = useState(\"\");\r\n  const [ApprovalStatus, setApprovalStatus] = useState(\"\");\r\n  const [PoNo, setPoNo] = useState(\"\");\r\n  const [PoLine, setPoLine] = useState(\"\");\r\n  const [ContractPoNo, setContractPoNo] = useState(\"\");\r\n  const [ContractPoLine, setContractPoLine] = useState(\"\");\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(data.WorkOrderNo);\r\n  \r\n  const [AssetNo, setAssetNo] = useState(data.Asset_No ? data.Asset_No.split(' : ')[0] : '');\r\n\r\n  const [getStockNo, setGetStockNo] = useState([]);\r\n  const [modalOpenAsset, setModalOpenAsset] = useState(false);\r\n  const [modalRowDt, setmodalRowDt] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    get_workordermaster_OutSource(site_ID, RowID);\r\n    // get_workorder_status(site_ID, \"All\", location.state.select);\r\n  }, [location]);\r\n\r\n  // First Api\r\n  const get_workordermaster_OutSource = async (site_ID, RowID) => {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_workordermaster_outsourcecontract.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n      //  console.log(\"response____order___\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n        Swal.close();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  //Body\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index} onClick={(event) => handleRowClick(result, event)}>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls4_supplier}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls4_descr}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls4_tax_cd}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls4_svc_uom}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls4_qty_needed}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n           {result.wko_ls4_est_cost}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n           {result.wko_ls4_chg_costcenter}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n           {result.wko_ls4_chg_account}\r\n        </TableCell>\r\n\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          <span\r\n            style={{\r\n              backgroundColor:\r\n                result.pur_mst_purq_approve === \"W\"\r\n                  ? \"#FF6258\"\r\n                  : result.pur_mst_purq_approve === \"A\"\r\n                  ? \"#19D895\"\r\n                  : result.pur_mst_purq_approve\r\n                  \r\n                  \r\n                  === \"D\"\r\n                  ? \"#2196F3\"\r\n                  : null,\r\n              color: \"white\",\r\n              padding: \"5px\",\r\n              borderRadius: \"5px\",\r\n              fontSize: \"13px\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {result.pur_mst_purq_approve === \"W\"\r\n              ? \"Awaiting (W)\"\r\n              : result.pur_mst_purq_approve === \"A\"\r\n              ? \"Approve (A)\"\r\n              : result.pur_mst_purq_approve === \"D\"\r\n              ? \"Disapprove (D)\"\r\n              : result.pur_mst_purq_approve}\r\n          </span>\r\n        </TableCell>\r\n      </TableRow>\r\n    ));\r\n  };\r\n  const handleRowClick = (data) => {\r\n    //console.log(\"clickRow__\",data)\r\n\r\n    setStockNo( data.wko_ls4_assetno )\r\n    setSupplier( data.wko_ls4_supplier )\r\n    setDescription( data.wko_ls4_descr )\r\n    setTaxCode( data.wko_ls4_tax_cd )\r\n    setUOM( data.wko_ls4_svc_uom )\r\n    setQtyNeeded( data.wko_ls4_qty_needed )\r\n    setEstimateCost( data.wko_ls4_est_cost )\r\n    setCostCenter( data.wko_ls4_chg_costcenter )\r\n    setAccount( data.wko_ls4_chg_account )\r\n    setPrNo( data.wko_ls4_pr_no )\r\n    setPrLineNo( data.wko_ls4_pr_lineno )\r\n    setApprovalStatus( data.pur_mst_purq_approve )\r\n    setPoLine( data.pur_ls1_po_no )\r\n    setPoLine( data.pur_ls1_po_lineno )\r\n    setContractPoNo( data.wko_ls4_po_no )\r\n    setContractPoLine( data.wko_ls4_po_lineno )\r\n\r\n    setShowModal(true);\r\n  };\r\n  const resetData = () => {\r\n      setSelected_Supplier(0);\r\n      setDescription('');\r\n      setSelected_TaxCode(0);\r\n      setSelected_UOM(0);\r\n      setQtyNeeded('');\r\n      setEstimateCost('');\r\n      setSelected_CostCenter(0);\r\n      setSelected_Account(0);\r\n  };\r\n  // Add New Row button click\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n           mst_RowID: RowID,\r\n           emp_mst_login_id: emp_mst_login_id,\r\n           mtr_mst_wo_no: WorkOrderNo,\r\n            pur_ls1_po_lineno: null,\r\n            pur_ls1_po_no: null,\r\n            pur_mst_purq_approve: \"W\",\r\n            site_cd: site_ID,\r\n            wko_ls4_assetno: AssetNo,\r\n            wko_ls4_po_lineno: null,\r\n            wko_ls4_po_no: null,\r\n            wko_ls4_pr_lineno: \"1\",\r\n            wko_ls4_pr_no: \"PR100004\",\r\n            selectedSupplier:\"\",\r\n            setDescription:\"\",\r\n            selectedTaxCode:\"\",\r\n            selectedUOM:\"\",\r\n            setQtyNeeded:\"\",\r\n            setEstimateCost:\"\",\r\n            selectedCostCenter:\"\",\r\n            selectedChargeAccount:\"\",\r\n\r\n    },\r\n  ]);\r\n  // Add New button funcation\r\n  const addInputField = (event) => {\r\n    event.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.selectedSupplier === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Supplier is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setDescription.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedTaxCode === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Tax Code is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedUOM === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"UOM is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setQtyNeeded.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Qty Needed is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.setEstimateCost.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Estimate Cost is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedCostCenter === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Cost Center is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedChargeAccount === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Account is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n        \r\n          mst_RowID: RowID,\r\n          mtr_mst_wo_no: WorkOrderNo,\r\n          emp_mst_login_id: emp_mst_login_id,\r\n           pur_ls1_po_lineno: null,\r\n           pur_ls1_po_no: null,\r\n           pur_mst_purq_approve: \"W\",\r\n           site_cd: site_ID,\r\n           wko_ls4_assetno: AssetNo,\r\n           wko_ls4_po_lineno: null,\r\n           wko_ls4_po_no: null,\r\n           wko_ls4_pr_lineno: \"1\",\r\n           wko_ls4_pr_no: \"PR100004\",\r\n           selectedSupplier:\"\",\r\n           setDescription:\"\",\r\n           selectedTaxCode:\"\",\r\n           selectedUOM:\"\",\r\n           setQtyNeeded:\"\",\r\n           setEstimateCost:\"\",\r\n           selectedCostCenter:\"\",\r\n           selectedChargeAccount:\"\",\r\n    \r\n        },\r\n      ]);\r\n    }\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    if (index !== undefined) {\r\n      rows.splice(index, 1);\r\n    } else {\r\n      rows.splice(1, rows.length);\r\n    }\r\n\r\n    setInputFields(rows);\r\n  };\r\n  // Clear State data\r\n  const updatedInputFields = inputFields.map((field) => {\r\n    return {\r\n      ...field,\r\n      selectedSupplier:\"\",\r\n      setDescription:\"\",\r\n      selectedTaxCode:\"\",\r\n      selectedUOM:\"\",\r\n      setQtyNeeded:\"\",\r\n      setEstimateCost:\"\",\r\n      selectedCostCenter:\"\",\r\n      selectedChargeAccount:\"\",\r\n    };\r\n  });\r\n\r\n\r\n  const handleChange = async (index, fieldName, value) => {\r\n    const list = [...inputFields];\r\n    if (fieldName == \"setQtyNeeded\") {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n      setQtyNeeded(value);\r\n    } else {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n    }\r\n\r\n    if (fieldName == \"selectedSupplier\") {\r\n        setSelected_Supplier(value);\r\n    } else if (fieldName == \"setDescription\") {\r\n        setDescription(value);\r\n    } else if (fieldName == \"selectedTaxCode\") {\r\n        setSelected_TaxCode(value);\r\n    }else if (fieldName == \"selectedUOM\") {\r\n        setSelected_UOM(value);\r\n    }else if (fieldName == \"selectedTaxCode\") {\r\n        setSelected_TaxCode(value);\r\n    }else if (fieldName == \"setEstimateCost\") {\r\n      setEstimateCost(value);\r\n    }else if (fieldName == \"selectedCostCenter\") {\r\n        setSelected_CostCenter(value);\r\n    }else if (fieldName == \"selectedChargeAccount\") {\r\n      setSelected_Account(value);\r\n    }\r\n  };\r\n\r\n  const handleClickSupplier = async () => {\r\n    const Supplier2 = \"supplier\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + Supplier2\r\n      );\r\n     \r\n      let SupplierGet = response.data.data.supplier.map(item => ({\r\n        label: item.sup_mst_supplier_cd + \" : \" + item.sup_mst_desc,\r\n        value: item.sup_mst_supplier_cd\r\n    }));\r\n    \r\n    setSupplier(SupplierGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  const handleClickTaxCode = async () => {\r\n    const ItmTaxCode = \"ITM_Tax_Code\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + ItmTaxCode\r\n      );\r\n     \r\n      let ItmTaxCodeGet = response.data.data.ITM_Tax_Code.map(item => ({\r\n        label: item.tax_mst_tax_cd + \" : \" + item.tax_mst_desc,\r\n        value: item.tax_mst_tax_cd\r\n    }));\r\n    \r\n    setTaxCode(ItmTaxCodeGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleClickUOM = async () => {\r\n    const ItmUOM = \"ITM_Issue_UOM\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + ItmUOM\r\n      );\r\n     \r\n      let ItmUOMGet = response.data.data.ITM_Issue_UOM.map(item => ({\r\n        label: item.uom_mst_uom + \" : \" + item.uom_mst_desc,\r\n        value: item.uom_mst_uom\r\n    }));\r\n    \r\n    setUOM(ItmUOMGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  const handleClickCostCenter = async () => {\r\n    const ItmCostCenter = \"CostCenter\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + ItmCostCenter\r\n      );\r\n     \r\n      let ItmCostCenterGet = response.data.data.CostCenter.map(item => ({\r\n        label: item.costcenter + \" : \" + item.descs,\r\n        value: item.costcenter\r\n    }));\r\n    \r\n    setCostCenter(ItmCostCenterGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickChargeAccount = async () => {\r\n    const AccountType = \"WKO_Labor_Account\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + AccountType\r\n      );\r\n      let ChargeAccount = response.data.data.WKO_Labor_Account.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.account,\r\n      }));\r\n      setAccount(ChargeAccount);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n // console.log(\"inputFields____\",inputFields);\r\n  // Submit Data in database\r\n  const handleAddButtonClick = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n        \r\n      if (inputFields.selectedSupplier === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Supplier is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setDescription.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedTaxCode === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Tax Code is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedUOM === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"UOM is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setQtyNeeded.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Qty Needed is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.setEstimateCost.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Estimate Cost is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedCostCenter === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Cost Center is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedChargeAccount === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Account is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      console.log(\"inputFields____btn_submit\",inputFields);\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/inser_workOrderContract.php\",\r\n          inputFields\r\n        );\r\n        console.log(\"API Response_Contract:\", response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          Swal.close();\r\n          Swal.fire({\r\n            title: \"Outsource Contract Request!\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            text: response.data.message,\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            setResult([...Result, inputFields]);\r\n            get_workordermaster_OutSource(site_ID, RowID);\r\n            // console.log(\"inputFields_after\",inputFields);\r\n\r\n            if (result.isConfirmed) {\r\n              // Call the next function when the user clicks the \"OK\" button\r\n\r\n              removeInputFields();\r\n              handleClose();\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n  };\r\n  //Sum calculation\r\n  const totalQty = Result.reduce(\r\n    (acc, item) => acc + (parseFloat(item.wko_ls4_qty_needed) || 0),\r\n    0\r\n  );\r\n\r\n  //Multiply calculation\r\n  const totalCost = Result.reduce(\r\n    (acc, item) =>\r\n      acc +\r\n      (parseFloat(item.wko_ls4_qty_needed) || 0) *\r\n        (parseFloat(item.wko_ls4_est_cost) || 0),\r\n    0\r\n  );\r\n // console.log(\"inputFields____\", inputFields);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div style={{ paddingBottom: \"20px\", backgroundColor: \"white\" }}>\r\n          <div\r\n            className=\"template-demo\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div style={{ marginRight: \"10px\" }}>\r\n              <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n            </div>\r\n            <div\r\n              className=\"template-demo\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n              Outsource Contract (PR)\r\n              </div>\r\n              <div>\r\n                <span style={{ color: \"blue\" }}>\r\n                  {(totalQty * 1).toFixed(2)}\r\n                </span>{\" \"}\r\n                Total Parts Costing{\" \"}\r\n                <span style={{ color: \"#19d895\" }}>\r\n                  ${totalCost.toFixed(2)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>{renderTableHeader()}</TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={show}\r\n            maxWidth=\"lg\"\r\n            fullWidth\r\n            disableBackdropClick\r\n            sx={{\r\n              width: \"50vw\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <DialogTitle\r\n              sx={{ m: 0, p: 2 }}\r\n              id=\"customized-dialog-title\"\r\n              className=\"dailogTitWork\"\r\n            >\r\n              <img\r\n                src={logo}\r\n                style={{ width: \"30px\", height: \"30px\", marginRight: \"2px\" }}\r\n              />\r\n             Outsource Contract (PR)\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n              }}\r\n            >\r\n              <Iconify icon=\"material-symbols:close\" />\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 WrkOdrMtb\">\r\n                    {/* {console.log(\"datadatadatadata____\", data)} */}\r\n                    {inputFields.map((data, index) => {\r\n\r\n                      const { selectedSupplier, setDescription,selectedTaxCode, selectedUOM, setQtyNeeded, setEstimateCost, selectedCostCenter,selectedChargeAccount } = data;\r\n                      return (\r\n                        <div className=\"row my-3 tb\" key={index}>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#2196f3\",\r\n                                  textDecoration: \"underline\",\r\n                                  fontWeight: 600,\r\n                                  fontSize: 16,\r\n                                }}\r\n                              >\r\n                                Line {index + 1}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} sx={{ textAlign: \"right\" }}>\r\n                              {inputFields.length !== 1 && (\r\n                                <Button\r\n                                  className=\"workmarerial_dlt\"\r\n                                  onClick={() => removeInputFields(index)}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faCircleXmark} />\r\n                                </Button>\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            container\r\n                            spacing={1.5}\r\n                            className=\"timeCartPopuplabel\"\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Supplier:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={Supplier}\r\n                                value={data.selectedSupplier}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedSupplier\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickSupplier}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                           \r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Description:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={\r\n                                  data.setDescription != \"\"\r\n                                    ? data.setDescription\r\n                                    : \"\"\r\n                                }\r\n                                onChange={(event) =>\r\n                                    handleChange(\r\n                                      index,\r\n                                      \"setDescription\",\r\n                                      event.target.value\r\n                                    )\r\n                                  }\r\n                              />\r\n                            \r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Tax Code:</label>\r\n                            </Grid>\r\n                              <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={TaxCode}\r\n                                value={data.selectedTaxCode}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedTaxCode\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickTaxCode}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>UOM:</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={UOM}\r\n                                value={data.selectedUOM}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedUOM\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickUOM}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Qty Needed:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                 type=\"number\"\r\n                                 inputProps={{ maxLength: 11 }}\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                placeholder=\"1.000\"\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"setQtyNeeded\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                value={setQtyNeeded}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Estimate Cost:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"number\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                placeholder=\"1.000\"\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"setEstimateCost\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                value={setEstimateCost}\r\n                              />\r\n                            </Grid>\r\n                            \r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Cost Center:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={CostCenter}\r\n                                value={data.selectedCostCenter}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedCostCenter\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickCostCenter}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Account:</label>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={Account}\r\n                                value={data.selectedChargeAccount}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedChargeAccount\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickChargeAccount}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"soft\"\r\n                color=\"error\"\r\n                className=\"CloseButton\"\r\n                startIcon={<Iconify icon=\"jam:close\" />}\r\n              \r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n\r\n              <div className=\"timeCartSubmit\"  style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"AddNewButton\"\r\n                  startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                  onClick={addInputField}\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                 variant=\"contained\"\r\n                 className=\"SaveButton assetSpares\"\r\n                 startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                 style={{\r\n                   backgroundColor: \"#4CAF50\",\r\n                   color: \"white\",\r\n                   marginRight: \"10px\",\r\n                 }}\r\n                  onClick={handleAddButtonClick}\r\n                 \r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"button\"\r\n            className=\"tabAddButton\"\r\n            onClick={handleShow}\r\n          >\r\n            + Add Outsource Contract (PR)\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkOrderOutsource;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport logo from \"../../../../assets/img/toolkit.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport dayjs from 'dayjs';\r\n\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst WorkOrderMisc = ({ onRowClick, data }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n\r\n  const [Header, setHeader] = React.useState([]);\r\n  const [Result, setResult] = React.useState([]);\r\n  const [MaterialOrderResult, setMaterialOrderResult] = React.useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    resetData();\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setInputFields(updatedInputFields);\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n    const todayDate = dayjs().format('DD/MM/YYYY');\r\n    const [MiscDate, setMiscDate] = useState(() => dayjs().format('YYYY-MM-DD'));\r\n\r\n \r\n\r\n  const [UOM, setUOM] = useState([]);\r\n  const [selected_UOM, setSelected_UOM] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"0\");\r\n\r\n  const [ItemCost, setItemCost] = useState(\"0\");\r\n\r\n  const [CostCenter, setCostCenter] = useState([]);\r\n  const [selected_CostCenter, setSelected_CostCenter] = useState([]);\r\n\r\n  const [Account, setAccount] = useState([]);\r\n  const [selected_Account, setSelected_Account] = useState([]);\r\n\r\n  const [TaxCode, setTaxCode] = useState([]);\r\n  const [selected_TaxCode, setSelected_TaxCode] = useState([]);\r\n\r\n  const location = useLocation();\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(data.RowID);\r\n  \r\n\r\n  const [StockNo, setStockNo] = useState(\"\");\r\n  const [MaterialRequestNo, setMaterialRequestNo] = useState(\"\");\r\n  const [PrNo, setPrNo] = useState(\"\");\r\n  const [PrLineNo, setPrLineNo] = useState(\"\");\r\n  const [ApprovalStatus, setApprovalStatus] = useState(\"\");\r\n  const [PoNo, setPoNo] = useState(\"\");\r\n  const [PoLine, setPoLine] = useState(\"\");\r\n  const [ContractPoNo, setContractPoNo] = useState(\"\");\r\n  const [ContractPoLine, setContractPoLine] = useState(\"\");\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(data.WorkOrderNo);\r\n \r\n  const [AssetNo, setAssetNo] = useState(data.Asset_No ? data.Asset_No.split(' : ')[0] : '');\r\n\r\n  useEffect(() => {\r\n    get_workordermaster_Misc(site_ID, RowID);\r\n    // get_workorder_status(site_ID, \"All\", location.state.select);\r\n  }, [location]);\r\n\r\n  // First Api\r\n  const get_workordermaster_Misc = async (site_ID, RowID) => {\r\n    Swal.fire({\r\n      title: \"Please Wait!\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `/get_workordermaster_misc.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n        // console.log(\"response____misc___\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setHeader(response.data.data.header);\r\n        setResult(response.data.data.result);\r\n        Swal.close();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  //Header\r\n  const renderTableHeader = () => {\r\n    const cellStyle = {\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n    };\r\n    return (\r\n      <>\r\n        <TableCell key=\"select\"></TableCell>\r\n        {Object.keys(Header).map((attr) => (\r\n          <TableCell key={attr} style={cellStyle}>\r\n            {attr}\r\n          </TableCell>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  //Body\r\n  const renderTableRows = () => {\r\n    return Result.map((result, index) => (\r\n      <TableRow key={index} onClick={(event) => handleRowClick(result, event)}>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {index + 1}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls5_assetno}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls5_desc}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n        {result.wko_ls5_date && result.wko_ls5_date.date ? result.wko_ls5_date.date.substring(0, 10) : ''}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls5_uom}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n          {result.wko_ls5_qty}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n           {result.wko_ls5_item_cost}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n           {result.wko_ls5_est_amt}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n           {result.wko_ls5_costcenter}\r\n        </TableCell>\r\n        <TableCell style={{ padding: \"5px\", textAlign: \"center\" }}>\r\n           {result.wko_ls5_account}\r\n        </TableCell>\r\n\r\n        \r\n      </TableRow>\r\n    ));\r\n  };\r\n  const handleRowClick = (data) => {\r\n    //console.log(\"clickRow__\",data)\r\n\r\n    setStockNo( data.wko_ls4_assetno )\r\n    setDescription( data.wko_ls4_descr )\r\n    setTaxCode( data.wko_ls4_tax_cd )\r\n    setUOM( data.wko_ls4_svc_uom )\r\n    setQtyNeeded( data.wko_ls4_qty_needed )\r\n \r\n    setCostCenter( data.wko_ls4_chg_costcenter )\r\n    setAccount( data.wko_ls4_chg_account )\r\n    setPrNo( data.wko_ls4_pr_no )\r\n    setPrLineNo( data.wko_ls4_pr_lineno )\r\n    setApprovalStatus( data.pur_mst_purq_approve )\r\n    setPoLine( data.pur_ls1_po_no )\r\n    setPoLine( data.pur_ls1_po_lineno )\r\n    setContractPoNo( data.wko_ls4_po_no )\r\n    setContractPoLine( data.wko_ls4_po_lineno )\r\n\r\n    setShowModal(true);\r\n  };\r\n  const resetData = () => {\r\n      setDescription('');\r\n      setMiscDate('');\r\n      setSelected_UOM('');\r\n      setQtyNeeded('');\r\n      setItemCost('');\r\n      setSelected_CostCenter(0);\r\n      setSelected_Account(0);\r\n  };\r\n  // Add New Row button click\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n           mst_RowID: RowID,\r\n           emp_mst_login_id: emp_mst_login_id,\r\n           mtr_mst_wo_no: WorkOrderNo,\r\n            site_cd: site_ID,\r\n            wko_ls4_assetno: AssetNo,\r\n            setDescription:\"\",\r\n            setMiscDate: MiscDate,\r\n            selectedUOM:\"\",\r\n            setQtyNeeded:\"\",\r\n            setItemCost:\"\",\r\n            selectedCostCenter:\"\",\r\n            selectedChargeAccount:\"\",\r\n\r\n    },\r\n  ]);\r\n // console.log(\"setMiscDate___111\",MiscDate);\r\n  // Add New button funcation\r\n  const addInputField = (event) => {\r\n    event.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n      if (inputFields.setDescription === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedUOM === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"UOM is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setQtyNeeded.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Qty Needed is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.setItemCost.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Item Cost is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedCostCenter === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Cost Center is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedChargeAccount === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Account is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      setInputFields([\r\n        ...inputFields,\r\n        {\r\n            mst_RowID: RowID,\r\n            emp_mst_login_id: emp_mst_login_id,\r\n            mtr_mst_wo_no: WorkOrderNo,\r\n             site_cd: site_ID,\r\n             wko_ls4_assetno: AssetNo,\r\n             setDescription:\"\",\r\n             setMiscDate:\"\",\r\n             selectedUOM:\"\",\r\n             setQtyNeeded:\"\",\r\n             setItemCost:\"\",\r\n             selectedCostCenter:\"\",\r\n             selectedChargeAccount:\"\",\r\n    \r\n        },\r\n      ]);\r\n    }\r\n  };\r\n  const removeInputFields = (index) => {\r\n    const rows = [...inputFields];\r\n    if (index !== undefined) {\r\n      rows.splice(index, 1);\r\n    } else {\r\n      rows.splice(1, rows.length);\r\n    }\r\n\r\n    setInputFields(rows);\r\n  };\r\n  // Clear State data\r\n  const updatedInputFields = inputFields.map((field) => {\r\n    return {\r\n      ...field,\r\n      setDescription:\"\",\r\n      selectedUOM:\"\",\r\n      setQtyNeeded:\"\",\r\n      setMiscDate:\"\",\r\n      setItemCost:\"\",\r\n      selectedCostCenter:\"\",\r\n      selectedChargeAccount:\"\",\r\n    };\r\n  });\r\n\r\n\r\n  const handleChange = async (index, fieldName, value) => {\r\n    const list = [...inputFields];\r\n    if (fieldName == \"setQtyNeeded\") {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n      setQtyNeeded(value);\r\n    } else {\r\n      list[index][fieldName] = value;\r\n      setInputFields(list);\r\n    }\r\n\r\n    if (fieldName == \"setDescription\") {\r\n        setDescription(value);\r\n    } else if (fieldName == \"setMiscDate\") {\r\n        setMiscDate(value);\r\n    } else if (fieldName == \"selectedUOM\") {\r\n        setSelected_UOM(value);\r\n    }else if (fieldName == \"selectedUOM\") {\r\n        setSelected_UOM(value);\r\n    }else if (fieldName == \"setItemCost\") {\r\n        setItemCost(value);\r\n    }else if (fieldName == \"selectedTaxCode\") {\r\n        setSelected_TaxCode(value);\r\n    }else if (fieldName == \"selectedCostCenter\") {\r\n        setSelected_CostCenter(value);\r\n    }else if (fieldName == \"selectedChargeAccount\") {\r\n      setSelected_Account(value);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClickUOM = async () => {\r\n    const ItmUOM = \"ITM_Issue_UOM\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + ItmUOM\r\n      );\r\n     \r\n      let ItmUOMGet = response.data.data.ITM_Issue_UOM.map(item => ({\r\n        label: item.uom_mst_uom + \" : \" + item.uom_mst_desc,\r\n        value: item.uom_mst_uom\r\n    }));\r\n    \r\n    setUOM(ItmUOMGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  const handleClickCostCenter = async () => {\r\n    const ItmCostCenter = \"CostCenter\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + ItmCostCenter\r\n      );\r\n     \r\n      let ItmCostCenterGet = response.data.data.CostCenter.map(item => ({\r\n        label: item.costcenter + \" : \" + item.descs,\r\n        value: item.costcenter\r\n    }));\r\n    \r\n    setCostCenter(ItmCostCenterGet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickChargeAccount = async () => {\r\n    const AccountType = \"WKO_Labor_Account\";\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_dropdown.php?site_cd=\" + site_ID + \"&type=\" + AccountType\r\n      );\r\n      let ChargeAccount = response.data.data.WKO_Labor_Account.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.account,\r\n      }));\r\n      setAccount(ChargeAccount);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  //console.log(\"inputFields____\",inputFields);\r\n  // Submit Data in database\r\n  const handleAddButtonClick = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n    inputFields.forEach((inputFields) => {\r\n        \r\n      if (inputFields.setDescription .trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Description is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.selectedUOM === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"UOM is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      } else if (inputFields.setQtyNeeded.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Qty Needed is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.setItemCost.trim() === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Item Cost is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedCostCenter === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Cost Center is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n      else if (inputFields.selectedChargeAccount === \"\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Account is Required!\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n        });\r\n        isValid = false;\r\n      }\r\n    });\r\n    if (isValid) {\r\n      Swal.fire({\r\n        title: \"Please Wait!\",\r\n        allowOutsideClick: false,\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n      });\r\n      Swal.showLoading();\r\n      console.log(\"inputFields____btn_submit\",inputFields);\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_workOrderMisc.php\",\r\n          inputFields\r\n        );\r\n        console.log(\"API Response_Misc:\", response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          Swal.close();\r\n          Swal.fire({\r\n            title: \"Misc Request!\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            text: response.data.message,\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            setResult([...Result, inputFields]);\r\n            get_workordermaster_Misc(site_ID, RowID);\r\n            // console.log(\"inputFields_after\",inputFields);\r\n\r\n            if (result.isConfirmed) {\r\n              // Call the next function when the user clicks the \"OK\" button\r\n\r\n              removeInputFields();\r\n              handleClose();\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error posting form data:\", error);\r\n      }\r\n    }\r\n  };\r\n  //Sum calculation\r\n  const totalQty = Result.reduce(\r\n    (acc, item) => acc + (parseFloat(item.wko_ls5_qty) || 0),\r\n    0\r\n  );\r\n\r\n  //Multiply calculation\r\n  const totalCost = Result.reduce(\r\n    (acc, item) =>\r\n      acc +\r\n      (parseFloat(item.wko_ls5_qty) || 0) *\r\n        (parseFloat(item.wko_ls5_item_cost) || 0),\r\n    0\r\n  );\r\n\r\n  const handleDateChange = (date, index) => {\r\n    const updatedInputFields = [...inputFields]; // Copy the inputFields array\r\n    updatedInputFields[index].setMiscDate = date.format('YYYY-MM-DD'); // Update the setMiscDate field at the specified index\r\n    setInputFields(updatedInputFields); // Update the state with the modified array\r\n};\r\n // console.log(\"inputFields____\", inputFields);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div style={{ paddingBottom: \"20px\", backgroundColor: \"white\" }}>\r\n          <div\r\n            className=\"template-demo\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div style={{ marginRight: \"10px\" }}>\r\n              <img src={logo} style={{ width: \"50px\", height: \"50px\" }} />\r\n            </div>\r\n            <div\r\n              className=\"template-demo\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <div style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n              Misc\r\n              </div>\r\n              <div>\r\n                <span style={{ color: \"blue\" }}>\r\n                  {(totalQty * 1).toFixed(2)}\r\n                </span>{\" \"}\r\n                Total Parts Costing{\" \"}\r\n                <span style={{ color: \"#19d895\" }}>\r\n                  ${totalCost.toFixed(2)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>{renderTableHeader()}</TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={show}\r\n            maxWidth=\"lg\"\r\n            fullWidth\r\n            disableBackdropClick\r\n            sx={{\r\n              width: \"50vw\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            <DialogTitle\r\n              sx={{ m: 0, p: 2 }}\r\n              id=\"customized-dialog-title\"\r\n              className=\"dailogTitWork\"\r\n            >\r\n              <img\r\n                src={logo}\r\n                style={{ width: \"30px\", height: \"30px\", marginRight: \"2px\" }}\r\n              />\r\n             Misc\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n              }}\r\n            >\r\n              <Iconify icon=\"material-symbols:close\" />\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 WrkOdrMtb\">\r\n                    {/* {console.log(\"datadatadatadata____\", data)} */}\r\n                    {inputFields.map((data, index) => {\r\n\r\n                      const { setDescription, setMiscDate,selectedUOM, setQtyNeeded, setItemCost, selectedCostCenter,selectedChargeAccount } = data;\r\n                      return (\r\n                        <div className=\"row my-3 tb\" key={index}>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#2196f3\",\r\n                                  textDecoration: \"underline\",\r\n                                  fontWeight: 600,\r\n                                  fontSize: 16,\r\n                                }}\r\n                              >\r\n                                Line {index + 1}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} sx={{ textAlign: \"right\" }}>\r\n                              {inputFields.length !== 1 && (\r\n                                <Button\r\n                                  className=\"workmarerial_dlt\"\r\n                                  onClick={() => removeInputFields(index)}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faCircleXmark} />\r\n                                </Button>\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            container\r\n                            spacing={1.5}\r\n                            className=\"timeCartPopuplabel\"\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Description:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                value={\r\n                                  data.setDescription != \"\"\r\n                                    ? data.setDescription\r\n                                    : \"\"\r\n                                }\r\n                                onChange={(event) =>\r\n                                    handleChange(\r\n                                      index,\r\n                                      \"setDescription\",\r\n                                      event.target.value\r\n                                    )\r\n                                  }\r\n                              />\r\n                            \r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Date:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} className=\"customInputDate\">\r\n                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                    <DatePicker\r\n                                        value={dayjs(setMiscDate, 'YYYY-MM-DD')}// Set the value of the DatePicker to the state\r\n                                        onChange={(date) => handleDateChange(date, index)}// Handle date changes and update state\r\n                                        sx={{ width: \"100%\",padding:\"20px\",padding: \"0px\",border: \"1px solid #d0d0d0\",borderRadius: \"8px\" }}\r\n                                      \r\n                                    />\r\n                                 </LocalizationProvider>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>UOM:</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={UOM}\r\n                                value={data.selectedUOM}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedUOM\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickUOM}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Quantity:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"number\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                placeholder=\"1.000\"\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"setQtyNeeded\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                value={setQtyNeeded}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Item Cost:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <TextField\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"number\"\r\n                                className=\"Extrasize\"\r\n                                fullWidth\r\n                                placeholder=\"1.000\"\r\n                                onChange={(event) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"setItemCost\",\r\n                                    event.target.value\r\n                                  )\r\n                                }\r\n                                value={setItemCost}\r\n                              />\r\n                            </Grid>\r\n                            \r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Cost Center:</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={CostCenter}\r\n                                value={data.selectedCostCenter}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedCostCenter\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickCostCenter}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={4}\r\n                              style={{ padding: \"10px\" }}\r\n                            >\r\n                              <label>Account:</label>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12} md={8}>\r\n                              <Autocomplete\r\n                                options={Account}\r\n                                value={data.selectedChargeAccount}\r\n                                onChange={(event, newValue) =>\r\n                                  handleChange(\r\n                                    index,\r\n                                    \"selectedChargeAccount\",\r\n                                    newValue\r\n                                  )\r\n                                }\r\n                                onOpen={handleClickChargeAccount}\r\n                                renderInput={(params) => (\r\n                                  <div>\r\n                                    <TextField\r\n                                      {...params}\r\n                                      size=\"small\"\r\n                                      placeholder=\"Select...\"\r\n                                      variant=\"outlined\"\r\n                                      className=\"Extrasize\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"soft\"\r\n                color=\"error\"\r\n                className=\"CloseButton\"\r\n                startIcon={<Iconify icon=\"jam:close\" />}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n\r\n              <div className=\"timeCartSubmit\" style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"AddNewButton\"\r\n                  startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n                  onClick={addInputField}\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"SaveButton assetSpares\"\r\n                  startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                  style={{\r\n                    backgroundColor: \"#4CAF50\",\r\n                    color: \"white\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                  onClick={handleAddButtonClick}\r\n                 \r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"button\"\r\n            className=\"tabAddButton\"\r\n            onClick={handleShow}\r\n          >\r\n            + Add Misc\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkOrderMisc;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport WorkOrderMaterial from \"./WorkOrderMaterial\";\r\nimport WorkorderSpecial  from \"./WorkOrderSpecial\";\r\nimport WorkOrderOutsource from \"./WorkOrderOutsource\";\r\nimport WorkOrderMisc from \"./WorkOrderMisc\";\r\n// import WorkOrderMaterial from \"../tables/WorkOrderMaterial\";\r\n// import WorkOrderOutsourceContract from \"../tables/WorkOrderOutsourceContract\";\r\n// import WorkOrderMisc from \"../tables/WorkOrderMisc\";\r\n\r\nconst WorkOrderSpecialOrder = ({ data }) => {\r\n // console.log(\"RowID____\", data);\r\n  return (\r\n    <div>\r\n      {/*************************************** Material **************************************************/}\r\n      <div>\r\n\r\n        <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"4px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n            }}\r\n          >\r\n            <WorkOrderMaterial\r\n              data={data}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n\r\n      {/*************************************** Special Order **************************************************/}\r\n\r\n      <br />\r\n      <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"4px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n            }}\r\n          >\r\n            <WorkorderSpecial\r\n              data={data}\r\n            />\r\n          </div>\r\n        </div>\r\n      {/*************************************** Outsource Contract (PR) **************************************************/}\r\n      \r\n      <br />\r\n      <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"4px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n            }}\r\n          >\r\n            <WorkOrderOutsource\r\n              data={data}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n      {/*************************************** Misc **************************************************/}\r\n      <div>\r\n        {/* <div style={{ paddingBottom: '20px', backgroundColor: 'white' }}>\r\n                <h3 className=\"page-title\">Misc</h3>\r\n            </div> */}\r\n\r\n        <div className=\"card\">\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              borderRadius: \"4px\",\r\n              boxShadow: \"2px 2px 15px 2px #f0f0f0\",\r\n            }}\r\n          >\r\n            <WorkOrderMisc\r\n              data={data}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkOrderSpecialOrder;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n// @mui\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Container from \"@mui/material/Container\";\r\n// @bootstrap\r\n\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\n\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n\r\n// Toastfy\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\n\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\n// utils\r\n\r\n// routes\r\nimport { RouterLink } from \"src/routes/components\";\r\n\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\nimport httpCommon from \"src/http-common\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\n// components\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport refrencImg from \"../../../assets/img/specification.png\";\r\nimport WorkOrderAssetNo from \"../WorkOrderAssetNo\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport WorkOrderTimeCard from \"../component_module/WordOrderTimeCard\";\r\nimport loderImg from \"../../../assets/img/loder.gif\";\r\nimport WorkOrderSpecialOrder from \"../component_module/Planning/WorkOrderSpecialOrder\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\nconst StepContainer = styled(\"div\")`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 40px;\r\n  position: relative;\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: #4694d1;\r\n    height: 90%;\r\n    width: 2px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: 15px;\r\n  }\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: #f3e7f3;\r\n    height: ${({ width }) => width};\r\n    width: 2px;\r\n    top: 45%;\r\n    transition: 0.4s ease;\r\n    transform: translateY(-50%);\r\n    left: 14px;\r\n  }\r\n`;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function WordOrderNewForm({ currentUser, onPageChange }) {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_name = localStorage.getItem(\"emp_mst_name\");\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  // const currentPage = searchParams.get('currentPage') || 1;\r\n  // const selecOption = searchParams.get('optvl') || \"\";\r\n\r\n  const state = location.state || {};\r\n  const { RowID} = state || {};\r\n  const { currentPage, selectedOption } = state;\r\n\r\n  const { completeRowID } = location.state || {};\r\n  const { closeRowID } = location.state || {};\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [wkoMstLabel, setWkoMstLabel] = useState([]);\r\n  const [wkodetLabel, setWkoDetLabel] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const fileInputRef = useRef(null);\r\n  const settings = useSettingsContext();\r\n\r\n  const currentDate = new Date();\r\n  const formattedDateTime = currentDate.toISOString().slice(0, 16);\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [selectedImages2, setSelectedImages2] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [selectedPdfFiles, setSelectedPdfFiles] = useState([]);\r\n  const [RefImg, setRefImg] = useState([]);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [getDbImg, setDbImg] = useState();\r\n  const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n  const [removedRefItems, setRemovedRefItems] = useState([]);\r\n  const [disabledBtn, setDisabledBtn] = useState(false);\r\n  const [imageSelect, setImageSelect] = useState({ name: \"\", path: \"\" });\r\n  const [imguploadStatus, setImguploadStatus] = useState(\"\");\r\n  const [imguploadRefStatus, setImguploadRefStatus] = useState(\"\");\r\n  const [Tabvalue, setTabValue] = useState(0);\r\n\r\n  const [showdd, setShowdd] = useState(false);\r\n  const [handalImg, sethandalImg] = useState({});\r\n  const handleClosedd = () => setShowdd(false);\r\n  const [showdd2, setShowdd2] = useState(false);\r\n  const handleClosedd2 = () => setShowdd2(false);\r\n\r\n  const [Asset_No, setAsset_No] = useState(\"\");\r\n  const [TotalAssetNo, setTotalAssetNo] = useState(0);\r\n  const [TotalSearch, setTotalSearch] = useState(\"\");\r\n  const [viewedTotlRows, setViewedTotlRows] = useState(0);\r\n\r\n  // form filed state\r\n  const [Status, setStatus] = useState([]);\r\n  const [Plan_Priority, setPlan_Priority] = useState([]);\r\n  const [selected_Project_ID, setSelected_Project_ID] = useState([]);\r\n  const [selected_Plan_Priority, setSelected_Plan_Priority] = useState([]);\r\n  const [Asset_Group_Code, setAsset_Group_Code] = useState([]);\r\n  const [Fault_Code, setFault_Code] = useState([]);\r\n  const [selected_Fault_Code, setSelected_Fault_Code] = useState([]);\r\n  const [Asset_Status, setAsset_Status] = useState([]);\r\n  const [Charge_Cost_Center, setCharge_Cost_Center] = useState([]);\r\n  const [selected_Charge_Cost_Center, setSelected_Charge_Cost_Center] =\r\n    useState([]);\r\n  const [Supervisor_ID, setSupervisor_ID] = useState([]);\r\n  const [Work_Group, setWork_Group] = useState([]);\r\n  const [selected_Work_Group, setSelected_Work_Group] = useState([]);\r\n  const [Asset_Level, setAsset_Level] = useState([]);\r\n  const [selected_Asset_Level, setSelected_Asset_Level] = useState([]);\r\n  const [Asset_Location, setAsset_Location] = useState([]);\r\n  const [Cause_Code, setCause_Code] = useState([]);\r\n  const [Action_Code, setAction_Code] = useState([]);\r\n  const [Delay_Code, setDelay_Code] = useState([]);\r\n  const [Work_Type, setWork_Type] = useState([]);\r\n  const [Work_Class, setWork_Class] = useState([]);\r\n  const [Original_Periority, setOriginal_Periority] = useState([]);\r\n  const [Work_Area, setWork_Area] = useState([]);\r\n  const [Originator, setOriginator] = useState([]);\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(\"\");\r\n  const [selected_Status, setSelected_Status] = useState([]);\r\n  const [selected_Asset_Status, setSelected_Asset_Status] = useState([]);\r\n  const [selected_Asset_Group_Code, setSelected_Asset_Group_Code] = useState(\r\n    []\r\n  );\r\n  const [selected_Work_Area, setSelected_Work_Area] = useState([]);\r\n  const [selected_Originator, setSelected_Originator] = useState([]);\r\n  const [selected_Asset_Location, setSelected_Asset_Location] = useState([]);\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [Phone, setPhone] = useState(\"\");\r\n  const [OriginationDate, setOriginationDate] = useState(new Date());\r\n  const [DueDate, setDueDate] = useState(new Date());\r\n  const [CorrectiveAction, setCorrectiveAction] = useState(\"\");\r\n  const [selected_Original_Periority, setSelected_Original_Periority] =\r\n    useState([]);\r\n  const [selected_Cause_Code, setSelected_Cause_Code] = useState([]);\r\n  const [ScheduleDate, setScheduleDate] = useState();\r\n  const [selected_Action_Code, setSelected_Action_Code] = useState([]);\r\n  const [ExceptionDate, setExceptionDate] = useState();\r\n  const [selected_Delay_Code, setSelected_Delay_Code] = useState([]);\r\n  const [StatusChangeDate, setStatusChangeDate] = useState();\r\n  const [Project_ID, setProject_ID] = useState([]);\r\n\r\n  const [selected_Work_Type, setSelected_Work_Type] = useState([]);\r\n  const [CompletionDate, setCompletionDate] = useState();\r\n  const [CompletionDate2, setCompletionDate2] = useState(new Date());\r\n\r\n  const [selected_Work_Class, setSelected_Work_Class] = useState([]);\r\n  const [CloseDate, setCloseDate] = useState();\r\n  const [CloseDate2, setCloseDate2] = useState(new Date());\r\n  const [selected_Supervisor_ID, setSelected_Supervisor_ID] = useState([]);\r\n  const [Planner, setPlanner] = useState([]);\r\n  const [selected_Planner, setSelected_Planner] = useState([]);\r\n\r\n  const [Approver, setApprover] = useState([]);\r\n  const [selected_Approver, setSelected_Approver] = useState([]);\r\n\r\n  const [Assign_To, setAssign_To] = useState([]);\r\n  const [selected_Assign_To, setSelected_Assign_To] = useState([]);\r\n\r\n  const [Permanent_ID, setPermanent_ID] = useState(\"\");\r\n\r\n  const [Temporary_Asset, setTemporary_Asset] = useState(false);\r\n  const [CheckBox_Temporary_Asset, setCheckBox_Temporary_Asset] = useState(\"0\");\r\n\r\n  const [Approved, setApproved] = useState(false);\r\n  const [CheckBox_Approved, setCheckBox_Approved] = useState(\"0\");\r\n\r\n  const [Safety, setSafety] = useState(false);\r\n  const [CheckBox_Safety, setCheckBox_Safety] = useState(\"0\");\r\n\r\n  const [Customer_Code, setCustomer_Code] = useState([]);\r\n  const [selected_Customer_Code, setSelected_Customer_Code] = useState([]);\r\n\r\n  const [Labor_Account, setLabor_Account] = useState([]);\r\n  const [selected_Labor_Account, setSelected_Labor_Account] = useState([]);\r\n\r\n  const [Material_Account, setMaterial_Account] = useState([]);\r\n  const [selected_Material_Account, setSelected_Material_Account] = useState(\r\n    []\r\n  );\r\n\r\n  const [Credit_Cost_Center, setCredit_Cost_Center] = useState([]);\r\n  const [selected_Credit_Cost_Center, setSelected_Credit_Cost_Center] =\r\n    useState([]);\r\n\r\n  const [Contract_Account, setContract_Account] = useState([]);\r\n  const [selected_Contract_Account, setSelected_Contract_Account] = useState(\r\n    []\r\n  );\r\n\r\n  const [Miscellaneous_Account, setMiscellaneous_Account] = useState([]);\r\n  const [selected_Miscellaneous_Account, setSelected_Miscellaneous_Account] =\r\n    useState([]);\r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n  const [AutoNumring, setAutoNumring] = useState(\"\");\r\n\r\n  const [UDFNote1, setUDFNote1] = useState(\"\");\r\n  const [UDFText_1, setUDFText_1] = useState(\"\");\r\n  const [UDFText_2, setUDFText_2] = useState(\"\");\r\n  const [UDFText_3, setUDFText_3] = useState(\"\");\r\n  const [UDFText_4, setUDFText_4] = useState(\"\");\r\n  const [UDFText_5, setUDFText_5] = useState(\"\");\r\n  const [UDFText_6, setUDFText_6] = useState(\"\");\r\n  const [UDFText_7, setUDFText_7] = useState(\"\");\r\n  const [UDFText_8, setUDFText_8] = useState(\"\");\r\n  const [UDFText_9, setUDFText_9] = useState(\"\");\r\n  const [UDFText_10, setUDFText_10] = useState(\"\");\r\n\r\n  const [UDFNumber_1, setUDFNumber_1] = useState(\"\");\r\n  const [UDFNumber_2, setUDFNumber_2] = useState(\"\");\r\n  const [UDFNumber_3, setUDFNumber_3] = useState(\"\");\r\n  const [UDFNumber_4, setUDFNumber_4] = useState(\"\");\r\n  const [UDFNumber_5, setUDFNumber_5] = useState(\"\");\r\n\r\n  const [UDFDate_1, setUDFDate_1] = useState(\"\");\r\n  const [UDFDate_2, setUDFDate_2] = useState(\"\");\r\n  const [UDFDate_3, setUDFDate_3] = useState(\"\");\r\n  const [UDFDate_4, setUDFDate_4] = useState(\"\");\r\n  const [UDFDate_5, setUDFDate_5] = useState(\"\");\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n  const [getDbImgRowId, setDbImgRowId] = useState(\"\");\r\n  const [SpecialOdrResult, setSpecialOdrResult] = useState([]);\r\n\r\n  const [steps, setsteps] = useState([]);\r\n  const StatushandleClose = () => setStatusShow(false);\r\n\r\n  const [StatusShow, setStatusShow] = useState(false);\r\n\r\n  const [AssignStatusShow, setAssignStatusShow] = useState(false);\r\n  const AssignStatushandleClose = () => setAssignStatusShow(false);\r\n  const [AssignStatusToOther, setAssignStatusOther] = useState([]);\r\n\r\n  const [CommentShow, setCommentShow] = useState(false);\r\n  const CommenthandleClose = () => setCommentShow(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [imageComment, setimageComment] = useState(null);\r\n\r\n  const messageRef = useRef(null);\r\n  const [AllCommnet, setAllComment] = useState([]);\r\n\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const fileInputRef2 = useRef(null);\r\n  const [selectedImageCommnt, setSelectedImageCommnt] = useState(null);\r\n\r\n  const [uploadImgShow, setUploadImgShow] = useState(false);\r\n  const UploadImghandleClose = () => setUploadImgShow(false);\r\n  const chatContainerRef = useRef(null);\r\n  const [isFiledValueEmpty, setIsFiledValueEmpty] = useState(false);\r\n  const [isAssetStatusEmpty, setIsAssetStatusEmpty] = useState(false);\r\n\r\n  const [isFaultCodeEmpty, setIsFaultCodeEmpty] = useState(false);\r\n  const [isOriginalPeriorityEmpty, setIsOriginalPeriorityEmpty] =\r\n    useState(false);\r\n  const [isWorkTypeEmpty, setIsWorkTypeEmpty] = useState(false);\r\n  const [isWorkGroupEmpty, setIsWorkGroupEmpty] = useState(false);\r\n  const [isAssetNoEmpty, setIsAssetNoEmpty] = useState(false);\r\n  const [isCorrectiveValueEmpty, setIsCorrectiveValueEmpty] = useState(false);\r\n  const [isCauseCodeValueEmpty, setIsCauseCodeValueEmpty] = useState(false);\r\n  const [isActionCodeValueEmpty, setIsActionCodeValueEmpty] = useState(false);\r\n  const [isOpenWork, setIsOpenWork] = useState(true);\r\n  const [isOpenAsset, setIsOpenAsset] = useState(true);\r\n\r\n  const [WorkOrderMandatoryFiled, setWorkOrderMandatoryFiled] = useState([]);\r\n  const [errorField, setErrorField] = useState(null);\r\n\r\n  const [isWorkOrderStatusEmpty, setIsWorkOrderStatusEmpty] = useState(false);\r\n  const [isWorkDescEmpty, setIsWorkDescEmpty] = useState(false);\r\n  const [isWorkOrderAssetNoEmpty, setisWorkOrderAssetNoEmpty] = useState(false);\r\n  const [isChargeCostEmpty, setIsChargeCostEmpty] = useState(false);\r\n\r\n  const autocompleteRef = useRef(null);\r\n  const assetNoAutocompleteRef = useRef(null);\r\n  const faultCodeAutocompleteRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (RowID !== \"\" && RowID !== null && RowID !== undefined) {\r\n        setButton_save(\"Update\");\r\n        await get_workordermaster_select();\r\n        await getWorkOrderLebel();\r\n        await getWorkOrderMandatoryfiled();\r\n      } else if (\r\n        completeRowID !== undefined &&\r\n        completeRowID !== null &&\r\n        completeRowID !== \"\"\r\n      ) {\r\n        //setSelected_Status\r\n        setButton_save(\"Completed\");\r\n        await get_workordermaster_select();\r\n        await getWorkOrderLebel();\r\n        await getWorkOrderMandatoryfiled();\r\n      } else if (\r\n        closeRowID !== undefined &&\r\n        closeRowID !== null &&\r\n        closeRowID !== \"\"\r\n      ) {\r\n        setButton_save(\"Close Order\");\r\n        await get_workordermaster_select();\r\n        await getWorkOrderLebel();\r\n        await getWorkOrderMandatoryfiled();\r\n      } else {\r\n        await getWorkOrderLebel();\r\n        await getWorkOrderMandatoryfiled();\r\n        await fetchStatusData();\r\n        await fetchStusPriortyData();\r\n        setButton_save(\"Save\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // test funcation\r\n\r\n  // Get All Filed label Name\r\n  const getWorkOrderLebel = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\"/getWorkOrderFromLebal.php\");\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setWkoMstLabel(response.data.data.wko_mst);\r\n        setWkoDetLabel(response.data.data.wko_det);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  const getWorkOrderMandatoryfiled = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrder_mandatoryFiled.php\"\r\n      );\r\n      if (response.data.data.MandatoryField.length > 0) {\r\n        setWorkOrderMandatoryFiled(response.data.data.MandatoryField);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  const get_workordermaster_select = async () => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n\r\n    try {\r\n      let responseJson;\r\n      if (\r\n        completeRowID !== undefined &&\r\n        completeRowID !== null &&\r\n        completeRowID !== \"\"\r\n      ) {\r\n        responseJson = await httpCommon.get(\r\n          \"/get_workordermaster_select.php?RowID=\" + completeRowID\r\n        );\r\n      } else if (\r\n        closeRowID !== undefined &&\r\n        closeRowID !== null &&\r\n        closeRowID !== \"\"\r\n      ) {\r\n        responseJson = await httpCommon.get(\r\n          \"/get_workordermaster_select.php?RowID=\" + closeRowID\r\n        );\r\n      } else {\r\n        responseJson = await httpCommon.get(\r\n          \"/get_workordermaster_select.php?RowID=\" + RowID\r\n        );\r\n      }\r\n      // console.log(\"responseJson___today\", responseJson);\r\n      if (responseJson.data.status === \"SUCCESS\") {\r\n        const gt = JSON.stringify(responseJson);\r\n\r\n        // *** Set All data to state\r\n\r\n        setWorkOrderNo(responseJson.data.data[\"0\"].wko_mst_wo_no);\r\n        setAsset_No(responseJson.data.data[\"0\"].wko_mst_assetno);\r\n        setSelected_Status({\r\n          label: responseJson.data.data[0].wko_mst_status,\r\n        });\r\n\r\n        setSelected_Asset_Status({\r\n          label: responseJson.data.data[0].wko_mst_asset_status,\r\n        });\r\n        setSelected_Plan_Priority({\r\n          label: responseJson.data.data[0].wko_mst_plan_priority,\r\n        });\r\n        setSelected_Asset_Group_Code({\r\n          label: responseJson.data.data[\"0\"].wko_mst_asset_group_code,\r\n        });\r\n        setSelected_Charge_Cost_Center({\r\n          label: responseJson.data.data[0].wko_mst_chg_costcenter,\r\n        });\r\n        setSelected_Work_Area({\r\n          label: responseJson.data.data[0].wko_mst_work_area,\r\n        });\r\n        setSelected_Originator({\r\n          label: responseJson.data.data[0].wko_mst_originator,\r\n        });\r\n        setSelected_Asset_Level({\r\n          label: responseJson.data.data[0].wko_mst_asset_level,\r\n        });\r\n        setPhone(responseJson.data.data[\"0\"].wko_mst_phone);\r\n\r\n        setSelected_Asset_Location({\r\n          label: responseJson.data.data[0].wko_mst_asset_location,\r\n        });\r\n        setSelected_Fault_Code({\r\n          label: responseJson.data.data[0].wko_mst_flt_code,\r\n        });\r\n        setDescription(responseJson.data.data[\"0\"].wko_mst_descs);\r\n        //setDbImg(responseJson.data.data['0'].attachment)\r\n\r\n        if (responseJson.data.data[\"0\"].wko_mst_org_date == null) {\r\n          setOriginationDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_mst_org_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setOriginationDate(formattedDate);\r\n        }\r\n\r\n        if (responseJson.data.data[\"0\"].wko_mst_due_date == null) {\r\n          setDueDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_mst_due_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setDueDate(formattedDate);\r\n        }\r\n\r\n        setCorrectiveAction(responseJson.data.data[\"0\"].wko_det_corr_action);\r\n        setSelected_Project_ID({\r\n          label: responseJson.data.data[0].wko_mst_project_id,\r\n        });\r\n\r\n        setSelected_Original_Periority({\r\n          label: responseJson.data.data[0].wko_mst_orig_priority,\r\n        });\r\n        setSelected_Cause_Code({\r\n          label: responseJson.data.data[0].wko_det_cause_code,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_sched_date == null) {\r\n          setScheduleDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_sched_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setScheduleDate(formattedDate);\r\n        }\r\n\r\n        setSelected_Action_Code({\r\n          label: responseJson.data.data[0].wko_det_act_code,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_exc_date == null) {\r\n          setExceptionDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_exc_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setExceptionDate(formattedDate);\r\n        }\r\n        setSelected_Delay_Code({\r\n          label: responseJson.data.data[0].wko_det_delay_cd,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_sc_date == null) {\r\n          setStatusChangeDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_sc_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setStatusChangeDate(formattedDate);\r\n        }\r\n\r\n        setSelected_Work_Type({\r\n          label: responseJson.data.data[0].wko_det_work_type,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_cmpl_date == null) {\r\n          setCompletionDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_cmpl_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setCompletionDate(formattedDate);\r\n        }\r\n        setSelected_Work_Class({\r\n          label: responseJson.data.data[0].wko_det_work_class,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_clo_date == null) {\r\n          setCloseDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_clo_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setCloseDate(formattedDate);\r\n        }\r\n\r\n        setSelected_Work_Group({\r\n          label: responseJson.data.data[0].wko_det_work_grp,\r\n        });\r\n\r\n        setSelected_Supervisor_ID({\r\n          label: responseJson.data.data[0].wko_det_supv_id,\r\n        });\r\n        setSelected_Planner({\r\n          label: responseJson.data.data[0].wko_det_planner,\r\n        });\r\n        setSelected_Approver({\r\n          label: responseJson.data.data[0].wko_det_approver,\r\n        });\r\n        setSelected_Assign_To({\r\n          label: responseJson.data.data[0].wko_det_assign_to,\r\n        });\r\n        setPermanent_ID(responseJson.data.data[\"0\"].wko_det_perm_id);\r\n        setTemporary_Asset(responseJson.data.data[\"0\"].wko_det_temp_asset);\r\n        setApproved(responseJson.data.data[\"0\"].wko_det_approved);\r\n        setSafety(responseJson.data.data[\"0\"].wko_det_safety);\r\n\r\n        setSelected_Customer_Code({\r\n          label: responseJson.data.data[0].wko_det_customer_cd,\r\n        });\r\n        setSelected_Labor_Account({\r\n          label: responseJson.data.data[0].wko_det_laccount,\r\n        });\r\n        setSelected_Material_Account({\r\n          label: responseJson.data.data[0].wko_det_maccount,\r\n        });\r\n        setSelected_Credit_Cost_Center({\r\n          label: responseJson.data.data[0].wko_det_crd_costcenter,\r\n        });\r\n        setSelected_Contract_Account({\r\n          label: responseJson.data.data[0].wko_det_caccount,\r\n        });\r\n        setSelected_Miscellaneous_Account({\r\n          label: responseJson.data.data[0].wko_det_saccount,\r\n        });\r\n\r\n        setUDFNote1(responseJson.data.data[\"0\"].wko_det_note1);\r\n        setUDFText_1(responseJson.data.data[\"0\"].wko_det_varchar1);\r\n        setUDFText_2(responseJson.data.data[\"0\"].wko_det_varchar2);\r\n        setUDFText_3(responseJson.data.data[\"0\"].wko_det_varchar3);\r\n        setUDFText_4(responseJson.data.data[\"0\"].wko_det_varchar4);\r\n        setUDFText_5(responseJson.data.data[\"0\"].wko_det_varchar5);\r\n        setUDFText_6(responseJson.data.data[\"0\"].wko_det_varchar6);\r\n        setUDFText_7(responseJson.data.data[\"0\"].wko_det_varchar7);\r\n        setUDFText_8(responseJson.data.data[\"0\"].wko_det_varchar8);\r\n        setUDFText_9(responseJson.data.data[\"0\"].wko_det_varchar9);\r\n        setUDFText_10(responseJson.data.data[\"0\"].wko_det_varchar10);\r\n\r\n        setUDFNumber_1(responseJson.data.data[\"0\"].wko_det_numeric1);\r\n        setUDFNumber_2(responseJson.data.data[\"0\"].wko_det_numeric2);\r\n        setUDFNumber_3(responseJson.data.data[\"0\"].wko_det_numeric3);\r\n        setUDFNumber_4(responseJson.data.data[\"0\"].wko_det_numeric4);\r\n        setUDFNumber_5(responseJson.data.data[\"0\"].wko_det_numeric5);\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime1 == null) {\r\n          setUDFDate_1(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime1.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_1(formattedDate);\r\n        }\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime2 == null) {\r\n          setUDFDate_2(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime2.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_2(formattedDate);\r\n        }\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime3 == null) {\r\n          setUDFDate_3(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime3.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_3(formattedDate);\r\n        }\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime4 == null) {\r\n          setUDFDate_4(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime4.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_4(formattedDate);\r\n        }\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime5 == null) {\r\n          setUDFDate_5(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime5.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_5(formattedDate);\r\n        }\r\n        fetchStatusData();\r\n\r\n        Swal.close();\r\n        fetchImgData();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: responseJson.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_WorkOrder_select...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  //console.log(\"WorkOrderMandatoryFiled____\",WorkOrderMandatoryFiled);\r\n  // Second Api call\r\n  const fetchStatusData = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderStatus.php?site_cd=\" + site_ID\r\n      );\r\n      console.log(\"response____status__\", response);\r\n      let Status = response.data.data.WorkStatus.map((item) => ({\r\n        label: item.wrk_sts_status + \" : \" + item.wrk_sts_desc,\r\n        value: item.wrk_sts_desc,\r\n        key: item.wrk_sts_typ_cd,\r\n      }));\r\n\r\n      setStatus(Status);\r\n      if (\r\n        completeRowID !== undefined &&\r\n        completeRowID !== null &&\r\n        completeRowID !== \"\"\r\n      ) {\r\n        const completeStatus = Status.find(\r\n          (status) => status.key === \"COMPLETE\"\r\n        );\r\n\r\n        setSelected_Status(completeStatus);\r\n      }\r\n\r\n      if (\r\n        closeRowID !== undefined &&\r\n        closeRowID !== null &&\r\n        closeRowID !== \"\"\r\n      ) {\r\n        const closeStatus = Status.find((status) => status.key === \"CLOSE\");\r\n\r\n        setSelected_Status(closeStatus);\r\n      }\r\n\r\n      let Plan_Priority = response.data.data.PlanPeriority.map((item) => ({\r\n        label: item.wrk_pri_pri_cd + \" : \" + item.wrk_pri_desc,\r\n        value: item.wrk_pri_desc,\r\n      }));\r\n      setPlan_Priority(Plan_Priority);\r\n\r\n      let Fault_Code = response.data.data.FaultCode.map((item) => ({\r\n        label: item.wrk_flt_fault_cd + \" : \" + item.wrk_flt_desc,\r\n        value: item.wrk_flt_desc,\r\n      }));\r\n      setFault_Code(Fault_Code);\r\n\r\n      let Asset_Status = response.data.data.AssetStatus.map((item) => ({\r\n        label: item.ast_sts_status + \" : \" + item.ast_sts_desc,\r\n        value: item.ast_sts_desc,\r\n      }));\r\n      setAsset_Status(Asset_Status);\r\n\r\n      let Asset_Group_Code = response.data.data.AssetGroupCode.map((item) => ({\r\n        label: item.ast_grp_grp_cd + \" : \" + item.ast_grp_desc,\r\n        value: item.ast_grp_desc,\r\n      }));\r\n      setAsset_Group_Code(Asset_Group_Code);\r\n\r\n      let Charge_Cost_Center = response.data.data.ChargeCostCenter.map(\r\n        (item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setCharge_Cost_Center(Charge_Cost_Center);\r\n\r\n      let Work_Group = response.data.data.WorkGroup.map((item) => ({\r\n        label: item.wrk_grp_grp_cd + \" : \" + item.wrk_grp_desc,\r\n        value: item.wrk_grp_desc,\r\n      }));\r\n      setWork_Group(Work_Group);\r\n\r\n      let Asset_Level = response.data.data.AssetLevel.map((item) => ({\r\n        label: item.ast_lvl_ast_lvl + \" : \" + item.ast_lvl_desc,\r\n        value: item.ast_lvl_desc,\r\n      }));\r\n      setAsset_Level(Asset_Level);\r\n\r\n      let Asset_Location = response.data.data.AssetLocation.map((item) => ({\r\n        label: item.ast_loc_ast_loc + \" : \" + item.ast_loc_desc,\r\n        value: item.ast_loc_desc,\r\n      }));\r\n      setAsset_Location(Asset_Location);\r\n\r\n      let Cause_Code = response.data.data.CasuseCode.map((item) => ({\r\n        label: item.wrk_ccd_cause_cd + \" : \" + item.wrk_ccd_desc,\r\n        value: item.wrk_ccd_desc,\r\n      }));\r\n      setCause_Code(Cause_Code);\r\n\r\n      let Action_Code = response.data.data.ActionCode.map((item) => ({\r\n        label: item.wrk_act_action_cd + \" : \" + item.wrk_act_desc,\r\n        value: item.wrk_act_desc,\r\n      }));\r\n      setAction_Code(Action_Code);\r\n\r\n      let Delay_Code = response.data.data.WKO_Delay_Code.map((item) => ({\r\n        label: item.wrk_dcd_delay_cd + \" : \" + item.wrk_dcd_desc,\r\n        value: item.wrk_dcd_desc,\r\n      }));\r\n      setDelay_Code(Delay_Code);\r\n\r\n      let Work_Type = response.data.data.WorkType.map((item) => ({\r\n        label: item.wrk_typ_typ_cd + \" : \" + item.wrk_typ_desc,\r\n        value: item.wrk_typ_desc,\r\n      }));\r\n      setWork_Type(Work_Type);\r\n\r\n      let Work_Class = response.data.data.WorkPermitType.map((item) => ({\r\n        label: item.wrk_cls_cls_cd + \" : \" + item.wrk_cls_desc,\r\n        value: item.wrk_cls_desc,\r\n      }));\r\n      setWork_Class(Work_Class);\r\n\r\n      let Original_Periority = response.data.data.OriginalPeriority.map(\r\n        (item) => ({\r\n          label: item.wrk_pri_pri_cd + \" : \" + item.wrk_pri_desc,\r\n          value: item.wrk_pri_desc,\r\n        })\r\n      );\r\n      setOriginal_Periority(Original_Periority);\r\n\r\n      let Work_Area = response.data.data.Work_Area.map((item) => ({\r\n        label: item.mst_war_work_area + \" : \" + item.mst_war_desc,\r\n        value: item.mst_war_desc,\r\n      }));\r\n      setWork_Area(Work_Area);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Get Status And Plan Priorty Data\r\n  const fetchStusPriortyData = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/GetWordkOrderStatus_Plan_PriorityData.php\"\r\n      );\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setSelected_Status({\r\n          label: response.data.data.dft_mst_wko_sts,\r\n        });\r\n        setSelected_Plan_Priority({\r\n          label: response.data.data.dft_mst_wko_pri,\r\n        });\r\n        setSelected_Originator({\r\n          label: emp_mst_name,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Thired Api Call\r\n  const fetchImgData = async () => {\r\n    // console.log(\"fetch___img___\");\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_WorkOrderImg.php?RowID=\" + RowID\r\n      );\r\n      //   console.log(\"response_____img___get___\",response);\r\n      if (response.data.data) {\r\n        // Check if AllImgGet exists and has items\r\n        if (\r\n          response.data.data.AllImgGet &&\r\n          response.data.data.AllImgGet.length > 0\r\n        ) {\r\n          setDbImg(response.data.data.AllImgGet);\r\n          setImguploadStatus(response.data.data.AllImgGet[0].ImgStatus);\r\n          // setDbImgRowId(response.data.data.AllImgGet[0].RowID);\r\n          setImageSelect({\r\n            name: response.data.data.AllImgGet[0].file_name,\r\n            path: response.data.data.AllImgGet[0].attachment,\r\n          });\r\n        }\r\n\r\n        // Check if AllRef exists and has items\r\n        if (response.data.data.AllRef && response.data.data.AllRef.length > 0) {\r\n          setRefImg(response.data.data.AllRef);\r\n          setImguploadRefStatus(response.data.data.AllRef[0].ImgStatusRef);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n  const openSaveImg = () => {\r\n    setShowdd2(true);\r\n  };\r\n  // First main Img funcation\r\n  const handleDeleteImgApi = (ImgIDdlt) => {\r\n    const updatedImages = getDbImg.filter((image) => image.RowID !== ImgIDdlt);\r\n    // Update the state with the new array of images after the deletion\r\n    setDbImg(updatedImages);\r\n    setDbImgRowId(ImgIDdlt);\r\n    setImguploadStatus(\"NEW_SINGLE_IMG\");\r\n    setDisabledBtn(true);\r\n    setImageSelect({ name: \"\", path: \"\" });\r\n  };\r\n  const handleImgChangeSingle = (e) => {\r\n    if (e.target.files.length) {\r\n      setImage({\r\n        preview: URL.createObjectURL(e.target.files[0]),\r\n        raw: e.target.files[0],\r\n      });\r\n      setDisabledBtn(true);\r\n      setImguploadStatus(\"NEW_SINGLE_IMG\");\r\n    }\r\n    // Img set for data api\r\n    if (getDbImg != \"\") {\r\n      setDbImg(\"\");\r\n    }\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImageSelect({ name: file.name, path: reader.result });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n  const clearDataImg = () => {\r\n    setImage(\"\");\r\n  };\r\n  const handleClearImg = (event) => {\r\n    event.preventDefault();\r\n    clearDataImg();\r\n    setDisabledBtn(false);\r\n  };\r\n  const handleImgChangeSingle2 = (e) => {\r\n    setDisabledBtn(false);\r\n  };\r\n  // Refrence Imge funcation\r\n  const handleButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleDeleteImg = (e) => {\r\n    const s = selectedImages.filter((item, index) => index !== e);\r\n    setSelectedImages(s);\r\n  };\r\n  const handleShowdata = (item) => {\r\n    setSelectedImage(item.attachment);\r\n    // console.log(\"click this button___\");\r\n    setShowdd(true);\r\n  };\r\n  const openPDFInNewTab = (fileName) => {\r\n    const binaryData = atob(fileName);\r\n\r\n    const byteArray = new Uint8Array(binaryData.length);\r\n    for (let i = 0; i < binaryData.length; i++) {\r\n      byteArray[i] = binaryData.charCodeAt(i);\r\n    }\r\n\r\n    // Step 3: Create a Blob from the typed array\r\n    const blob = new Blob([byteArray], { type: \"application/pdf\" });\r\n\r\n    // Step 4: Generate a URL for the blob\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Step 5: Open the URL in a new tab\r\n    window.open(url, \"_blank\");\r\n  };\r\n  const handleDeleteReferenceApi = (RefImgDlt) => {\r\n    const removedItem = RefImg.find((item) => item.RowID === RefImgDlt);\r\n    const updatedRefImg = RefImg.filter((item) => item.RowID !== RefImgDlt);\r\n    setRefImg(updatedRefImg);\r\n    setRemovedRefItems((prevRemovedRefItems) => [\r\n      ...prevRemovedRefItems,\r\n      removedItem,\r\n    ]);\r\n  };\r\n  const handleShowdd = (e, rowData) => {\r\n    sethandalImg(rowData);\r\n    setShowdd(true);\r\n  };\r\n  const isMyStateEmpty =\r\n    Object.keys(handalImg).length === 0 && handalImg.constructor === Object;\r\n  function handleImageChange(event) {\r\n    const files = event.target.files;\r\n\r\n    setSelectedPdfFiles((prevSelectedPdfFiles) => [\r\n      ...prevSelectedPdfFiles,\r\n      ...files,\r\n    ]);\r\n    const selectedImagesArray = [...selectedImages2];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event) => {\r\n        const imageData = {\r\n          name: files[i].name,\r\n          type: files[i].type,\r\n          base64: event.target.result,\r\n        };\r\n        selectedImagesArray.push(imageData);\r\n        if (selectedImagesArray.length === files.length) {\r\n          setSelectedImages2(selectedImagesArray);\r\n          //setImageSelect({ name: file.name, path: reader.result });\r\n        }\r\n      };\r\n      reader.readAsDataURL(files[i]);\r\n    }\r\n    setSelectedImages([...selectedImages, ...files]);\r\n    setImguploadRefStatus(\"Ref_New_img\");\r\n  }\r\n\r\n  //Alert msg swal\r\n  const displayWarning = (Tabvalue) => {\r\n    Swal.fire({\r\n      title: \"Warning!\",\r\n      text: \"You must save Work Order before you go into\" + \" \" + Tabvalue,\r\n      icon: \"warning\",\r\n      confirmButtonColor: \"#3085d6\",\r\n      confirmButtonText: \"OK\",\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    selectedImages.forEach((file) => {\r\n      formData.append(\"files[]\", file);\r\n    });\r\n  };\r\n  const findCustomizeLabel = (columnName) => {\r\n    const matchingColumn = wkoMstLabel.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n  };\r\n  // WorkReq Label Details table\r\n  const findCustomizeLabelDet = (columnName) => {\r\n    const matchingColumn = wkodetLabel.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n  };\r\n\r\n  const findCustomizerequiredLabel = (columnName) => {\r\n    const foundItem = WorkOrderMandatoryFiled.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    if (foundItem && foundItem.cf_label_required === \"1\") {\r\n      return \"Requiredlabel\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const [modalOpenAsset, setModalOpenAsset] = useState(false);\r\n\r\n  //get WorkOrderAssetNo onther component\r\n  const handleEditClick = () => {\r\n    setModalOpenAsset(true);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setAsset_No(\"\");\r\n  };\r\n  function handleCloseModal() {\r\n    setModalOpenAsset(false);\r\n    Swal.close();\r\n\r\n  }\r\n\r\n  const get_assetmaster_select = async (selected_asset) => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    const parts = selected_asset.split(\":\");\r\n    const valueBeforeColon = parts[0].trim();\r\n\r\n    if (selected_asset != \"\") {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_workOrderAssetmaster_select.php?site_cd=\" +\r\n            site_ID +\r\n            \"&ast_mst_asset_no=\" +\r\n            valueBeforeColon +\r\n            \"&asset_shortdesc=\" +\r\n            \"\" +\r\n            \"&cost_center=\" +\r\n            \"\" +\r\n            \"&asset_status=\" +\r\n            \"\" +\r\n            \"&asset_type=\" +\r\n            \"\" +\r\n            \"&asset_grpcode=\" +\r\n            \"\" +\r\n            \"&work_area=\" +\r\n            \"\" +\r\n            \"&asset_locn=\" +\r\n            \"\" +\r\n            \"&asset_code=\" +\r\n            \"\" +\r\n            \"&ast_lvl=\" +\r\n            \"\" +\r\n            \"&ast_sts_typ_cd=\" +\r\n            \"\" +\r\n            \"&createby=\" +\r\n            \"\" +\r\n            \"&service_type=\" +\r\n            \"\" +\r\n            \"&block=\" +\r\n            \"\" +\r\n            \"&floor=\" +\r\n            \"\"\r\n        );\r\n\r\n        if (response.data.status === \"SUCCESS\") {\r\n          setSelected_Asset_Status({\r\n            label: response.data.data[\"0\"].ast_mst_asset_status,\r\n          });\r\n          setSelected_Asset_Status({\r\n            label: response.data.data[\"0\"].ast_mst_asset_status,\r\n          });\r\n          setSelected_Asset_Group_Code({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_asset_grpcode +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_grp_desc,\r\n          });\r\n          setSelected_Charge_Cost_Center({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_cost_center +\r\n              \" : \" +\r\n              response.data.data[\"0\"].descs,\r\n          });\r\n          setSelected_Work_Area({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_work_area +\r\n              \" : \" +\r\n              response.data.data[\"0\"].mst_war_desc,\r\n          });\r\n          setSelected_Asset_Level({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_ast_lvl +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_lvl_desc,\r\n          });\r\n          setSelected_Asset_Location({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_asset_locn +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_loc_desc,\r\n          });\r\n          setSelected_Work_Group({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_wrk_grp +\r\n              \" : \" +\r\n              response.data.data[\"0\"].wrk_grp_desc,\r\n          });\r\n\r\n          Swal.close();\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: response.data,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_assetmaster_select...\",\r\n          text: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectedAssetNo = (dataa) => {\r\n    get_assetmaster_select(dataa);\r\n  };\r\n\r\n  const handleRowData2 = (dataLenth, dataa, dataSecond) => {\r\n    // Use the row data in the second component\r\n\r\n    setAsset_No(dataa);\r\n    setIsAssetNoEmpty(false);\r\n\r\n    if (dataLenth !== undefined && dataLenth !== null) {\r\n      setTotalAssetNo(dataLenth);\r\n    }\r\n    if (dataa !== undefined && dataa !== null) {\r\n      handleSelectedAssetNo(dataa);\r\n    }\r\n    if (dataSecond == \"1\") {\r\n      setModalOpenAsset(false);\r\n      setTotalSearch(\"\");\r\n    }\r\n  };\r\n  const handleRowDataPagechg = (pageCount) => {\r\n    setViewedTotlRows(pageCount);\r\n  };\r\n\r\n  const handelRowSearch = (searchTotl) => {\r\n    setTotalSearch(searchTotl);\r\n  };\r\n  function CustomTextField({ rightIcons, ...props }) {\r\n    return (\r\n      <TextField\r\n        {...props}\r\n        InputProps={{\r\n          endAdornment: rightIcons && (\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              {rightIcons.map((icon, index) => (\r\n                <IconButton key={index}>{icon}</IconButton>\r\n              ))}\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  const handleClickOriginator = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderOriginator.php?site_cd=\" + site_ID\r\n      );\r\n      let Originator = response.data.data.WorkOriginator.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_empl_id,\r\n      }));\r\n      setOriginator(Originator);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickProjectID = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderProjectID.php?site_cd=\" + site_ID\r\n      );\r\n      let Project_ID = response.data.data.WorkProjectID.map((item) => ({\r\n        label: item.prj_mst_prj_cd + \" : \" + item.prj_mst_desc,\r\n        value: item.prj_mst_desc,\r\n      }));\r\n      setProject_ID(Project_ID);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickSupervisorId = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderSupervisorId.php?site_cd=\" + site_ID\r\n      );\r\n      let Supervisor_ID = response.data.data.WorkSupervisorID.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_name,\r\n      }));\r\n      setSupervisor_ID(Supervisor_ID);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickPlanner = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderPlanner.php?site_cd=\" + site_ID\r\n      );\r\n      let Planner = response.data.data.WorkPlanner.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_name,\r\n      }));\r\n      setPlanner(Planner);\r\n      setErrorField(null);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickApprover = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderApprover.php?site_cd=\" + site_ID\r\n      );\r\n      let Approver = response.data.data.WorkApprover.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_name,\r\n      }));\r\n      setApprover(Approver);\r\n      setErrorField(null);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickAssignTo = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderApprover.php?site_cd=\" + site_ID\r\n      );\r\n      let Assign_To = response.data.data.WorkApprover.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_name,\r\n      }));\r\n      setAssign_To(Assign_To);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickCustomerCode = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderCustomerCode.php?site_cd=\" + site_ID\r\n      );\r\n      let CustomerCode = response.data.data.WorkCustomerCode.map((item) => ({\r\n        label: item.cus_mst_customer_cd + \" : \" + item.cus_mst_desc,\r\n        value: item.cus_mst_desc,\r\n      }));\r\n      setCustomer_Code(CustomerCode);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickCostCenter = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderCostCenter.php?site_cd=\" + site_ID\r\n      );\r\n      let Credit_Cost_Center = response.data.data.WorkCostCenter.map(\r\n        (item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setCredit_Cost_Center(Credit_Cost_Center);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickLaborAccount = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderLaborAccount.php?site_cd=\" + site_ID\r\n      );\r\n      let Labor_Account = response.data.data.WorkLaborAccount.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.descs,\r\n      }));\r\n      setLabor_Account(Labor_Account);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickContractAccount = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderLaborAccount.php?site_cd=\" + site_ID\r\n      );\r\n      let Contract_Account = response.data.data.WorkLaborAccount.map(\r\n        (item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setContract_Account(Contract_Account);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickMaterialAccount = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderLaborAccount.php?site_cd=\" + site_ID\r\n      );\r\n      let Material_Account = response.data.data.WorkLaborAccount.map(\r\n        (item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setMaterial_Account(Material_Account);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickMiscellaneousAccount = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderLaborAccount.php?site_cd=\" + site_ID\r\n      );\r\n      let Miscellaneous_Account = response.data.data.WorkLaborAccount.map(\r\n        (item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setMiscellaneous_Account(Miscellaneous_Account);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleOnChangeTemporaryAsset = () => {\r\n    setTemporary_Asset(!Temporary_Asset);\r\n\r\n    if (!Temporary_Asset) {\r\n      ////console.log('1')\r\n      setCheckBox_Temporary_Asset(\"1\");\r\n    } else {\r\n      ////console.log('0')\r\n      setCheckBox_Temporary_Asset(\"0\");\r\n    }\r\n  };\r\n\r\n  const handleOnChangeApproved = () => {\r\n    setApproved(!Approved);\r\n\r\n    if (!Approved) {\r\n      ////console.log('1')\r\n      setCheckBox_Approved(\"1\");\r\n    } else {\r\n      ////console.log('0')\r\n      setCheckBox_Approved(\"0\");\r\n    }\r\n  };\r\n\r\n  const handleOnChangeSafety = () => {\r\n    setSafety(!Safety);\r\n\r\n    if (!Safety) {\r\n      ////console.log('1')\r\n      setCheckBox_Safety(\"1\");\r\n    } else {\r\n      ////console.log('0')\r\n      setCheckBox_Safety(\"0\");\r\n    }\r\n  };\r\n  const scrollToField = (ref) => {\r\n    ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n  const onClickChange = (event) => {\r\n    event.preventDefault();\r\n    if (selected_Status == \"\" || selected_Status == null) {\r\n      setIsWorkOrderStatusEmpty(true);\r\n      const errorMessage = \"Please fill the required field Status is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (Description == \"\" || Description == null) {\r\n      setIsWorkDescEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Description is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (Asset_No == \"\" || Asset_No == null) {\r\n      setisWorkOrderAssetNoEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Asse No is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (\r\n      selected_Charge_Cost_Center == \"\" ||\r\n      selected_Charge_Cost_Center == null\r\n    ) {\r\n      setIsChargeCostEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Charge Cost Center is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (\r\n      selected_Original_Periority == \"\" ||\r\n      selected_Original_Periority == null\r\n    ) {\r\n      setIsOriginalPeriorityEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Original Periority is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else {\r\n      if (Button_save === \"Save\") {\r\n        New_WorkOrder();\r\n\r\n        // resetData();\r\n      } else if (Button_save === \"Update\") {\r\n        Update_WorkOrder();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const onClickChangeComplete = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (selected_Status === \"\" || selected_Status === null) {\r\n      setIsFiledValueEmpty(true);\r\n    } else if (CorrectiveAction === \"\" || CorrectiveAction === null) {\r\n      setIsCorrectiveValueEmpty(true);\r\n    } else if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      setIsCauseCodeValueEmpty(true);\r\n    } else if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      setIsActionCodeValueEmpty(true);\r\n    } else {\r\n      if (Button_save === \"Completed\") {\r\n        console.log(\"Completed____btn\");\r\n        Update_complete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickChangeClose = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (selected_Status === \"\" || selected_Status === null) {\r\n      setIsFiledValueEmpty(true);\r\n    } else if (CorrectiveAction === \"\" || CorrectiveAction === null) {\r\n      setIsCorrectiveValueEmpty(true);\r\n    } else if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      setIsCauseCodeValueEmpty(true);\r\n    } else if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      setIsActionCodeValueEmpty(true);\r\n    } else {\r\n      if (Button_save === \"Close Order\") {\r\n        console.log(\"close____btn\");\r\n        Update_closeOrder();\r\n      }\r\n    }\r\n  };\r\n  const onClickCancel = () => {\r\n    //navigate(`/dashboard/work/order?currentPage=${currentPage}&selecOption=${selecOption}`);\r\n    // navigate(`/dashboard/work/order`);\r\n    navigate(`/dashboard/work/order`, {\r\n      state: {\r\n        currentPage,\r\n        selectedOption,\r\n      },\r\n    });\r\n  };\r\n\r\n  const New_WorkOrder = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    // Swal.showLoading();\r\n\r\n    let get_date = Moment().utcOffset(\"+08:00\").format(\"yyyy-MM-DD HH:mm:ss\");\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    //Select Asset No\r\n\r\n    let EmptyAsset;\r\n    if (Asset_No == \"\" || Asset_No == null) {\r\n      EmptyAsset = \"\";\r\n    } else {\r\n      // Asset_No = selected_Asset_No.label.split(\":\")\r\n      const EmptyAssetSplit = Asset_No.split(\":\");\r\n      EmptyAsset = EmptyAssetSplit[0];\r\n    }\r\n\r\n    //Select Status\r\n    let Status, setStatus;\r\n    if (selected_Status.label == \"\" || selected_Status.label == null) {\r\n      setStatus = \"\";\r\n    } else {\r\n      Status = selected_Status.label.split(\":\");\r\n      setStatus = Status[0];\r\n      ////console.log(\"Status: \", Status[0])\r\n    }\r\n\r\n    //Select Asset Status\r\n    let Asset_Status, setAsset_Status;\r\n    if (selected_Asset_Status == \"\" || selected_Asset_Status == null) {\r\n      setAsset_Status = \"\";\r\n    } else {\r\n      Asset_Status = selected_Asset_Status.label.split(\":\");\r\n      setAsset_Status = Asset_Status[0];\r\n      //console.log(\"Asset_Status \", setAsset_Status)\r\n    }\r\n\r\n    //Select Plan Priority\r\n    let Plan_Priority, setPlan_Priority;\r\n    if (selected_Plan_Priority == \"\" || selected_Plan_Priority == null) {\r\n      setPlan_Priority = \"\";\r\n    } else {\r\n      Plan_Priority = selected_Plan_Priority.label.split(\":\");\r\n      setPlan_Priority = Plan_Priority[0];\r\n      ////console.log(\"Plan_Priority \", Plan_Priority[0])\r\n    }\r\n\r\n    //Select Asset Group Code\r\n    let Asset_Group_Code, setAsset_Group_Code;\r\n    if (\r\n      selected_Asset_Group_Code.label == \"\" ||\r\n      selected_Asset_Group_Code.label == null\r\n    ) {\r\n      setAsset_Group_Code = \"\";\r\n    } else {\r\n      Asset_Group_Code = selected_Asset_Group_Code.label.split(\":\");\r\n      setAsset_Group_Code = Asset_Group_Code[0];\r\n      ////console.log(\"Asset_Group_Code \", Asset_Group_Code[0])\r\n    }\r\n\r\n    //Select Origination Date\r\n    let date_of_origination = \"\";\r\n    if (OriginationDate == \"\" || OriginationDate == null) {\r\n      date_of_origination = \"\";\r\n    } else {\r\n      date_of_origination = Moment(OriginationDate)\r\n        .utcOffset(\"+08:00\")\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"OD \", date_of_origination);\r\n    }\r\n\r\n    //Select Charge Cost Center\r\n    let Charge_Cost_Center, setCharge_Cost_Center;\r\n\r\n    if (\r\n      selected_Charge_Cost_Center == \"\" ||\r\n      selected_Charge_Cost_Center == null\r\n    ) {\r\n      setCharge_Cost_Center = \"\";\r\n    } else {\r\n      Charge_Cost_Center = selected_Charge_Cost_Center.label.split(\":\");\r\n      setCharge_Cost_Center = Charge_Cost_Center[0];\r\n      ////console.log(\"Work_Area \", Work_Area[0])\r\n    }\r\n    ////console.log(\"Charge_Cost_Center: \", Charge_Cost_Center[0])\r\n\r\n    //Select Due Date\r\n    let date_of_due = \"\";\r\n    if (DueDate == \"\" || DueDate == null) {\r\n      date_of_due = \"\";\r\n    } else {\r\n      date_of_due = Moment(DueDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"DD \", date_of_due);\r\n    }\r\n\r\n    //Select Work Area\r\n    let Work_Area, setWork_Area;\r\n    if (selected_Work_Area == \"\" || selected_Work_Area == null) {\r\n      setWork_Area = \"\";\r\n    } else {\r\n      Work_Area = selected_Work_Area.label.split(\":\");\r\n      setWork_Area = Work_Area[0];\r\n      ////console.log(\"Work_Area \", Work_Area[0])\r\n    }\r\n\r\n    //Select Originator\r\n    let Originator, setOriginator;\r\n    if (selected_Originator == \"\" || selected_Originator == null) {\r\n      setOriginator = \"\";\r\n    } else {\r\n      Originator = selected_Originator.label.split(\":\");\r\n      setOriginator = Originator[0];\r\n      ////console.log(\"Originator \", Originator[0])\r\n    }\r\n\r\n    //Select Asset Level\r\n    let Asset_Level, setAsset_Level;\r\n    if (selected_Asset_Level === \"\" || selected_Asset_Level === null) {\r\n      setAsset_Level = \"\";\r\n    } else {\r\n      Asset_Level = selected_Asset_Level.label.split(\":\");\r\n      setAsset_Level = Asset_Level[0];\r\n      ////console.log(\"Asset_Level \", Asset_Level[0])\r\n    }\r\n\r\n    //Select Phone\r\n    ////console.log(\"Phone: \", Phone)\r\n\r\n    //Select Asset Location\r\n    let Asset_Location, setAsset_Location;\r\n    if (selected_Asset_Location == \"\" || selected_Asset_Location == null) {\r\n      setAsset_Location = \"\";\r\n    } else {\r\n      Asset_Location = selected_Asset_Location.label.split(\":\");\r\n      setAsset_Location = Asset_Location[0];\r\n      ////console.log(\"Asset_Location \", Asset_Location[0])\r\n    }\r\n\r\n    //Select Fault Code\r\n    //let Fault_Code = selected_Fault_Code.label.split(\":\");\r\n    ////console.log(\"Fault_Code: \", Fault_Code[0])\r\n\r\n    let Fault_Code, setFault_Code;\r\n    if (selected_Fault_Code == \"\" || selected_Fault_Code == null) {\r\n      setFault_Code = \"\";\r\n    } else {\r\n      Fault_Code = selected_Fault_Code.label.split(\":\");\r\n      setFault_Code = Fault_Code[0];\r\n      //console.log(\"Asset_Status \", setAsset_Status)\r\n    }\r\n\r\n    //Select Project ID\r\n    let Project_ID, setProject_ID;\r\n\r\n    ////console.log('Project_ID', selected_Project_ID.label)\r\n    if (selected_Project_ID.label == \"\" || selected_Project_ID.label == null) {\r\n      setProject_ID = \"\";\r\n    } else {\r\n      Project_ID = selected_Project_ID.label.split(\":\");\r\n      setProject_ID = Project_ID[0];\r\n      ////console.log(\"Project_ID \", Project_ID[0])\r\n    }\r\n\r\n    //Select Original Periority\r\n    let Original_Periority, setOriginal_Periority;\r\n    ////console.log(\"Original_Periority: \", Original_Periority[0])\r\n    if (\r\n      selected_Original_Periority.label == \"\" ||\r\n      selected_Original_Periority.label == null\r\n    ) {\r\n      setOriginal_Periority = \"\";\r\n    } else {\r\n      Original_Periority = selected_Original_Periority.label.split(\":\");\r\n      setOriginal_Periority = Original_Periority[0];\r\n      ////console.log(\"Project_ID \", Project_ID[0])\r\n    }\r\n\r\n    //Select Cause Code\r\n    let Cause_Code, setCause_Code;\r\n    if (selected_Cause_Code == \"\" || selected_Cause_Code == null) {\r\n      setCause_Code = \"\";\r\n    } else {\r\n      Cause_Code = selected_Cause_Code.label.split(\":\");\r\n      setCause_Code = Cause_Code[0];\r\n      ////console.log(\"Cause_Code \", Cause_Code[0])\r\n    }\r\n\r\n    //Select Work Type\r\n    let Work_Type, setWork_Type;\r\n    if (selected_Work_Type == \"\" || selected_Work_Type == null) {\r\n      setWork_Type = \"\";\r\n    } else {\r\n      Work_Type = selected_Work_Type.label.split(\":\");\r\n      setWork_Type = Work_Type[0];\r\n      ////console.log(\"Cause_Code \", Cause_Code[0])\r\n    }\r\n    //Select Schedule Date\r\n    let date_of_schedule = \"\";\r\n    if (ScheduleDate == \"\" || ScheduleDate == null) {\r\n      date_of_schedule = \"\";\r\n    } else {\r\n      date_of_schedule = Moment(ScheduleDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"SD \", date_of_schedule);\r\n    }\r\n\r\n    //Select Action Code\r\n    let Action_Code, setAction_Code;\r\n    if (selected_Action_Code == \"\" || selected_Action_Code == null) {\r\n      setAction_Code = \"\";\r\n    } else {\r\n      Action_Code = selected_Action_Code.label.split(\":\");\r\n      setAction_Code = Action_Code[0];\r\n      ////console.log(\"Action_Code \", Action_Code[0])\r\n    }\r\n\r\n    //Select Exception Date\r\n    let date_of_exception = \"\";\r\n    if (ExceptionDate == \"\" || ExceptionDate == null) {\r\n      date_of_exception = \"\";\r\n    } else {\r\n      date_of_exception = Moment(ExceptionDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"EB \", date_of_exception);\r\n    }\r\n\r\n    //Select Delay Code\r\n    let Delay_Code, setDelay_Code;\r\n    if (selected_Delay_Code.label == \"\" || selected_Delay_Code.label == null) {\r\n      setDelay_Code = \"\";\r\n    } else {\r\n      Delay_Code = selected_Delay_Code.label.split(\":\");\r\n      setDelay_Code = Delay_Code[0];\r\n      ////console.log(\"Delay_Code \", Delay_Code[0])\r\n    }\r\n\r\n    //Select Status Change Date\r\n    let date_of_status_change = \"\";\r\n    if (StatusChangeDate == \"\" || StatusChangeDate == null) {\r\n      date_of_status_change = \"\";\r\n    } else {\r\n      date_of_status_change = Moment(StatusChangeDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"SCB \", date_of_status_change);\r\n    }\r\n\r\n    //Select Completion Date\r\n    let date_of_completion = \"\";\r\n    if (CompletionDate == \"\" || CompletionDate == null) {\r\n      date_of_completion = \"\";\r\n    } else {\r\n      date_of_completion = Moment(CompletionDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"CD \", date_of_completion);\r\n    }\r\n\r\n    //Select Work Class\r\n    let Work_Class, setWork_Class;\r\n    if (selected_Work_Class == \"\" || selected_Work_Class == null) {\r\n      setWork_Class = \"\";\r\n    } else {\r\n      Work_Class = selected_Work_Class.label.split(\":\");\r\n      setWork_Class = Work_Class[0];\r\n      ////console.log(\"Work_Class \", Work_Class[0])\r\n    }\r\n\r\n    //Select Close Date\r\n    let date_of_close = \"\";\r\n    if (CloseDate == \"\" || CloseDate == null) {\r\n      date_of_close = \"\";\r\n    } else {\r\n      date_of_close = Moment(CloseDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"CLOD \", date_of_close);\r\n    }\r\n\r\n    //Select Work Group\r\n    let Work_Group = selected_Work_Group.label.split(\":\");\r\n    ////console.log(\"Work_Group: \", Work_Group[0])\r\n\r\n    //Select Supervisor ID\r\n    let Supervisor_ID, setSupervisor_ID;\r\n    if (\r\n      selected_Supervisor_ID.label == \"\" ||\r\n      selected_Supervisor_ID.label == null\r\n    ) {\r\n      setSupervisor_ID = \"\";\r\n    } else {\r\n      Supervisor_ID = selected_Supervisor_ID.label.split(\":\");\r\n      setSupervisor_ID = Supervisor_ID[0];\r\n      ////console.log(\"Supervisor_ID \", Supervisor_ID[0])\r\n    }\r\n\r\n    //Select Planner\r\n    let Planner, setPlanner;\r\n    if (selected_Planner.label == \"\" || selected_Planner.label == null) {\r\n      setPlanner = \"\";\r\n    } else {\r\n      Planner = selected_Planner.label.split(\":\");\r\n      setPlanner = Planner[0];\r\n      ////console.log(\"Planner \", Planner[0])\r\n    }\r\n\r\n    //Select Approver\r\n    // console.log(\"selected_Approver___\",selected_Approver);\r\n    let Approver, setApprover;\r\n\r\n    if (selected_Approver.length === 0 || selected_Approver[0] === null) {\r\n      setApprover = \"\";\r\n    } else {\r\n      // Assuming you're checking the first element in the array\r\n      Approver = selected_Approver.label.split(\":\");\r\n      setApprover = Approver[0];\r\n      // console.log(\"Approver \", Approver[0]);\r\n    }\r\n\r\n    //Select Assign To\r\n    let Assign_To, setAssign_To;\r\n    if (selected_Assign_To == \"\" || selected_Assign_To == null) {\r\n      setAssign_To = \"\";\r\n    } else {\r\n      Assign_To = selected_Assign_To.label.split(\":\");\r\n      setAssign_To = Assign_To[0];\r\n      ////console.log(\"Assign_To \", Assign_To[0])\r\n    }\r\n\r\n    //Select WKO Customer Code\r\n    let CustomerCodeValue;\r\n    if (\r\n      selected_Customer_Code.length === 0 ||\r\n      selected_Customer_Code[0] === null\r\n    ) {\r\n      CustomerCodeValue = \"\";\r\n    } else {\r\n      const CustomerCode = selected_Customer_Code.label.split(\":\");\r\n      CustomerCodeValue = CustomerCode[0].trim();\r\n    }\r\n\r\n    //Select WKO Labor Account\r\n    let LaborAccountValue;\r\n    if (\r\n      selected_Labor_Account.length === 0 ||\r\n      selected_Labor_Account[0] === null\r\n    ) {\r\n      LaborAccountValue = \"\";\r\n    } else {\r\n      const LaborAccount = selected_Labor_Account.label.split(\":\");\r\n      LaborAccountValue = LaborAccount[0];\r\n    }\r\n\r\n    //Select WKO Material Account\r\n    let MaterialAccountValue;\r\n    if (\r\n      selected_Material_Account.length === 0 ||\r\n      selected_Material_Account[0] === null\r\n    ) {\r\n      MaterialAccountValue = \"\";\r\n    } else {\r\n      const MaterialAccount = selected_Material_Account.label.split(\":\");\r\n      MaterialAccountValue = MaterialAccount[0];\r\n    }\r\n\r\n    //Select WKO Credit Cost Center\r\n    let CreditCostCenterValue;\r\n    if (\r\n      selected_Credit_Cost_Center.length === 0 ||\r\n      selected_Credit_Cost_Center[0] === null\r\n    ) {\r\n      CreditCostCenterValue = \"\";\r\n    } else {\r\n      const CreditCenter = selected_Credit_Cost_Center.label.split(\":\");\r\n      CreditCostCenterValue = CreditCenter[0];\r\n    }\r\n\r\n    //Select WKO Contract Account\r\n    let ContractAccountValue;\r\n    if (\r\n      selected_Contract_Account.length === 0 ||\r\n      selected_Contract_Account[0] === null\r\n    ) {\r\n      ContractAccountValue = \"\";\r\n    } else {\r\n      const ContractAccount = selected_Contract_Account.label.split(\":\");\r\n      ContractAccountValue = ContractAccount[0];\r\n    }\r\n\r\n    //Select WKO Miscellaneous Account\r\n    let MiscellaneousAccountValue;\r\n    if (\r\n      selected_Miscellaneous_Account.length === 0 ||\r\n      selected_Miscellaneous_Account[0] === null\r\n    ) {\r\n      MiscellaneousAccountValue = \"\";\r\n    } else {\r\n      const MiscellaneousAccount =\r\n        selected_Miscellaneous_Account.label.split(\":\");\r\n      MiscellaneousAccountValue = MiscellaneousAccount[0];\r\n    }\r\n    //Select Date 1\r\n    let date_1 = \"\";\r\n    if (UDFDate_1 == \"\" || UDFDate_1 == null) {\r\n      date_1 = \"\";\r\n    } else {\r\n      date_1 = Moment(UDFDate_1).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date1 \", date_1);\r\n    }\r\n\r\n    //Select Date 2\r\n    let date_2 = \"\";\r\n    if (UDFDate_2 == \"\" || UDFDate_2 == null) {\r\n      date_2 = \"\";\r\n    } else {\r\n      date_2 = Moment(UDFDate_2).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date2 \", date_2);\r\n    }\r\n\r\n    //Select Date 3\r\n    let date_3 = \"\";\r\n    if (UDFDate_3 == \"\" || UDFDate_3 == null) {\r\n      date_3 = \"\";\r\n    } else {\r\n      date_3 = Moment(UDFDate_3).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date3 \", date_3);\r\n    }\r\n\r\n    //Select Date 4\r\n    let date_4 = \"\";\r\n    if (UDFDate_4 == \"\" || UDFDate_4 == null) {\r\n      date_4 = \"\";\r\n    } else {\r\n      date_4 = Moment(UDFDate_4).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date4 \", date_4);\r\n    }\r\n\r\n    //Select Date 5\r\n    let date_5 = \"\";\r\n    if (UDFDate_5 == \"\" || UDFDate_5 == null) {\r\n      date_5 = \"\";\r\n    } else {\r\n      date_5 = Moment(UDFDate_5).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date5 \", date_5);\r\n    }\r\n    let missingFields = [];\r\n\r\n    var json_workorder_Insert = {\r\n      site_cd: site_ID,\r\n      wko_mst_wo_no: WorkOrderNo.trim(),\r\n      wko_mst_assetno: EmptyAsset.trim(),\r\n      wko_mst_status: setStatus.trim(),\r\n      wko_mst_asset_status: setAsset_Status.trim(),\r\n      wko_mst_plan_priority: setPlan_Priority.trim(),\r\n      wko_mst_asset_group_code: setAsset_Group_Code.trim(),\r\n      wko_mst_org_date: date_of_origination,\r\n      wko_mst_chg_costcenter: setCharge_Cost_Center.trim(),\r\n      wko_mst_due_date: date_of_due,\r\n      wko_mst_work_area: setWork_Area.trim(),\r\n      wko_mst_originator: setOriginator.trim(),\r\n      wko_mst_asset_level: setAsset_Level.trim(),\r\n      wko_mst_phone: Phone.trim(),\r\n      wko_mst_asset_location: setAsset_Location.trim(),\r\n      wko_mst_flt_code: setFault_Code.trim(),\r\n      wko_mst_descs: Description.trim(),\r\n\r\n      wko_mst_project_id: setProject_ID.trim(),\r\n      wko_mst_orig_priority: setOriginal_Periority.trim(),\r\n      wko_det_corr_action: CorrectiveAction.trim(),\r\n      wko_det_cause_code: setCause_Code.trim(),\r\n      wko_det_sched_date: date_of_schedule,\r\n      wko_det_act_code: setAction_Code.trim(),\r\n      wko_det_exc_date: date_of_exception,\r\n      wko_det_delay_cd: setDelay_Code.trim(),\r\n      wko_det_sc_date: date_of_status_change,\r\n      wko_det_work_type: setWork_Type.trim(),\r\n      wko_det_cmpl_date: date_of_completion,\r\n      wko_det_work_class: setWork_Class.trim(),\r\n      wko_det_clo_date: date_of_close,\r\n      wko_det_work_grp: Work_Group[0].trim(),\r\n      wko_det_supv_id: setSupervisor_ID.trim(),\r\n      wko_det_planner: setPlanner.trim(),\r\n      wko_det_approver: setApprover.trim(),\r\n      wko_det_assign_to: setAssign_To.trim(),\r\n      wko_det_perm_id: Permanent_ID,\r\n      wko_det_temp_asset: CheckBox_Temporary_Asset,\r\n      wko_det_approved: CheckBox_Approved,\r\n      wko_det_safety: CheckBox_Safety,\r\n\r\n      wko_det_customer_cd: CustomerCodeValue,\r\n      wko_det_laccount: LaborAccountValue.trim(),\r\n      wko_det_maccount: MaterialAccountValue.trim(),\r\n      wko_det_crd_costcenter: CreditCostCenterValue.trim(),\r\n      wko_det_caccount: ContractAccountValue.trim(),\r\n      wko_det_saccount: MiscellaneousAccountValue.trim(),\r\n\r\n      wko_det_note1: UDFNote1 ? UDFNote1.trim() : \"\",\r\n      wko_det_varchar1: UDFText_1 ? UDFText_1.trim() : \"\",\r\n      wko_det_varchar2: UDFText_2 ? UDFText_2.trim() : \"\",\r\n      wko_det_varchar3: UDFText_3 ? UDFText_3.trim() : \"\",\r\n      wko_det_varchar4: UDFText_4 ? UDFText_4.trim() : \"\",\r\n      wko_det_varchar5: UDFText_5 ? UDFText_5.trim() : \"\",\r\n      wko_det_varchar6: UDFText_6 ? UDFText_6.trim() : \"\",\r\n      wko_det_varchar7: UDFText_7 ? UDFText_7.trim() : \"\",\r\n      wko_det_varchar8: UDFText_8 ? UDFText_8.trim() : \"\",\r\n      wko_det_varchar9: UDFText_9 ? UDFText_9.trim() : \"\",\r\n      wko_det_varchar10: UDFText_10 ? UDFText_10.trim() : \"\",\r\n\r\n      wko_det_numeric1: UDFNumber_1 ? UDFNumber_1.trim() : \"\",\r\n      wko_det_numeric2: UDFNumber_2 ? UDFNumber_2.trim() : \"\",\r\n      wko_det_numeric3: UDFNumber_3 ? UDFNumber_3.trim() : \"\",\r\n      wko_det_numeric4: UDFNumber_4 ? UDFNumber_4.trim() : \"\",\r\n      wko_det_numeric5: UDFNumber_5 ? UDFNumber_5.trim() : \"\",\r\n\r\n      wko_det_datetime1: date_1 ? date_1.trim() : date_1,\r\n      wko_det_datetime2: date_2 ? date_2.trim() : date_2,\r\n      wko_det_datetime3: date_3 ? date_3.trim() : date_3,\r\n      wko_det_datetime4: date_4 ? date_4.trim() : date_4,\r\n      wko_det_datetime5: date_5 ? date_5.trim() : date_5,\r\n\r\n      asset_type_ID: AutoNumring.trim(),\r\n      ImgUpload: imageSelect,\r\n      audit_user: emp_mst_login_id.trim(),\r\n      wko_mst_create_by: emp_mst_login_id.trim(),\r\n      ast_aud_originator: emp_mst_empl_id.trim(),\r\n      wko_mst_create_date: get_date,\r\n      cnt_mst_numbering: AutoNumring,\r\n    };\r\n    for (let i = 0; i < WorkOrderMandatoryFiled.length; i++) {\r\n      const item = WorkOrderMandatoryFiled[i];\r\n      const fieldValue = json_workorder_Insert[item.column_name];\r\n      if (fieldValue !== null && fieldValue.trim() === \"\") {\r\n        missingFields = item.customize_label;\r\n        setErrorField(item.column_name);\r\n        break;\r\n      }\r\n    }\r\n    if (missingFields.length > 0) {\r\n      Swal.close();\r\n\r\n      const errorMessage = `Please fill the required field: ${missingFields}`;\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else {\r\n      // console.log(\"json_workorder_insert\", json_workorder);\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_new_workorder.php\",\r\n          JSON.stringify(json_workorder_Insert)\r\n        );\r\n         console.log(\"json_workorderNew Data\", response);\r\n\r\n        if (response.data.status === \"SUCCESS\") {\r\n          // console.log(\"responseJson\", response.data.ROW_ID);\r\n          Swal.close();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: response.data.status,\r\n            text: response.data.message,\r\n          }).then(() => {\r\n            navigate(`/dashboard/work/order`);\r\n          });\r\n        } else {\r\n          Swal.close();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: response.data,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        Swal.close();\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_WorkOrder_select...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(\"Asset_No____\",Asset_No);\r\n  const Update_WorkOrder = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n  //  Swal.showLoading();\r\n\r\n    let get_date = Moment().utcOffset(\"+08:00\").format(\"yyyy-MM-DD HH:mm:ss\");\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    // let RowID = localStorage.getItem(\"RowID\");\r\n\r\n    //Select Asset No\r\n    let EmptyAsset;\r\n    if (Asset_No == \"\" || Asset_No == null) {\r\n      EmptyAsset = \"\";\r\n    } else {\r\n      // Asset_No = selected_Asset_No.label.split(\":\")\r\n      const EmptyAssetSplit = Asset_No.split(\":\");\r\n      EmptyAsset = EmptyAssetSplit[0];\r\n    }\r\n\r\n    //Select Status\r\n    let Status, setStatus;\r\n    if (selected_Status.label === \"\" || selected_Status.label === null) {\r\n      setIsWorkOrderStatusEmpty(true);\r\n      const errorMessage = \"Please fill the required field Status is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n      Swal.close();\r\n      return;\r\n    } else {\r\n      Status = selected_Status.label.split(\":\");\r\n      setStatus = Status[0];\r\n    }\r\n\r\n    //Select Asset Status\r\n    let Asset_Status, setAsset_Status;\r\n    if (\r\n      selected_Asset_Status.label === \"\" ||\r\n      selected_Asset_Status.label === null\r\n    ) {\r\n      // console.log(\"selected_Asset_Status\", selected_Asset_Status);\r\n      setAsset_Status = \"\";\r\n    } else {\r\n      Asset_Status = selected_Asset_Status.label.split(\":\");\r\n      setAsset_Status = Asset_Status[0];\r\n    }\r\n\r\n    //Select Plan Priority !selected_Originator || !selected_Originator.label\r\n    let Plan_Priority, setPlan_Priority;\r\n    if (!selected_Plan_Priority || !selected_Plan_Priority.label) {\r\n      setPlan_Priority = \"\";\r\n    } else {\r\n      Plan_Priority = selected_Plan_Priority.label.split(\":\");\r\n      setPlan_Priority = Plan_Priority[0];\r\n      ////console.log(\"Plan_Priority \", Plan_Priority[0])\r\n    }\r\n\r\n    //Select Asset Group Code\r\n    let Asset_Group_Code;\r\n    if (!selected_Asset_Group_Code || !selected_Asset_Group_Code.label) {\r\n      Asset_Group_Code = \"\";\r\n    } else {\r\n      const AssetGroupCode = selected_Asset_Group_Code.label.split(\":\");\r\n      Asset_Group_Code = AssetGroupCode[0];\r\n      ////console.log(\"Asset_Group_Code \", Asset_Group_Code[0])\r\n    }\r\n\r\n    //Select Origination Date\r\n    let date_of_origination = \"\";\r\n    if (OriginationDate == \"\" || OriginationDate == null) {\r\n      date_of_origination = \"\";\r\n    } else {\r\n      date_of_origination = Moment(OriginationDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"OD \", date_of_origination);\r\n    }\r\n\r\n    //Select Charge Cost Center\r\n    let Charge_Cost_Center, setCharge_Cost_Center;\r\n    if (\r\n      selected_Charge_Cost_Center.label == \"\" ||\r\n      selected_Charge_Cost_Center.label == null\r\n    ) {\r\n     setIsChargeCostEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Charge Cost Center is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n      Swal.close();\r\n      return;\r\n    } else {\r\n      Charge_Cost_Center = selected_Charge_Cost_Center.label.split(\":\");\r\n      setCharge_Cost_Center = Charge_Cost_Center[0];\r\n      ////console.log(\"Charge_Cost_Center: \", Charge_Cost_Center[0])\r\n    }\r\n\r\n    //Select Due Date\r\n    let date_of_due = \"\";\r\n    if (DueDate == \"\" || DueDate == null) {\r\n      date_of_due = \"\";\r\n    } else {\r\n      date_of_due = Moment(DueDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"DD \", date_of_due);\r\n    }\r\n\r\n    //Select Work Area\r\n    let Work_Area, setWork_Area;\r\n    if (selected_Work_Area == \"\" || selected_Work_Area == null) {\r\n      setWork_Area = \"\";\r\n    } else {\r\n      Work_Area = selected_Work_Area.label.split(\":\");\r\n      setWork_Area = Work_Area[0];\r\n      ////console.log(\"Work_Area \", Work_Area[0])\r\n    }\r\n\r\n    //Select Originator\r\n    let OriginatorUP;\r\n\r\n    if (!selected_Originator || !selected_Originator.label) {\r\n      OriginatorUP = \"\";\r\n    } else {\r\n      const Originator2 = selected_Originator.label.split(\":\");\r\n      OriginatorUP = Originator2[0];\r\n    }\r\n\r\n    //Select Asset Level\r\n    let Asset_Level;\r\n\r\n    if (!selected_Asset_Level || !selected_Asset_Level.label) {\r\n      Asset_Level = \"\";\r\n    } else {\r\n      const AssetLevel = selected_Asset_Level.label.split(\":\");\r\n      Asset_Level = AssetLevel[0];\r\n    }\r\n\r\n    //Select Asset Location\r\n    let Asset_Location, setAsset_Location;\r\n    if (selected_Asset_Location == \"\" || selected_Asset_Location == null) {\r\n      setAsset_Location = \"\";\r\n    } else {\r\n      Asset_Location = selected_Asset_Location.label.split(\":\");\r\n      setAsset_Location = Asset_Location[0];\r\n      ////console.log(\"Asset_Location \", Asset_Location[0])\r\n    }\r\n\r\n    //Select Fault Code\r\n\r\n    let Fault_Code;\r\n    if (!selected_Fault_Code || !selected_Fault_Code.label) {\r\n      Fault_Code = \"\";\r\n    } else {\r\n      const Fault_Code2 = selected_Fault_Code.label.split(\":\");\r\n      Fault_Code = Fault_Code2[0];\r\n    }\r\n    ////console.log(\"Fault_Code: \", Fault_Code[0])\r\n\r\n    //Select Project ID\r\n    let Project_ID, setProject_ID;\r\n\r\n    ////console.log('Project_ID', selected_Project_ID.label)\r\n    if (selected_Project_ID.label == \"\" || selected_Project_ID.label == null) {\r\n      setProject_ID = \"\";\r\n    } else {\r\n      Project_ID = selected_Project_ID.label.split(\":\");\r\n      setProject_ID = Project_ID[0];\r\n      ////console.log(\"Project_ID \", Project_ID[0])\r\n    }\r\n\r\n    //Select Original Periority\r\n\r\n    let OriginalPeriorityValue;\r\n    if (\r\n      selected_Original_Periority.label === \"\" ||\r\n      selected_Original_Periority.label === null\r\n    ) {\r\n      setIsOriginalPeriorityEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Original Periority is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n      Swal.close();\r\n      return;\r\n    } else {\r\n      const OriginalPeriority = selected_Original_Periority.label.split(\":\");\r\n      OriginalPeriorityValue = OriginalPeriority[0];\r\n      ////console.log(\"Original_Periority \", Original_Periority[0])\r\n    }\r\n\r\n    //Select Cause Code\r\n    let Cause_Code;\r\n\r\n    if (!selected_Cause_Code || !selected_Cause_Code.label) {\r\n      Cause_Code = \"\";\r\n    } else {\r\n      const Cause_Code2 = selected_Cause_Code.label.split(\":\");\r\n      Cause_Code = Cause_Code2[0];\r\n      ////console.log(\"Cause_Code \", Cause_Code[0])\r\n    }\r\n\r\n    //Select Schedule Date\r\n    let date_of_schedule = \"\";\r\n    if (ScheduleDate == \"\" || ScheduleDate == null) {\r\n      date_of_schedule = \"\";\r\n    } else {\r\n      date_of_schedule = Moment(ScheduleDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"SD \", date_of_schedule);\r\n    }\r\n\r\n    //Select Action Code\r\n    let Action_Code;\r\n    if (!selected_Action_Code || !selected_Action_Code.label) {\r\n      Action_Code = \"\";\r\n    } else {\r\n      const Action_Code2 = selected_Action_Code.label.split(\":\");\r\n      Action_Code = Action_Code2[0];\r\n      ////console.log(\"Action_Code \", Action_Code[0])\r\n    }\r\n\r\n    //Select Exception Date\r\n    let date_of_exception = \"\";\r\n    if (ExceptionDate == \"\" || ExceptionDate == null) {\r\n      date_of_exception = \"\";\r\n    } else {\r\n      date_of_exception = Moment(ExceptionDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"EB \", date_of_exception);\r\n    }\r\n\r\n    //Select Delay Code\r\n    let Delay_Code;\r\n    if (!selected_Delay_Code || !selected_Delay_Code.label) {\r\n      Delay_Code = \"\";\r\n    } else {\r\n      const Delay_Code2 = selected_Delay_Code.label.split(\":\");\r\n      Delay_Code = Delay_Code2[0];\r\n      ////console.log(\"Delay_Code \", Delay_Code[0])\r\n    }\r\n\r\n    //Select Status Change Date\r\n    let date_of_status_change = \"\";\r\n    if (StatusChangeDate == \"\" || StatusChangeDate == null) {\r\n      date_of_status_change = \"\";\r\n    } else {\r\n      date_of_status_change = Moment(StatusChangeDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"SCB \", date_of_status_change);\r\n    }\r\n\r\n    //Select Work Type\r\n    let WorkTypeValue;\r\n    if (selected_Work_Type.label === \"\" || selected_Work_Type.label === null) {\r\n      WorkTypeValue = \"\";\r\n    } else {\r\n      const WorkType = selected_Work_Type.label.split(\":\");\r\n      WorkTypeValue = WorkType[0];\r\n      //console.log(\"Work_Type \", Work_Type[0])\r\n    }\r\n\r\n    //Select Completion Date\r\n    let date_of_completion = \"\";\r\n    if (CompletionDate == \"\" || CompletionDate == null) {\r\n      date_of_completion = \"\";\r\n    } else {\r\n      date_of_completion = Moment(CompletionDate)\r\n        .format(\"yyyy-MM-DD HH:mm:ss\")\r\n        .trim();\r\n      ////console.log(\"CD \", date_of_completion);\r\n    }\r\n\r\n    //Select Work Class\r\n    let Work_Class;\r\n    if (!selected_Work_Class || !selected_Work_Class.label) {\r\n      Work_Class = \"\";\r\n    } else {\r\n      const Work_Class2 = selected_Work_Class.label.split(\":\");\r\n      Work_Class = Work_Class2[0];\r\n      ////console.log(\"Work_Class \", Work_Class[0])\r\n    }\r\n\r\n    //Select Close Date\r\n    let date_of_close = \"\";\r\n    if (CloseDate == \"\" || CloseDate == null) {\r\n      date_of_close = \"\";\r\n    } else {\r\n      date_of_close = Moment(CloseDate).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"CLOD \", date_of_close);\r\n    }\r\n\r\n    //Select Work Group\r\n\r\n    let WorkGroupValue;\r\n    if (\r\n      selected_Work_Group.label === \"\" ||\r\n      selected_Work_Group.label === null\r\n    ) {\r\n      WorkGroupValue = \"\";\r\n    } else {\r\n      const WorkGroup = selected_Work_Group.label.split(\":\");\r\n      WorkGroupValue = WorkGroup[0].trim();\r\n      ////console.log(\"Work_Group \", Work_Group[0])\r\n    }\r\n\r\n    //Select Supervisor ID\r\n    let Supervisor_ID;\r\n    if (!selected_Supervisor_ID || !selected_Supervisor_ID.label) {\r\n      Supervisor_ID = \"\";\r\n    } else {\r\n      const Supervisor_ID2 = selected_Supervisor_ID.label.split(\":\");\r\n      Supervisor_ID = Supervisor_ID2[0];\r\n      ////console.log(\"Supervisor_ID \", Supervisor_ID[0])\r\n    }\r\n\r\n    //Select Planner\r\n    let Planner;\r\n    if (!selected_Planner || !selected_Planner.label) {\r\n      Planner = \"\";\r\n    } else {\r\n      const Planner2 = selected_Planner.label.split(\":\");\r\n      Planner = Planner2[0];\r\n      ////console.log(\"Planner \", Planner[0])\r\n    }\r\n\r\n    //Select Approver\r\n    let Approver;\r\n    if (!selected_Approver || !selected_Approver.label) {\r\n      Approver = \"\";\r\n    } else {\r\n      const Approver2 = selected_Approver.label.split(\":\");\r\n      Approver = Approver2[0];\r\n      ////console.log(\"Approver \", Approver[0])\r\n    }\r\n\r\n    //Select Assign To\r\n    let Assign_To;\r\n    if (!selected_Assign_To || !selected_Assign_To.label) {\r\n      Assign_To = \"\";\r\n    } else {\r\n      const Assign_To2 = selected_Assign_To.label.split(\":\");\r\n      Assign_To = Assign_To2[0];\r\n      ////console.log(\"Assign_To \", Assign_To[0])\r\n    }\r\n\r\n    //Select WKO Customer Code\r\n    let CustomerCodeValue;\r\n    if (!selected_Customer_Code || !selected_Customer_Code.label) {\r\n      CustomerCodeValue = \"\";\r\n    } else {\r\n      const CustomerCode = selected_Customer_Code.label.split(\":\");\r\n      CustomerCodeValue = CustomerCode[0].trim();\r\n    }\r\n\r\n    //Select WKO Labor Account\r\n    let LaborAccountValue;\r\n    if (!selected_Labor_Account || !selected_Labor_Account.label) {\r\n      LaborAccountValue = \"\";\r\n    } else {\r\n      const LaborAccount = selected_Labor_Account.label.split(\":\");\r\n      LaborAccountValue = LaborAccount[0];\r\n    }\r\n\r\n    //Select WKO Material Account\r\n    let MaterialAccountValue;\r\n    if (!selected_Material_Account || !selected_Material_Account.label) {\r\n      MaterialAccountValue = \"\";\r\n    } else {\r\n      const MaterialAccount = selected_Material_Account.label.split(\":\");\r\n      MaterialAccountValue = MaterialAccount[0];\r\n    }\r\n\r\n    //Select WKO Credit Cost Center\r\n    let CreditCostCenterValue;\r\n    if (!selected_Credit_Cost_Center || !selected_Credit_Cost_Center.label) {\r\n      CreditCostCenterValue = \"\";\r\n    } else {\r\n      const CreditCenter = selected_Credit_Cost_Center.label.split(\":\");\r\n      CreditCostCenterValue = CreditCenter[0];\r\n    }\r\n\r\n    //Select WKO Contract Account\r\n    let ContractAccountValue;\r\n    if (!selected_Contract_Account || !selected_Contract_Account.label) {\r\n      ContractAccountValue = \"\";\r\n    } else {\r\n      const ContractAccount = selected_Contract_Account.label.split(\":\");\r\n      ContractAccountValue = ContractAccount[0];\r\n    }\r\n\r\n    //Select WKO Miscellaneous Account\r\n    let MiscellaneousAccountValue;\r\n    if (\r\n      !selected_Miscellaneous_Account ||\r\n      !selected_Miscellaneous_Account.label\r\n    ) {\r\n      MiscellaneousAccountValue = \"\";\r\n    } else {\r\n      const MiscellaneousAccount =\r\n        selected_Miscellaneous_Account.label.split(\":\");\r\n      MiscellaneousAccountValue = MiscellaneousAccount[0];\r\n    }\r\n\r\n    //Check Img state\r\n    let setDbImgRowIdUpdate;\r\n    if (getDbImgRowId == \"\" || getDbImgRowId == null) {\r\n      setDbImgRowIdUpdate = \"\";\r\n    } else {\r\n      setDbImgRowIdUpdate = getDbImgRowId;\r\n    }\r\n\r\n    //Select Date 1\r\n    let date_1 = \"\";\r\n    if (UDFDate_1 == \"\" || UDFDate_1 == null) {\r\n      date_1 = \"\";\r\n    } else {\r\n      date_1 = Moment(UDFDate_1).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date1 \", date_1);\r\n    }\r\n\r\n    //Select Date 2\r\n    let date_2 = \"\";\r\n    if (UDFDate_2 == \"\" || UDFDate_2 == null) {\r\n      date_2 = \"\";\r\n    } else {\r\n      date_2 = Moment(UDFDate_2).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date2 \", date_2);\r\n    }\r\n\r\n    //Select Date 3\r\n    let date_3 = \"\";\r\n    if (UDFDate_3 == \"\" || UDFDate_3 == null) {\r\n      date_3 = \"\";\r\n    } else {\r\n      date_3 = Moment(UDFDate_3).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date3 \", date_3);\r\n    }\r\n\r\n    //Select Date 4\r\n    let date_4 = \"\";\r\n    if (UDFDate_4 == \"\" || UDFDate_4 == null) {\r\n      date_4 = \"\";\r\n    } else {\r\n      date_4 = Moment(UDFDate_4).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date4 \", date_4);\r\n    }\r\n\r\n    //Select Date 5\r\n    let date_5 = \"\";\r\n    if (UDFDate_5 == \"\" || UDFDate_5 == null) {\r\n      date_5 = \"\";\r\n    } else {\r\n      date_5 = Moment(UDFDate_5).format(\"yyyy-MM-DD HH:mm:ss\").trim();\r\n      ////console.log(\"Date5 \", date_5);\r\n    }\r\n\r\n    let setDescriptionValue;\r\n    if (Description == \"\" || Description == null) {\r\n      setIsWorkDescEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Description is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n      Swal.close();\r\n      return;\r\n    } else {\r\n      setDescriptionValue = Description;\r\n      ////console.log(\"Date5 \", date_5);\r\n    }\r\n\r\n    let missingFields = [];\r\n\r\n    var json_workorder_update = {\r\n      site_cd: site_ID,\r\n      wko_mst_wo_no: WorkOrderNo.trim(),\r\n      wko_mst_assetno: EmptyAsset.trim(),\r\n      wko_mst_status: setStatus.trim(),\r\n      wko_mst_asset_status: setAsset_Status.trim(),\r\n      wko_mst_plan_priority: setPlan_Priority.trim(),\r\n      wko_mst_asset_group_code: Asset_Group_Code.trim(),\r\n      wko_mst_org_date: date_of_origination,\r\n      wko_mst_chg_costcenter: Charge_Cost_Center[0].trim(),\r\n      wko_mst_due_date: date_of_due,\r\n      wko_mst_work_area: setWork_Area.trim(),\r\n      wko_mst_originator: OriginatorUP.trim(),\r\n      wko_mst_asset_level: Asset_Level.trim(),\r\n      wko_mst_phone: Phone,\r\n      wko_mst_asset_location: setAsset_Location.trim(),\r\n      wko_mst_flt_code: Fault_Code.trim(),\r\n      wko_mst_descs: setDescriptionValue,\r\n\r\n      wko_det_corr_action: CorrectiveAction,\r\n      wko_mst_project_id: setProject_ID.trim(),\r\n      wko_mst_orig_priority: OriginalPeriorityValue,\r\n      wko_det_cause_code: Cause_Code.trim(),\r\n      wko_det_sched_date: date_of_schedule,\r\n      wko_det_act_code: Action_Code.trim(),\r\n      wko_det_exc_date: date_of_exception,\r\n      wko_det_delay_cd: Delay_Code.trim(),\r\n      wko_det_sc_date: date_of_status_change,\r\n      wko_det_work_type: WorkTypeValue,\r\n      wko_det_cmpl_date: date_of_completion,\r\n      wko_det_work_class: Work_Class.trim(),\r\n      wko_det_clo_date: date_of_close,\r\n      wko_det_work_grp: WorkGroupValue,\r\n      wko_det_supv_id: Supervisor_ID.trim(),\r\n      wko_det_planner: Planner.trim(),\r\n      wko_det_approver: Approver.trim(),\r\n      wko_det_assign_to: Assign_To.trim(),\r\n      wko_det_perm_id: Permanent_ID,\r\n      wko_det_temp_asset: CheckBox_Temporary_Asset,\r\n      wko_det_approved: CheckBox_Approved,\r\n      wko_det_safety: CheckBox_Safety,\r\n\r\n      wko_det_customer_cd: CustomerCodeValue,\r\n      wko_det_laccount: LaborAccountValue.trim(),\r\n      wko_det_maccount: MaterialAccountValue.trim(),\r\n      wko_det_crd_costcenter: CreditCostCenterValue.trim(),\r\n      wko_det_caccount: ContractAccountValue.trim(),\r\n      wko_det_saccount: MiscellaneousAccountValue.trim(),\r\n\r\n      wko_det_note1: UDFNote1,\r\n      wko_det_varchar1: UDFText_1 ? UDFText_1.trim() : \"\",\r\n      wko_det_varchar2: UDFText_2 ? UDFText_2.trim() : \"\",\r\n      wko_det_varchar3: UDFText_3 ? UDFText_3.trim() : \"\",\r\n      wko_det_varchar4: UDFText_4 ? UDFText_4.trim() : \"\",\r\n      wko_det_varchar5: UDFText_5 ? UDFText_5.trim() : \"\",\r\n      wko_det_varchar6: UDFText_6 ? UDFText_6.trim() : \"\",\r\n      wko_det_varchar7: UDFText_7 ? UDFText_7.trim() : \"\",\r\n      wko_det_varchar8: UDFText_8 ? UDFText_8.trim() : \"\",\r\n      wko_det_varchar9: UDFText_9 ? UDFText_9.trim() : \"\",\r\n      wko_det_varchar10: UDFText_10 ? UDFText_10.trim() : \"\",\r\n\r\n      wko_det_numeric1: UDFNumber_1 ? UDFNumber_1.trim() : \"\",\r\n      wko_det_numeric2: UDFNumber_2 ? UDFNumber_2.trim() : \"\",\r\n      wko_det_numeric3: UDFNumber_3 ? UDFNumber_3.trim() : \"\",\r\n      wko_det_numeric4: UDFNumber_4 ? UDFNumber_4.trim() : \"\",\r\n      wko_det_numeric5: UDFNumber_5 ? UDFNumber_5.trim() : \"\",\r\n\r\n      wko_det_datetime1: date_1 ? date_1.trim() : date_1,\r\n      wko_det_datetime2: date_2 ? date_2.trim() : date_2,\r\n      wko_det_datetime3: date_3 ? date_3.trim() : date_3,\r\n      wko_det_datetime4: date_4 ? date_4.trim() : date_4,\r\n      wko_det_datetime5: date_5 ? date_5.trim() : date_5,\r\n\r\n      asset_type_ID: AutoNumring.trim(),\r\n\r\n      audit_user: emp_mst_login_id.trim(),\r\n      wko_mst_create_by: emp_mst_login_id.trim(),\r\n      ast_aud_originator: emp_mst_empl_id.trim(),\r\n      wko_mst_create_date: get_date,\r\n      SingleImguploadStatus: imguploadStatus,\r\n      ImguploadRefStatus: imguploadRefStatus ? imguploadRefStatus : \"EMPTY\",\r\n      ImgGetDbImgRowId: setDbImgRowIdUpdate,\r\n      ImgUpload: imageSelect,\r\n      SpecialOdrResult: SpecialOdrResult,\r\n\r\n      // \"ImgUploadMultiPal\": selectedImages2,\r\n      //\"AllPlaningData\":AllPlaningData,\r\n      removedRefItems: removedRefItems,\r\n      RowID: RowID,\r\n      selectedPdfFiles: selectedPdfFiles,\r\n    };\r\nconsole.log(\"json_workorder_update____\",json_workorder_update);\r\n\r\nfor (let i = 0; i < WorkOrderMandatoryFiled.length; i++) {\r\n  const item = WorkOrderMandatoryFiled[i];\r\n  const fieldValue = json_workorder_update[item.column_name];\r\n  if (fieldValue !== null && fieldValue.trim() === \"\") {\r\n    missingFields = item.customize_label;\r\n    setErrorField(item.column_name);\r\n    break;\r\n  }\r\n}\r\nif (missingFields.length > 0) {\r\n  Swal.close();\r\n\r\n  const errorMessage = `Please fill the required field: ${missingFields}`;\r\n  setSnackbarOpen(true);\r\n  setSnackbarMessage(errorMessage);\r\n  setSnackbarSeverity(\"error\");\r\n  return;\r\n\r\n} else {\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/update_workorder.php\",\r\n        JSON.stringify(json_workorder_update)\r\n      );\r\n     // console.log(\"response___order___\", response);\r\n      // Swal.close();\r\n      if (response.data.status === \"SUCCESS\") {\r\n        if (selectedPdfFiles.length > 0) {\r\n          const formData = new FormData();\r\n          for (let i = 0; i < selectedPdfFiles.length; i++) {\r\n            formData.append(\"files[]\", selectedPdfFiles[i]);\r\n          }\r\n          formData.append(\"site_cd\", site_ID);\r\n          formData.append(\"RowID\", RowID);\r\n          formData.append(\"RefImgUploadStatus\", imguploadRefStatus);\r\n          formData.append(\"audit_user\", emp_mst_login_id.trim());\r\n\r\n          try {\r\n            const response = await httpCommon.post(\r\n              \"/WorkOrderReferenceMultiImgUpload.php\",\r\n              formData,\r\n              {\r\n                headers: {\r\n                  \"Content-Type\": \"multipart/form-data\", // Ensure proper content type\r\n                },\r\n              }\r\n            );\r\n            console.log(\"img___upload___\", response);\r\n\r\n            if (response.data.status == \"SUCCESS\") {\r\n              Swal.close();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                customClass: {\r\n                  container: \"swalcontainercustom\",\r\n                },\r\n                title: response.data.status,\r\n                text: response.data.message,\r\n              }).then(() => {\r\n                // navigate(`/dashboard/work/order`);\r\n                navigate(`/dashboard/work/order`, {\r\n                  state: {\r\n                    currentPage,\r\n                    selectedOption,\r\n                  },\r\n                });\r\n              });\r\n            }\r\n          } catch (error) {\r\n            console.log(\"error__\", error);\r\n            //Handle error  WorkOrderNo\r\n          }\r\n        } else {\r\n          Swal.close();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: response.data.status,\r\n            text: response.data.message,\r\n          }).then(() => {\r\n            if (response.data.status === \"SUCCESS\") {\r\n              // navigate(`/dashboard/work/order`);\r\n              navigate(`/dashboard/work/order`, {\r\n                state: {\r\n                  currentPage,\r\n                  selectedOption,\r\n                },\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: \"Oops...\",\r\n          text: response.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n        title: \"Oops Data Not Updated...\",\r\n        text: error,\r\n      });\r\n    }\r\n}\r\n  };\r\n\r\n  // Complete button click api\r\n  const Update_complete = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const formattedDate = CompletionDate2\r\n      ? Moment(CompletionDate2).format(\"YYYY-MM-DD HH:mm:ss.SSS\")\r\n      : \"\";\r\n    let CompleteStatus;\r\n    if (selected_Status.label === \"\" || selected_Status.label === null) {\r\n      CompleteStatus = \"\";\r\n    } else {\r\n      const Status2 = selected_Status.label.split(\":\");\r\n      CompleteStatus = Status2[0];\r\n      ////console.log(\"Status: \", Status[0])\r\n    }\r\n\r\n    let selectedActionCode;\r\n    if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      selectedActionCode(\"\");\r\n    } else {\r\n      const ActionCode = selected_Action_Code.label.split(\":\");\r\n      selectedActionCode = ActionCode[0];\r\n    }\r\n\r\n    let selectedCauseCode;\r\n    if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      selectedCauseCode(\"\");\r\n    } else {\r\n      const CauseCode2 = selected_Cause_Code.label.split(\":\");\r\n      selectedCauseCode = CauseCode2[0];\r\n    }\r\n    var json_workorder = {\r\n      site_cd: site_ID,\r\n      wko_mst_status: CompleteStatus,\r\n      audit_user: emp_mst_name.trim(),\r\n      wko_det_cmpl_date: formattedDate,\r\n      wko_det_corr_action: CorrectiveAction,\r\n      wko_sts_wo_no: WorkOrderNo,\r\n      mst_RowID: completeRowID,\r\n      wko_det_act_code: selectedActionCode,\r\n      wko_det_cause_code: selectedCauseCode,\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/complete_workorder.php\",\r\n        JSON.stringify(json_workorder)\r\n      );\r\n      console.log(\"res\", response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: response.data.status,\r\n          text: response.data.message,\r\n        }).then(() => {\r\n          navigate(`/dashboard/work/order`);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops somthing is wrong...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Close button click Api\r\n  const Update_closeOrder = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    // Swal.showLoading();\r\n    const formattedDate = CloseDate2\r\n      ? Moment(CloseDate2).format(\"YYYY-MM-DD HH:mm:ss.SSS\")\r\n      : \"\";\r\n    let CloseStatus;\r\n    if (selected_Status.label === \"\" || selected_Status.label === null) {\r\n      CloseStatus = \"\";\r\n    } else {\r\n      const Status2 = selected_Status.label.split(\":\");\r\n      CloseStatus = Status2[0];\r\n      ////console.log(\"Status: \", Status[0])\r\n    }\r\n\r\n    let selectedActionCode;\r\n    if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      selectedActionCode(\"\");\r\n    } else {\r\n      const ActionCode = selected_Action_Code.label.split(\":\");\r\n      selectedActionCode = ActionCode[0];\r\n    }\r\n\r\n    let selectedCauseCode;\r\n    if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      selectedCauseCode(\"\");\r\n    } else {\r\n      const CauseCode2 = selected_Cause_Code.label.split(\":\");\r\n      selectedCauseCode = CauseCode2[0];\r\n    }\r\n    var json_workorder = {\r\n      site_cd: site_ID,\r\n      wko_mst_status: CloseStatus,\r\n      audit_user: emp_mst_name.trim(),\r\n      wko_det_close_date: formattedDate,\r\n      wko_det_corr_action: CorrectiveAction,\r\n      wko_sts_wo_no: WorkOrderNo,\r\n      mst_RowID: closeRowID,\r\n      wko_det_act_code: selectedActionCode,\r\n      wko_det_cause_code: selectedCauseCode,\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/Close_workorder.php\",\r\n        JSON.stringify(json_workorder)\r\n      );\r\n      console.log(\"res\", response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: response.data.status,\r\n          text: response.data.message,\r\n        }).then(() => {\r\n          navigate(`/dashboard/work/order`);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops somthing is wrong...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Status Audit PopUp\r\n\r\n  const formatDuration = (duration) => {\r\n    // const seconds = Math.floor(duration % 60);\r\n    const minutes = Math.floor(duration % 60);\r\n    const hours = Math.floor((duration % 1440) / 60);\r\n    const days = Math.floor(duration / 1440);\r\n\r\n    if (days > 0) {\r\n      return `${days}d: ${hours}h: ${minutes}m`;\r\n    } else if (hours > 0) {\r\n      return `${hours}h: ${minutes}m`;\r\n    } else if (minutes > 0) {\r\n      return `${minutes}m`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n    // return `${days}d: ${hours}h: ${minutes}m`;\r\n  };\r\n  const getsteps = async () => {\r\n    // console.log(\"enter_getSteps___\");\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    //Select Status\r\n    let setStatus = \"\";\r\n\r\n    if (selected_Status.label) {\r\n      console.log(\"selected_Status:\", selected_Status);\r\n      console.log(\"selected_Status.label:\", selected_Status.label);\r\n\r\n      // Split the label and log the result\r\n      const splitLabel = selected_Status.label.split(\":\");\r\n      console.log(\"splitLabel:\", splitLabel);\r\n\r\n      // Assign setStatus and log it\r\n      setStatus = splitLabel[0].trim(); // Trim to remove any extra spaces\r\n    }\r\n\r\n    try {\r\n      let responseJson;\r\n      if (\r\n        completeRowID !== undefined &&\r\n        completeRowID !== null &&\r\n        completeRowID !== \"\"\r\n      ) {\r\n        responseJson = await httpCommon.get(\r\n          `/get_workordermaster_statusaudit.php?site_cd=${site_ID}&RowID=${completeRowID}`\r\n        );\r\n      } else if (\r\n        closeRowID !== undefined &&\r\n        closeRowID !== null &&\r\n        closeRowID !== \"\"\r\n      ) {\r\n        responseJson = await httpCommon.get(\r\n          `/get_workordermaster_statusaudit.php?site_cd=${site_ID}&RowID=${closeRowID}`\r\n        );\r\n      } else if (setStatus && setStatus === \"CMP\") {\r\n        responseJson = await httpCommon.get(\r\n          `/get_workordermaster_complete_statusaudit.php?site_cd=${site_ID}&RowID=${RowID}`\r\n        );\r\n      } else if (setStatus && setStatus === \"CLO\") {\r\n        responseJson = await httpCommon.get(\r\n          `/get_workordermaster_complete_statusaudit.php?site_cd=${site_ID}&RowID=${RowID}`\r\n        );\r\n      } else {\r\n        responseJson = await httpCommon.get(\r\n          `/get_workordermaster_statusaudit.php?site_cd=${site_ID}&RowID=${RowID}`\r\n        );\r\n      }\r\n       //console.log(\"responseJson___status\",responseJson);\r\n      if (responseJson.data.status === \"SUCCESS\") {\r\n        // console.log('get_workordermaster_statusaudit', responseJson.data.data)\r\n\r\n        let Status = responseJson.data.data.map((item, index) => {\r\n          let date = new Date(item.wko_sts_start_date.date);\r\n          let formattedDate = date.toLocaleDateString(\"en-GB\");\r\n          let formattedTime = date.toLocaleString(\"default\", {\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            hour12: true, // 3:37 PM\r\n          });\r\n          let formattedWeekday = date.toLocaleString(\"default\", {\r\n            weekday: \"short\",\r\n          }); // Fri\r\n\r\n          return {\r\n            label: item.wrk_sts_desc,\r\n            label1: item.wko_sts_status,\r\n            label2: item.emp_mst_name,\r\n            label3: item.wko_sts_originator,\r\n            label4: `${formattedWeekday} ${formattedDate} ${formattedTime}`,\r\n            label5: formatDuration(item.duration),\r\n            label6: item.wrk_sts_desc,\r\n            step: index + 1,\r\n          };\r\n        });\r\n        setsteps(Status);\r\n\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: responseJson.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      console.log(\"Error\", error);\r\n    }\r\n  };\r\n\r\n  const StatushandleShow = () => {\r\n    setStatusShow(true);\r\n    getsteps();\r\n  };\r\n  const AssignStatushandleshow = () => {\r\n    setAssignStatusShow(true);\r\n    getAssignTosteps();\r\n  };\r\n  const getAssignTosteps = async () => {\r\n    // console.log(\"enter_getSteps___\");\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    // Swal.showLoading();\r\n\r\n    try {\r\n      let responseJson;\r\n      if (\r\n        completeRowID !== undefined &&\r\n        completeRowID !== null &&\r\n        completeRowID !== \"\"\r\n      ) {\r\n        responseJson = await httpCommon.get(\r\n          `/get_assignTo_history.php?site_cd=${site_ID}&RowID=${completeRowID}`\r\n        );\r\n      } else if (\r\n        closeRowID !== undefined &&\r\n        closeRowID !== null &&\r\n        closeRowID !== \"\"\r\n      ) {\r\n        responseJson = await httpCommon.get(\r\n          `/get_assignTo_history.php?site_cd=${site_ID}&RowID=${closeRowID}`\r\n        );\r\n      } else {\r\n        responseJson = await httpCommon.get(\r\n          `/get_assignTo_history.php?site_cd=${site_ID}&RowID=${RowID}`\r\n        );\r\n      }\r\n      //console.log(\"responseJson___RowID\",responseJson);\r\n      if (responseJson.data.status === \"SUCCESS\") {\r\n        let AssignStatus = responseJson.data.data.map((item, index) => {\r\n          let date = new Date(item.audit_date.date);\r\n          let formattedDate = date.toLocaleDateString(\"en-GB\");\r\n          let formattedTime = date.toLocaleString(\"default\", {\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            hour12: true, // 3:37 PM\r\n          });\r\n          let formattedWeekday = date.toLocaleString(\"default\", {\r\n            weekday: \"short\",\r\n          }); // Fri\r\n\r\n          return {\r\n            label: item.wko_ls7_emp_id,\r\n            label1: item.column1,\r\n            label4: `${formattedWeekday} ${formattedDate} ${formattedTime}`,\r\n            label5: formatDuration(item.duration),\r\n            step: index + 1,\r\n          };\r\n        });\r\n\r\n        setAssignStatusOther(AssignStatus);\r\n\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: responseJson.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n  const addCommnethandal = () => {\r\n    setCommentShow(true);\r\n    fetchAllCommentData();\r\n  };\r\n\r\n  const handleImageChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        // const base64String = reader.result.split(',')[1];\r\n        const base64String2 = reader.result.split(\",\")[1];\r\n\r\n        const base64String = reader.result;\r\n\r\n        const fileName = file.name;\r\n        setImagePreview(base64String);\r\n        // Set the state with the base64 string and file name\r\n        setimageComment({\r\n          base64: base64String2,\r\n          fileName: fileName,\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmitCmmnt = async () => {\r\n    Swal.fire({ title: \"Loading.... !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_name = localStorage.getItem(\"emp_mst_name\");\r\n\r\n    const inputValue = messageRef.current.value.trim();\r\n\r\n    if (inputValue === \"\" && !imageComment) {\r\n      console.log(\"both empty\");\r\n      Swal.close();\r\n      return;\r\n    }\r\n\r\n    const newComment = {\r\n      // Add other properties as needed\r\n      wko_ls11_name: emp_mst_name,\r\n      audit_user: emp_mst_login_id, // Replace with the actual user\r\n      audit_date: {\r\n        date: Moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        timezone_type: 3,\r\n        timezone: \"UTC\",\r\n      },\r\n      wko_ls11_sts_upd: inputValue,\r\n      attachment: imageComment ? imageComment.base64 : null,\r\n    };\r\n    setAllComment((prevComments) => [...prevComments, newComment]);\r\n\r\n    const json_workorder = {\r\n      site_cd: site_ID,\r\n      RowId: RowID,\r\n      commentMsg: inputValue,\r\n      Emp_name: emp_mst_name,\r\n      Emp_login_Name: emp_mst_login_id,\r\n      orderNo: WorkOrderNo,\r\n      ImgUpload: imageComment,\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_comment.php\",\r\n        JSON.stringify(json_workorder)\r\n      );\r\n      //console.log(\"json_workordercommet Data\", response);\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        Swal.close();\r\n        if (messageRef.current) {\r\n          messageRef.current.value = \"\";\r\n        }\r\n        setImagePreview(\"\");\r\n        setimageComment(null); // Use null instead of an empty string\r\n        scrollChatToBottom();\r\n        // fetchAllCommentData();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      console.error(\"Error submitting comment:\", error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Submission Failed\",\r\n        text: \"There was an error submitting your comment. Please try again.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const Refreshdatapopup = () => {\r\n    fetchAllCommentData();\r\n  };\r\n  const scrollChatToBottom = () => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop =\r\n        chatContainerRef.current.scrollHeight;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    scrollChatToBottom();\r\n  }, [AllCommnet]);\r\n  // get all comment funcation\r\n  const fetchAllCommentData = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    setLoading(true);\r\n    try {\r\n      const response = await httpCommon.get(\r\n        `get_chart.php?mst_RowID=${RowID}&site_cd=${site_ID}&url=${httpCommon.defaults.baseURL}&folder=React_web&dvc_id=Web`\r\n      );\r\n\r\n      //   console.log(\"json_workordercommet Data\", response);\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setAllComment(response.data.data);\r\n        Swal.close();\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  const handleImageClick = (imageData) => {\r\n    setSelectedImageCommnt(imageData);\r\n  };\r\n  const handleImageClickSHow = () => {\r\n    setUploadImgShow(true);\r\n  };\r\n  const handleUploadCloseClick = () => {\r\n    setImagePreview(\"\");\r\n  };\r\n  const handleSelectedFaultCode = (selectedOption) => {\r\n    const newValue =\r\n      selectedOption && selectedOption.value ? selectedOption : null;\r\n    setDescription(newValue ? newValue.value : null);\r\n  };\r\n\r\n  // OnChange to check error funcation\r\n  const handleStatusChange = (event, value) => {\r\n    setSelected_Status(value);\r\n    setIsFiledValueEmpty(false);\r\n    setIsWorkOrderStatusEmpty(false);\r\n  };\r\n  const handleAssetStatusChange = (event, value) => {\r\n    setSelected_Asset_Status(value);\r\n    setIsAssetStatusEmpty(false);\r\n  };\r\n  const handlePlanPriorityChange = async (event, value) => {\r\n    const newValue = value === null ? null : value;\r\n    setSelected_Plan_Priority(newValue);\r\n    if (value && value.label) {\r\n      const labelParts = value.label.split(\":\");\r\n      const valueBeforeColon = labelParts[0].trim();\r\n\r\n      if (valueBeforeColon !== \"\") {\r\n        try {\r\n          const response = await httpCommon.get(\r\n            `GetDueDatePlanPriority.php?ID=${valueBeforeColon}&site_cd=${site_ID}`\r\n          );\r\n          if (response.data.status === \"SUCCESS\") {\r\n            const dueDateIncrement = response.data.data; // Assuming response.data.data contains the increment in milliseconds\r\n            if (!isNaN(dueDateIncrement)) {\r\n              //const dt = new Date();\r\n              const millisecondsToAdd = dueDateIncrement * 60 * 1000;\r\n              const newDate = new Date(\r\n                OriginationDate.getTime() + millisecondsToAdd\r\n              );\r\n              setDueDate(newDate);\r\n              Swal.close();\r\n              setLoading(false);\r\n            } else {\r\n              console.error(\"Invalid dueDateIncrement:\", response.data.data);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChargeCostChange = (event, value) => {\r\n    setSelected_Charge_Cost_Center(value);\r\n    setIsChargeCostEmpty(false);\r\n    setIsChargeCostEmpty(false);\r\n  };\r\n  const handleFaultCodeChange = (event, value) => {\r\n    const newValue = value === null ? null : value;\r\n\r\n    setSelected_Fault_Code(newValue);\r\n    handleSelectedFaultCode(newValue);\r\n    setIsFaultCodeEmpty(false);\r\n    setErrorField(null);\r\n  };\r\n  const handleOriginalPeriorityChange = (event, value) => {\r\n    setSelected_Original_Periority(value);\r\n    setIsOriginalPeriorityEmpty(false);\r\n  };\r\n  const handleWorkTypeChange = (event, value) => {\r\n    setSelected_Work_Type(value);\r\n    setIsWorkTypeEmpty(false);\r\n  };\r\n  const handleWorkGroupChange = (event, value) => {\r\n    setSelected_Work_Group(value);\r\n    setIsWorkGroupEmpty(false);\r\n    setErrorField(null);\r\n  };\r\n\r\n  const toggleDiv = () => {\r\n    setIsOpenWork(!isOpenWork);\r\n  };\r\n\r\n  const toggleDivAsset = () => {\r\n    setIsOpenAsset(!isOpenAsset);\r\n  };\r\n  const handleDataFromSecondComponent = (data) => {\r\n   // console.log(\"data++++++++\", data);\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {RowID\r\n            ? \"CMMS System\"\r\n            : completeRowID\r\n            ? \"CMMS System\"\r\n            : closeRowID\r\n            ? \"CMMS System\"\r\n            : \"CMMS System\"}\r\n        </title>\r\n        <meta name=\"description\" content=\"New Work Order\" />\r\n      </Helmet>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <div\r\n          className=\"CustomBreadAssetSave\"\r\n          style={{\r\n            position: \"-webkit-sticky\",\r\n            position: \"sticky\",\r\n            top: \"55px\",\r\n            backgroundColor: \"white\",\r\n            zIndex: 1000,\r\n            borderBottom: \"1px solid #00000021\",\r\n            height: \"105px\",\r\n          }}\r\n        >\r\n          <CustomBreadcrumbs\r\n            // heading=\"Create Work Order\"\r\n            heading={\r\n              RowID\r\n                ? `Update ${WorkOrderNo} Work Order`\r\n                : completeRowID\r\n                ? `Complete ${WorkOrderNo} Work Order`\r\n                : closeRowID\r\n                ? `Close ${WorkOrderNo} Work Order`\r\n                : \"Create New Work Order\"\r\n            }\r\n            links={[\r\n              {\r\n                name: \"Work Order\",\r\n              },\r\n              { name: RowID ? \"Update\" : \"Create\" },\r\n            ]}\r\n            action={\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {(() => {\r\n                  if (\r\n                    completeRowID !== undefined &&\r\n                    completeRowID !== null &&\r\n                    completeRowID !== \"\"\r\n                  ) {\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickChangeComplete}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  } else if (\r\n                    closeRowID !== undefined &&\r\n                    closeRowID !== null &&\r\n                    closeRowID !== \"\"\r\n                  ) {\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickChangeClose}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  } else {\r\n                    {\r\n                      //console.log(\"selected_Status___22\", Status);\r\n                    }\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickChange}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                          disabled={Status.some(\r\n                            (item) =>\r\n                              item.key ===\r\n                                (\r\n                                  selected_Status?.label?.split(\" : \")[2] ?? \"\"\r\n                                ).trim() && item.key === \"CLOSE\"\r\n                          )}\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })()}\r\n              </div>\r\n            }\r\n            sx={{ mb: { xs: 3, md: 5 } }}\r\n          />\r\n          <div className=\"cmmntBtn\">\r\n            {(() => {\r\n              if (\r\n                completeRowID !== undefined &&\r\n                completeRowID !== null &&\r\n                completeRowID !== \"\"\r\n              ) {\r\n                return (\r\n                  <div>\r\n                    <Button\r\n                      onClick={addCommnethandal}\r\n                      disabled={!completeRowID}\r\n                    >\r\n                      <Iconify\r\n                        icon=\"mdi:comments-outline\"\r\n                        style={{\r\n                          width: \"15px\",\r\n                          marginRight: \"5px\",\r\n                        }}\r\n                      />{\" \"}\r\n                      Add Comments\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              } else if (\r\n                closeRowID !== undefined &&\r\n                closeRowID !== null &&\r\n                closeRowID !== \"\"\r\n              ) {\r\n                return (\r\n                  <div>\r\n                    <Button onClick={addCommnethandal} disabled={!closeRowID}>\r\n                      <Iconify\r\n                        icon=\"mdi:comments-outline\"\r\n                        style={{\r\n                          width: \"15px\",\r\n                          marginRight: \"5px\",\r\n                        }}\r\n                      />\r\n                      Add Comments\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div>\r\n                    <Button onClick={addCommnethandal} disabled={!RowID}>\r\n                      <Iconify\r\n                        icon=\"mdi:comments-outline\"\r\n                        style={{\r\n                          width: \"15px\",\r\n                          marginRight: \"5px\",\r\n                        }}\r\n                      />\r\n                      Add Comments\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              }\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <p>Loading data...</p>\r\n          ) : (\r\n            <>\r\n              {/* Complete Status code */}\r\n              {completeRowID !== undefined &&\r\n                completeRowID !== null &&\r\n                completeRowID !== \"\" && (\r\n                  <div\r\n                    className=\"MainOrderFromGd\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                  >\r\n                    <Grid container spacing={0}>\r\n                      <Grid xs={12} md={12} className=\"CompleteDiv\">\r\n                        <Card sx={{ p: 3 }}>\r\n                          <Box\r\n                            rowGap={2}\r\n                            columnGap={2}\r\n                            display=\"grid\"\r\n                            gridTemplateColumns={{\r\n                              xs: \"1fr\",\r\n                              sm: \"repeat(2, 1fr)\",\r\n                            }}\r\n                          >\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={1}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"90%\",\r\n                                sm: \"90% 10%\",\r\n                              }}\r\n                            >\r\n                              <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"wko_mst_status\") ||\r\n                                    \"Status\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                  options={Status.filter(\r\n                                    (status) => status.key === \"COMPLETE\"\r\n                                  )}\r\n                                  value={(selected_Status?.label || \"\")\r\n                                    .split(\" : \")\r\n                                    .slice(0, 2)\r\n                                    .join(\" : \")}\r\n                                  onChange={handleStatusChange}\r\n                                  disableAnimation\r\n                                  renderInput={(params) => (\r\n                                    <div>\r\n                                      <TextField\r\n                                        {...params}\r\n                                        size=\"small\"\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        className={`Extrasize ${\r\n                                          isFiledValueEmpty ? \"errorEmpty\" : \"\"\r\n                                        }`}\r\n                                        style={{ width: \"100%\" }}\r\n                                        ref={autocompleteRef}\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                />\r\n                              </Stack>\r\n                              <Tooltip\r\n                                title=\"Status Audit\"\r\n                                placement=\"right\"\r\n                                className=\"tooltipRht\"\r\n                                disabled={Button_save == \"Save\"}\r\n                              >\r\n                                <IconButton>\r\n                                  <Iconify\r\n                                    icon=\"pajamas:status-alert\"\r\n                                    onClick={StatushandleShow}\r\n                                  />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                              <Typography variant=\"subtitle2\">\r\n                                {findCustomizeLabel(\"wko_det_cmpl_date\") ||\r\n                                  \"Complete Date\"}\r\n                              </Typography>\r\n\r\n                              <DateTimePicker\r\n                                value={CompletionDate2}\r\n                                format=\"dd/MM/yyyy HH:mm\"\r\n                                className=\"Extrasize\"\r\n                                onChange={(newDate) => {\r\n                                  setCompletionDate2(newDate);\r\n                                }}\r\n                                slotProps={{\r\n                                  textField: {\r\n                                    fullWidth: true,\r\n                                  },\r\n                                }}\r\n                              />\r\n                            </Stack>\r\n                          </Box>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"wko_det_corr_action\") ||\r\n                                    \"Corrective Actions\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  placeholder=\"Corrective Action\"\r\n                                  size=\"small\"\r\n                                  value={CorrectiveAction}\r\n                                  minRows={6}\r\n                                  className={`TxtAra ${\r\n                                    isCorrectiveValueEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) => {\r\n                                    setCorrectiveAction(e.target.value);\r\n                                    setIsCorrectiveValueEmpty(false);\r\n                                  }}\r\n                                />\r\n                              </Stack>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Box\r\n                            rowGap={2}\r\n                            columnGap={2}\r\n                            display=\"grid\"\r\n                            gridTemplateColumns={{\r\n                              xs: \"repeat(1, 1fr)\",\r\n                              sm: \"repeat(2, 1fr)\",\r\n                            }}\r\n                          >\r\n                            <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                              <Typography variant=\"subtitle2\">\r\n                                {findCustomizeLabelDet(\"wko_det_cause_code\") ||\r\n                                  \"Cause Code\"}\r\n                              </Typography>\r\n                              <Autocomplete\r\n                                options={Cause_Code}\r\n                                value={selected_Cause_Code?.label ?? \"\"}\r\n                                onChange={(event, value) => {\r\n                                  setSelected_Cause_Code(value || null);\r\n                                  setIsCauseCodeValueEmpty(false);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth // Make it full-width\r\n                                    className={`Extrasize ${\r\n                                      isCauseCodeValueEmpty ? \"errorEmpty\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </Stack>\r\n                            <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                              <Typography variant=\"subtitle2\">\r\n                                {findCustomizeLabelDet(\"wko_det_act_code\") ||\r\n                                  \"Action Code\"}\r\n                              </Typography>\r\n                              <Autocomplete\r\n                                options={Action_Code}\r\n                                value={selected_Action_Code?.label ?? \"\"}\r\n                                onChange={(event, value) => {\r\n                                  setSelected_Action_Code(value || null);\r\n                                  setIsActionCodeValueEmpty(false);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth // Make it full-width\r\n                                    className={`Extrasize ${\r\n                                      isActionCodeValueEmpty ? \"errorEmpty\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </Stack>\r\n                          </Box>\r\n                        </Card>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                )}\r\n\r\n              {/* Close Status code */}\r\n              {closeRowID !== undefined &&\r\n                closeRowID !== null &&\r\n                closeRowID !== \"\" && (\r\n                  <div\r\n                    className=\"MainOrderFromGd\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                  >\r\n                    <Grid container spacing={0}>\r\n                      <Grid xs={12} md={12} className=\"CompleteDiv\">\r\n                        <Card sx={{ p: 3 }}>\r\n                          <Box\r\n                            rowGap={2}\r\n                            columnGap={2}\r\n                            display=\"grid\"\r\n                            gridTemplateColumns={{\r\n                              xs: \"1fr\",\r\n                              sm: \"repeat(2, 1fr)\",\r\n                            }}\r\n                          >\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={1}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"90%\",\r\n                                sm: \"90% 10%\",\r\n                              }}\r\n                            >\r\n                              <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className=\"Requiredlabel\"\r\n                                >\r\n                                  {findCustomizeLabel(\"wko_mst_status\") ||\r\n                                    \"Status\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                  options={Status.filter(\r\n                                    (status) => status.key === \"CLOSE\"\r\n                                  )}\r\n                                  value={(selected_Status?.label || \"\")\r\n                                    .split(\" : \")\r\n                                    .slice(0, 2)\r\n                                    .join(\" : \")}\r\n                                  onChange={handleStatusChange}\r\n                                  disableAnimation\r\n                                  renderInput={(params) => (\r\n                                    <div>\r\n                                      <TextField\r\n                                        {...params}\r\n                                        size=\"small\"\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        className={`Extrasize ${\r\n                                          isFiledValueEmpty ? \"errorEmpty\" : \"\"\r\n                                        }`}\r\n                                        style={{ width: \"100%\" }}\r\n                                        ref={autocompleteRef}\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                />\r\n                              </Stack>\r\n                              <Tooltip\r\n                                title=\"Status Audit\"\r\n                                placement=\"right\"\r\n                                className=\"tooltipRht\"\r\n                                disabled={Button_save == \"Save\"}\r\n                              >\r\n                                <IconButton>\r\n                                  <Iconify\r\n                                    icon=\"pajamas:status-alert\"\r\n                                    onClick={StatushandleShow}\r\n                                  />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                              <Typography variant=\"subtitle2\">\r\n                                {findCustomizeLabel(\"wko_det_clo_date\") ||\r\n                                  \"Close Date\"}\r\n                              </Typography>\r\n\r\n                              <DateTimePicker\r\n                                value={CloseDate2}\r\n                                format=\"dd/MM/yyyy HH:mm\"\r\n                                className=\"Extrasize\"\r\n                                onChange={(newDate) => {\r\n                                  setCloseDate2(newDate); // Update your state with the new value\r\n                                }}\r\n                                slotProps={{\r\n                                  textField: {\r\n                                    fullWidth: true,\r\n                                  },\r\n                                }}\r\n                              />\r\n                            </Stack>\r\n                          </Box>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"wko_det_corr_action\") ||\r\n                                    \"Corrective Actions\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  placeholder=\"Corrective Action\"\r\n                                  size=\"small\"\r\n                                  value={CorrectiveAction}\r\n                                  minRows={6}\r\n                                  className={`TxtAra ${\r\n                                    isCorrectiveValueEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  style={{ width: \"100%\" }}\r\n                                  onChange={(e) => {\r\n                                    setCorrectiveAction(e.target.value);\r\n                                    setIsCorrectiveValueEmpty(false);\r\n                                  }}\r\n                                />\r\n                              </Stack>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Box\r\n                            rowGap={2}\r\n                            columnGap={2}\r\n                            display=\"grid\"\r\n                            gridTemplateColumns={{\r\n                              xs: \"repeat(1, 1fr)\",\r\n                              sm: \"repeat(2, 1fr)\",\r\n                            }}\r\n                          >\r\n                            <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                              <Typography variant=\"subtitle2\">\r\n                                {findCustomizeLabelDet(\"wko_det_cause_code\") ||\r\n                                  \"Cause Code\"}\r\n                              </Typography>\r\n                              <Autocomplete\r\n                                options={Cause_Code}\r\n                                value={selected_Cause_Code?.label ?? \"\"}\r\n                                onChange={(event, value) => {\r\n                                  setSelected_Cause_Code(value || null);\r\n                                  setIsCauseCodeValueEmpty(false);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth // Make it full-width\r\n                                    className={`Extrasize ${\r\n                                      isCauseCodeValueEmpty ? \"errorEmpty\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </Stack>\r\n                            <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                              <Typography variant=\"subtitle2\">\r\n                                {findCustomizeLabelDet(\"wko_det_act_code\") ||\r\n                                  \"Action Code\"}\r\n                              </Typography>\r\n                              <Autocomplete\r\n                                options={Action_Code}\r\n                                value={selected_Action_Code?.label ?? \"\"}\r\n                                onChange={(event, value) => {\r\n                                  setSelected_Action_Code(value || null);\r\n                                  setIsActionCodeValueEmpty(false);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth // Make it full-width\r\n                                    className={`Extrasize ${\r\n                                      isActionCodeValueEmpty ? \"errorEmpty\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </Stack>\r\n                          </Box>\r\n                        </Card>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                )}\r\n\r\n              {/* toggle view */}\r\n              <div\r\n                className=\"MainOrderFromGd\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <Grid container spacing={0}>\r\n                  <Grid xs={12} md={12}>\r\n                    <Card sx={{ padding: \"10px 24px 15px 24px\" }}>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <button className=\"ToggleBttnIcon\" onClick={toggleDiv}>\r\n                          <Iconify\r\n                            icon=\"fluent-mdl2:pen-workspace\"\r\n                            style={{ marginRight: \"5px\", width: \"17px\" }}\r\n                          />{\" \"}\r\n                          Work Order\r\n                          {isOpenWork ? (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-up-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          ) : (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-down-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                      {isOpenWork && (\r\n                        <Grid container spacing={0}>\r\n                          <Grid xs={12} md={10}>\r\n                            {/* ************************************* img mobile ******************************************* */}\r\n                            <div className=\"col-md-2 mobileImgversion\">\r\n                              <div className=\"row\">\r\n                                <div className=\"row ImgShowMobile\">\r\n                                  <div>\r\n                                    <label htmlFor=\"upload-button\">\r\n                                      {getDbImg && getDbImg.length > 0 ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={\r\n                                              getDbImg[0].attachment\r\n                                                ? `${httpCommon.defaults.baseURL}${getDbImg[0].attachment}`\r\n                                                : \"\"\r\n                                            }\r\n                                            className=\"imgCurPont\"\r\n                                            // width=\"200\"\r\n                                            // height=\"180\"\r\n                                            alt=\"Base64 Image\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n\r\n                                          <div className=\"col btnCenter\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn dlt\"\r\n                                              onClick={() =>\r\n                                                handleDeleteImgApi(\r\n                                                  getDbImg[0].RowID\r\n                                                )\r\n                                              }\r\n                                              style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n\r\n                                                justifyContent: \"center\",\r\n                                                marginTop: \"10px\",\r\n                                              }}\r\n                                            >\r\n                                              <Iconify\r\n                                                icon=\"fluent:delete-48-filled\"\r\n                                                style={{ fontSize: \"24px\" }}\r\n                                              />\r\n                                              Delete\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : image.preview ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={image.preview}\r\n                                            alt=\"dummy\"\r\n                                            // width=\"200\"\r\n                                            // height=\"180\"\r\n                                            className=\"imgCurPont\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                          <div className=\"col btnCenter\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn dlt\"\r\n                                              onClick={handleClearImg}\r\n                                              style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                              }}\r\n                                            >\r\n                                              <Iconify\r\n                                                icon=\"fluent:delete-48-filled\"\r\n                                                style={{ marginRight: \"5px\" }}\r\n                                              />\r\n                                              Delete\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <>\r\n                                          <span className=\"fa-stack fa-2x mb-2\">\r\n                                            <img\r\n                                              src={require(\"../../../assets/img/Add_Image_icon.png\")}\r\n                                              className=\"sliderimg2\"\r\n                                              onClick={handleImgChangeSingle2}\r\n                                              width=\"200\"\r\n                                              height=\"180\"\r\n                                              alt=\"\"\r\n                                            />\r\n                                          </span>\r\n                                        </>\r\n                                      )}\r\n                                    </label>\r\n                                    {getDbImg && getDbImg.length > 0 ? (\r\n                                      <div></div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <input\r\n                                          type=\"file\"\r\n                                          id=\"upload-button\"\r\n                                          disabled={disabledBtn}\r\n                                          style={{ display: \"none\" }}\r\n                                          onChange={handleImgChangeSingle}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                    <br />\r\n                                  </div>\r\n                                  <BootstrapDialog\r\n                                    onClose={handleClosedd2}\r\n                                    aria-labelledby=\"customized-dialog-title\"\r\n                                    open={showdd2}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"close\"\r\n                                      onClick={handleClosedd2}\r\n                                      sx={{\r\n                                        position: \"absolute\",\r\n                                        right: 8,\r\n                                        top: 8,\r\n                                        color: (theme) =>\r\n                                          theme.palette.grey[500],\r\n                                      }}\r\n                                    >\r\n                                      X\r\n                                    </IconButton>\r\n                                    <DialogContent\r\n                                      dividers\r\n                                      style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      {getDbImg && getDbImg.length > 0 ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={getDbImg[0].attachment}\r\n                                            alt=\"dummy\"\r\n                                            className=\"dummyImg\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                        </div>\r\n                                      ) : (\r\n                                        <img\r\n                                          src={image.preview}\r\n                                          alt=\"dummy\"\r\n                                          style={{\r\n                                            height: \"50%\",\r\n                                            width: \"50%\",\r\n                                          }}\r\n                                          onClick={openSaveImg}\r\n                                          className=\"dummyImg\"\r\n                                        />\r\n                                      )}\r\n                                    </DialogContent>\r\n                                  </BootstrapDialog>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className=\"Requiredlabel\"\r\n                                >\r\n                                  {findCustomizeLabel(\"wko_mst_wo_no\") ||\r\n                                    \"Work Order No\"}\r\n                                </Typography>\r\n                                <TextField\r\n                                  name=\"name\"\r\n                                  size=\"small\"\r\n                                  disabled\r\n                                  defaultValue={WorkOrderNo}\r\n                                  className=\"ExtrasizeDisable\"\r\n                                />\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                gridTemplateColumns={{\r\n                                  xs: \"85%\",\r\n                                  sm: \"85% 10%\",\r\n                                }}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    className=\"Requiredlabel\"\r\n                                  >\r\n                                    {findCustomizeLabel(\"wko_mst_status\") ||\r\n                                      \"Status\"}\r\n                                  </Typography>\r\n\r\n                                  <Autocomplete\r\n                                    options={Status.filter(\r\n                                      (status) => status.key === \"OPEN\"\r\n                                    )}\r\n                                    value={(selected_Status?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                    onChange={handleStatusChange}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isWorkOrderStatusEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                                </Stack>\r\n                                <Tooltip\r\n                                  title=\"Status Audit\"\r\n                                  placement=\"right\"\r\n                                  className=\"tooltipRht\"\r\n                                  disabled={Button_save == \"Save\"}\r\n                                >\r\n                                  <IconButton>\r\n                                    <Iconify\r\n                                      icon=\"pajamas:status-alert\"\r\n                                      onClick={StatushandleShow}\r\n                                    />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={2}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"wko_mst_originator\") ||\r\n                                    \"Originator\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                  options={Originator}\r\n                                  value={selected_Originator?.label ?? \"\"}\r\n                                  onChange={(event, value) => {\r\n                                    setSelected_Originator(value || null);\r\n                                  }}\r\n                                  renderInput={(params) => (\r\n                                    <div>\r\n                                      <TextField\r\n                                        {...params}\r\n                                        size=\"small\"\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"Extrasize\"\r\n                                        onClick={handleClickOriginator}\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                />\r\n                              </Stack>\r\n                              <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\r\n                                    \"wko_mst_plan_priority\"\r\n                                  ) || \"Plan Periority\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                  options={Plan_Priority}\r\n                                  value={selected_Plan_Priority?.label ?? \"\"}\r\n                                  onChange={handlePlanPriorityChange}\r\n                                  renderInput={(params) => (\r\n                                    <div>\r\n                                      <TextField\r\n                                        {...params}\r\n                                        size=\"small\"\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"Extrasize\"\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                />\r\n                              </Stack>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"wko_mst_phone\") ||\r\n                                    \"Phone\"}\r\n                                </Typography>\r\n                                <TextField\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  className=\"Extrasize\"\r\n                                  defaultValue={Phone}\r\n                                  onChange={(e) => {\r\n                                    setPhone(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={2}\r\n                                display=\"grid\"\r\n                                gridTemplateColumns={{\r\n                                  xs: \"repeat(1, 1fr)\",\r\n                                  sm: \"repeat(2, 1fr)\",\r\n                                }}\r\n                                marginBottom={2}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"wko_mst_org_date\") ||\r\n                                      \"Origination Date\"}\r\n                                  </Typography>\r\n\r\n                                  <DateTimePicker\r\n                                    value={OriginationDate}\r\n                                    format=\"dd/MM/yyyy HH:mm\"\r\n                                    className=\"Extrasize\"\r\n                                    sx={{ fontSize: \"0.875rem\" }}\r\n                                    onChange={(newDate) => {\r\n                                      setOriginationDate(newDate); // Update your state with the new value\r\n                                    }}\r\n                                    slotProps={{\r\n                                      textField: {\r\n                                        fullWidth: true,\r\n                                      },\r\n                                    }}\r\n                                  />\r\n                                </Stack>\r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\r\n                                      \"wko_det_wr_due_date\"\r\n                                    ) || \"Due Date\"}\r\n                                  </Typography>\r\n\r\n                                  <DateTimePicker\r\n                                    value={DueDate}\r\n                                    format=\"dd/MM/yyyy HH:mm\"\r\n                                    className=\"Extrasize\"\r\n                                    onChange={(newDate) => {\r\n                                      setDueDate(newDate); // Update your state with the new value\r\n                                    }}\r\n                                    slotProps={{\r\n                                      textField: {\r\n                                        fullWidth: true,\r\n                                      },\r\n                                    }}\r\n                                  />\r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={2}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className={findCustomizerequiredLabel(\r\n                                    \"wko_mst_flt_code\"\r\n                                  )}\r\n                                >\r\n                                  {findCustomizeLabel(\"wko_mst_flt_code\") ||\r\n                                    \"Fault Code\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                  options={Fault_Code}\r\n                                  value={selected_Fault_Code?.label ?? \"\"}\r\n                                  onChange={handleFaultCodeChange}\r\n                                  renderInput={(params) => (\r\n                                    <div>\r\n                                      <TextField\r\n                                        {...params}\r\n                                        size=\"small\"\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        className={\r\n                                          errorField === \"ast_mst_perm_id\"\r\n                                            ? \"erroBorderadd\"\r\n                                            : \"\"\r\n                                        }\r\n                                        ref={faultCodeAutocompleteRef}\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                />\r\n                              </Stack>\r\n                            </Box>\r\n                            <Grid item xs={12} sx={{ mt: 2 }}>\r\n                              <Stack spacing={1}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className=\"Requiredlabel\"\r\n                                >\r\n                                  {findCustomizeLabel(\"wko_mst_descs\") ||\r\n                                    \"Description...\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  placeholder=\"Description...\"\r\n                                  minRows={6}\r\n                                  value={Description}\r\n                                  onChange={(e) => {\r\n                                    setDescription(e.target.value);\r\n                                    setIsWorkDescEmpty(false);\r\n                                  }}\r\n                                  className={`Extrasize ${\r\n                                    isWorkDescEmpty ? \"errorEmpty\" : \"TxtAra\"\r\n                                  }`}\r\n                                />\r\n                              </Stack>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid xs={12} md={2} className=\"imgGird\">\r\n                            <Card sx={{ pt: 2, pb: 0, px: 3 }}>\r\n                              <Box\r\n                                sx={{\r\n                                  mb: 5,\r\n                                  display: \"flex\",\r\n                                  flexDirection: \"column\",\r\n                                  alignItems: \"center\",\r\n                                  justifyContent: \"center\",\r\n                                }}\r\n                              >\r\n                                {/* ************************************* img web******************************************* */}\r\n\r\n                                <div className=\"col-md-2\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"row ImgShowMobile\">\r\n                                      <div>\r\n                                        <label htmlFor=\"upload-button\">\r\n                                          {getDbImg && getDbImg.length > 0 ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={\r\n                                                  getDbImg[0].attachment\r\n                                                    ? `${httpCommon.defaults.baseURL}${getDbImg[0].attachment}`\r\n                                                    : \"\"\r\n                                                }\r\n                                                className=\"imgCurPont\"\r\n                                                // width=\"200\"\r\n                                                // height=\"180\"\r\n                                                alt=\"Base64 Image\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                              <div className=\"col btnCenter\">\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"btn dlt\"\r\n                                                  onClick={() =>\r\n                                                    handleDeleteImgApi(\r\n                                                      getDbImg[0].RowID\r\n                                                    )\r\n                                                  }\r\n                                                  style={{\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n\r\n                                                    justifyContent: \"center\",\r\n                                                    marginTop: \"10px\",\r\n                                                  }}\r\n                                                >\r\n                                                  <Iconify\r\n                                                    icon=\"fluent:delete-48-filled\"\r\n                                                    style={{ fontSize: \"24px\" }}\r\n                                                  />\r\n                                                  Delete\r\n                                                </button>\r\n                                              </div>\r\n                                            </div>\r\n                                          ) : image.preview ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={image.preview}\r\n                                                alt=\"dummy\"\r\n                                                // width=\"200\"\r\n                                                // height=\"180\"\r\n                                                className=\"imgCurPont\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                              <div className=\"col btnCenter\">\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"btn dlt\"\r\n                                                  onClick={handleClearImg}\r\n                                                  style={{\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n                                                    justifyContent: \"center\",\r\n                                                  }}\r\n                                                >\r\n                                                  <Iconify\r\n                                                    icon=\"fluent:delete-48-filled\"\r\n                                                    style={{\r\n                                                      marginRight: \"5px\",\r\n                                                    }}\r\n                                                  />\r\n                                                  Delete\r\n                                                </button>\r\n                                              </div>\r\n                                            </div>\r\n                                          ) : (\r\n                                            <>\r\n                                              <span className=\"fa-stack fa-2x mb-2\">\r\n                                                <img\r\n                                                  src={require(\"../../../assets/img/Add_Image_icon.png\")}\r\n                                                  className=\"sliderimg2\"\r\n                                                  onClick={\r\n                                                    handleImgChangeSingle2\r\n                                                  }\r\n                                                  width=\"200\"\r\n                                                  height=\"180\"\r\n                                                  alt=\"\"\r\n                                                />\r\n                                              </span>\r\n                                            </>\r\n                                          )}\r\n                                        </label>\r\n                                        {getDbImg && getDbImg.length > 0 ? (\r\n                                          <div></div>\r\n                                        ) : (\r\n                                          <div>\r\n                                            <input\r\n                                              type=\"file\"\r\n                                              id=\"upload-button\"\r\n                                              disabled={disabledBtn}\r\n                                              style={{ display: \"none\" }}\r\n                                              onChange={handleImgChangeSingle}\r\n                                            />\r\n                                          </div>\r\n                                        )}\r\n                                        <br />\r\n                                      </div>\r\n                                      <BootstrapDialog\r\n                                        onClose={handleClosedd2}\r\n                                        aria-labelledby=\"customized-dialog-title\"\r\n                                        open={showdd2}\r\n                                      >\r\n                                        <IconButton\r\n                                          aria-label=\"close\"\r\n                                          onClick={handleClosedd2}\r\n                                          sx={{\r\n                                            position: \"absolute\",\r\n                                            right: 8,\r\n                                            top: 8,\r\n                                            color: (theme) =>\r\n                                              theme.palette.grey[500],\r\n                                          }}\r\n                                        >\r\n                                          X\r\n                                        </IconButton>\r\n                                        <DialogContent\r\n                                          dividers\r\n                                          style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                          }}\r\n                                        >\r\n                                          {getDbImg && getDbImg.length > 0 ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={\r\n                                                  getDbImg[0].attachment\r\n                                                    ? `${httpCommon.defaults.baseURL}${getDbImg[0].attachment}`\r\n                                                    : \"\"\r\n                                                }\r\n                                                alt=\"dummy\"\r\n                                                className=\"dummyImg\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                            </div>\r\n                                          ) : (\r\n                                            <img\r\n                                              src={image.preview}\r\n                                              alt=\"dummy\"\r\n                                              style={{\r\n                                                height: \"50%\",\r\n                                                width: \"50%\",\r\n                                              }}\r\n                                              onClick={openSaveImg}\r\n                                              className=\"dummyImg\"\r\n                                            />\r\n                                          )}\r\n                                        </DialogContent>\r\n                                      </BootstrapDialog>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </Box>\r\n                            </Card>\r\n                          </Grid>\r\n                        </Grid>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              {/* Asset Work */}\r\n              <div\r\n                className=\"MainOrderFromGd\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <Grid container spacing={0}>\r\n                  <Grid xs={12} md={12}>\r\n                    <Card sx={{ padding: \"10px 24px 15px 24px\" }}>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <button\r\n                          className=\"ToggleBttnIcon\"\r\n                          onClick={toggleDivAsset}\r\n                        >\r\n                          <Iconify\r\n                            icon=\"carbon:user-settings\"\r\n                            style={{ marginRight: \"2px\", width: \"20px\" }}\r\n                          />{\" \"}\r\n                          Asset\r\n                          {isOpenAsset ? (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-up-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          ) : (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-down-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                      {isOpenAsset && (\r\n                        <Box\r\n                          rowGap={2}\r\n                          columnGap={2}\r\n                          display=\"grid\"\r\n                          gridTemplateColumns={{\r\n                            xs: \"repeat(1, 1fr)\",\r\n                            sm: \"repeat(2, 1fr)\",\r\n                          }}\r\n                        >\r\n                          <Stack spacing={1}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className=\"Requiredlabel\"\r\n                            >\r\n                              {findCustomizeLabel(\"wko_mst_assetno\") ||\r\n                                \"Asset No\"}\r\n                            </Typography>\r\n                            <div ref={assetNoAutocompleteRef}>\r\n                              <CustomTextField\r\n                                id=\"outlined-basic\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className={`ExtrasizeDisable ${\r\n                                  isWorkOrderAssetNoEmpty ? \"errorEmpty\" : \"\"\r\n                                }`}\r\n                                // ref={assetNoAutocompleteRef}\r\n                                fullWidth\r\n                                value={Asset_No || \"\"}\r\n                                disabled\r\n                                placeholder=\"Select...\"\r\n                                rightIcons={[\r\n                                  <Iconify\r\n                                    icon=\"material-symbols:close\"\r\n                                    onClick={handleCancelClick}\r\n                                  />,\r\n                                  <Iconify\r\n                                    icon=\"tabler:edit\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      handleEditClick();\r\n                                      setisWorkOrderAssetNoEmpty(false);\r\n                                    }}\r\n                                  />,\r\n                                ]}\r\n                              />\r\n                            </div>\r\n                          </Stack>\r\n                          <Stack spacing={1}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_mst_asset_status\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"wko_mst_asset_status\") ||\r\n                                \"Asset Status\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Status}\r\n                              value={selected_Asset_Status?.label ?? \"\"}\r\n                              onChange={handleAssetStatusChange}\r\n                              renderInput={(params) => (\r\n                                <div>\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    className={\r\n                                      errorField === \"wko_mst_asset_status\"\r\n                                        ? \"erroBorderadd\"\r\n                                        : \"\"\r\n                                    }\r\n                                    ref={autocompleteRef}\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n\r\n                          <Stack spacing={1}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_mst_asset_group_code\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"wko_mst_asset_group_code\") ||\r\n                                \"Asset Group Code\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Group_Code}\r\n                              value={selected_Asset_Group_Code?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Asset_Group_Code(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <div>\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    className={\r\n                                      errorField === \"wko_mst_asset_group_code\"\r\n                                        ? \"erroBorderadd\"\r\n                                        : \"\"\r\n                                    }\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className=\"Requiredlabel\"\r\n                            >\r\n                              {findCustomizeLabel(\"wko_mst_chg_costcenter\") ||\r\n                                \"Charge Cost Center\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Charge_Cost_Center}\r\n                              value={selected_Charge_Cost_Center}\r\n                              onChange={handleChargeCostChange}\r\n                              renderInput={(params) => (\r\n                                <div>\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    className={`Extrasize ${\r\n                                      isChargeCostEmpty ? \"errorEmpty\" : \"\"\r\n                                    }`}\r\n                                    ref={autocompleteRef}\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_mst_work_area\") ||\r\n                                \"Work Area\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Work_Area}\r\n                              value={selected_Work_Area}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Area(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <div>\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"Extrasize\"\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_mst_asset_level\") ||\r\n                                \"Asset Level\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Level}\r\n                              value={selected_Asset_Level}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Asset_Level(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <div>\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_mst_asset_location\") ||\r\n                                \"Asset Location\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Location}\r\n                              value={selected_Asset_Location}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Asset_Location(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <div>\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"Extrasize\"\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                        </Box>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              {/* toggle view End */}\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid xs={12} md={12}>\r\n                  <Card sx={{ p: 3 }}>\r\n                    <Tabs\r\n                      value={Tabvalue}\r\n                      onChange={handleChange}\r\n                      aria-label=\"Basic tabs\"\r\n                      defaultValue={0}\r\n                    >\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"akar-icons:info-fill\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Details\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"fluent-mdl2:financial\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Financial\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"material-symbols:date-range-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            UDF1\r\n                          </div>\r\n                        }\r\n                      />\r\n\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:planner-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Planning\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"guidance:time\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Time Card\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"codicon:references\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Reference\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </Tabs>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 0}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {/*Details*/}\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                          <Stack spacing={1.5} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_corr_action\") ||\r\n                                \"Corrective Actions\"}\r\n                            </Typography>\r\n                            <TextareaAutosize\r\n                              aria-label=\"empty textarea\"\r\n                              placeholder=\"Corrective Action\"\r\n                              value={CorrectiveAction}\r\n                              minRows={6}\r\n                              className=\"TxtAra\"\r\n                              style={{ width: \"100%\" }} // Make it full-width\r\n                              onChange={(e) => {\r\n                                setCorrectiveAction(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_mst_project_id\") ||\r\n                                \"Project ID\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Project_ID}\r\n                              value={selected_Project_ID?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Project_ID(value);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickProjectID}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_cause_code\") ||\r\n                                \"Cause Code\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Cause_Code}\r\n                              value={selected_Cause_Code?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Cause_Code(value);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_act_code\") ||\r\n                                \"Action Code\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Action_Code}\r\n                              value={selected_Action_Code?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Action_Code(value);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_delay_cd\") ||\r\n                                \"Delay Code\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Delay_Code}\r\n                              value={selected_Delay_Code?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Delay_Code(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_work_type\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"wko_det_work_type\") ||\r\n                                \"Work Type\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Work_Type}\r\n                              value={selected_Work_Type?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                // handleWorkTypeChange();\r\n                                setSelected_Work_Type(value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={\r\n                                    errorField === \"wko_det_work_type\"\r\n                                      ? \"erroBorderadd\"\r\n                                      : \"\"\r\n                                  }\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_work_class\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"wko_det_work_class\") ||\r\n                                \"Work Permit Type\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Work_Class}\r\n                              value={selected_Work_Class?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Class(value || null);\r\n                                setErrorField(null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={\r\n                                    errorField === \"wko_det_work_class\"\r\n                                      ? \"erroBorderadd\"\r\n                                      : \"\"\r\n                                  }\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_work_grp\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"wko_det_work_grp\") ||\r\n                                \"Work Group\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Work_Group}\r\n                              value={\r\n                                selected_Work_Group !== null &&\r\n                                selected_Work_Group !== \"\"\r\n                                  ? selected_Work_Group.label\r\n                                  : \"\"\r\n                              }\r\n                              onChange={handleWorkGroupChange}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickSupervisorId}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={\r\n                                    errorField === \"wko_det_work_grp\"\r\n                                      ? \"erroBorderadd\"\r\n                                      : \"\"\r\n                                  }\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_supv_id\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"wko_det_supv_id\") ||\r\n                                \"Supervisor ID\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Supervisor_ID}\r\n                              value={selected_Supervisor_ID?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Supervisor_ID(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickSupervisorId}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_planner\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"wko_det_planner\") ||\r\n                                \"Planner\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Planner}\r\n                              value={selected_Planner?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Planner(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickPlanner}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth\r\n                                  className={\r\n                                    errorField === \"wko_det_planner\"\r\n                                      ? \"erroBorderadd\"\r\n                                      : \"\"\r\n                                  }\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_approver\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"wko_det_approver\") ||\r\n                                \"Approver\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Approver}\r\n                              value={selected_Approver?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Approver(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickApprover}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth\r\n                                  className={\r\n                                    errorField === \"wko_det_approver\"\r\n                                      ? \"erroBorderadd\"\r\n                                      : \"\"\r\n                                  }\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_perm_id\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"wko_det_perm_id\") ||\r\n                                \"Permanent ID\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              placeholder=\"Area...\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              value={Permanent_ID}\r\n                              onChange={(e) => {\r\n                                setPermanent_ID(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              fullWidth\r\n                              className={\r\n                                errorField === \"wko_det_perm_id\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className=\"Requiredlabel\"\r\n                            >\r\n                              {findCustomizeLabel(\"wko_mst_orig_priority\") ||\r\n                                \"Original Periority\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Original_Periority}\r\n                              value={selected_Original_Periority?.label ?? \"\"}\r\n                              onChange={handleOriginalPeriorityChange}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isOriginalPeriorityEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_sched_date\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"wko_det_sched_date\") ||\r\n                                \"Schedule Date\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              value={DueDate}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"wko_det_sched_date\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setScheduleDate(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_exc_date\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"wko_det_exc_date\") ||\r\n                                \"Exception Date\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              value={ExceptionDate}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"wko_det_exc_date\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setExceptionDate(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_sc_date\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"wko_det_sc_date\") ||\r\n                                \"Status Change Date\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              value={StatusChangeDate}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"wko_det_sc_date\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setStatusChangeDate(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_cmpl_date\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"wko_det_cmpl_date\") ||\r\n                                \"Completion Date\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              value={CompletionDate}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"wko_det_cmpl_date\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setCompletionDate(newDate);\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"wko_det_clo_date\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"wko_det_clo_date\") ||\r\n                                \"Close Date\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              value={CloseDate}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"wko_det_clo_date\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setCloseDate(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack\r\n                            spacing={1}\r\n                            sx={{\r\n                              pb: 2,\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\", // Set the flex direction to row\r\n                              alignItems: \"center\", // Center items vertically\r\n                              justifyContent: \"space-between\", // Create space between items\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_temp_asset\") ||\r\n                                \"Temporary Asset\"}\r\n                            </Typography>\r\n                            <div className=\"customlayoutchk\">\r\n                              <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                checked={Temporary_Asset}\r\n                                onChange={(value) => {\r\n                                  handleOnChangeTemporaryAsset(value);\r\n                                }}\r\n                                labelPlacement=\"start\" // Place the label on the left\r\n                              />\r\n                            </div>\r\n                          </Stack>\r\n                          <Stack\r\n                            spacing={1}\r\n                            sx={{\r\n                              pb: 2,\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\", // Set the flex direction to row\r\n                              alignItems: \"center\", // Center items vertically\r\n                              justifyContent: \"space-between\", // Create space between items\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_approved\") ||\r\n                                \"Approved\"}\r\n                            </Typography>\r\n                            <div className=\"customlayoutchk\">\r\n                              <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                checked={Approved}\r\n                                onChange={(value) => {\r\n                                  handleOnChangeApproved(value);\r\n                                }}\r\n                                labelPlacement=\"start\" // Place the label on the left\r\n                              />\r\n                            </div>\r\n                          </Stack>\r\n                          <Stack\r\n                            spacing={1}\r\n                            sx={{\r\n                              pb: 2,\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\", // Set the flex direction to row\r\n                              alignItems: \"center\", // Center items vertically\r\n                              justifyContent: \"space-between\", // Create space between items\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_safety\") || \"Safety\"}\r\n                            </Typography>\r\n                            <div className=\"customlayoutchk\">\r\n                              <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                checked={Safety}\r\n                                onChange={(value) => {\r\n                                  handleOnChangeSafety(value);\r\n                                }}\r\n                                labelPlacement=\"start\" // Place the label on the left\r\n                              />\r\n                            </div>\r\n                          </Stack>\r\n                          <Stack\r\n                            spacing={1}\r\n                            sx={{\r\n                              pb: 2,\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\", // Set the flex direction to row\r\n                              alignItems: \"center\", // Center items vertically\r\n                              justifyContent: \"space-between\", // Create space between items\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_wo_open\") ||\r\n                                \"WO Open\"}\r\n                            </Typography>\r\n                            <div className=\"customlayoutchk\">&nbsp;Y</div>\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Box\r\n                            rowGap={2}\r\n                            columnGap={1}\r\n                            display=\"grid\"\r\n                            gridTemplateColumns={{\r\n                              xs: \"85%\",\r\n                              sm: \"85% 10%\",\r\n                            }}\r\n                          >\r\n                            <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                              <Typography variant=\"subtitle2\">\r\n                                {findCustomizeLabelDet(\"wko_det_assign_to\") ||\r\n                                  \"Assign To\"}\r\n                              </Typography>\r\n                              <Autocomplete\r\n                                options={Assign_To}\r\n                                value={selected_Assign_To?.label ?? \"\"}\r\n                                onChange={(event, value) => {\r\n                                  setSelected_Assign_To(value || null);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    size=\"small\"\r\n                                    placeholder=\"Select...\"\r\n                                    onClick={handleClickAssignTo}\r\n                                    variant=\"outlined\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    fullWidth // Make it full-width\r\n                                  />\r\n                                )}\r\n                              />\r\n                            </Stack>\r\n                            <Tooltip\r\n                              title=\"Assign To Audit\"\r\n                              placement=\"right\"\r\n                              className=\"tooltipRhtAssign\"\r\n                              disabled={Button_save == \"Save\"}\r\n                            >\r\n                              <IconButton>\r\n                                <Iconify\r\n                                  icon=\"pajamas:status-alert\"\r\n                                  onClick={AssignStatushandleshow}\r\n                                />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </Box>\r\n\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_wr_no\") ||\r\n                                \"Work Request No\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_wr_due_date\") ||\r\n                                \"WR Due Date\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_parent_wo\") ||\r\n                                \"Parent WO\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_wr_org_date\") ||\r\n                                \"WR Origination Date\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 1}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {/* //chkFrm  financial */}\r\n\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_customer_cd\") ||\r\n                                \"Customer Code\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Customer_Code}\r\n                              value={selected_Customer_Code?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Customer_Code(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  onClick={handleClickCustomerCode}\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Select...\"\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\r\n                                \"wko_det_crd_costcenter\"\r\n                              ) || \"Credit Cost Center\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Credit_Cost_Center}\r\n                              value={selected_Credit_Cost_Center?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Credit_Cost_Center(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickCostCenter}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_laccount\") ||\r\n                                \"Labor Account\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Labor_Account}\r\n                              value={selected_Labor_Account?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Labor_Account(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  onClick={handleClickLaborAccount}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_caccount\") ||\r\n                                \"Contract Account\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Contract_Account}\r\n                              value={selected_Contract_Account?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Contract_Account(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickContractAccount}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_maccount\") ||\r\n                                \"Material Account\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Material_Account}\r\n                              value={selected_Material_Account?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Material_Account(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickMaterialAccount}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_saccount\") ||\r\n                                \"Miscellaneous Account\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Miscellaneous_Account}\r\n                              value={\r\n                                selected_Miscellaneous_Account?.label ?? \"\"\r\n                              }\r\n                              onChange={(event, value) => {\r\n                                setSelected_Miscellaneous_Account(\r\n                                  value || null\r\n                                );\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickMiscellaneousAccount}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 2}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_note1\") ||\r\n                                \"Note1\"}\r\n                            </Typography>\r\n                            <TextareaAutosize\r\n                              aria-label=\"empty textarea\"\r\n                              placeholder=\"Note1...\"\r\n                              defaultValue={UDFNote1}\r\n                              minRows={6}\r\n                              className=\"TxtAra\"\r\n                              style={{ width: \"100%\" }} // Make it full-width\r\n                              onChange={(e) => {\r\n                                setUDFNote1(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar1\") ||\r\n                                \"Varchar1\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_1}\r\n                              onChange={(e) => {\r\n                                setUDFText_1(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar2\") ||\r\n                                \"Varchar2\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_2}\r\n                              onChange={(e) => {\r\n                                setUDFText_2(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar3\") ||\r\n                                \"Varchar3\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_3}\r\n                              onChange={(e) => {\r\n                                setUDFText_3(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar4\") ||\r\n                                \"Varchar4\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_4}\r\n                              onChange={(e) => {\r\n                                setUDFText_4(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar5\") ||\r\n                                \"Varchar5\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_5}\r\n                              onChange={(e) => {\r\n                                setUDFText_5(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar6\") ||\r\n                                \"Varchar6\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_6}\r\n                              onChange={(e) => {\r\n                                setUDFText_6(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar7\") ||\r\n                                \"Varchar7\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_7}\r\n                              onChange={(e) => {\r\n                                setUDFText_7(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar8\") ||\r\n                                \"Varchar8\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_8}\r\n                              onChange={(e) => {\r\n                                setUDFText_8(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar9\") ||\r\n                                \"Varchar9\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_9}\r\n                              onChange={(e) => {\r\n                                setUDFText_9(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_varchar10\") ||\r\n                                \"Varchar10\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_10}\r\n                              onChange={(e) => {\r\n                                setUDFText_10(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_numeric1\") ||\r\n                                \"Numeric1\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_1}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_1(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_numeric2\") ||\r\n                                \"Numeric2\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_2}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_2(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_numeric3\") ||\r\n                                \"Numeric3\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_3}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_3(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_numeric4\") ||\r\n                                \"Numeric4\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_4}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_4(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"wko_det_numeric5\") ||\r\n                                \"Numeric5\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_5}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_5(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_datetime1\") ||\r\n                                \"Date1\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              value={UDFDate_1}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_1(newDate);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_datetime2\") ||\r\n                                \"Date2\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              // defaultValue={UDFDate_1}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_2(newDate);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_datetime3\") ||\r\n                                \"Date3\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              // defaultValue={UDFDate_1}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_3(newDate);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_datetime4\") ||\r\n                                \"Date4\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              // defaultValue={UDFDate_1}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_4(newDate);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"wko_det_datetime5\") ||\r\n                                \"Date5\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              // defaultValue={UDFDate_1}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_5(newDate);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 3}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {RowID && (\r\n                        <WorkOrderSpecialOrder\r\n                          data={{\r\n                            RowID: RowID,\r\n                            WorkOrderNo: WorkOrderNo,\r\n                            Asset_No: Asset_No,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 4}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {RowID && (\r\n                        <WorkOrderTimeCard\r\n                          data={{\r\n                            RowID: RowID,\r\n                            WorkOrderNo: WorkOrderNo,\r\n                            Asset_No: Asset_No,\r\n                          }}\r\n                          onDataFromSecondComponent={\r\n                            handleDataFromSecondComponent\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 5}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      <div>\r\n                        <div\r\n                          style={{\r\n                            paddingBottom: \"20px\",\r\n                            backgroundColor: \"white\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"template-demo\"\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <div style={{ marginRight: \"10px\" }}>\r\n                              <img\r\n                                src={refrencImg}\r\n                                style={{ width: \"60px\", height: \"60px\" }}\r\n                              />\r\n                            </div>\r\n                            <div\r\n                              className=\"template-demo\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                              }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  marginRight: \"10px\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                              >\r\n                                <form onSubmit={handleSubmit} className=\"row\">\r\n                                  <div className=\"col-sm-10 text-center\">\r\n                                    <input\r\n                                      type=\"file\"\r\n                                      ref={fileInputRef}\r\n                                      style={{ display: \"none\" }}\r\n                                      multiple\r\n                                      onChange={handleImageChange}\r\n                                      className=\"form-control form-control-lg\"\r\n                                      id=\"formFileMultiple\"\r\n                                    />\r\n                                    <button\r\n                                      onClick={handleButtonClick}\r\n                                      type=\"submit\"\r\n                                      className=\"btn Refbtl\"\r\n                                    >\r\n                                      + Add Attachment\r\n                                    </button>\r\n                                  </div>\r\n                                </form>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-hover mt-2 col-sm-12 astFimg\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>Image</th>\r\n                                <th>File Name</th>\r\n                                <th>Audit User</th>\r\n                                <th>Audit Date</th>\r\n                                <th>Action</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {RefImg !== \"\" &&\r\n                                RefImg !== null &&\r\n                                RefImg.map((item, index) => (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      {item.file_name\r\n                                        .toLowerCase()\r\n                                        .endsWith(\".pdf\") ? (\r\n                                        <FontAwesomeIcon\r\n                                          icon={faFilePdf}\r\n                                          onClick={() =>\r\n                                            openPDFInNewTab(item.attachment)\r\n                                          }\r\n                                          style={{\r\n                                            width: \"50px\",\r\n                                            height: \"50px\",\r\n                                          }}\r\n                                          className=\"fntpdf\"\r\n                                        />\r\n                                      ) : (\r\n                                        <img\r\n                                          key={index}\r\n                                          src={\r\n                                            RefImg[0].attachment\r\n                                              ? `${httpCommon.defaults.baseURL}${RefImg[0].attachment}`\r\n                                              : \"\"\r\n                                          }\r\n                                          style={{\r\n                                            width: \"60px\",\r\n                                            height: \"60px\",\r\n                                          }}\r\n                                          onClick={() => handleShowdata(item)}\r\n                                        />\r\n                                      )}\r\n                                    </td>\r\n\r\n                                    <td>{item.file_name}</td>\r\n                                    <td>{item.audit_user}</td>\r\n                                    <td>\r\n                                      {new Date(\r\n                                        item.audit_date.date\r\n                                      ).toLocaleString(\"en-US\", {\r\n                                        year: \"numeric\",\r\n                                        month: \"2-digit\",\r\n                                        day: \"2-digit\",\r\n                                        hour: \"2-digit\",\r\n                                        minute: \"2-digit\",\r\n                                        second: \"2-digit\",\r\n                                        // Show milliseconds with 3 digits\r\n                                      })}\r\n                                    </td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={() =>\r\n                                          handleDeleteReferenceApi(item.RowID)\r\n                                        }\r\n                                        className=\"btn multiplsimg\"\r\n                                      >\r\n                                        <Iconify\r\n                                          icon=\"fluent:delete-48-filled\"\r\n                                          style={{ fontSize: \"24px\" }}\r\n                                        />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                ))}\r\n\r\n                              {selectedImages.map((image, index) =>\r\n                                image && index === undefined ? (\r\n                                  <tr>\r\n                                    <td>\r\n                                      <img\r\n                                        src={\r\n                                          RefImg[0].attachment\r\n                                            ? `${httpCommon.defaults.baseURL}${RefImg[0].attachment}`\r\n                                            : \"\"\r\n                                        }\r\n                                        style={{\r\n                                          width: \"60px\",\r\n                                          height: \"60px\",\r\n                                        }}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                ) : image.name\r\n                                    .toLowerCase()\r\n                                    .endsWith(\".pdf\") ? (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <FontAwesomeIcon\r\n                                        icon={faFilePdf}\r\n                                        style={{\r\n                                          width: \"50px\",\r\n                                          height: \"50px\",\r\n                                        }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>{image.name}</td>\r\n                                    <td>Admin</td>\r\n                                    <td>{new Date().toLocaleString() + \"\"}</td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          handleDeleteImg(index);\r\n                                        }}\r\n                                      >\r\n                                        <Iconify icon=\"carbon:close-outline\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                ) : (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <img\r\n                                        key={index}\r\n                                        src={URL.createObjectURL(image)}\r\n                                        alt=\"Uploaded image\"\r\n                                        onClick={(e) => handleShowdd(e, image)}\r\n                                      />\r\n                                    </td>\r\n                                    <td>{image.name}</td>\r\n                                    <td>Admin</td>\r\n                                    <td>{new Date().toLocaleString() + \"\"}</td>\r\n\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          handleDeleteImg(index);\r\n                                        }}\r\n                                      >\r\n                                        <Iconify icon=\"carbon:close-outline\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                )\r\n                              )}\r\n                            </tbody>\r\n\r\n                            {isMyStateEmpty ? (\r\n                              <BootstrapDialog\r\n                                onClose={handleClosedd}\r\n                                aria-labelledby=\"customized-dialog-title\"\r\n                                open={showdd}\r\n                              >\r\n                                <IconButton\r\n                                  aria-label=\"close\"\r\n                                  onClick={handleClosedd}\r\n                                  sx={{\r\n                                    position: \"absolute\",\r\n                                    right: 8,\r\n                                    top: 8,\r\n                                    color: (theme) => theme.palette.grey[500],\r\n                                  }}\r\n                                >\r\n                                  <Iconify\r\n                                    icon=\"carbon:close-outline\"\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                  />\r\n                                </IconButton>\r\n                                <DialogContent dividers>\r\n                                  <Typography gutterBottom>\r\n                                    {console.log(\r\n                                      \"selectedImage____\",\r\n                                      selectedImage\r\n                                    )}\r\n                                    <img\r\n                                      // src={selectedImage}\r\n                                      src={\r\n                                        selectedImage\r\n                                          ? `${httpCommon.defaults.baseURL}${selectedImage}`\r\n                                          : \"\"\r\n                                      }\r\n                                      style={{ width: \"100%\", height: \"auto\" }}\r\n                                    />\r\n                                  </Typography>\r\n                                </DialogContent>\r\n                              </BootstrapDialog>\r\n                            ) : (\r\n                              <BootstrapDialog\r\n                                onClose={handleClosedd}\r\n                                aria-labelledby=\"customized-dialog-title\"\r\n                                open={showdd}\r\n                              >\r\n                                <IconButton\r\n                                  aria-label=\"close\"\r\n                                  onClick={handleClosedd}\r\n                                  sx={{\r\n                                    position: \"absolute\",\r\n                                    right: 8,\r\n                                    top: 8,\r\n                                    color: (theme) => theme.palette.grey[500],\r\n                                  }}\r\n                                >\r\n                                  <Iconify icon=\"carbon:close-outline\" />\r\n                                </IconButton>\r\n                                <DialogContent dividers>\r\n                                  <Typography gutterBottom>\r\n                                    <img\r\n                                      style={{ height: \"100%\", width: \"100%\" }}\r\n                                      src={URL.createObjectURL(handalImg)}\r\n                                      alt=\"Uploaded image\"\r\n                                    />\r\n                                  </Typography>\r\n                                </DialogContent>\r\n                              </BootstrapDialog>\r\n                            )}\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 6}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    ></Box>\r\n                    <Grid\r\n                      container\r\n                      xs={12}\r\n                      md={12}\r\n                      justifyContent=\"flex-end\"\r\n                      style={{ paddingRight: \"20px\", marginTop: \"20px\" }}\r\n                    >\r\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          // href={paths.dashboard.work.neworder}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                          onClick={onClickChange}\r\n                          disabled={\r\n                            (completeRowID !== undefined &&\r\n                              completeRowID !== \"\" &&\r\n                              completeRowID !== null) ||\r\n                            (selected_Status &&\r\n                              selected_Status.label === \"CLO : CLOSED\")\r\n                          }\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          onClick={onClickCancel}\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    </Grid>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n              {/* Asset model popup */}\r\n              <BootstrapDialog\r\n                onClose={handleCloseModal}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={modalOpenAsset}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Select Asset No\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleCloseModal}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div className=\"TblSelect\">\r\n                    <WorkOrderAssetNo\r\n                      onRowClick={handleRowData2}\r\n                      onChangePage={handleRowDataPagechg}\r\n                      onSearchChange={handelRowSearch}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span class=\"TotlFont\">\r\n                      {TotalSearch\r\n                        ? // Content to render if condition1 is true\r\n                          TotalSearch\r\n                        : viewedTotlRows\r\n                        ? // Content to render if condition2 is true\r\n                          TotalAssetNo - viewedTotlRows\r\n                        : TotalAssetNo\r\n                        ? // Content to render if condition3 is true\r\n                          TotalAssetNo\r\n                        : // Content to render if none of the conditions are true\r\n                          0}\r\n                      &nbsp;Asset\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"mlauto\">\r\n                    <Button variant=\"primary\" onClick={handleCloseModal}>\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </BootstrapDialog>\r\n              {/* Asset model popup end*/}\r\n              {/******************** Status Details ********************/}\r\n              <div>\r\n                <BootstrapDialog\r\n                  onClose={StatushandleClose}\r\n                  aria-labelledby=\"customized-dialog-title\"\r\n                  open={StatusShow}\r\n                  maxWidth=\"lg\"\r\n                  fullWidth\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2 }}\r\n                    id=\"customized-dialog-title\"\r\n                    className=\"dailogTitWork\"\r\n                  >\r\n                    Work Order Status Audit\r\n                  </DialogTitle>\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={StatushandleClose}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      right: 8,\r\n                      top: 8,\r\n                      color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                  >\r\n                    <Iconify icon=\"material-symbols:close\" />\r\n                  </IconButton>\r\n                  <DialogContent dividers>\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        maxWidth: \"600px\",\r\n                        marginLeft: \"110px\",\r\n                        marginTop: \"-30px\",\r\n                      }}\r\n                    >\r\n                      {console.log(\"steps_____\",steps)}\r\n                      <StepContainer>\r\n                        {steps.map(\r\n                          ({\r\n                            step,\r\n                            label,\r\n                            label1,\r\n                            label2,\r\n                            label3,\r\n                            label4,\r\n                            label5,\r\n                            label6,\r\n                            \r\n                          }) => (\r\n                            <div\r\n                              key={step}\r\n                              style={{ position: \"relative\", zIndex: 1 }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  fontSize: \"11px\",\r\n                                  color: \"grey\",\r\n                                  position: \"absolute\",\r\n                                  left: \"-81px\",\r\n                                  top: \"45px\",\r\n                                  width: \"80px\",\r\n                                  height: \"20px\",\r\n                                  borderRadius: \"5%\",\r\n                                  textAlign: \"right\",\r\n                                }}\r\n                              >\r\n                                {label5}\r\n                              </div>\r\n                              <div\r\n                                step={step}\r\n                                style={{\r\n                                  width: \"30px\",\r\n                                  height: \"30px\",\r\n                                  borderRadius: \"50%\",\r\n                                  backgroundColor: \"#4694d1\",\r\n                                  border: `3px solid ${\r\n                                    step === \"completed\" ? \"#0080FF\" : \"#F3E7F3\"\r\n                                  }`,\r\n                                  transition: \"0.4s ease\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  style={{ fontSize: \"15px\", color: \"#f3e7f3\" }}\r\n                                >\r\n                                  {step}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"15px\", color: \"#4a154b\" }}\r\n                                >\r\n                                  {label6} ({label1})\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"11px\", color: \"grey\" }}\r\n                                >\r\n                                  Status Update By: {label2} ({label3})\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"11px\", color: \"grey\" }}\r\n                                >\r\n                                  On Start Date: {label4}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                      </StepContainer>\r\n                    </div>\r\n                  </DialogContent>\r\n                </BootstrapDialog>\r\n              </div>\r\n              {/********************* Assign To  *************************/}\r\n\r\n              <div>\r\n                <BootstrapDialog\r\n                  onClose={AssignStatushandleClose}\r\n                  aria-labelledby=\"customized-dialog-title\"\r\n                  open={AssignStatusShow}\r\n                  maxWidth=\"lg\"\r\n                  fullWidth\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2 }}\r\n                    id=\"customized-dialog-title\"\r\n                    className=\"dailogTitWork\"\r\n                  >\r\n                    Assign History\r\n                  </DialogTitle>\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={AssignStatushandleClose}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      right: 8,\r\n                      top: 8,\r\n                      color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                  >\r\n                    <Iconify icon=\"material-symbols:close\" />\r\n                  </IconButton>\r\n                  <DialogContent dividers>\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        maxWidth: \"600px\",\r\n                        marginLeft: \"110px\",\r\n                        marginTop: \"-30px\",\r\n                      }}\r\n                    >\r\n                      <StepContainer>\r\n                        {AssignStatusToOther.map(\r\n                          ({\r\n                            step,\r\n                            label,\r\n                            label1,\r\n                            label2,\r\n                            label3,\r\n                            label4,\r\n                            label5,\r\n                          }) => (\r\n                            <div\r\n                              key={step}\r\n                              style={{ position: \"relative\", zIndex: 1 }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  fontSize: \"11px\",\r\n                                  color: \"grey\",\r\n                                  position: \"absolute\",\r\n                                  left: \"-90px\",\r\n                                  top: \"0px\",\r\n                                  width: \"80px\",\r\n                                  height: \"20px\",\r\n                                  borderRadius: \"5%\",\r\n                                  textAlign: \"right\",\r\n                                }}\r\n                              >\r\n                                {label4}\r\n                              </div>\r\n                              <div\r\n                                step={step}\r\n                                style={{\r\n                                  width: \"30px\",\r\n                                  height: \"30px\",\r\n                                  borderRadius: \"50%\",\r\n                                  backgroundColor: \"#4694d1\",\r\n                                  border: `3px solid ${\r\n                                    step === \"completed\" ? \"#0080FF\" : \"#F3E7F3\"\r\n                                  }`,\r\n                                  transition: \"0.4s ease\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  style={{ fontSize: \"15px\", color: \"#f3e7f3\" }}\r\n                                >\r\n                                  {step}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"15px\", color: \"#4a154b\" }}\r\n                                >\r\n                                  {label}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"grey\",\r\n                                    fontWeight: \"600\",\r\n                                  }}\r\n                                >\r\n                                  {label1}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                      </StepContainer>\r\n                    </div>\r\n                  </DialogContent>\r\n                </BootstrapDialog>\r\n              </div>\r\n              {/******************** Comments add Details ********************/}\r\n              <BootstrapDialog\r\n                onClose={CommenthandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={CommentShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{\r\n                    m: 0,\r\n                    p: 2,\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <Iconify\r\n                      icon=\"quill:chat\"\r\n                      style={{\r\n                        fontSize: \"24px\",\r\n                        verticalAlign: \"middle\",\r\n                        marginRight: \"5px\",\r\n                      }}\r\n                    />\r\n                    <span style={{ fontSize: \"16px\", verticalAlign: \"middle\" }}>\r\n                      Work Order Comment\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n                    <IconButton\r\n                      aria-label=\"close\"\r\n                      onClick={Refreshdatapopup}\r\n                      sx={{\r\n                        color: (theme) => theme.palette.grey[500],\r\n                      }}\r\n                    >\r\n                      <Iconify icon=\"tabler:refresh\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"close\"\r\n                      onClick={CommenthandleClose}\r\n                      sx={{\r\n                        color: (theme) => theme.palette.grey[500],\r\n                      }}\r\n                    >\r\n                      <Iconify icon=\"ic:baseline-close\" />\r\n                    </IconButton>\r\n                  </div>\r\n                </DialogTitle>\r\n\r\n                <DialogContent dividers>\r\n                  <div className=\"chat-container\">\r\n                    <div className=\"menud\" ref={chatContainerRef}>\r\n                      <ol className=\"chatd\">\r\n                        {loading ? (\r\n                          <li>Loading...</li>\r\n                        ) : (\r\n                          AllCommnet.map((item, index) => (\r\n                            <li\r\n                              key={index}\r\n                              className={`messagedd ${\r\n                                item.wko_ls11_name === emp_mst_name\r\n                                  ? \"self2\"\r\n                                  : \"other2\"\r\n                              }`}\r\n                            >\r\n                              <div\r\n                                className={`avatar2 ${\r\n                                  item.wko_ls11_name === emp_mst_name\r\n                                    ? \"top-left\"\r\n                                    : \"bottom-right\"\r\n                                }`}\r\n                              >\r\n                                <span>\r\n                                  {item.wko_ls11_name\r\n                                    ? item.wko_ls11_name.charAt(0)\r\n                                    : \"?\"}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"msg2\">\r\n                                <div className=\"msfcls\">\r\n                                  <p className=\"usrName\">\r\n                                    <span>{item.wko_ls11_name}</span>\r\n                                  </p>\r\n                                  <p className=\"msgP\">\r\n                                    {Moment(item.audit_date.date).format(\r\n                                      \"DD/MM/YYYY HH:mm\"\r\n                                    )}\r\n                                  </p>\r\n                                  {item.full_size_link ? (\r\n                                    <img\r\n                                      src={item.full_size_link}\r\n                                      alt=\"Comment Img\"\r\n                                      style={{\r\n                                        maxWidth: \"100px\",\r\n                                        maxHeight: \"100px\",\r\n                                        marginBottom: \"10px\",\r\n                                        marginTop: \"5px\",\r\n                                      }}\r\n                                    />\r\n                                  ) : item.attachment ? (\r\n                                    <img\r\n                                      src={`data:image/png;base64,${item.attachment}`}\r\n                                      alt=\"Comment Img\"\r\n                                      style={{\r\n                                        maxWidth: \"100px\",\r\n                                        maxHeight: \"100px\",\r\n                                        marginBottom: \"10px\",\r\n                                        marginTop: \"5px\",\r\n                                      }}\r\n                                    />\r\n                                  ) : null}\r\n\r\n                                  <p className=\"commentTxt\">\r\n                                    {item.wko_ls11_sts_upd && (\r\n                                      <p>{item.wko_ls11_sts_upd}</p>\r\n                                    )}\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          ))\r\n                        )}\r\n                      </ol>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                      <label htmlFor=\"file-upload\" className=\"upload-icon\">\r\n                        <Iconify icon=\"fa:camera\" />\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"file-upload\"\r\n                        ref={fileInputRef2}\r\n                        style={{ display: \"none\" }}\r\n                        onChange={handleImageChange2}\r\n                      />\r\n\r\n                      {imagePreview && (\r\n                        <div\r\n                          style={{\r\n                            position: \"relative\",\r\n                            display: \"inline-block\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={imagePreview}\r\n                            alt=\"Uploaded Preview\"\r\n                            style={{\r\n                              width: \"50px\",\r\n                              height: \"50px\",\r\n                              borderRadius: \"50px\",\r\n                              marginRight: \"5px\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={handleImageClickSHow}\r\n                          />\r\n\r\n                          {/* Close icon */}\r\n                          <div\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: \"0\",\r\n                              right: \"0\",\r\n                              cursor: \"pointer\",\r\n                              padding: \"1px\",\r\n                              background: \"rgba(255, 255, 255, 0.7)\",\r\n                              borderRadius: \"50%\",\r\n                              width: \"21px\",\r\n                              height: \"22px\",\r\n                            }}\r\n                            onClick={handleUploadCloseClick}\r\n                          >\r\n                            <Iconify icon=\"carbon:close-outline\" />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"text_input\"\r\n                        placeholder=\"Comment...\"\r\n                        disabled={!!imagePreview}\r\n                        ref={messageRef}\r\n                      />\r\n                      {selectedImage && (\r\n                        <div className=\"upImgCntr\">\r\n                          <img\r\n                            src={`data:image/png;base64,${selectedImage}`}\r\n                            alt=\"Selected Image\"\r\n                            style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"submit-button\"\r\n                        onClick={handleSubmitCmmnt}\r\n                      >\r\n                        <Iconify icon=\"fa:send\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n              {/* single Upload Img Show */}\r\n              <BootstrapDialog\r\n                onClose={UploadImghandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={uploadImgShow}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Selected Image\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={UploadImghandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={imagePreview}\r\n                      alt=\"upload_img\"\r\n                      style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n              <div className=\"AssetFromSnackbar\">\r\n                <Snackbar\r\n                  open={snackbarOpen}\r\n                  autoHideDuration={null}\r\n                  onClose={handleCloseSnackbar}\r\n                  anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                  // sx={{\r\n                  //   boxShadow: '0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05)'\r\n                  // }}\r\n                  sx={{\r\n                    boxShadow:\r\n                      \"0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05)\",\r\n                    \"& .MuiAlert-filledError\": {\r\n                      backgroundColor: \"#fff\",\r\n                      color: \"#000\",\r\n                      fontWeight: \"600\",\r\n                      position: \"relative\",\r\n                      animation: snackbarOpen\r\n                        ? \"bounce-in 0.5s ease-out\"\r\n                        : \"none\", // Apply bouncing animation conditionally\r\n                    },\r\n                  }}\r\n                >\r\n                  <Alert\r\n                    onClose={handleCloseSnackbar}\r\n                    severity=\"error\"\r\n                    variant=\"filled\"\r\n                    // sx={{ backgroundColor: '#fff', color: '#000', fontWeight: '600', position: 'relative' }}\r\n                    sx={{\r\n                      \"@keyframes bounce-in\": {\r\n                        \"0%\": { transform: \"scale(0.9)\" },\r\n                        \"50%\": { transform: \"scale(1.05)\" },\r\n                        \"100%\": { transform: \"scale(1)\" },\r\n                      },\r\n                    }}\r\n                  >\r\n                    {snackbarMessage}\r\n\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={snackbarOpen ? 100 - progress : 0}\r\n                      style={{\r\n                        width: \"99%\",\r\n                        position: \"absolute\",\r\n                        bottom: \"0\",\r\n                        marginLeft: \"-50px\",\r\n                      }}\r\n                      sx={{\r\n                        \"& .MuiLinearProgress-bar\": {\r\n                          backgroundColor: \"green\", // Change the color here\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Alert>\r\n                </Snackbar>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nWordOrderNewForm.propTypes = {\r\n  currentUser: PropTypes.object,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Swal from \"sweetalert2\";\r\nimport MaterialTable from \"material-table\";\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst WorkOrderAssetNo = ({ onRowClick, onChangePage, onSearchChange }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [data, setData] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(null);\r\n  const startTime = window.performance.now();\r\n  const [viewedRows, setViewedRows] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    httpCommon\r\n      .get(\"/get_AssetWorkOrderStatus.php?site_cd=\" + site_ID)\r\n      .then((response) => {\r\n        //console.log(\"response__NET\", response);\r\n        const endTime = window.performance.now();\r\n        const loadTime = endTime - startTime;\r\n        console.log(`API load time: ${loadTime} milliseconds`);\r\n        Swal.close();\r\n        //setData(response.data.data.result);\r\n        setData(response.data.data.WorkAssetNo);\r\n        onRowClick(response.data.data.WorkAssetNo.length);\r\n        // setTotalData(response.data.data.WorkAssetNo.length);\r\n        const endTime2 = window.performance.now();\r\n        const loadTime2 = endTime2 - startTime;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //Table colums\r\n  const columns = [\r\n    {\r\n      title: \"Asset No\",\r\n      field: \"ast_mst_asset_no\",\r\n      render: (rowData) => renderIcon(rowData),\r\n    },\r\n    { title: \"Short Description\", field: \"ast_mst_asset_shortdesc\" },\r\n    { title: \"Asset Status\", field: \"ast_mst_asset_status\" },\r\n    { title: \"Asset Location\", field: \"ast_mst_work_area\" },\r\n  ];\r\n\r\n  const renderIcon = (rowData) => {\r\n    if (rowData.ast_mst_asset_no === selectedRowKeys) {\r\n      return (\r\n        <div>\r\n          <Iconify\r\n            icon=\"mingcute:save-fill\"\r\n            style={{\r\n              marginRight: \"0px\",\r\n              marginTop: \"2px\",\r\n              float: \"left\",\r\n              fontSize: \"16px\",\r\n              color: \"#289e49\",\r\n            }}\r\n          />\r\n          {rowData.ast_mst_asset_no}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{rowData.ast_mst_asset_no}</div>;\r\n  };\r\n  const handleRowClick = (event, rowData) => {\r\n    if (selectedRowKeys && selectedRowKeys === rowData.ast_mst_asset_no) {\r\n      onRowClick(data.length, rowData.ast_mst_asset_no+' : '+rowData.ast_mst_asset_shortdesc, 1);\r\n    }\r\n    setSelectedRowKeys(rowData.ast_mst_asset_no);\r\n    onRowClick(data.length, rowData.ast_mst_asset_no+' : '+rowData.ast_mst_asset_shortdesc);\r\n  };\r\n  const handlePageChange = (page) => {\r\n    const pageSize = 10; // Assuming each page displays 10 rows\r\n    const viewedRowsCount = page * pageSize;\r\n    setViewedRows(viewedRowsCount);\r\n    onChangePage(viewedRowsCount);\r\n  };\r\n\r\n  const handleSearch = (searchText) => {\r\n    // Filter the data based on the search text\r\n    const filteredData = data.filter(\r\n      (item) =>\r\n        item.ast_mst_asset_no\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.ast_mst_asset_shortdesc\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.ast_mst_asset_status\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.ast_mst_work_area.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n\r\n    // setData(filteredData);\r\n    //setSearchedDataCount(filteredData.length);\r\n    onSearchChange(filteredData.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"container Ordertbl\">\r\n          <MaterialTable\r\n            title=\"\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              pageSize: 10,\r\n              pageSizeOptions: false,\r\n              overflowY: \"auto\",\r\n              paginationPosition: \"top\",\r\n              toolbarButtonAlignment: \"right\",\r\n              paginationType: \"normal\",\r\n              rowStyle: (rowData) => ({\r\n                backgroundColor:\r\n                  rowData.ast_mst_asset_no === selectedRowKeys\r\n                    ? \"#a9ebb9\"\r\n                    : \"#FFF\",\r\n                fontSize: \"12px !important\",\r\n              }),\r\n            }}\r\n            onRowClick={handleRowClick}\r\n            onChangePage={handlePageChange}\r\n            onSearchChange={(searchText) => handleSearch(searchText)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkOrderAssetNo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport MaterialTable from \"material-table\";\r\nimport httpCommon from \"src/http-common\";\r\nimport Iconify from \"src/components/iconify\";\r\n\r\nconst WorkStockNoPopupData = ({ onRowClick }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [data, setData] = useState([]);\r\n  const [totalData, setTotalData] = useState(0);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(null);\r\n  const [viewedRows, setViewedRows] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    httpCommon\r\n      .get(\"/get_stock_no_popup_data.php?site_cd=\" + site_ID)\r\n      .then((response) => {\r\n        //console.log(\"response__NET\", response);\r\n        Swal.close();\r\n        setData(response.data.data);\r\n        setTotalData(response.data.data.length);\r\n        // onRowClick(response.data.data.WorkAssetNo.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //Table colums\r\n  const columns = [\r\n    {\r\n      title: \"Stock No\",\r\n      field: \"itm_mst_stockno\",\r\n      cellStyle: {\r\n        width: '60px', // Set the width as per your requirement\r\n      },\r\n      render: (rowData) => renderIcon(rowData),\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      field: \"itm_mst_desc\",\r\n      cellStyle: {\r\n        width: '350px', // Set the width as per your requirement\r\n      },\r\n      render: (rowData) =>\r\n        rowData.itm_mst_desc.length > 40\r\n          ? `${rowData.itm_mst_desc.substring(0, 40)}...`\r\n          : rowData.itm_mst_desc,\r\n    },\r\n    { title: \"Extended Description\", field: \"itm_mst_ext_desc\", cellStyle: {\r\n        width: '250px', // Set the width as per your requirement\r\n      },},\r\n    { title: \"Part No\", field: \"itm_mst_partno\" },\r\n    { title: \"Total OH\", field: \"itm_mst_ttl_oh\" },\r\n    { title: \"Type\", field: \"itm_mst_type\" },\r\n    { title: \"Commodity Code\", field: \"itm_mst_com_code\", cellStyle: {\r\n        width: '250px', // Set the width as per your requirement\r\n      }, },\r\n    { title: \"Stock Group\", field: \"itm_mst_itm_grp\",cellStyle: {\r\n        width: '200px', // Set the width as per your requirement\r\n      }, },\r\n  ];\r\n\r\n  const renderIcon = (rowData) => {\r\n    if (rowData.itm_mst_stockno === selectedRowKeys) {\r\n      return (\r\n        <div>\r\n          <Iconify\r\n            icon=\"simple-line-icons:check\"\r\n            style={{\r\n              marginRight: \"0px\",\r\n              marginTop: \"2px\",\r\n              float: \"left\",\r\n              fontSize: \"16px\",\r\n              color: \"#289e49\",\r\n            }}\r\n          />\r\n\r\n          {rowData.itm_mst_stockno}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{rowData.itm_mst_stockno}</div>;\r\n  };\r\n  const handleRowClick = (event, rowData) => {\r\n    if (selectedRowKeys && selectedRowKeys === rowData.itm_mst_stockno) {\r\n      onRowClick(rowData.itm_mst_stockno, rowData.itm_mst_desc, 1);\r\n    }\r\n    setSelectedRowKeys(rowData.itm_mst_stockno);\r\n    onRowClick(rowData.itm_mst_stockno, rowData.itm_mst_desc);\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"container Ordertbl\">\r\n          <MaterialTable\r\n            title=\"\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              pageSize:10,\r\n              pageSizeOptions: false,\r\n              overflowY: \"auto\",\r\n              paginationPosition: \"top\",\r\n              toolbarButtonAlignment: \"right\",\r\n              paginationType: \"normal\",\r\n              rowStyle: (rowData) => ({\r\n                backgroundColor:\r\n                  rowData.itm_mst_stockno === selectedRowKeys\r\n                    ? \"#a9ebb9\"\r\n                    : \"#FFF\",\r\n                fontSize: \"12px !important\",\r\n              }),\r\n            }}\r\n            onRowClick={handleRowClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkStockNoPopupData;\r\n"],"names":["MySwal","withReactContent","Swal","_ref","data","onDataFromSecondComponent","site_ID","localStorage","getItem","emp_owner","RowID","Asset_No","WorkOrderNo","location","useLocation","Header","setHeader","React","Result","setResult","show","setShow","useState","showModal","setShowModal","EmployeeID","setEmployeeID","selected_EmployeeID","setSelected_EmployeeID","Craft","setCraft","selected_Craft","setSelected_Craft","TimeCardDate","setTimeCardDate","Date","EndTimeCardDate","setEndTimeCardDate","HourType","setHourType","selected_HourType","setSelected_HourType","ActualHour","setActualHour","ChargeCostCenter","setChargeCostCenter","selected_ChargeCostCenter","setSelected_ChargeCostCenter","ChargeAccount","setChargeAccount","selected_ChargeAccount","setSelected_ChargeAccount","CreditCostCenter","setCreditCostCenter","selected_CreditCostCenter","setSelected_CreditCostCenter","EmpDropData","setEmpDropData","CreditAccount","setCreditAccount","selected_CreditAccount","setSelected_CreditAccount","Button_save","setButton_save","RowID2","setRowID2","AssetNo","setAssetNo","Rate","setRate","Multiplier","setMultiplier","Adder","setAdder","ActualCost","setActualCost","TimeCardNo","setTimeCardNo","isEmpNoEmpty","setIsEmpEmpty","get_workordermaster_timecard","async","response","httpCommon","get","concat","status","header","result","icon","title","text","message","error","console","useEffect","get_workorder_status","type","allowOutsideClick","customClass","container","Employee_List_Supervisor_Id","map","item","label","emp_mst_empl_id","emp_mst_name","value","Employee_Primary_Craft","crf_mst_crf_cd","crf_mst_desc","HoursType","hours_type_cd","CostCenter","costcenter","descs","account","formatDate","dateObject","date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","totalQty","reduce","acc","parseFloat","wko_ls8_hrs","totalCost","wko_ls8_act_cost","handleClose","calculateActualHours","startDate","endDate","toFixed","_jsx","_Fragment","children","className","_jsxs","style","borderRadius","boxShadow","paddingBottom","backgroundColor","display","alignItems","marginRight","src","logo","width","height","flexDirection","fontWeight","color","TableContainer","component","Paper","Table","TableHead","TableRow","renderTableHeader","cellStyle","whiteSpace","overflow","textOverflow","TableCell","Object","keys","attr","TableBody","index","padding","textAlign","wko_ls8_assetno","split","wko_ls8_empl_id","wko_ls8_craft","wko_ls8_datetime1","wko_ls8_datetime2","wko_ls8_hours_type","wko_ls8_rate","wko_ls8_multiplier","wko_ls8_adder","wko_ls8_chg_costcenter","wko_ls8_chg_account","wko_ls8_crd_costcenter","wko_ls8_crd_account","wko_ls8_time_card_no","Dialog","onClose","open","maxWidth","fullWidth","disableBackdropClick","sx","marginLeft","marginTop","DialogTitle","m","p","id","IconButton","onClick","position","right","top","theme","palette","grey","Iconify","DialogContent","dividers","Grid","spacing","xs","md","Autocomplete","options","onChange","event","labelParts","beforeColonValue","length","log","emp_ls1_craft","rate","emp_ls1_charge_rate","handleEmployeeIDChange","renderInput","params","TextField","size","placeholder","variant","DateTimePicker","format","fontSize","newDate","slotProps","textField","hours_type_adder","hours_type_multiplier","start","end","msDiff","differenceInMilliseconds","differenceInDays","Math","floor","Min","act_hour","r","a","handleHourTypeChange","disabled","e","target","DialogActions","justifyContent","Button","preventDefault","fire","popup","html","showConfirmButton","timer","backdrop","selectedHourType","EmptyAsset","trim","date_1","Moment","date_2","json_workorderTimeCart","site_cd","wko_mst_wo_no","mst_RowID","assetno","selectedEmployeeID","selectedCraft","auditUser","post","JSON","stringify","handleSubmitTimecard","handleShow","onRowClick","emp_mst_login_id","MaterialOrderResult","setMaterialOrderResult","StockNo","setStockNo","selected_StockNo","setSelected_StockNo","StockLocation","setStockLocation","selected_StockLocation","setSelected_StockLocation","Description","setDescription","QtyNeeded","setQtyNeeded","setRowID","setWorkOrderNo","selected_Charge_Cost_Center","setselected_Charge_Cost_Center","UOM","setUOM","ItemCost","setItemCost","MaterialRequestNo","setMaterialRequestNo","MrLineNo","setMrLineNo","MrApprovalStatus","setMrApprovalStatus","ActualQuantity","setActualQuantity","ContractPoNo","setContractPoNo","ContractPoLine","setContractPoLine","getStockNo","setGetStockNo","modalOpenAsset","setModalOpenAsset","modalRowDt","setmodalRowDt","get_workordermaster_material","handleRowClick","wko_ls2_assetno","wko_ls2_stockno","wko_ls2_stk_locn","wko_ls2_desc","wko_ls2_chg_costcenter","wko_ls2_chg_account","wko_ls2_qty_needed","wko_ls2_mtl_uom","wko_ls2_item_cost","wko_ls2_mr_no","wko_ls2_mr_lineno","mtr_mst_status","mtr_ls1_rcv_qty","wko_ls2_po_no","wko_ls2_po_lineno","CustomTextField","_ref2","rightIcons","props","InputProps","endAdornment","inputFields","setInputFields","mtr_mst_wo_no","mtr_mst_assetno","selectStock","selectStockLocation","selectChargeCostCenter","selectChargeAccount","removeInputFields","rows","undefined","splice","updatedInputFields","field","handleEditClick","handleCloseModal2","handleCancelClick","handleChange","fieldName","list","handleClickChargeCostCenter","handleClickChargeAccount","WKO_Labor_Account","Typography","textDecoration","FontAwesomeIcon","faCircleXmark","WorkStockNoPopupData","rowData","RowDescp","secondRowData","itm_mst_desc","itm_mst_mstr_locn","stockDt","newData","DataLoction","Umo","itm_mst_issue_uom","Price","itm_det_issue_price","Cost_Center","handleRowPopupData","startIcon","newValue","onOpen","isValid","forEach","confirmButtonText","then","isConfirmed","resetData","Supplier","setSupplier","selected_Supplier","setSelected_Supplier","TaxCode","setTaxCode","selected_TaxCode","setSelected_TaxCode","selected_UOM","setSelected_UOM","setCostCenter","selected_CostCenter","setSelected_CostCenter","PrNo","setPrNo","PrLineNo","setPrLineNo","ApprovalStatus","setApprovalStatus","PoNo","setPoNo","PoLineNo","setPoLineNo","get_workordermaster_specialorder","wko_ls3_assetno","wko_ls3_rec_supplier","wko_ls3_descr","wko_ls3_tax_cd","wko_ls3_mtl_uom","wko_ls3_qty_needed","wko_ls3_item_cost","wko_ls3_chg_costcenter","wko_ls3_chg_account","wko_ls3_pr_no","wko_ls3_pr_lineno","pur_mst_purq_approve","pur_ls1_po_no","pur_ls1_po_lineno","wko_ls3_po_no","wko_ls3_po_lineno","selectedSupplier","selectedTaxCode","selectedUOM","selectedCostCenter","selectedChargeAccount","handleClickSupplier","SupplierGet","supplier","sup_mst_supplier_cd","sup_mst_desc","handleClickTaxCode","ItmTaxCodeGet","ITM_Tax_Code","tax_mst_tax_cd","tax_mst_desc","handleClickUOM","ItmUOMGet","ITM_Issue_UOM","uom_mst_uom","uom_mst_desc","handleClickCostCenter","ItmCostCenterGet","EstimateCost","setEstimateCost","Account","setAccount","selected_Account","setSelected_Account","PoLine","setPoLine","get_workordermaster_OutSource","wko_ls4_assetno","wko_ls4_supplier","wko_ls4_descr","wko_ls4_tax_cd","wko_ls4_svc_uom","wko_ls4_qty_needed","wko_ls4_est_cost","wko_ls4_chg_costcenter","wko_ls4_chg_account","wko_ls4_pr_no","wko_ls4_pr_lineno","wko_ls4_po_no","wko_ls4_po_lineno","inputProps","maxLength","MiscDate","setMiscDate","dayjs","get_workordermaster_Misc","wko_ls5_qty","wko_ls5_item_cost","wko_ls5_assetno","wko_ls5_desc","wko_ls5_date","substring","wko_ls5_uom","wko_ls5_est_amt","wko_ls5_costcenter","wko_ls5_account","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","handleDateChange","border","WorkOrderMaterial","WorkorderSpecial","WorkOrderOutsource","WorkOrderMisc","BootstrapDialog","styled","StepContainer","_templateObject","_taggedTemplateLiteral","WordOrderNewForm","_ref3","_selected_Cause_Code$","_selected_Action_Code","_selected_Cause_Code$2","_selected_Action_Code2","_selected_Originator$","_selected_Plan_Priori","_selected_Fault_Code$","_selected_Asset_Statu","_selected_Asset_Group","_selected_Project_ID$","_selected_Cause_Code$3","_selected_Action_Code3","_selected_Delay_Code$","_selected_Work_Type$l","_selected_Work_Class$","_selected_Supervisor_","_selected_Planner$lab","_selected_Approver$la","_selected_Original_Pe","_selected_Assign_To$l","_selected_Customer_Co","_selected_Credit_Cost","_selected_Labor_Accou","_selected_Contract_Ac","_selected_Material_Ac","_selected_Miscellaneo","currentUser","onPageChange","snackbarOpen","setSnackbarOpen","URLSearchParams","search","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","progress","setProgress","state","currentPage","selectedOption","completeRowID","closeRowID","loading","setLoading","wkoMstLabel","setWkoMstLabel","wkodetLabel","setWkoDetLabel","navigate","useNavigate","fileInputRef","useRef","settings","useSettingsContext","currentDate","selectedImages","setSelectedImages","toISOString","slice","selectedImages2","setSelectedImages2","selectedDate","setSelectedDate","selectedPdfFiles","setSelectedPdfFiles","RefImg","setRefImg","selectedImage","setSelectedImage","getDbImg","setDbImg","image","setImage","preview","raw","removedRefItems","setRemovedRefItems","disabledBtn","setDisabledBtn","imageSelect","setImageSelect","name","path","imguploadStatus","setImguploadStatus","imguploadRefStatus","setImguploadRefStatus","Tabvalue","setTabValue","showdd","setShowdd","handalImg","sethandalImg","handleClosedd","showdd2","setShowdd2","handleClosedd2","setAsset_No","TotalAssetNo","setTotalAssetNo","TotalSearch","setTotalSearch","viewedTotlRows","setViewedTotlRows","Status","setStatus","Plan_Priority","setPlan_Priority","selected_Project_ID","setSelected_Project_ID","selected_Plan_Priority","setSelected_Plan_Priority","Asset_Group_Code","setAsset_Group_Code","Fault_Code","setFault_Code","selected_Fault_Code","setSelected_Fault_Code","Asset_Status","setAsset_Status","Charge_Cost_Center","setCharge_Cost_Center","setSelected_Charge_Cost_Center","Supervisor_ID","setSupervisor_ID","Work_Group","setWork_Group","selected_Work_Group","setSelected_Work_Group","Asset_Level","setAsset_Level","selected_Asset_Level","setSelected_Asset_Level","Asset_Location","setAsset_Location","Cause_Code","setCause_Code","Action_Code","setAction_Code","Delay_Code","setDelay_Code","Work_Type","setWork_Type","Work_Class","setWork_Class","Original_Periority","setOriginal_Periority","Work_Area","setWork_Area","Originator","setOriginator","selected_Status","setSelected_Status","selected_Asset_Status","setSelected_Asset_Status","selected_Asset_Group_Code","setSelected_Asset_Group_Code","selected_Work_Area","setSelected_Work_Area","selected_Originator","setSelected_Originator","selected_Asset_Location","setSelected_Asset_Location","Phone","setPhone","OriginationDate","setOriginationDate","DueDate","setDueDate","CorrectiveAction","setCorrectiveAction","selected_Original_Periority","setSelected_Original_Periority","selected_Cause_Code","setSelected_Cause_Code","ScheduleDate","setScheduleDate","selected_Action_Code","setSelected_Action_Code","ExceptionDate","setExceptionDate","selected_Delay_Code","setSelected_Delay_Code","StatusChangeDate","setStatusChangeDate","Project_ID","setProject_ID","selected_Work_Type","setSelected_Work_Type","CompletionDate","setCompletionDate","CompletionDate2","setCompletionDate2","selected_Work_Class","setSelected_Work_Class","CloseDate","setCloseDate","CloseDate2","setCloseDate2","selected_Supervisor_ID","setSelected_Supervisor_ID","Planner","setPlanner","selected_Planner","setSelected_Planner","Approver","setApprover","selected_Approver","setSelected_Approver","Assign_To","setAssign_To","selected_Assign_To","setSelected_Assign_To","Permanent_ID","setPermanent_ID","Temporary_Asset","setTemporary_Asset","CheckBox_Temporary_Asset","setCheckBox_Temporary_Asset","Approved","setApproved","CheckBox_Approved","setCheckBox_Approved","Safety","setSafety","CheckBox_Safety","setCheckBox_Safety","Customer_Code","setCustomer_Code","selected_Customer_Code","setSelected_Customer_Code","Labor_Account","setLabor_Account","selected_Labor_Account","setSelected_Labor_Account","Material_Account","setMaterial_Account","selected_Material_Account","setSelected_Material_Account","Credit_Cost_Center","setCredit_Cost_Center","selected_Credit_Cost_Center","setSelected_Credit_Cost_Center","Contract_Account","setContract_Account","selected_Contract_Account","setSelected_Contract_Account","Miscellaneous_Account","setMiscellaneous_Account","selected_Miscellaneous_Account","setSelected_Miscellaneous_Account","Columns","setColumns","Data","setData","AutoNumring","setAutoNumring","UDFNote1","setUDFNote1","UDFText_1","setUDFText_1","UDFText_2","setUDFText_2","UDFText_3","setUDFText_3","UDFText_4","setUDFText_4","UDFText_5","setUDFText_5","UDFText_6","setUDFText_6","UDFText_7","setUDFText_7","UDFText_8","setUDFText_8","UDFText_9","setUDFText_9","UDFText_10","setUDFText_10","UDFNumber_1","setUDFNumber_1","UDFNumber_2","setUDFNumber_2","UDFNumber_3","setUDFNumber_3","UDFNumber_4","setUDFNumber_4","UDFNumber_5","setUDFNumber_5","UDFDate_1","setUDFDate_1","UDFDate_2","setUDFDate_2","UDFDate_3","setUDFDate_3","UDFDate_4","setUDFDate_4","UDFDate_5","setUDFDate_5","getDbImgRowId","setDbImgRowId","SpecialOdrResult","setSpecialOdrResult","steps","setsteps","StatushandleClose","setStatusShow","StatusShow","AssignStatusShow","setAssignStatusShow","AssignStatushandleClose","AssignStatusToOther","setAssignStatusOther","CommentShow","setCommentShow","CommenthandleClose","setMessage","imageComment","setimageComment","messageRef","AllCommnet","setAllComment","imagePreview","setImagePreview","fileInputRef2","selectedImageCommnt","setSelectedImageCommnt","uploadImgShow","setUploadImgShow","UploadImghandleClose","chatContainerRef","isFiledValueEmpty","setIsFiledValueEmpty","isAssetStatusEmpty","setIsAssetStatusEmpty","isFaultCodeEmpty","setIsFaultCodeEmpty","isOriginalPeriorityEmpty","setIsOriginalPeriorityEmpty","isWorkTypeEmpty","setIsWorkTypeEmpty","isWorkGroupEmpty","setIsWorkGroupEmpty","isAssetNoEmpty","setIsAssetNoEmpty","isCorrectiveValueEmpty","setIsCorrectiveValueEmpty","isCauseCodeValueEmpty","setIsCauseCodeValueEmpty","isActionCodeValueEmpty","setIsActionCodeValueEmpty","isOpenWork","setIsOpenWork","isOpenAsset","setIsOpenAsset","WorkOrderMandatoryFiled","setWorkOrderMandatoryFiled","errorField","setErrorField","isWorkOrderStatusEmpty","setIsWorkOrderStatusEmpty","isWorkDescEmpty","setIsWorkDescEmpty","isWorkOrderAssetNoEmpty","setisWorkOrderAssetNoEmpty","isChargeCostEmpty","setIsChargeCostEmpty","autocompleteRef","assetNoAutocompleteRef","faultCodeAutocompleteRef","get_workordermaster_select","getWorkOrderLebel","getWorkOrderMandatoryfiled","fetchStatusData","fetchStusPriortyData","fetchData","wko_mst","wko_det","MandatoryField","responseJson","wko_mst_assetno","wko_mst_status","wko_mst_asset_status","wko_mst_plan_priority","wko_mst_asset_group_code","wko_mst_chg_costcenter","wko_mst_work_area","wko_mst_originator","wko_mst_asset_level","wko_mst_phone","wko_mst_asset_location","wko_mst_flt_code","wko_mst_descs","wko_mst_org_date","apiDate","formattedDate","toDate","wko_mst_due_date","wko_det_corr_action","wko_mst_project_id","wko_mst_orig_priority","wko_det_cause_code","wko_det_sched_date","wko_det_act_code","wko_det_exc_date","wko_det_delay_cd","wko_det_sc_date","wko_det_work_type","wko_det_cmpl_date","wko_det_work_class","wko_det_clo_date","wko_det_work_grp","wko_det_supv_id","wko_det_planner","wko_det_approver","wko_det_assign_to","wko_det_perm_id","wko_det_temp_asset","wko_det_approved","wko_det_safety","wko_det_customer_cd","wko_det_laccount","wko_det_maccount","wko_det_crd_costcenter","wko_det_caccount","wko_det_saccount","wko_det_note1","wko_det_varchar1","wko_det_varchar2","wko_det_varchar3","wko_det_varchar4","wko_det_varchar5","wko_det_varchar6","wko_det_varchar7","wko_det_varchar8","wko_det_varchar9","wko_det_varchar10","wko_det_numeric1","wko_det_numeric2","wko_det_numeric3","wko_det_numeric4","wko_det_numeric5","wko_det_datetime1","wko_det_datetime2","wko_det_datetime3","wko_det_datetime4","wko_det_datetime5","fetchImgData","WorkStatus","wrk_sts_status","wrk_sts_desc","key","wrk_sts_typ_cd","completeStatus","find","closeStatus","PlanPeriority","wrk_pri_pri_cd","wrk_pri_desc","FaultCode","wrk_flt_fault_cd","wrk_flt_desc","AssetStatus","ast_sts_status","ast_sts_desc","AssetGroupCode","ast_grp_grp_cd","ast_grp_desc","WorkGroup","wrk_grp_grp_cd","wrk_grp_desc","AssetLevel","ast_lvl_ast_lvl","ast_lvl_desc","AssetLocation","ast_loc_ast_loc","ast_loc_desc","CasuseCode","wrk_ccd_cause_cd","wrk_ccd_desc","ActionCode","wrk_act_action_cd","wrk_act_desc","WKO_Delay_Code","wrk_dcd_delay_cd","wrk_dcd_desc","WorkType","wrk_typ_typ_cd","wrk_typ_desc","WorkPermitType","wrk_cls_cls_cd","wrk_cls_desc","OriginalPeriority","mst_war_work_area","mst_war_desc","dft_mst_wko_sts","dft_mst_wko_pri","AllImgGet","ImgStatus","file_name","attachment","AllRef","ImgStatusRef","openSaveImg","handleDeleteImgApi","ImgIDdlt","updatedImages","filter","handleImgChangeSingle","files","URL","createObjectURL","file","reader","FileReader","onloadend","readAsDataURL","handleClearImg","handleImgChangeSingle2","handleDeleteImg","s","isMyStateEmpty","constructor","findCustomizeLabel","columnName","matchingColumn","column_name","customize_label","findCustomizeLabelDet","findCustomizerequiredLabel","foundItem","cf_label_required","handleCloseModal","handleSelectedAssetNo","dataa","valueBeforeColon","selected_asset","ast_mst_asset_status","ast_mst_asset_grpcode","ast_mst_cost_center","ast_mst_work_area","ast_mst_ast_lvl","ast_mst_asset_locn","ast_mst_wrk_grp","get_assetmaster_select","_ref4","handleClickOriginator","WorkOriginator","handleClickProjectID","WorkProjectID","prj_mst_prj_cd","prj_mst_desc","handleClickSupervisorId","WorkSupervisorID","handleClickPlanner","WorkPlanner","handleClickApprover","WorkApprover","handleClickAssignTo","handleClickCustomerCode","CustomerCode","WorkCustomerCode","cus_mst_customer_cd","cus_mst_desc","WorkCostCenter","handleClickLaborAccount","WorkLaborAccount","handleClickContractAccount","handleClickMaterialAccount","handleClickMiscellaneousAccount","onClickChange","errorMessage","New_WorkOrder","Update_WorkOrder","handleCloseSnackbar","onClickChangeComplete","Update_complete","onClickChangeClose","Update_closeOrder","onClickCancel","get_date","utcOffset","date_of_origination","date_of_due","date_of_schedule","date_of_exception","date_of_status_change","date_of_completion","date_of_close","CustomerCodeValue","LaborAccountValue","MaterialAccountValue","CreditCostCenterValue","ContractAccountValue","MiscellaneousAccountValue","date_3","date_4","date_5","missingFields","json_workorder_Insert","asset_type_ID","ImgUpload","audit_user","wko_mst_create_by","ast_aud_originator","wko_mst_create_date","cnt_mst_numbering","i","fieldValue","OriginatorUP","OriginalPeriorityValue","WorkTypeValue","WorkGroupValue","setDbImgRowIdUpdate","setDescriptionValue","json_workorder_update","SingleImguploadStatus","ImguploadRefStatus","ImgGetDbImgRowId","formData","FormData","append","headers","CompleteStatus","selectedActionCode","selectedCauseCode","json_workorder","wko_sts_wo_no","CloseStatus","wko_det_close_date","formatDuration","duration","days","StatushandleShow","splitLabel","wko_sts_start_date","toLocaleDateString","formattedTime","toLocaleString","hour","minute","hour12","formattedWeekday","weekday","label1","wko_sts_status","label2","label3","wko_sts_originator","label4","label5","label6","step","getsteps","getAssignTosteps","AssignStatus","audit_date","wko_ls7_emp_id","column1","addCommnethandal","fetchAllCommentData","scrollChatToBottom","current","scrollTop","scrollHeight","defaults","baseURL","handleStatusChange","Helmet","content","Container","themeStretch","zIndex","borderBottom","CustomBreadcrumbs","heading","links","action","RouterLink","some","_selected_Status$labe","_selected_Status$labe2","mb","Card","Box","rowGap","columnGap","gridTemplateColumns","sm","Stack","pb","join","disableAnimation","ref","Tooltip","placement","TextareaAutosize","minRows","toggleDiv","htmlFor","alt","require","marginBottom","defaultValue","dueDateIncrement","isNaN","millisecondsToAdd","getTime","handleFaultCodeChange","handleSelectedFaultCode","mt","pt","px","toggleDivAsset","handleAssetStatusChange","handleChargeCostChange","Tabs","Tab","role","hidden","handleWorkGroupChange","handleOriginalPeriorityChange","FormControlLabel","control","Checkbox","checked","labelPlacement","AssignStatushandleshow","WorkOrderSpecialOrder","WorkOrderTimeCard","window","reload","refrencImg","onSubmit","multiple","prevSelectedPdfFiles","selectedImagesArray","onload","imageData","base64","push","handleButtonClick","click","toLowerCase","endsWith","faFilePdf","fileName","binaryData","atob","byteArray","Uint8Array","charCodeAt","blob","Blob","url","openPDFInNewTab","handleShowdata","second","RefImgDlt","removedItem","updatedRefImg","prevRemovedRefItems","handleDeleteReferenceApi","gutterBottom","paddingRight","WorkOrderAssetNo","handleRowData2","dataLenth","dataSecond","onChangePage","pageCount","onSearchChange","searchTotl","class","_ref5","left","transition","bottom","_ref6","verticalAlign","gap","Refreshdatapopup","wko_ls11_name","charAt","full_size_link","maxHeight","wko_ls11_sts_upd","base64String2","base64String","cursor","handleImageClickSHow","background","handleUploadCloseClick","inputValue","newComment","timezone_type","timezone","prevComments","RowId","commentMsg","Emp_name","Emp_login_Name","orderNo","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","animation","Alert","severity","transform","LinearProgress","selectedRowKeys","setSelectedRowKeys","startTime","performance","now","viewedRows","setViewedRows","loadTime","WorkAssetNo","catch","columns","render","renderIcon","ast_mst_asset_no","float","MaterialTable","paging","pageSize","pageSizeOptions","overflowY","paginationPosition","toolbarButtonAlignment","paginationType","rowStyle","ast_mst_asset_shortdesc","page","viewedRowsCount","searchText","filteredData","includes","handleSearch","totalData","setTotalData","itm_mst_stockno"],"sourceRoot":""}