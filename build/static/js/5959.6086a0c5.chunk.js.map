{"version":3,"file":"static/js/5959.6086a0c5.chunk.js","mappings":"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","sources":["components/text-max-line/use-typography.js","components/text-max-line/text-max-line.js","sections/_examples/extra/text-max-line-view.js","pages/components/extra/text-max-line.js"],"sourcesContent":["// @mui\nimport { useTheme } from '@mui/material/styles';\n// hooks\nimport { useWidth } from 'src/hooks/use-responsive';\n\n// ----------------------------------------------------------------------\n\nfunction remToPx(value) {\n  return Math.round(parseFloat(value) * 16);\n}\n\nexport default function useTypography(variant) {\n  const theme = useTheme();\n\n  const breakpoints = useWidth();\n\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\n\n  const hasResponsive =\n    variant === 'h1' ||\n    variant === 'h2' ||\n    variant === 'h3' ||\n    variant === 'h4' ||\n    variant === 'h5' ||\n    variant === 'h6';\n\n  const getFont =\n    hasResponsive && theme.typography[variant][key]\n      ? theme.typography[variant][key]\n      : theme.typography[variant];\n\n  const fontSize = remToPx(getFont.fontSize);\n\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\n\n  const { fontWeight, letterSpacing } = theme.typography[variant];\n\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// @mui\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\n//\nimport useTypography from './use-typography';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = useTypography(variant);\n\n    const styles = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    };\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nTextMaxLine.propTypes = {\n  asLink: PropTypes.bool,\n  children: PropTypes.node,\n  line: PropTypes.number,\n  persistent: PropTypes.bool,\n  sx: PropTypes.object,\n  variant: PropTypes.oneOf([\n    'body1',\n    'body2',\n    'button',\n    'caption',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'inherit',\n    'overline',\n    'subtitle1',\n    'subtitle2',\n  ]),\n};\n\nexport default TextMaxLine;\n","// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Container from '@mui/material/Container';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport TextMaxLine from 'src/components/text-max-line';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nexport default function TextMaxLineView() {\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"TextMaxLine\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'TextMaxLine' },\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={3} spacing={3}>\n          <Card>\n            <CardHeader title=\"1 Line\" />\n            <CardContent>\n              <TextMaxLine line={1}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"2 Line\" />\n            <CardContent>\n              <TextMaxLine>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"3 Line\" />\n            <CardContent>\n              <TextMaxLine line={3}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"4 Line\" />\n            <CardContent>\n              <TextMaxLine line={4}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"As Link\" />\n            <CardContent>\n              <TextMaxLine asLink line={3} href=\"#\" color=\"primary\" sx={{ maxWidth: 300 }}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Persistent\" />\n            <CardContent>\n              <TextMaxLine persistent line={3} href=\"#\" sx={{ bgcolor: 'background.neutral' }}>\n                Donec posuere vulputate arcu.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport TextMaxLineView from 'src/sections/_examples/extra/text-max-line-view';\n\n// ----------------------------------------------------------------------\n\nexport default function TextMaxLinePage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra: Text Max Line</title>\n      </Helmet>\n\n      <TextMaxLineView />\n    </>\n  );\n}\n"],"names":["useTypography","variant","theme","useTheme","breakpoints","useWidth","key","up","getFont","typography","fontSize","value","Math","round","parseFloat","lineHeight","Number","fontWeight","letterSpacing","forwardRef","_ref","ref","asLink","line","persistent","children","sx","other","styles","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","height","_jsx","Link","color","Typography","TextMaxLineView","_jsxs","_Fragment","Box","py","bgcolor","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","my","Masonry","columns","spacing","Card","CardHeader","title","CardContent","TextMaxLine","maxWidth","TextMaxLinePage","Helmet"],"sourceRoot":""}