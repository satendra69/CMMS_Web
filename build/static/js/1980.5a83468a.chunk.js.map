{"version":3,"file":"static/js/1980.5a83468a.chunk.js","mappings":"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","sources":["sections/Asset/AssetCustomerCodeList.js","sections/Asset/Form/CreateAssetFrom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Swal from \"sweetalert2\";\r\nimport MaterialTable from \"material-table\";\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst AssetCustomerCodeList = ({ onRowClick, onChangePage, onSearchChange }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [data, setData] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(null);\r\n  const startTime = window.performance.now();\r\n  const [viewedRows, setViewedRows] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    httpCommon\r\n      .get(\"/AssetFormCustomerCodeList.php?site_cd=\" + site_ID)\r\n      .then((response) => {\r\n       // console.log(\"response__NETCode\", response);\r\n        const endTime = window.performance.now();\r\n        const loadTime = endTime - startTime;\r\n       // console.log(`API load time: ${loadTime} milliseconds`);\r\n        Swal.close();\r\n        //setData(response.data.data.result);\r\n        setData(response.data.data.AssetCustomerCode);\r\n        onRowClick(response.data.data.AssetCustomerCode.length);\r\n        // setTotalData(response.data.data.WorkAssetNo.length);\r\n        const endTime2 = window.performance.now();\r\n        const loadTime2 = endTime2 - startTime;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //Table colums\r\n  const columns = [\r\n    {\r\n      title: \"Customer Code\",\r\n      field: \"cus_mst_customer_cd\",\r\n      render: (rowData) => renderIcon(rowData),\r\n    },\r\n    { title: \"Cus Det Varchar2\", field: \"cus_det_varchar2\" },\r\n    { title: \"Cus Mst Acct No\", field: \"cus_mst_acct_no\",width: 40 },\r\n    { title: \"Description\", field: \"cus_mst_desc\" },\r\n    { title: \"Status\", field: \"cus_mst_status\",width: 150 },\r\n    { title: \"Cus Mst Fob \", field: \"cus_mst_fob\",width: 40 },\r\n    { title: \"Cus Mst Shipvia\", field: \"cus_mst_shipvia\",width: 200 },\r\n  ];\r\n\r\n  const renderIcon = (rowData) => {\r\n    if (rowData.cus_mst_customer_cd === selectedRowKeys) {\r\n      return (\r\n        <div>\r\n          <Iconify\r\n            icon=\"mingcute:save-fill\"\r\n            style={{\r\n              marginRight: \"0px\",\r\n              marginTop: \"2px\",\r\n              float: \"left\",\r\n              fontSize: \"16px\",\r\n              color: \"#289e49\",\r\n            }}\r\n          />\r\n          {rowData.cus_mst_customer_cd}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{rowData.cus_mst_customer_cd}</div>;\r\n  };\r\n  const handleRowClick = (event, rowData) => {\r\n    if (selectedRowKeys && selectedRowKeys === rowData.cus_mst_customer_cd) {\r\n      onRowClick(data.length, rowData.cus_mst_customer_cd, 1);\r\n    }\r\n    setSelectedRowKeys(rowData.cus_mst_customer_cd);\r\n    onRowClick(data.length, rowData.cus_mst_customer_cd);\r\n  };\r\n  const handlePageChange = (page) => {\r\n    const pageSize = 10; // Assuming each page displays 10 rows\r\n    const viewedRowsCount = page * pageSize;\r\n    setViewedRows(viewedRowsCount);\r\n    onChangePage(viewedRowsCount);\r\n  };\r\n\r\n  const handleSearch = (searchText) => {\r\n    // Filter the data based on the search text\r\n    const filteredData = data.filter(\r\n      (item) =>\r\n        item.cus_mst_customer_cd\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.cus_det_varchar2\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.cus_mst_acct_no\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.cus_mst_desc.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n\r\n    // setData(filteredData);\r\n    //setSearchedDataCount(filteredData.length);\r\n    onSearchChange(filteredData.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"container Ordertbl\">\r\n          <MaterialTable\r\n            title=\"\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              pageSize: 10,\r\n              pageSizeOptions: false,\r\n              overflowY: \"auto\",\r\n              paginationPosition: \"top\",\r\n              toolbarButtonAlignment: \"right\",\r\n              paginationType: \"normal\",\r\n              rowStyle: (rowData) => ({\r\n                backgroundColor:\r\n                  rowData.cus_mst_customer_cd === selectedRowKeys\r\n                    ? \"#a9ebb9\"\r\n                    : \"#FFF\",\r\n                fontSize: \"12px !important\",\r\n              }),\r\n            }}\r\n            onRowClick={handleRowClick}\r\n            onChangePage={handlePageChange}\r\n            onSearchChange={(searchText) => handleSearch(searchText)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssetCustomerCodeList;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n// @mui\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Container from \"@mui/material/Container\";\r\n// @bootstrap\r\n\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\n\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {  Checkbox } from '@mui/material';\r\n\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\n\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\n// utils\r\n\r\n// routes\r\nimport { RouterLink } from \"src/routes/components\";\r\n\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\nimport httpCommon from \"src/http-common\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\n// Toastfy\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nimport { ToastContainer, toast, Bounce } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// components\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport Iconify from \"src/components/iconify\";\r\n\r\n// import WorkOrderAssetNo from \"../WorkOrderAssetNo\";\r\n\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AssetParentIdList from \"../AssetParentIdList\"\r\nimport AssetCustomerCodeList from \"../AssetCustomerCodeList\"\r\n\r\nimport PmSetup from \"../Asset_module/PmSetup\";\r\nimport WoHistory from \"../Asset_module/AssetWoHistory\";\r\nimport RelocationHistory from \"../Asset_module/RelocationHistory\";\r\nimport CheckList from \"../Asset_module/AssetCheckList\";\r\nimport AssetSpares from \"../Asset_module/AssetSpares\";\r\nimport AssetUsage from \"../Asset_module/AssetUsage\";\r\nimport AssetSpecification from \"../Asset_module/AssetSpecification\";\r\n\r\n\r\n//import WorkOrderSpecialOrder from \"../component_module/Planning/WorkOrderSpecialOrder\";\r\nconst MySwal = withReactContent(Swal);\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\nconst StepContainer = styled(\"div\")`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 40px;\r\n  position: relative;\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: #4694d1;\r\n    height: 90%;\r\n    width: 2px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: 15px;\r\n  }\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: #f3e7f3;\r\n    height: ${({ width }) => width};\r\n    width: 2px;\r\n    top: 45%;\r\n    transition: 0.4s ease;\r\n    transform: translateY(-50%);\r\n    left: 14px;\r\n  }\r\n`;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CreateAssetFrom({ currentUser, onPageChange }) {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_name = localStorage.getItem(\"emp_mst_name\");\r\n  const location = useLocation();\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState('error');\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const state = location.state || {};\r\n  const { RowID, Ast_no, DuplicatRowid,DupRowID,DupAst_no, currentPage, selectedOption } = state || {};\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [astMstLabel, setAstMstLabel] = useState([]);\r\n  const [astdetLabel, setAstdetLabel] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const fileInputRef = useRef(null);\r\n  const settings = useSettingsContext();\r\n\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [selectedImages2, setSelectedImages2] = useState([]);\r\n\r\n  const [selectedPdfFiles, setSelectedPdfFiles] = useState([]);\r\n  const [RefImg, setRefImg] = useState([]);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [getDbImg, setDbImg] = useState();\r\n  const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n\r\n  const [imguploadStatus, setImguploadStatus] = useState(\"\");\r\n  const [imguploadRefStatus, setImguploadRefStatus] = useState(\"\");\r\n\r\n  const [removedRefItems, setRemovedRefItems] = useState([]);\r\n  const [disabledBtn, setDisabledBtn] = useState(false);\r\n  const [imageSelect, setImageSelect] = useState({ name: \"\", path: \"\" });\r\n  const [Tabvalue, setTabValue] = useState(0);\r\n\r\n  const [showdd, setShowdd] = useState(false);\r\n  const [handalImg, sethandalImg] = useState({});\r\n  const handleClosedd = () => setShowdd(false);\r\n  const [showdd2, setShowdd2] = useState(false);\r\n  const handleClosedd2 = () => setShowdd2(false);\r\n\r\n  const [Asset_No, setAsset_No] = useState(\"\");\r\n  const [TotalAssetNo, setTotalAssetNo] = useState(0);\r\n  const [TotalSearch, setTotalSearch] = useState(\"\");\r\n  const [viewedTotlRows, setViewedTotlRows] = useState(0);\r\n\r\n  // form filed state\r\n  const [AssetNo, setAssetNo] = useState(\"\");\r\n  const [Status, setStatus] = useState([]);\r\n  const [selected_Status, setSelected_Status] = useState([]);\r\n\r\n  const [Asset_CriFactor, setAsset_CriFactor] = useState([]); \r\n  const [selected_CriFactor, setselected_CriFactor] = useState([]);\r\n\r\n  const [Short_Description, setShort_Description] = useState(\"\");\r\n  const [Long_Description, setLong_Description] = useState(\"\");\r\n\r\n  const [Area_ID, setArea_ID] = useState(\"\");\r\n \r\n\r\n  const [Asset_Type, setAsset_Type] = useState([]); \r\n  const [selected_AssetType, setselectedAssetType] = useState([]);\r\n\r\n  const [Asset_Code, setAsset_Code] = useState([]); \r\n  const [selected_AssetCode, setselectedAssetCode] = useState([]);\r\n\r\n  const [Asset_Group_Code, setAsset_Group_Code] = useState([]);\r\n  const [selected_AssetGroupCode, setselectedAssetGroupCode] = useState([]);\r\n\r\n  const [Charge_Cost_Center, setCharge_Cost_Center] = useState([]);\r\n  const [selected_Charge_Cost_Center, setSelected_Charge_Cost_Center] =\r\n    useState([]);\r\n\r\n  const [Work_Area, setWork_Area] = useState([]);\r\n  const [selected_Work_Area, setSelected_Work_Area] = useState([]);\r\n\r\n  const [Asset_Location, setAsset_Location] = useState([]); \r\n  const [selected_Asset_Location, setSelected_Asset_Location] = useState([]);\r\n\r\n  const [Asset_Level, setAsset_Level] = useState([]);\r\n  const [selected_Asset_Level, setSelected_Asset_Level] = useState([]);\r\n\r\n  const [Work_Group, setWork_Group] = useState([]);\r\n  const [selected_Work_Group, setSelected_Work_Group] = useState([]);\r\n\r\n  const [Permanent_ID, setPermanent_ID] = useState(0);\r\n\r\n  const [SafetyRequirement, setSafetyRequirement] = useState(\"\");\r\n  const [BarcodeCount, setBarcodeCount] = useState(\"0\");\r\n  const [ManufactureCode, setManufactureCode] = useState(\"\");\r\n  const [AssetCost, setAssetCost] = useState(\"\");\r\n  const [ResidualValue, setResidualValue] = useState([]);\r\n  const [Permanent_IDFlag, setPermanentIDFlag] =useState([]);\r\n  const [CustomerCode, setCustomerCode] = useState(\"\");\r\n  const [selected_Customer_Code, setSelected_Customer_Code] = useState([]);\r\n  \r\n  const [selected_Contract_Account, setSelected_Contract_Account] = useState(\r\n    []\r\n  );\r\n  const [PurchaseDate, setPurchaseDate] = useState(new Date());\r\n \r\n\r\n  const [WarrantyDate, setWarrantyDate] = useState(new Date());\r\n\r\n  const [selected_Labor_Account, setSelected_Labor_Account] = useState([]);\r\n\r\n  const [ExpectedLifeYear, setExpectedLifeYear] = useState(\"\");\r\n\r\n  const [selected_Material_Account, setSelected_Material_Account] = useState(\r\n    []\r\n  );\r\n\r\n  const [DepreciationMethod, setDepreciationMethod] = useState([{ label: \"Straight-Line\", value: \"SL\" }, { label: \"Declining-Balance\", value: \"DB\" }, { label: \"Double-Declining\", value: \"DD\" }]);\r\n  const [selected_Depreciation_Method, setSelectedDepreciationMethod] = useState([]);\r\n\r\n\r\n  const [UDFText_1, setUDFText_1] = useState(\"\");\r\n  const [UDFText_2, setUDFText_2] = useState(\"\");\r\n  const [UDFText_3, setUDFText_3] = useState(\"\");\r\n  const [UDFText_4, setUDFText_4] = useState(\"\");\r\n  const [UDFText_5, setUDFText_5] = useState(\"\");\r\n  const [UDFText_6, setUDFText_6] = useState(\"\");\r\n  const [UDFText_7, setUDFText_7] = useState(\"\");\r\n  const [UDFText_8, setUDFText_8] = useState(\"\");\r\n  const [UDFText_9, setUDFText_9] = useState(\"\");\r\n  const [UDFText_10, setUDFText_10] = useState(\"\");\r\n  const [UDFText_11, setUDFText_11] = useState(\"\");\r\n  const [UDFText_12, setUDFText_12] = useState(\"\");\r\n  const [UDFText_13, setUDFText_13] = useState(\"\");\r\n  const [UDFText_14, setUDFText_14] = useState(\"\");\r\n  const [UDFText_15, setUDFText_15] = useState(\"\");\r\n  const [UDFText_16, setUDFText_16] = useState(\"\");\r\n  const [UDFText_17, setUDFText_17] = useState(\"\");\r\n  const [UDFText_18, setUDFText_18] = useState(\"\");\r\n  const [UDFText_19, setUDFText_19] = useState(\"\");\r\n  const [UDFText_20, setUDFText_20] = useState(\"\");\r\n  const [UDFText_21, setUDFText_21] = useState(\"\");\r\n  const [UDFText_22, setUDFText_22] = useState(\"\");\r\n  const [UDFText_23, setUDFText_23] = useState(\"\");\r\n  const [UDFText_24, setUDFText_24] = useState(\"\");\r\n  const [UDFText_25, setUDFText_25] = useState(\"\");\r\n  const [UDFText_26, setUDFText_26] = useState(\"\");\r\n  const [UDFText_27, setUDFText_27] = useState(\"\");\r\n  const [UDFText_28, setUDFText_28] = useState(\"\");\r\n  const [UDFText_29, setUDFText_29] = useState(\"\");\r\n  const [UDFText_30, setUDFText_30] = useState(\"\");\r\n\r\n  const [UDFNumber_1, setUDFNumber_1] = useState(\"\");\r\n  const [UDFNumber_2, setUDFNumber_2] = useState(\"\");\r\n  const [UDFNumber_3, setUDFNumber_3] = useState(\"\");\r\n  const [UDFNumber_4, setUDFNumber_4] = useState(\"\");\r\n  const [UDFNumber_5, setUDFNumber_5] = useState(\"\");\r\n  const [UDFNumber_6, setUDFNumber_6] = useState(\"\");\r\n  const [UDFNumber_7, setUDFNumber_7] = useState(\"\");\r\n  const [UDFNumber_8, setUDFNumber_8] = useState(\"\");\r\n  const [UDFNumber_9, setUDFNumber_9] = useState(\"\");\r\n  const [UDFNumber_10, setUDFNumber_10] = useState(\"\");\r\n  const [UDFNumber_11, setUDFNumber_11] = useState(\"\");\r\n  const [UDFNumber_12, setUDFNumber_12] = useState(\"\");\r\n  const [UDFNumber_13, setUDFNumber_13] = useState(\"\");\r\n  const [UDFNumber_14, setUDFNumber_14] = useState(\"\");\r\n  const [UDFNumber_15, setUDFNumber_15] = useState(\"\");\r\n\r\n  const [UDFDate_1, setUDFDate_1] = useState();\r\n  const [UDFDate_2, setUDFDate_2] = useState();\r\n  const [UDFDate_3, setUDFDate_3] = useState();\r\n  const [UDFDate_4, setUDFDate_4] = useState();\r\n  const [UDFDate_5, setUDFDate_5] = useState();\r\n  const [UDFDate_6, setUDFDate_6] = useState();\r\n  const [UDFDate_7, setUDFDate_7] = useState();\r\n  const [UDFDate_8, setUDFDate_8] = useState();\r\n  const [UDFDate_9, setUDFDate_9] = useState();\r\n  const [UDFDate_10, setUDFDate_10] = useState();\r\n  const [UDFDate_11, setUDFDate_11] = useState();\r\n  const [UDFDate_12, setUDFDate_12] = useState();\r\n  const [UDFDate_13, setUDFDate_13] = useState();\r\n  const [UDFDate_14, setUDFDate_14] = useState();\r\n  const [UDFDate_15, setUDFDate_15] = useState();\r\n\r\n const [isAssetAssetEmpty, setIsAssetEmpty] = useState(false);\r\n  const [isAssetStatusEmpty, setIsAssetStatusEmpty] = useState(false);\r\n  const [isAssetCriticalFactorEmpty, setIsAssetCriticalFactorEmpty] = useState(false);\r\n  const [isAssetShortDescEmpty,setIsAssetShortDescEmpty] = useState(false);\r\n  const [isAssetTypeEmpty, setIsAssetTypeEmpty] =useState(false);\r\n  const [isAssetCodeEmpty,setIsAssetCodeEmpty] = useState(false);\r\n  const [isAssetGroupCodeEmpty,setIsAssetGroupCodeEmpty]= useState(false);\r\n  const [isAssetWorkAreaEmpty,setIsAssetWorkAreaEmpty] = useState(false);\r\n  const [isAssetLocation,setIsAssetLocation] =useState(false);\r\n  const [isAssetLeavelEmpty,setIsAssetLeavelEmpty] = useState(false);\r\n  const [isAssetCostCenterEmpty,setIsAssetCostCenterEmpty] = useState(false);\r\n\r\n\r\n  const [Asset_Laboraccount, setAsset_Laboraccount] = useState([]); \r\n  \r\n  const [WorkOrderNo, setWorkOrderNo] = useState(\"\");\r\n  \r\n  const [selected_Asset_Status, setSelected_Asset_Status] = useState([]);\r\n  const [selected_Asset_Group_Code, setSelected_Asset_Group_Code] = useState(\r\n    []\r\n  );\r\n\r\n  const [AutoNumring, setAutoNumring] = useState(\"\");\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n  const [getDbImgRowId, setDbImgRowId] = useState(\"\");\r\n  const [SpecialOdrResult, setSpecialOdrResult] = useState([]);\r\n\r\n  const [steps, setsteps] = useState([]);\r\n  const StatushandleClose = () => setStatusShow(false);\r\n\r\n  const [StatusShow, setStatusShow] = useState(false);\r\n\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const fileInputRef2 = useRef(null);\r\n\r\n  const [uploadImgShow, setUploadImgShow] = useState(false);\r\n  const UploadImghandleClose = () => setUploadImgShow(false);\r\n \r\n  const [isAssetNoEmpty, setIsAssetNoEmpty] = useState(false);\r\n  const [isOpenWork, setIsOpenWork] = useState(true);\r\n\r\n  const autocompleteRef = useRef(null);\r\n  const assetNoAutocompleteRef = useRef(null);\r\n  const CustomerCodeRef = useRef(null);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [PMSetupShow, setPMSetupShow] = useState(false);\r\n  const PMSetuphandleClose = () => setPMSetupShow(false);\r\n  const PMSetuphandleShow = () => setPMSetupShow(true);\r\n\r\n  const [WOHistoryShow, setWOHistoryShow] = useState(false);\r\n  const WOHistoryhandleClose = () => setWOHistoryShow(false);\r\n  const WOHistoryhandleShow = () => setWOHistoryShow(true);\r\n\r\n  const [RelocationHistoryShow, setRelocationHistoryShow] = useState(false);\r\n  const RelocationHistoryhandleClose = () => setRelocationHistoryShow(false);\r\n  const RelocationHistoryhandleShow = () => setRelocationHistoryShow(true);\r\n\r\n  const [CheckListShow, setCheckListShow] = useState(false);\r\n  const CheckListhandleClose = () => setCheckListShow(false);\r\n  const CheckListhandleShow = () => setCheckListShow(true);\r\n  const [AssetMandatoryFiled, setAssetMandatoryFiled] = useState([]);\r\n  const [errorField, setErrorField] = useState(null);\r\n  const [AssetAutoNumbring, setAssetAutoNumbring] = useState([]);\r\n  const [Asset_type_ID, setAsset_type_ID] = useState(\"\");\r\n  const [Asset_group_ID, setAsset_group_ID] = useState(\"\");\r\n  const [isFormFiled, setIsFormFiled] = useState(false);\r\n  /*   new state added by satya  */\r\n\r\n  useEffect(() => {\r\n    async function fetchData() { \r\n     \r\n      if (typeof RowID !== \"undefined\" && RowID !== null && RowID !== \"\") {\r\n        \r\n        setButton_save(\"Update\");\r\n        await get_assetmaster_selected();\r\n        await fetchStatusData();\r\n        await getAssetFromLebel();\r\n        await getAssetMandatoryfiled();\r\n      } else if(typeof DuplicatRowid !== \"undefined\" && DuplicatRowid !== null && DuplicatRowid !== \"\") {\r\n        \r\n        setButton_save(\"Duplicate\");\r\n      \r\n        await get_assetmaster_selected();\r\n        await fetchStatusData();\r\n        await getAssetFromLebel();\r\n        await getAssetMandatoryfiled();\r\n\r\n      }else{\r\n\r\n        await getAssetFromLebel();\r\n        await fetchStatusData();\r\n        await getAssetMandatoryfiled();\r\n      //  await fetchStusPriortyData();\r\n        setButton_save(\"Save\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // test funcation\r\n\r\n  // Get All Filed label Name\r\n  const getAssetFromLebel = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\"/get_asset_from_lebal.php\");\r\n      // console.log(\"response____getLabel\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setAstMstLabel(response.data.data.ast_mst);\r\n        setAstdetLabel(response.data.data.ast_det);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // Get All Filed label Name\r\n  const getAssetMandatoryfiled = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\"/get_asset_mandatory_filed.php\");\r\n      \r\n      if (response.data && response.data.data && response.data.data.MandatoryField) {\r\n\r\n        if (response.data.data.MandatoryField.length > 0) {\r\n  \r\n          setAssetMandatoryFiled(response.data.data.MandatoryField);\r\n  \r\n        }\r\n  \r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n \r\n  const get_assetmaster_selected = async () => {\r\n    var json = {\r\n\r\n        \"site_cd\": site_ID,\r\n        \"ast_mst_asset_no\": DuplicatRowid !== undefined && DuplicatRowid !== \"\" ? DupAst_no : Ast_no,\r\n        \"asset_shortdesc\": \"\",\r\n        \"cost_center\": \"\",\r\n        \"asset_status\": \"\",\r\n        \"asset_type\": \"\",\r\n        \"asset_grpcode\": \"\",\r\n        \"work_area\": \"\",\r\n        \"asset_locn\": \"\",\r\n        \"asset_code\": \"\",\r\n        \"ast_lvl\": \"\",\r\n        \"ast_sts_typ_cd\": \"\",\r\n        \"createby\": \"\",\r\n        \"service_type\": \"\",\r\n        \"block\": \"\",\r\n        \"floor\": \"\",\r\n        \"RowId\": DuplicatRowid !== undefined && DuplicatRowid !== \"\" ? DupRowID : RowID,\r\n    }\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_assetmaster_select.php\",\r\n        JSON.stringify(json)\r\n      );\r\n     // console.log(\"Get_Asset Data\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        if(typeof DuplicatRowid !== \"undefined\" && DuplicatRowid !== null && DuplicatRowid !== \"\"){\r\n          console.log(\"Enter_log_with duplicate__key\");\r\n          setAssetNo(\"\");\r\n        }else{\r\n          console.log(\"Enter_log_without duplicate__key\");\r\n          setAssetNo(response.data.data[\"0\"].ast_mst_asset_no);\r\n        }\r\n      \r\n       \r\n        setSelected_Status({\r\n          label: response.data.data[0].ast_mst_asset_status + \" : \" + response.data.data[\"0\"].ast_sts_desc\r\n        });\r\n        setShort_Description(response.data.data[\"0\"].ast_mst_asset_shortdesc);\r\n        setselected_CriFactor({ label: response.data.data[\"0\"].ast_mst_cri_factor + \" : \" + response.data.data[\"0\"].ast_cri_desc });\r\n        setArea_ID(response.data.data[\"0\"].ast_mst_perm_id);\r\n        setLong_Description(response.data.data[\"0\"].ast_mst_asset_longdesc);\r\n        setselectedAssetType({ label: response.data.data[\"0\"].ast_mst_asset_type + \" : \" + response.data.data[\"0\"].ast_type_descs });\r\n        setselectedAssetCode({ label: response.data.data[\"0\"].ast_mst_asset_code + \" : \" + response.data.data[\"0\"].ast_cod_desc });\r\n\r\n      //  setselectedAssetGroupCode({ label: response.data.data[\"0\"].ast_mst_asset_grpcode + \" : \" + response.data.data[\"0\"].ast_grp_desc});\r\n        setselectedAssetGroupCode({ \r\n          label: response.data.data[\"0\"].ast_mst_asset_grpcode + \" : \" + response.data.data[\"0\"].ast_grp_desc,\r\n          value: response.data.data[\"0\"].ast_mst_asset_grpcode,\r\n          key:response.data.data[\"0\"].Auto_number, \r\n        });\r\n\r\n        setSelected_Charge_Cost_Center({ label: response.data.data[\"0\"].ast_mst_cost_center + \" : \" + response.data.data[\"0\"].descs });\r\n        setSelected_Work_Area({ label: response.data.data[\"0\"].ast_mst_work_area + \" : \" + response.data.data[\"0\"].mst_war_desc });\r\n        setSelected_Asset_Location({ label: response.data.data[\"0\"].ast_mst_asset_locn + \" : \" + response.data.data[\"0\"].ast_loc_desc });\r\n        setSelected_Asset_Level({ label: response.data.data[\"0\"].ast_mst_ast_lvl + \" : \" + response.data.data[\"0\"].ast_lvl_desc });\r\n        setSelected_Work_Group({ label: response.data.data[\"0\"].ast_mst_wrk_grp + \" : \" + response.data.data[\"0\"].wrk_grp_desc });\r\n        if(response.data.data[\"0\"].ast_mst_wrk_grp == \"\" && response.data.data[\"0\"].wrk_grp_desc == null){\r\n          setSelected_Work_Group({ label: \"\" });\r\n        }else{\r\n          setSelected_Work_Group({ label: response.data.data[\"0\"].ast_mst_wrk_grp + \" : \" + response.data.data[\"0\"].wrk_grp_desc });\r\n        }\r\n\r\n        setPermanent_ID(response.data.data[\"0\"].ast_mst_parent_flag);\r\n        setPermanentIDFlag(response.data.data[\"0\"].ast_mst_parent_id);\r\n        setSafetyRequirement(response.data.data[\"0\"].ast_mst_safety_rqmts);\r\n        setBarcodeCount(response.data.data[\"0\"].ast_mst_print_count);\r\n        setManufactureCode(response.data.data[\"0\"].ast_det_mfg_cd);\r\n        setAssetCost(response.data.data[\"0\"].ast_det_asset_cost);\r\n        setResidualValue(response.data.data[\"0\"].ast_det_repl_cost);\r\n     \r\n       setSelectedDepreciationMethod({ label: response.data.data[\"0\"].ast_det_depr_method });\r\n       setSelected_Contract_Account({ label: response.data.data[\"0\"].ast_det_c_account });\r\n       setSelected_Labor_Account({ label: response.data.data[\"0\"].ast_det_l_account });\r\n       setSelected_Material_Account({ label: response.data.data[\"0\"].ast_det_m_account });\r\n   \r\n      if (response.data.data[\"0\"].ast_det_purchase_date == null) {\r\n        setPurchaseDate(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_purchase_date.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setPurchaseDate(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_warranty_date == null) {   \r\n        setWarrantyDate(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_warranty_date.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setWarrantyDate(formattedDate);\r\n      }\r\n      setExpectedLifeYear(response.data.data[\"0\"].ast_det_depr_term);\r\n      setCustomerCode(response.data.data[\"0\"].ast_det_cus_code);\r\n\r\n      setUDFText_1(response.data.data[\"0\"].ast_det_varchar1);\r\n      setUDFText_2(response.data.data[\"0\"].ast_det_varchar2);\r\n      setUDFText_3(response.data.data[\"0\"].ast_det_varchar3);\r\n      setUDFText_4(response.data.data[\"0\"].ast_det_varchar4);\r\n      setUDFText_5(response.data.data[\"0\"].ast_det_varchar5);\r\n      setUDFText_6(response.data.data[\"0\"].ast_det_varchar6);\r\n      setUDFText_7(response.data.data[\"0\"].ast_det_varchar7);\r\n      setUDFText_8(response.data.data[\"0\"].ast_det_varchar8);\r\n      setUDFText_9(response.data.data[\"0\"].ast_det_varchar9);\r\n      setUDFText_10(response.data.data[\"0\"].ast_det_varchar10);\r\n\r\n      setUDFText_11(response.data.data[\"0\"].ast_det_varchar11);\r\n      setUDFText_12(response.data.data[\"0\"].ast_det_varchar12);\r\n      setUDFText_13(response.data.data[\"0\"].ast_det_varchar13);\r\n      setUDFText_14(response.data.data[\"0\"].ast_det_varchar14);\r\n      setUDFText_15(response.data.data[\"0\"].ast_det_varchar15);\r\n      setUDFText_16(response.data.data[\"0\"].ast_det_varchar16);\r\n      setUDFText_17(response.data.data[\"0\"].ast_det_varchar17);\r\n      setUDFText_18(response.data.data[\"0\"].ast_det_varchar18);\r\n      setUDFText_19(response.data.data[\"0\"].ast_det_varchar19);\r\n      setUDFText_20(response.data.data[\"0\"].ast_det_varchar20);\r\n\r\n      setUDFText_21(response.data.data[\"0\"].ast_det_varchar21);\r\n      setUDFText_22(response.data.data[\"0\"].ast_det_varchar22);\r\n      setUDFText_23(response.data.data[\"0\"].ast_det_varchar23);\r\n      setUDFText_24(response.data.data[\"0\"].ast_det_varchar24);\r\n      setUDFText_25(response.data.data[\"0\"].ast_det_varchar25);\r\n      setUDFText_26(response.data.data[\"0\"].ast_det_varchar26);\r\n      setUDFText_27(response.data.data[\"0\"].ast_det_varchar27);\r\n      setUDFText_28(response.data.data[\"0\"].ast_det_varchar28);\r\n      setUDFText_29(response.data.data[\"0\"].ast_det_varchar29);\r\n      setUDFText_30(response.data.data[\"0\"].ast_det_varchar30);\r\n\r\n      setUDFNumber_1(response.data.data[\"0\"].ast_det_numeric1);\r\n      setUDFNumber_2(response.data.data[\"0\"].ast_det_numeric2);\r\n      setUDFNumber_3(response.data.data[\"0\"].ast_det_numeric3);\r\n      setUDFNumber_4(response.data.data[\"0\"].ast_det_numeric4);\r\n      setUDFNumber_5(response.data.data[\"0\"].ast_det_numeric5);\r\n      setUDFNumber_6(response.data.data[\"0\"].ast_det_numeric6);\r\n      setUDFNumber_7(response.data.data[\"0\"].ast_det_numeric7);\r\n      setUDFNumber_8(response.data.data[\"0\"].ast_det_numeric8);\r\n      setUDFNumber_9(response.data.data[\"0\"].ast_det_numeric9);\r\n      setUDFNumber_10(response.data.data[\"0\"].ast_det_numeric10);\r\n      setUDFNumber_11(response.data.data[\"0\"].ast_det_numeric11);\r\n      setUDFNumber_12(response.data.data[\"0\"].ast_det_numeric12);\r\n      setUDFNumber_13(response.data.data[\"0\"].ast_det_numeric13);\r\n      setUDFNumber_14(response.data.data[\"0\"].ast_det_numeric14);\r\n      setUDFNumber_15(response.data.data[\"0\"].ast_det_numeric15);\r\n\r\n    \r\n      if (response.data.data[\"0\"].ast_det_datetime1 == null) {   \r\n        setUDFDate_1(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime1.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_1(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime2 == null) {   \r\n        setUDFDate_2(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime2.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_2(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime3 == null) {   \r\n        setUDFDate_3(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime3.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_3(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime4 == null) {   \r\n        setUDFDate_4(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime4.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_4(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime5 == null) {   \r\n        setUDFDate_5(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime5.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_5(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime6 == null) {   \r\n        setUDFDate_6(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime6.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_6(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime7 == null) {   \r\n        setUDFDate_7(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime7.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_7(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime8 == null) {   \r\n        setUDFDate_8(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime8.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_8(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime9 == null) {   \r\n        setUDFDate_9(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime9.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_9(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime10 == null) {   \r\n        setUDFDate_10(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime10.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_10(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime11 == null) {   \r\n        setUDFDate_11(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime11.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_11(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime12 == null) {   \r\n        setUDFDate_12(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime12.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_12(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime13 == null) {   \r\n        setUDFDate_13(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime13.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_13(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime14 == null) {   \r\n        setUDFDate_14(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime14.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_14(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime15 == null) {   \r\n        setUDFDate_15(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime15.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_15(formattedDate);\r\n      }\r\n       if(DuplicatRowid == null){\r\n        fetchImgData();\r\n       }\r\n      \r\n    \r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: response.data,\r\n      });\r\n    }\r\n      \r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_Asset select Not Found...\",\r\n        text: error,\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Second Api call fetch all dropdowwn data\r\n  const fetchStatusData = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_asset_dropdownlist.php?site_cd=\" + site_ID\r\n      );\r\n      // console.log(\"response____status__\", response);  \r\n\r\n      let Status = response.data.data.AssetStatusListDropdown.map((item) => ({\r\n        label: item.ast_sts_status + \" : \" + item.ast_sts_desc,\r\n        value: item.ast_sts_desc,\r\n        key: item.ast_sts_status,\r\n      }));\r\n\r\n      setStatus(Status);\r\n\r\n      let Asset_Group_Code = response.data.data.AssetGroupCode.map((item) => ({\r\n        label: item.ast_grp_grp_cd + \" : \" + item.ast_grp_desc,\r\n        value: item.ast_grp_desc,\r\n        key:item.Auto_number,\r\n      }));\r\n      setAsset_Group_Code(Asset_Group_Code);\r\n\r\n      let Work_Area = response.data.data.AssetZone.map((item) => ({\r\n        label: item.mst_war_work_area + \" : \" + item.mst_war_desc,\r\n        value: item.mst_war_desc,\r\n      }));\r\n      setWork_Area(Work_Area);\r\n\r\n      let Charge_Cost_Center = response.data.data.Assetcostcenter.map(\r\n        (item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setCharge_Cost_Center(Charge_Cost_Center);\r\n\r\n      let Work_Group = response.data.data.Assetwrkgrp.map((item) => ({\r\n        label: item.wrk_grp_grp_cd + \" : \" + item.wrk_grp_desc,\r\n        value: item.wrk_grp_desc,\r\n      }));\r\n      setWork_Group(Work_Group);\r\n\r\n      let Asset_Level = response.data.data.Assetleavel.map((item) => ({\r\n        label: item.ast_lvl_ast_lvl + \" : \" + item.ast_lvl_desc,\r\n        value: item.ast_lvl_desc,\r\n      }));\r\n      setAsset_Level(Asset_Level);\r\n\r\n      let Asset_Location = response.data.data.Assetlocation.map((item) => ({\r\n        label: item.ast_loc_ast_loc + \" : \" + item.ast_loc_desc,\r\n        value: item.ast_loc_desc,\r\n      }));\r\n      setAsset_Location(Asset_Location);\r\n\r\n      let Asset_Type = response.data.data.AssetType.map((item) => ({\r\n        label: item.ast_type_cd + \" : \" + item.ast_type_descs,\r\n        value: item.ast_type_descs,\r\n      }));\r\n      setAsset_Type(Asset_Type);\r\n\r\n      let Asset_Code = response.data.data.AssetCode.map((item) => ({\r\n        label: item.ast_cod_ast_cd + \" : \" + item.ast_cod_desc,\r\n        value: item.ast_cod_desc,\r\n      }));\r\n      setAsset_Code(Asset_Code);\r\n\r\n      let Asset_CriFactor = response.data.data.Assetcriticalfactor.map((item) => ({\r\n        label: item.ast_cri_cri_factor + \" : \" + item.ast_cri_desc,\r\n        value: item.ast_cri_desc,\r\n      }));\r\n      setAsset_CriFactor(Asset_CriFactor);\r\n\r\n      let Asset_laboraccount = response.data.data.Assetlaboraccount.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.descs,\r\n      }));\r\n      setAsset_Laboraccount(Asset_laboraccount);\r\n      setAssetAutoNumbring(response.data.data.AssetAutoNumbering);\r\n\r\n      /*   end */\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Thired Api Call\r\n  const fetchImgData = async () => {\r\n   \r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_asset_edit_img.php?RowID=\" + RowID\r\n      );\r\n    \r\n        if (response.data.data) {\r\n          // Check if AllImgGet exists and has items\r\n          \r\n          if (response.data.data.AllImgGet && response.data.data.AllImgGet.length > 0) {\r\n            setDbImg(response.data.data.AllImgGet);\r\n           // setDbImgRowId(response.data.data.AllImgGet[0].RowID);\r\n            setImguploadStatus(response.data.data.AllImgGet[0].ImgStatus);\r\n            setImageSelect({\r\n              name: response.data.data.AllImgGet[0].file_name,\r\n              path: response.data.data.AllImgGet[0].attachment,\r\n            });\r\n          }\r\n        \r\n          // Check if AllRef exists and has items\r\n          if (response.data.data.AllRef && response.data.data.AllRef.length > 0) {\r\n            setRefImg(response.data.data.AllRef);\r\n            setImguploadRefStatus(response.data.data.AllRef[0].ImgStatusRef);\r\n          }\r\n        }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n  const openSaveImg = () => {\r\n    setShowdd2(true);\r\n  };\r\n  // First main Img funcation\r\n  const handleDeleteImgApi = (ImgIDdlt) => {\r\n    const updatedImages = getDbImg.filter((image) => image.RowID !== ImgIDdlt);\r\n\r\n    // Update the state with the new array of images after the deletion\r\n    setDbImg(updatedImages);\r\n    setDbImgRowId(ImgIDdlt);\r\n    setDisabledBtn(true);\r\n    setImguploadStatus(\"NEW_SINGLE_IMG\");\r\n    setImageSelect({ name: \"\", path: \"\" });\r\n  };\r\n  const handleImgChangeSingle = (e) => {\r\n    if (e.target.files.length) {\r\n      setImage({\r\n        preview: URL.createObjectURL(e.target.files[0]),\r\n        raw: e.target.files[0],\r\n      });\r\n      setDisabledBtn(true);\r\n      setImguploadStatus(\"NEW_SINGLE_IMG\");\r\n    }\r\n    // Img set for data api\r\n    if (getDbImg != \"\") {\r\n      setDbImg(\"\");\r\n    }\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImageSelect({ name: file.name, path: reader.result });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n  const clearDataImg = () => {\r\n    setImage(\"\");\r\n  };\r\n  const handleClearImg = (event) => {\r\n    event.preventDefault();\r\n    clearDataImg();\r\n    setDisabledBtn(false);\r\n  };\r\n  const handleImgChangeSingle2 = (e) => {\r\n    setDisabledBtn(false);\r\n  };\r\n  // Refrence Imge funcation\r\n  const handleButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleDeleteImg = (e) => {\r\n    const s = selectedImages.filter((item, index) => index !== e);\r\n    setSelectedImages(s);\r\n  };\r\n  const handleShowdata = (item) => {\r\n    setSelectedImage(item.attachment);\r\n    setShowdd(true);\r\n  };\r\n  const openPDFInNewTab = (fileName) => {\r\n    const binaryData = atob(fileName);\r\n\r\n    const byteArray = new Uint8Array(binaryData.length);\r\n    for (let i = 0; i < binaryData.length; i++) {\r\n      byteArray[i] = binaryData.charCodeAt(i);\r\n    }\r\n\r\n    // Step 3: Create a Blob from the typed array\r\n    const blob = new Blob([byteArray], { type: \"application/pdf\" });\r\n\r\n    // Step 4: Generate a URL for the blob\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Step 5: Open the URL in a new tab\r\n    window.open(url, \"_blank\");\r\n  };\r\n  const handleDeleteReferenceApi = (RefImgDlt) => {\r\n    const removedItem = RefImg.find((item) => item.RowID === RefImgDlt);\r\n    const updatedRefImg = RefImg.filter((item) => item.RowID !== RefImgDlt);\r\n    setRefImg(updatedRefImg);\r\n    setRemovedRefItems((prevRemovedRefItems) => [\r\n      ...prevRemovedRefItems,\r\n      removedItem,\r\n    ]);\r\n  };\r\n  const handleShowdd = (e, rowData) => {\r\n    sethandalImg(rowData);\r\n    setShowdd(true);\r\n  };\r\n  const isMyStateEmpty =\r\n    Object.keys(handalImg).length === 0 && handalImg.constructor === Object;\r\n  function handleImageChange(event) {\r\n    const files = event.target.files;\r\n\r\n    setSelectedPdfFiles((prevSelectedPdfFiles) => [\r\n      ...prevSelectedPdfFiles,\r\n      ...files,\r\n    ]);\r\n    const selectedImagesArray = [...selectedImages2];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event) => {\r\n        const imageData = {\r\n          name: files[i].name,\r\n          type: files[i].type,\r\n          base64: event.target.result,\r\n        };\r\n        selectedImagesArray.push(imageData);\r\n        if (selectedImagesArray.length === files.length) {\r\n          setSelectedImages2(selectedImagesArray);\r\n          //setImageSelect({ name: file.name, path: reader.result });\r\n        }\r\n      };\r\n      reader.readAsDataURL(files[i]);\r\n    }\r\n    setSelectedImages([...selectedImages, ...files]);\r\n    setImguploadRefStatus(\"Ref_New_img\");\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    selectedImages.forEach((file) => {\r\n      formData.append(\"files[]\", file);\r\n    });\r\n  };\r\n  const findCustomizeLabel = (columnName) => {\r\n    const matchingColumn = astMstLabel.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n\r\n  };\r\n  // WorkReq Label Details table\r\n  const findCustomizeLabelDet = (columnName) => {\r\n    const matchingColumn = astdetLabel.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n  };\r\n\r\nconst findCustomizerequiredLabel = (columnName) => {\r\n    const foundItem = AssetMandatoryFiled.find(item => item.column_name === columnName);\r\n    if (foundItem && foundItem.cf_label_required === \"1\") {\r\n        return \"Requiredlabel\";\r\n    }\r\n    return \"\";\r\n};\r\n\r\n  // staya added today\r\n  const [modalOpenAsset, setModalOpenAsset] = useState(false);\r\n  const [modalOpenAssetCustomerCode, setModalOpenAssetCustomerCode] = useState(false);\r\n  \r\n  //get Asset Parent Flag data onther component\r\n  const handleEditClick = () => {\r\n    setModalOpenAsset(true);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setPermanentIDFlag(\"\");\r\n  };\r\n  function handleCloseModal() {\r\n    setModalOpenAsset(false);\r\n  }\r\n\r\n  const handleCancelClickCustomeCode = () =>{\r\n    setCustomerCode(\"\");\r\n  }\r\n  const handleEditClickCustomerCode = () =>{\r\n    setModalOpenAssetCustomerCode(true);\r\n  }\r\n  function handleCloseModalCustomeCode() {\r\n    setModalOpenAssetCustomerCode(false);\r\n  }\r\n\r\n  const get_assetmaster_select = async (selected_asset) => {\r\n    \r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    const parts = selected_asset.split(':');\r\n    const valueBeforeColon = parts[0].trim();\r\n\r\n    if (selected_asset != \"\") {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_workOrderAssetmaster_select.php?site_cd=\" +\r\n            site_ID +\r\n            \"&ast_mst_asset_no=\" +\r\n            valueBeforeColon +\r\n            \"&asset_shortdesc=\" +\r\n            \"\" +\r\n            \"&cost_center=\" +\r\n            \"\" +\r\n            \"&asset_status=\" +\r\n            \"\" +\r\n            \"&asset_type=\" +\r\n            \"\" +\r\n            \"&asset_grpcode=\" +\r\n            \"\" +\r\n            \"&work_area=\" +\r\n            \"\" +\r\n            \"&asset_locn=\" +\r\n            \"\" +\r\n            \"&asset_code=\" +\r\n            \"\" +\r\n            \"&ast_lvl=\" +\r\n            \"\" +\r\n            \"&ast_sts_typ_cd=\" +\r\n            \"\" +\r\n            \"&createby=\" +\r\n            \"\" +\r\n            \"&service_type=\" +\r\n            \"\" +\r\n            \"&block=\" +\r\n            \"\" +\r\n            \"&floor=\" +\r\n            \"\"\r\n        );\r\n\r\n        if (response.data.status === \"SUCCESS\") {\r\n          setSelected_Asset_Status({\r\n            label: response.data.data[\"0\"].ast_mst_asset_status,\r\n          });\r\n          setSelected_Asset_Status({\r\n            label: response.data.data[\"0\"].ast_mst_asset_status,\r\n          });\r\n          setSelected_Asset_Group_Code({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_asset_grpcode +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_grp_desc,\r\n          });\r\n          setSelected_Charge_Cost_Center({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_cost_center +\r\n              \" : \" +\r\n              response.data.data[\"0\"].descs,\r\n          });\r\n          setSelected_Work_Area({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_work_area +\r\n              \" : \" +\r\n              response.data.data[\"0\"].mst_war_desc,\r\n          });\r\n          setSelected_Asset_Level({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_ast_lvl +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_lvl_desc,\r\n          });\r\n          setSelected_Asset_Location({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_asset_locn +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_loc_desc,\r\n          });\r\n          setSelected_Work_Group({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_wrk_grp +\r\n              \" : \" +\r\n              response.data.data[\"0\"].wrk_grp_desc,\r\n          });\r\n\r\n          Swal.close();\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: response.data,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_assetmaster_select...\",\r\n          text: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectedAssetNo = (dataa) => {\r\n    get_assetmaster_select(dataa);\r\n  };\r\n\r\n  const handleRowData2 = (dataLenth, dataa, dataSecond) => {\r\n    // Use the row data in the second component\r\n    setPermanentIDFlag(dataa);\r\n   \r\n    if (dataLenth !== undefined && dataLenth !== null) {\r\n      setTotalAssetNo(dataLenth);\r\n    }\r\n    // if (dataa !== undefined && dataa !== null) {\r\n    //   handleSelectedAssetNo(dataa);\r\n    // }\r\n    if (dataSecond == \"1\") {\r\n      setModalOpenAsset(false);\r\n      setTotalSearch(\"\");\r\n    }\r\n  };\r\n \r\n  const handleRowData3 = (dataLenth, dataa, dataSecond) => {\r\n    // Use the row data in the second component\r\n    setCustomerCode(dataa);\r\n   \r\n    if (dataLenth !== undefined && dataLenth !== null) {\r\n      setTotalAssetNo(dataLenth);\r\n    }\r\n    // if (dataa !== undefined && dataa !== null) {\r\n    //   handleSelectedAssetNo(dataa);\r\n    // }\r\n    if (dataSecond == \"1\") {\r\n      setModalOpenAssetCustomerCode(false);\r\n      setTotalSearch(\"\");\r\n    }\r\n  };\r\n\r\n  const handleRowDataPagechg = (pageCount) => {\r\n    setViewedTotlRows(pageCount);\r\n  };\r\n\r\n  const handelRowSearch = (searchTotl) => {\r\n    setTotalSearch(searchTotl);\r\n  };\r\n  function CustomTextField({ rightIcons, ...props }) {\r\n    return (\r\n      <TextField\r\n        {...props}\r\n        InputProps={{\r\n          endAdornment: rightIcons && (\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              {rightIcons.map((icon, index) => (\r\n                <IconButton key={index} onClick={icon.props.onClick}>{icon}</IconButton>\r\n              ))}\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n/*   add new asset code by stay */\r\n  const New_Asset = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n\r\n    //Swal.showLoading();\r\n    let get_date = Moment().utcOffset(\"+08:00\").format(\"yyyy-MM-DD HH:mm:ss\");\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    //Select Status\r\n    let Status, setStatus;\r\n    if (selected_Status.label == \"\" || selected_Status.label == null) {\r\n      setStatus = \"\";\r\n    } else {\r\n      Status = selected_Status.label.split(\":\");\r\n      setStatus = Status[0];\r\n     // console.log(\"Status: \", Status[0])\r\n    }\r\n\r\n  let PermanentIDFlag, setPermanentIDFlag;\r\n  if (typeof Permanent_IDFlag === \"string\" && Permanent_IDFlag !== \"\") {\r\n      // Split the string only if it's not empty\r\n      PermanentIDFlag = Permanent_IDFlag.split(\":\");\r\n      setPermanentIDFlag = PermanentIDFlag[0].trim();\r\n  } else {\r\n      setPermanentIDFlag = \"\";\r\n  }\r\n\r\n    //Select Asset_Critical \r\n    let Asset_Critical, setAsset_Critical;\r\n    if (selected_CriFactor == \"\" || selected_CriFactor == null) {\r\n      setAsset_Critical = \"\";\r\n    } else {\r\n      Asset_Critical = selected_CriFactor.label.split(\":\");\r\n      setAsset_Critical = Asset_Critical[0];\r\n    //  console.log(\"Asset_Critical \", setAsset_Critical)\r\n    }\r\n\r\n    //Select Asset Type \r\n    let Asset_Type, setAsset_Type;\r\n    if (selected_AssetType == \"\" || selected_AssetType == null) {\r\n      setAsset_Type = \"\";\r\n    } else {\r\n      Asset_Type = selected_AssetType.label.split(\":\");\r\n      setAsset_Type = Asset_Type[0];\r\n     // console.log(\"Asset_Critical \", setAsset_Type)\r\n    }\r\n\r\n    //Select Asset Code \r\n    let Asset_Code, setAsset_Code;\r\n    if (selected_AssetCode == \"\" || selected_AssetCode == null) {\r\n      setAsset_Code = \"\";\r\n    } else {\r\n      Asset_Code = selected_AssetCode.label.split(\":\");\r\n      setAsset_Code = Asset_Code[0];\r\n    //  console.log(\"Asset_Code \", setAsset_Code);\r\n    }\r\n\r\n    //Select Asset Group Code \r\n    let Asset_GroupCode, setAsset_GroupCode;\r\n    if (selected_AssetGroupCode == \"\" || selected_AssetGroupCode == null) {\r\n      setAsset_GroupCode = \"\";\r\n    } else {\r\n      Asset_GroupCode = selected_AssetGroupCode.label.split(\":\");\r\n      setAsset_GroupCode = Asset_GroupCode[0];\r\n   //   console.log(\"Asset_GroupCode \", setAsset_GroupCode);\r\n    }\r\n\r\n    //Select Cost Center \r\n    let Asset_CostCenter, setAsset_CostCenter;\r\n    if (selected_Charge_Cost_Center == \"\" || selected_Charge_Cost_Center == null) {\r\n      setAsset_CostCenter = \"\";\r\n    } else {\r\n      Asset_CostCenter = selected_Charge_Cost_Center.label.split(\":\");\r\n      setAsset_CostCenter = Asset_CostCenter[0];\r\n   //   console.log(\"Asset_CostCenter \", setAsset_CostCenter);\r\n    }\r\n\r\n    //Select Zone \r\n    let Asset_WorkArea, setAsset_WorkArea;\r\n    if (selected_Work_Area == \"\" || selected_Work_Area == null) {\r\n      setAsset_WorkArea = \"\";\r\n    } else {\r\n      Asset_WorkArea = selected_Work_Area.label.split(\":\");\r\n      setAsset_WorkArea = Asset_WorkArea[0];\r\n   //   console.log(\"Asset_WorkArea \", setAsset_WorkArea);\r\n    }\r\n\r\n  //Select Asset Location \r\n  let Asset_Location, setAsset_Location;\r\n  if (selected_Asset_Location == \"\" || selected_Asset_Location == null) {\r\n    setAsset_Location = \"\";\r\n  } else {\r\n    Asset_Location = selected_Asset_Location.label.split(\":\");\r\n    setAsset_Location = Asset_Location[0];\r\n  //  console.log(\"Asset_Location \", setAsset_Location);\r\n  }\r\n\r\n //Select Asset Level\r\n let Asset_Level, setAsset_Level;\r\n \r\n if (selected_Asset_Level === \"\" || selected_Asset_Level === null) {\r\n   setAsset_Level = \"\";\r\n } else {\r\n   Asset_Level = selected_Asset_Level.label.split(\":\");\r\n   setAsset_Level = Asset_Level[0];\r\n //  console.log(\"Asset_Level \", Asset_Level[0])\r\n }\r\n \r\n let Asset_WorkGroup, setAsset_WorkGroup;\r\nif (!selected_Work_Group || selected_Work_Group.length === 0 || selected_Work_Group[0] === null) {\r\n  setAsset_WorkGroup = \"\";\r\n} else {\r\n  Asset_WorkGroup = selected_Work_Group.label.split(\":\");\r\n  if (Asset_WorkGroup && Asset_WorkGroup.length > 0) {\r\n    setAsset_WorkGroup = Asset_WorkGroup[0];\r\n  } else {\r\n    setAsset_WorkGroup = \"\";\r\n  }\r\n \r\n}\r\n\r\n//Select Labor Account\r\nlet LaborAccountValue;\r\nif (\r\n  selected_Labor_Account.length === 0 ||\r\n  !selected_Labor_Account.label\r\n) {\r\n  LaborAccountValue = \"\";\r\n} else {\r\n  const LaborAccount = selected_Labor_Account.label.split(\":\");\r\n  LaborAccountValue = LaborAccount[0];\r\n}\r\n\r\n//Select Material Account\r\nlet MaterialAccountValue;\r\nif (\r\n  \r\n  selected_Material_Account.length === 0 ||\r\n  !selected_Material_Account.label\r\n) {\r\n  MaterialAccountValue = \"\";\r\n} else {\r\n  const MaterialAccount = selected_Material_Account.label.split(\":\");\r\n  MaterialAccountValue = MaterialAccount[0];\r\n}\r\n\r\n//Select Contract Account\r\nlet ContractAccountValue;\r\nif (\r\n  \r\n  selected_Contract_Account.length === 0 ||\r\n  !selected_Contract_Account.label\r\n) {\r\n  ContractAccountValue = \"\";\r\n} else {\r\n  const ContractAccount = selected_Contract_Account.label.split(\":\");\r\n  ContractAccountValue = ContractAccount[0];\r\n}\r\n\r\n  //Select Purchase Date\r\n  let date_of_purchase = \"\";\r\n  if (PurchaseDate == \"\" || PurchaseDate == null) {\r\n    date_of_purchase = \"\";\r\n  } else {\r\n    date_of_purchase = Moment(PurchaseDate)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //  console.log(\"purchase_date \", date_of_purchase);\r\n  }\r\n\r\n  //Select Warranty Date\r\n  let date_of_Warranty = \"\";\r\n  if (WarrantyDate == \"\" || WarrantyDate == null) {\r\n    date_of_Warranty = \"\";\r\n  } else {\r\n    date_of_Warranty = Moment(WarrantyDate)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n  //    console.log(\"Warranty__date \", date_of_Warranty);\r\n  }\r\n\r\n  // select UDFDate_1 \r\n  let date_of_1 = \"\";\r\n  if (UDFDate_1 == \"\" || UDFDate_1 == null) {\r\n    date_of_1 = \"\";\r\n  } else {\r\n    date_of_1 = Moment(UDFDate_1)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_1 \", date_of_1);\r\n  }\r\n\r\n  // select UDFDate_2 \r\n  let date_of_2 = \"\";\r\n  if (UDFDate_2 == \"\" || UDFDate_2 == null) {\r\n    date_of_2 = \"\";\r\n  } else {\r\n    date_of_2 = Moment(UDFDate_2)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n      //console.log(\"UDFDate_2 \", date_of_2);\r\n  }\r\n\r\n  // select UDFDate_3 \r\n  let date_of_3 = \"\";\r\n  if (UDFDate_3 == \"\" || UDFDate_3 == null) {\r\n    date_of_3 = \"\";\r\n  } else {\r\n    date_of_3 = Moment(UDFDate_3)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_3 \", date_of_3);\r\n  }\r\n\r\n  // select UDFDate_4 \r\n  let date_of_4 = \"\";\r\n  if (UDFDate_4 == \"\" || UDFDate_4 == null) {\r\n    date_of_4 = \"\";\r\n  } else {\r\n    date_of_4 = Moment(UDFDate_4)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_4 \", date_of_4);\r\n  }\r\n\r\n  // select UDFDate_5 \r\n  let date_of_5 = \"\";\r\n  if (UDFDate_5 == \"\" || UDFDate_5 == null) {\r\n    date_of_5 = \"\";\r\n  } else {\r\n    date_of_5 = Moment(UDFDate_5)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_5 \", date_of_5);\r\n  }\r\n\r\n  // select UDFDate_6 \r\n  let date_of_6 = \"\";\r\n  if (UDFDate_6 == \"\" || UDFDate_6 == null) {\r\n    date_of_6 = \"\";\r\n  } else {\r\n    date_of_6 = Moment(UDFDate_6)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_6 \", date_of_6);\r\n  }\r\n\r\n  // select UDFDate_7 \r\n  let date_of_7 = \"\";\r\n  if (UDFDate_7 == \"\" || UDFDate_7 == null) {\r\n    date_of_7 = \"\";\r\n  } else {\r\n    date_of_7 = Moment(UDFDate_7)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_7 \", date_of_7);\r\n  }\r\n\r\n  // select UDFDate_8 \r\n  let date_of_8 = \"\";\r\n  if (UDFDate_8 == \"\" || UDFDate_8 == null) {\r\n    date_of_8 = \"\";\r\n  } else {\r\n    date_of_8 = Moment(UDFDate_8)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_8 \", date_of_8);\r\n  }\r\n\r\n  // select UDFDate_9 \r\n  let date_of_9 = \"\";\r\n  if (UDFDate_9 == \"\" || UDFDate_9 == null) {\r\n    date_of_9 = \"\";\r\n  } else {\r\n    date_of_9 = Moment(UDFDate_9)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_9 \", date_of_9);\r\n  }\r\n\r\n  // select UDFDate_10 \r\n  let date_of_10 = \"\";\r\n  if (UDFDate_10 == \"\" || UDFDate_10 == null) {\r\n    date_of_10 = \"\";\r\n  } else {\r\n    date_of_10 = Moment(UDFDate_10)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n  //    console.log(\"UDFDate_10 \", date_of_10);\r\n  }\r\n\r\n  // select UDFDate_11 \r\n  let date_of_11 = \"\";\r\n  if (UDFDate_11 == \"\" || UDFDate_11 == null) {\r\n    date_of_11 = \"\";\r\n  } else {\r\n    date_of_11 = Moment(UDFDate_11)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_11 \", date_of_11);\r\n  }\r\n\r\n  // select UDFDate_12 \r\n  let date_of_12 = \"\";\r\n  if (UDFDate_12 == \"\" || UDFDate_12 == null) {\r\n    date_of_12 = \"\";\r\n  } else {\r\n    date_of_12 = Moment(UDFDate_12)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_12 \", date_of_12);\r\n  }\r\n\r\n  // select UDFDate_13 \r\n  let date_of_13 = \"\";\r\n  if (UDFDate_13 == \"\" || UDFDate_13 == null) {\r\n    date_of_13 = \"\";\r\n  } else {\r\n    date_of_13 = Moment(UDFDate_13)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_13 \", date_of_13);\r\n  }\r\n\r\n  // select UDFDate_14 \r\n  let date_of_14 = \"\";\r\n  if (UDFDate_14 == \"\" || UDFDate_14 == null) {\r\n    date_of_14 = \"\";\r\n  } else {\r\n    date_of_14 = Moment(UDFDate_14)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_14 \", date_of_14);\r\n  }\r\n\r\n  // select UDFDate_15 \r\n  let date_of_15 = \"\";\r\n  if (UDFDate_15 == \"\" || UDFDate_15 == null) {\r\n    date_of_15 = \"\";\r\n  } else {\r\n    date_of_15 = Moment(UDFDate_15)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_15 \", date_of_15);\r\n  }\r\n\r\n  let missingFields = [];\r\n\r\n    var json_AssetInsert = {\r\n      site_cd: site_ID,\r\n      ast_mst_asset_no: AssetNo.trim(),\r\n      ast_mst_asset_status: setStatus.trim(),\r\n      ast_mst_asset_shortdesc: Short_Description.trim(),\r\n      ast_mst_cri_factor: setAsset_Critical.trim(),\r\n      ast_mst_asset_longdesc: Long_Description.trim(),\r\n      ast_mst_perm_id: Area_ID.trim(),\r\n      ast_mst_asset_type: setAsset_Type.trim(),\r\n      ast_mst_work_area: setAsset_WorkArea.trim(),\r\n      ast_mst_asset_code: setAsset_Code.trim(),\r\n      ast_mst_asset_locn: setAsset_Location.trim(),\r\n      ast_mst_asset_grpcode: setAsset_GroupCode.trim(),\r\n      ast_mst_ast_lvl: setAsset_Level.trim(),\r\n      ast_mst_cost_center: setAsset_CostCenter.trim(),\r\n      ast_mst_wrk_grp: setAsset_WorkGroup.trim(),\r\n      ast_mst_parent_flag: setPermanentIDFlag.trim(),\r\n      ast_mst_parent_id: Permanent_ID.toString().trim(),\r\n      ast_mst_safety_rqmts: SafetyRequirement.trim(),\r\n      ast_mst_print_count: BarcodeCount.trim(),\r\n      ast_det_mfg_cd: ManufactureCode ? ManufactureCode.trim() : ManufactureCode,\r\n      ast_det_modelno: \"\",\r\n      ast_det_asset_cost: AssetCost ? AssetCost.trim() : \"0\",\r\n      ast_det_purchase_date: date_of_purchase,\r\n      ast_det_depr_term: ExpectedLifeYear && typeof ExpectedLifeYear === 'string' ? ExpectedLifeYear.trim() : ExpectedLifeYear,\r\n      ast_det_repl_cost : ResidualValue && typeof ResidualValue === 'string' ? ResidualValue.trim() : \"0\",\r\n      ast_det_warranty_date: date_of_Warranty,\r\n      ast_det_cus_code: CustomerCode ? CustomerCode.trim() : \"\",\r\n\r\n      //ast_det_depr_method: setSelectDescMethod, \r\n      \r\n      ast_det_l_account:LaborAccountValue ? LaborAccountValue.trim() : \"\",\r\n      ast_det_m_account:MaterialAccountValue ? MaterialAccountValue.trim() : \"\",\r\n      ast_det_c_account:ContractAccountValue ? ContractAccountValue.trim() : \"\",\r\n      ast_det_depr_date: \"\",\r\n      ast_det_depr_by: \"\",\r\n      ast_det_acc_depr_cost: \"\",\r\n      ast_det_net_book_value: \"\",\r\n      ast_det_dispose_date: \"\",\r\n      ast_det_dispose_by: \"\",\r\n      ast_det_dispose_type: \"\",\r\n      ast_det_dispose_value: \"\",\r\n      \r\n      ast_det_varchar1: UDFText_1 ? UDFText_1.trim() : UDFText_1,\r\n      ast_det_varchar2: UDFText_2 ? UDFText_2.trim() : UDFText_2,\r\n      ast_det_varchar3: UDFText_3 ? UDFText_3.trim() : UDFText_3,\r\n      ast_det_varchar4: UDFText_4 ? UDFText_4.trim() : UDFText_4,\r\n      ast_det_varchar5: UDFText_5 ? UDFText_5.trim() : UDFText_5,\r\n      ast_det_varchar6: UDFText_6 ? UDFText_6.trim() : UDFText_6,\r\n      ast_det_varchar7: UDFText_7 ? UDFText_7.trim() : UDFText_7,\r\n      ast_det_varchar8: UDFText_8 ? UDFText_8.trim() : UDFText_8,\r\n      ast_det_varchar9: UDFText_9 ? UDFText_9.trim() : UDFText_9,\r\n      ast_det_varchar10: UDFText_10 ? UDFText_10.trim() : UDFText_10,\r\n      ast_det_varchar11: UDFText_11 ? UDFText_11.trim() : UDFText_11,\r\n      ast_det_varchar12: UDFText_12 ? UDFText_12.trim() : UDFText_12,\r\n      ast_det_varchar13: UDFText_13 ? UDFText_13.trim() : UDFText_13,\r\n      ast_det_varchar14: UDFText_14 ? UDFText_14.trim() : UDFText_14,\r\n      ast_det_varchar15: UDFText_15 ? UDFText_15.trim() : UDFText_15,\r\n      ast_det_varchar16: UDFText_16 ? UDFText_16.trim() : UDFText_16,\r\n      ast_det_varchar17: UDFText_17 ? UDFText_17.trim() : UDFText_17,\r\n      ast_det_varchar18: UDFText_18 ? UDFText_18.trim() : UDFText_18,\r\n      ast_det_varchar19: UDFText_19 ? UDFText_19.trim() : UDFText_19,\r\n      ast_det_varchar20: UDFText_20 ? UDFText_20.trim() : UDFText_20,\r\n      ast_det_varchar21: UDFText_21 ? UDFText_21.trim() : UDFText_21,\r\n      ast_det_varchar22: UDFText_22 ? UDFText_22.trim() : UDFText_22,\r\n      ast_det_varchar23: UDFText_23 ? UDFText_23.trim() : UDFText_23,\r\n      ast_det_varchar24: UDFText_24 ? UDFText_24.trim() : UDFText_24,\r\n      ast_det_varchar25: UDFText_25 ? UDFText_25.trim() : UDFText_25,\r\n      ast_det_varchar26: UDFText_26 ? UDFText_26.trim() : UDFText_26,\r\n      ast_det_varchar27: UDFText_27 ? UDFText_27.trim() : UDFText_27,\r\n      ast_det_varchar28: UDFText_28 ? UDFText_28.trim() : UDFText_28,\r\n      ast_det_varchar29: UDFText_29 ? UDFText_29.trim() : UDFText_29,\r\n      ast_det_varchar30: UDFText_30 ? UDFText_30.trim() : UDFText_30,\r\n\r\n      ast_det_numeric1: UDFNumber_1 ? UDFNumber_1.trim() : UDFNumber_1,\r\n      ast_det_numeric2: UDFNumber_2 ? UDFNumber_2.trim() : UDFNumber_2,\r\n      ast_det_numeric3: UDFNumber_3 ? UDFNumber_3.trim() : UDFNumber_3,\r\n      ast_det_numeric4: UDFNumber_4 ? UDFNumber_4.trim() : UDFNumber_4,\r\n      ast_det_numeric5: UDFNumber_5 ? UDFNumber_5.trim() : UDFNumber_5,\r\n      ast_det_numeric6: UDFNumber_6 ? UDFNumber_6.trim() : UDFNumber_6,\r\n      ast_det_numeric7: UDFNumber_7 ? UDFNumber_7.trim() : UDFNumber_7,\r\n      ast_det_numeric8: UDFNumber_8 ? UDFNumber_8.trim() : UDFNumber_8,\r\n      ast_det_numeric9: UDFNumber_9 ? UDFNumber_9.trim() : UDFNumber_9,\r\n      ast_det_numeric10: UDFNumber_10 ? UDFNumber_10.trim() : UDFNumber_10,\r\n      ast_det_numeric11: UDFNumber_11 ? UDFNumber_11.trim() : UDFNumber_11,\r\n      ast_det_numeric12: UDFNumber_12 ? UDFNumber_12.trim() : UDFNumber_12,\r\n      ast_det_numeric13: UDFNumber_13 ? UDFNumber_13.trim() : UDFNumber_13,\r\n      ast_det_numeric14: UDFNumber_14 ? UDFNumber_14.trim() : UDFNumber_14,\r\n      ast_det_numeric15: UDFNumber_15 ? UDFNumber_15.trim() : UDFNumber_15,\r\n\r\n      ast_det_datetime1: date_of_1 ? date_of_1.trim() : date_of_1,\r\n      ast_det_datetime2: date_of_2 ? date_of_2.trim() : date_of_2,\r\n      ast_det_datetime3: date_of_3 ? date_of_3.trim() : date_of_3,\r\n      ast_det_datetime4: date_of_4 ? date_of_4.trim() : date_of_4,\r\n      ast_det_datetime5: date_of_5 ? date_of_5.trim() : date_of_5,\r\n      ast_det_datetime6: date_of_6 ? date_of_6.trim() : date_of_6,\r\n      ast_det_datetime7: date_of_7 ? date_of_7.trim() : date_of_7,\r\n      ast_det_datetime8: date_of_8 ? date_of_8.trim() : date_of_8,\r\n      ast_det_datetime9: date_of_9 ? date_of_9.trim() : date_of_9,\r\n      ast_det_datetime10: date_of_10 ? date_of_10.trim() : date_of_10,\r\n      ast_det_datetime11: date_of_11 ? date_of_11.trim() : date_of_11,\r\n      ast_det_datetime12: date_of_12 ? date_of_12.trim() : date_of_12,\r\n      ast_det_datetime13: date_of_13 ? date_of_13.trim() : date_of_13,\r\n      ast_det_datetime14: date_of_14 ? date_of_14.trim() : date_of_14,\r\n      ast_det_datetime15: date_of_15 ? date_of_15.trim() : date_of_15,\r\n\r\n      asset_type_ID: Asset_type_ID.trim(),\r\n      asset_group_ID :Asset_group_ID ? Asset_group_ID.trim() : selected_AssetGroupCode.key,\r\n      ImgUpload: imageSelect,\r\n      audit_user: emp_mst_login_id.trim(),\r\n      ast_mst_create_by: emp_mst_login_id.trim(),\r\n      ast_aud_originator: emp_mst_empl_id.trim(),\r\n\r\n    };\r\n\r\n // console.log(\"json_AssetInsert_____\",json_AssetInsert);\r\n\r\n    for (let i = 0; i < AssetMandatoryFiled.length; i++) {\r\n      const item = AssetMandatoryFiled[i];\r\n      const fieldValue = json_AssetInsert[item.column_name];\r\n      if (fieldValue !== null && fieldValue.trim() === \"\") {\r\n        missingFields = item.customize_label;\r\n        setErrorField(item.column_name);\r\n        break;\r\n      }\r\n    }\r\n    \r\n    // If any fields are missing, display an error message\r\n    if (Button_save !== \"Duplicate\" && missingFields.length > 0) {\r\n      Swal.close();\r\n    \r\n        const errorMessage = `Please fill the required field: ${missingFields}`;\r\n        setSnackbarOpen(true);\r\n        setSnackbarMessage(errorMessage);\r\n        setSnackbarSeverity('error');\r\n    }else{\r\n    \r\n     try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_new_asset2.php\",\r\n        JSON.stringify(json_AssetInsert)\r\n      );\r\n      console.log(\"json_Asset Data\", response);\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n       // console.log(\"responseJson\", response.data.ROW_ID);\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: response.data.status,\r\n          text: response.data.message,\r\n        }).then(() => {\r\n          navigate(`/dashboard/asset/list`);\r\n        });\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops, something went wrong...\",\r\n        text: error,\r\n      });\r\n    }\r\n  }\r\n  };\r\n\r\n  const Update_Asset = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n\r\n    let get_date = Moment().utcOffset(\"+08:00\").format(\"yyyy-MM-DD HH:mm:ss\");\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    //Select Status\r\n    let Status, setStatus;\r\n    if (selected_Status.label == \"\" || selected_Status.label == null) {\r\n      setStatus = \"\";\r\n    } else {\r\n      Status = selected_Status.label.split(\":\");\r\n      setStatus = Status[0];\r\n     // console.log(\"Status: \", Status[0])\r\n    }\r\n    //CustomerCode Permanent_IDFlag\r\n    let PermanentIDFlag, setPermanentIDFlag;\r\n  if (typeof Permanent_IDFlag === \"string\" && Permanent_IDFlag !== \"\") {\r\n      // Split the string only if it's not empty\r\n      PermanentIDFlag = Permanent_IDFlag.split(\":\");\r\n      setPermanentIDFlag = PermanentIDFlag[0].trim();\r\n  } else {\r\n      setPermanentIDFlag = \"\";\r\n  }\r\n\r\n    //Select Asset_Critical \r\n    let Asset_Critical, setAsset_Critical;\r\n    if (selected_CriFactor == \"\" || selected_CriFactor == null) {\r\n      setAsset_Critical = \"\";\r\n    } else {\r\n      Asset_Critical = selected_CriFactor.label.split(\":\");\r\n      setAsset_Critical = Asset_Critical[0];\r\n    //  console.log(\"Asset_Critical \", setAsset_Critical)\r\n    }\r\n\r\n    //Select Asset Type \r\n    let Asset_Type, setAsset_Type;\r\n    if (selected_AssetType == \"\" || selected_AssetType == null) {\r\n      setAsset_Type = \"\";\r\n    } else {\r\n      Asset_Type = selected_AssetType.label.split(\":\");\r\n      setAsset_Type = Asset_Type[0];\r\n     // console.log(\"Asset_Critical \", setAsset_Type)\r\n    }\r\n\r\n    //Select Asset Code \r\n    let Asset_Code, setAsset_Code;\r\n    if (selected_AssetCode == \"\" || selected_AssetCode == null) {\r\n      setAsset_Code = \"\";\r\n    } else {\r\n      Asset_Code = selected_AssetCode.label.split(\":\");\r\n      setAsset_Code = Asset_Code[0];\r\n    //  console.log(\"Asset_Code \", setAsset_Code);\r\n    }\r\n\r\n    //Select Asset Group Code \r\n    let Asset_GroupCode, setAsset_GroupCode;\r\n    if (selected_AssetGroupCode == \"\" || selected_AssetGroupCode == null) {\r\n      setAsset_GroupCode = \"\";\r\n    } else {\r\n      Asset_GroupCode = selected_AssetGroupCode.label.split(\":\");\r\n      setAsset_GroupCode = Asset_GroupCode[0];\r\n   //   console.log(\"Asset_GroupCode \", setAsset_GroupCode);\r\n    }\r\n\r\n    //Select Cost Center \r\n    let Asset_CostCenter, setAsset_CostCenter;\r\n    if (selected_Charge_Cost_Center == \"\" || selected_Charge_Cost_Center == null) {\r\n      setAsset_CostCenter = \"\";\r\n    } else {\r\n      Asset_CostCenter = selected_Charge_Cost_Center.label.split(\":\");\r\n      setAsset_CostCenter = Asset_CostCenter[0];\r\n   //   console.log(\"Asset_CostCenter \", setAsset_CostCenter);\r\n    }\r\n\r\n    //Select Zone \r\n    let Asset_WorkArea, setAsset_WorkArea;\r\n    if (selected_Work_Area == \"\" || selected_Work_Area == null) {\r\n      setAsset_WorkArea = \"\";\r\n    } else {\r\n      Asset_WorkArea = selected_Work_Area.label.split(\":\");\r\n      setAsset_WorkArea = Asset_WorkArea[0];\r\n   //   console.log(\"Asset_WorkArea \", setAsset_WorkArea);\r\n    }\r\n\r\n  //Select Asset Location \r\n  let Asset_Location, setAsset_Location;\r\n  if (selected_Asset_Location == \"\" || selected_Asset_Location == null) {\r\n    setAsset_Location = \"\";\r\n  } else {\r\n    Asset_Location = selected_Asset_Location.label.split(\":\");\r\n    setAsset_Location = Asset_Location[0];\r\n  //  console.log(\"Asset_Location \", setAsset_Location);\r\n  }\r\n\r\n //Select Asset Level\r\n let Asset_Level, setAsset_Level;\r\n if (selected_Asset_Level === \"\" || selected_Asset_Level === null) {\r\n   setAsset_Level = \"\";\r\n } else {\r\n   Asset_Level = selected_Asset_Level.label.split(\":\");\r\n   setAsset_Level = Asset_Level[0];\r\n //  console.log(\"Asset_Level \", Asset_Level[0])\r\n }\r\n\r\n //Select Asset Work Group\r\n let Asset_WorkGroup, setAsset_WorkGroup;\r\n if (selected_Work_Group === \"\" || selected_Work_Group === null) {\r\n  setAsset_WorkGroup = \"\";\r\n } else {\r\n  Asset_WorkGroup = selected_Work_Group.label.split(\":\");\r\n   setAsset_WorkGroup = Asset_WorkGroup[0];\r\n //  console.log(\"Asset_WorkGroup \", Asset_WorkGroup)\r\n }\r\n\r\n//Select Labor Account\r\n//console.log(\"selected_Labor_Account____\",selected_Labor_Account);\r\nlet LaborAccountValue;\r\nif (\r\n  selected_Labor_Account.label === \"\" ||\r\n  selected_Labor_Account.label === null\r\n) {\r\n  LaborAccountValue = \"\";\r\n} else {\r\n  const LaborAccount = selected_Labor_Account.label.split(\":\");\r\n  LaborAccountValue = LaborAccount[0];\r\n}\r\n\r\n//Select Material Account\r\nlet MaterialAccountValue;\r\nif (\r\n  \r\n  selected_Material_Account.label === \"\" ||\r\n  selected_Material_Account.label === null\r\n) {\r\n  MaterialAccountValue = \"\";\r\n} else {\r\n  const MaterialAccount = selected_Material_Account.label.split(\":\");\r\n  MaterialAccountValue = MaterialAccount[0];\r\n}\r\n\r\n//Select Contract Account\r\nlet ContractAccountValue;\r\nif (\r\n  \r\n  selected_Contract_Account.label === \"\" ||\r\n  selected_Contract_Account.label === null\r\n) {\r\n  ContractAccountValue = \"\";\r\n} else {\r\n  const ContractAccount = selected_Contract_Account.label.split(\":\");\r\n  ContractAccountValue = ContractAccount[0];\r\n}\r\n\r\n  //Select Customer Code\r\n  let CustomerCodeValue;\r\n  if (\r\n    selected_Customer_Code.length === 0 ||\r\n    selected_Customer_Code[0] === null\r\n  ) {\r\n    CustomerCodeValue = \"\";\r\n  } else {\r\n    const CustomerCode = selected_Customer_Code.label.split(\":\");\r\n    CustomerCodeValue = CustomerCode[0].trim();\r\n  }\r\n\r\n  //Select Purchase Date\r\n  let date_of_purchase = \"\";\r\n  if (PurchaseDate == \"\" || PurchaseDate == null) {\r\n    date_of_purchase = \"\";\r\n  } else {\r\n    date_of_purchase = Moment(PurchaseDate)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //  console.log(\"purchase_date \", date_of_purchase);\r\n  }\r\n\r\n  //Select Warranty Date\r\n  let date_of_Warranty = \"\";\r\n  if (WarrantyDate == \"\" || WarrantyDate == null) {\r\n    date_of_Warranty = \"\";\r\n  } else {\r\n    date_of_Warranty = Moment(WarrantyDate)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n  //    console.log(\"Warranty__date \", date_of_Warranty);\r\n  }\r\n\r\n  // select UDFDate_1 \r\n  let date_of_1 = \"\";\r\n  if (UDFDate_1 == \"\" || UDFDate_1 == null) {\r\n    date_of_1 = \"\";\r\n  } else {\r\n    date_of_1 = Moment(UDFDate_1)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_1 \", date_of_1);\r\n  }\r\n\r\n  // select UDFDate_2 \r\n  let date_of_2 = \"\";\r\n  if (UDFDate_2 == \"\" || UDFDate_2 == null) {\r\n    date_of_2 = \"\";\r\n  } else {\r\n    date_of_2 = Moment(UDFDate_2)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n      //console.log(\"UDFDate_2 \", date_of_2);\r\n  }\r\n\r\n  // select UDFDate_3 \r\n  let date_of_3 = \"\";\r\n  if (UDFDate_3 == \"\" || UDFDate_3 == null) {\r\n    date_of_3 = \"\";\r\n  } else {\r\n    date_of_3 = Moment(UDFDate_3)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_3 \", date_of_3);\r\n  }\r\n\r\n  // select UDFDate_4 \r\n  let date_of_4 = \"\";\r\n  if (UDFDate_4 == \"\" || UDFDate_4 == null) {\r\n    date_of_4 = \"\";\r\n  } else {\r\n    date_of_4 = Moment(UDFDate_4)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_4 \", date_of_4);\r\n  }\r\n\r\n  // select UDFDate_5 \r\n  let date_of_5 = \"\";\r\n  if (UDFDate_5 == \"\" || UDFDate_5 == null) {\r\n    date_of_5 = \"\";\r\n  } else {\r\n    date_of_5 = Moment(UDFDate_5)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_5 \", date_of_5);\r\n  }\r\n\r\n  // select UDFDate_6 \r\n  let date_of_6 = \"\";\r\n  if (UDFDate_6 == \"\" || UDFDate_6 == null) {\r\n    date_of_6 = \"\";\r\n  } else {\r\n    date_of_6 = Moment(UDFDate_6)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_6 \", date_of_6);\r\n  }\r\n\r\n  // select UDFDate_7 \r\n  let date_of_7 = \"\";\r\n  if (UDFDate_7 == \"\" || UDFDate_7 == null) {\r\n    date_of_7 = \"\";\r\n  } else {\r\n    date_of_7 = Moment(UDFDate_7)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_7 \", date_of_7);\r\n  }\r\n\r\n  // select UDFDate_8 \r\n  let date_of_8 = \"\";\r\n  if (UDFDate_8 == \"\" || UDFDate_8 == null) {\r\n    date_of_8 = \"\";\r\n  } else {\r\n    date_of_8 = Moment(UDFDate_8)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_8 \", date_of_8);\r\n  }\r\n\r\n  // select UDFDate_9 \r\n  let date_of_9 = \"\";\r\n  if (UDFDate_9 == \"\" || UDFDate_9 == null) {\r\n    date_of_9 = \"\";\r\n  } else {\r\n    date_of_9 = Moment(UDFDate_9)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_9 \", date_of_9);\r\n  }\r\n\r\n  // select UDFDate_10 \r\n  let date_of_10 = \"\";\r\n  if (UDFDate_10 == \"\" || UDFDate_10 == null) {\r\n    date_of_10 = \"\";\r\n  } else {\r\n    date_of_10 = Moment(UDFDate_10)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n  //    console.log(\"UDFDate_10 \", date_of_10);\r\n  }\r\n\r\n  // select UDFDate_11 \r\n  let date_of_11 = \"\";\r\n  if (UDFDate_11 == \"\" || UDFDate_11 == null) {\r\n    date_of_11 = \"\";\r\n  } else {\r\n    date_of_11 = Moment(UDFDate_11)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_11 \", date_of_11);\r\n  }\r\n\r\n  // select UDFDate_12 \r\n  let date_of_12 = \"\";\r\n  if (UDFDate_12 == \"\" || UDFDate_12 == null) {\r\n    date_of_12 = \"\";\r\n  } else {\r\n    date_of_12 = Moment(UDFDate_12)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_12 \", date_of_12);\r\n  }\r\n\r\n  // select UDFDate_13 \r\n  let date_of_13 = \"\";\r\n  if (UDFDate_13 == \"\" || UDFDate_13 == null) {\r\n    date_of_13 = \"\";\r\n  } else {\r\n    date_of_13 = Moment(UDFDate_13)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_13 \", date_of_13);\r\n  }\r\n\r\n  // select UDFDate_14 \r\n  let date_of_14 = \"\";\r\n  if (UDFDate_14 == \"\" || UDFDate_14 == null) {\r\n    date_of_14 = \"\";\r\n  } else {\r\n    date_of_14 = Moment(UDFDate_14)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_14 \", date_of_14);\r\n  }\r\n\r\n  // select UDFDate_15 \r\n  let date_of_15 = \"\";\r\n  if (UDFDate_15 == \"\" || UDFDate_15 == null) {\r\n    date_of_15 = \"\";\r\n  } else {\r\n    date_of_15 = Moment(UDFDate_15)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_15 \", date_of_15);\r\n  }\r\n  //Check Img state\r\n  let setDbImgRowIdUpdate;\r\n  if (getDbImgRowId == \"\" || getDbImgRowId == null) {\r\n    setDbImgRowIdUpdate = \"\";\r\n  } else {\r\n    setDbImgRowIdUpdate = getDbImgRowId;\r\n  }\r\n\r\n    let missingFields = [];\r\n\r\n    var json_AssetUpdate = {\r\n      site_cd: site_ID,\r\n      ast_mst_asset_no: AssetNo.trim(),\r\n      ast_mst_asset_status: setStatus.trim(),\r\n      ast_mst_asset_shortdesc: Short_Description ? Short_Description.trim() : Short_Description,\r\n      ast_mst_cri_factor: setAsset_Critical.trim(),\r\n      ast_mst_asset_longdesc:Long_Description ? Long_Description.trim() : Long_Description,\r\n      ast_mst_perm_id: Area_ID ? Area_ID.trim() : Area_ID,\r\n      ast_mst_asset_type: setAsset_Type.trim(),\r\n      ast_mst_work_area: setAsset_WorkArea.trim(),\r\n      ast_mst_asset_code: setAsset_Code.trim(),\r\n      ast_mst_asset_locn: setAsset_Location.trim(),\r\n      ast_mst_asset_grpcode: setAsset_GroupCode.trim(),\r\n      ast_mst_ast_lvl: setAsset_Level.trim(),\r\n      ast_mst_cost_center: setAsset_CostCenter.trim(),\r\n      ast_mst_wrk_grp: setAsset_WorkGroup.trim(),\r\n  \r\n      ast_mst_parent_flag: setPermanentIDFlag.trim(),\r\n      ast_mst_parent_id: Permanent_ID.toString().trim(),\r\n      ast_mst_safety_rqmts: SafetyRequirement ? SafetyRequirement.trim() : SafetyRequirement,\r\n      ast_mst_print_count: BarcodeCount ? BarcodeCount.trim() : BarcodeCount,\r\n      ast_det_mfg_cd: ManufactureCode ? ManufactureCode.trim() : ManufactureCode,\r\n      ast_det_modelno: \"\",\r\n      ast_det_asset_cost: AssetCost ? AssetCost.trim() : \"0\",\r\n      ast_det_purchase_date: date_of_purchase,\r\n      ast_det_repl_cost: ResidualValue ? ResidualValue.trim() : \"0\",\r\n      ast_det_warranty_date: date_of_Warranty,\r\n      ast_det_depr_term: ExpectedLifeYear && typeof ExpectedLifeYear === 'string' ? ExpectedLifeYear.trim() : ExpectedLifeYear,\r\n      ast_det_cus_code: CustomerCode ? CustomerCode.trim() : CustomerCode,\r\n     // ast_det_depr_method: selected_Depreciation_Method.label !== \"\" ? selected_Depreciation_Method.label : \"\",\r\n\t    ast_det_l_account:LaborAccountValue,\r\n      ast_det_m_account:MaterialAccountValue,\r\n      ast_det_c_account:ContractAccountValue,\r\n      ast_det_depr_date: \"\",\r\n      ast_det_depr_by: \"\",\r\n      ast_det_acc_depr_cost: \"\",\r\n      ast_det_net_book_value: \"\",\r\n      ast_det_dispose_date: \"\",\r\n      ast_det_dispose_by: \"\",\r\n      ast_det_dispose_type: \"\",\r\n      ast_det_dispose_value: \"\",\r\n\r\n      ast_det_varchar1: UDFText_1 ? UDFText_1.trim() : UDFText_1,\r\n      ast_det_varchar2: UDFText_2 ? UDFText_2.trim() : UDFText_2,\r\n      ast_det_varchar3: UDFText_3 ? UDFText_3.trim() : UDFText_3,\r\n      ast_det_varchar4: UDFText_4 ? UDFText_4.trim() : UDFText_4,\r\n      ast_det_varchar5: UDFText_5 ? UDFText_5.trim() : UDFText_5,\r\n      ast_det_varchar6: UDFText_6 ? UDFText_6.trim() : UDFText_6,\r\n      ast_det_varchar7: UDFText_7 ? UDFText_7.trim() : UDFText_7,\r\n      ast_det_varchar8: UDFText_8 ? UDFText_8.trim() : UDFText_8,\r\n      ast_det_varchar9: UDFText_9 ? UDFText_9.trim() : UDFText_9,\r\n      ast_det_varchar10: UDFText_10 ? UDFText_10.trim() : UDFText_10,\r\n      ast_det_varchar11: UDFText_11 ? UDFText_11.trim() : UDFText_11,\r\n      ast_det_varchar12: UDFText_12 ? UDFText_12.trim() : UDFText_12,\r\n      ast_det_varchar13: UDFText_13 ? UDFText_13.trim() : UDFText_13,\r\n      ast_det_varchar14: UDFText_14 ? UDFText_14.trim() : UDFText_14,\r\n      ast_det_varchar15: UDFText_15 ? UDFText_15.trim() : UDFText_15,\r\n      ast_det_varchar16: UDFText_16 ? UDFText_16.trim() : UDFText_16,\r\n      ast_det_varchar17: UDFText_17 ? UDFText_17.trim() : UDFText_17,\r\n      ast_det_varchar18: UDFText_18 ? UDFText_18.trim() : UDFText_18,\r\n      ast_det_varchar19: UDFText_19 ? UDFText_19.trim() : UDFText_19,\r\n      ast_det_varchar20: UDFText_20 ? UDFText_20.trim() : UDFText_20,\r\n      ast_det_varchar21: UDFText_21 ? UDFText_21.trim() : UDFText_21,\r\n      ast_det_varchar22: UDFText_22 ? UDFText_22.trim() : UDFText_22,\r\n      ast_det_varchar23: UDFText_23 ? UDFText_23.trim() : UDFText_23,\r\n      ast_det_varchar24: UDFText_24 ? UDFText_24.trim() : UDFText_24,\r\n      ast_det_varchar25: UDFText_25 ? UDFText_25.trim() : UDFText_25,\r\n      ast_det_varchar26: UDFText_26 ? UDFText_26.trim() : UDFText_26,\r\n      ast_det_varchar27: UDFText_27 ? UDFText_27.trim() : UDFText_27,\r\n      ast_det_varchar28: UDFText_28 ? UDFText_28.trim() : UDFText_28,\r\n      ast_det_varchar29: UDFText_29 ? UDFText_29.trim() : UDFText_29,\r\n      ast_det_varchar30: UDFText_30 ? UDFText_30.trim() : UDFText_30,\r\n\r\n      ast_det_numeric1: UDFNumber_1 ? UDFNumber_1.trim() : UDFNumber_1,\r\n      ast_det_numeric2: UDFNumber_2 ? UDFNumber_2.trim() : UDFNumber_2,\r\n      ast_det_numeric3: UDFNumber_3 ? UDFNumber_3.trim() : UDFNumber_3,\r\n      ast_det_numeric4: UDFNumber_4 ? UDFNumber_4.trim() : UDFNumber_4,\r\n      ast_det_numeric5: UDFNumber_5 ? UDFNumber_5.trim() : UDFNumber_5,\r\n      ast_det_numeric6: UDFNumber_6 ? UDFNumber_6.trim() : UDFNumber_6,\r\n      ast_det_numeric7: UDFNumber_7 ? UDFNumber_7.trim() : UDFNumber_7,\r\n      ast_det_numeric8: UDFNumber_8 ? UDFNumber_8.trim() : UDFNumber_8,\r\n      ast_det_numeric9: UDFNumber_9 ? UDFNumber_9.trim() : UDFNumber_9,\r\n      ast_det_numeric10: UDFNumber_10 ? UDFNumber_10.trim() : UDFNumber_10,\r\n      ast_det_numeric11: UDFNumber_11 ? UDFNumber_11.trim() : UDFNumber_11,\r\n      ast_det_numeric12: UDFNumber_12 ? UDFNumber_12.trim() : UDFNumber_12,\r\n      ast_det_numeric13: UDFNumber_13 ? UDFNumber_13.trim() : UDFNumber_13,\r\n      ast_det_numeric14: UDFNumber_14 ? UDFNumber_14.trim() : UDFNumber_14,\r\n      ast_det_numeric15: UDFNumber_15 ? UDFNumber_15.trim() : UDFNumber_15,\r\n\r\n      ast_det_datetime1: date_of_1 ? date_of_1.trim() : date_of_1,\r\n      ast_det_datetime2: date_of_2 ? date_of_2.trim() : date_of_2,\r\n      ast_det_datetime3: date_of_3 ? date_of_3.trim() : date_of_3,\r\n      ast_det_datetime4: date_of_4 ? date_of_4.trim() : date_of_4,\r\n      ast_det_datetime5: date_of_5 ? date_of_5.trim() : date_of_5,\r\n      ast_det_datetime6: date_of_6 ? date_of_6.trim() : date_of_6,\r\n      ast_det_datetime7: date_of_7 ? date_of_7.trim() : date_of_7,\r\n      ast_det_datetime8: date_of_8 ? date_of_8.trim() : date_of_8,\r\n      ast_det_datetime9: date_of_9 ? date_of_9.trim() : date_of_9,\r\n      ast_det_datetime10: date_of_10 ? date_of_10.trim() : date_of_10,\r\n      ast_det_datetime11: date_of_11 ? date_of_11.trim() : date_of_11,\r\n      ast_det_datetime12: date_of_12 ? date_of_12.trim() : date_of_12,\r\n      ast_det_datetime13: date_of_13 ? date_of_13.trim() : date_of_13,\r\n      ast_det_datetime14: date_of_14 ? date_of_14.trim() : date_of_14,\r\n      ast_det_datetime15: date_of_15 ? date_of_15.trim() : date_of_15,\r\n\r\n      asset_type_ID: AutoNumring.trim(),\r\n\r\n      audit_user: emp_mst_login_id.trim(),\r\n      ast_mst_create_by: emp_mst_login_id.trim(),\r\n      ast_aud_originator: emp_mst_empl_id.trim(),\r\n      ast_mst_create_date: get_date,\r\n\r\n      SingleImguploadStatus:imguploadStatus,\r\n      ImguploadRefStatus:imguploadRefStatus ? imguploadRefStatus :\"EMPTY\",\r\n\r\n      ImgGetDbImgRowId: setDbImgRowIdUpdate,\r\n      ImgUpload: imageSelect,\r\n      SpecialOdrResult: SpecialOdrResult,\r\n\r\n      removedRefItems: removedRefItems,\r\n      RowID: RowID,\r\n    };\r\n    \r\n // console.log(\"json_AssetUpdate____\",json_AssetUpdate);\r\n    for (let i = 0; i < AssetMandatoryFiled.length; i++) {\r\n      const item = AssetMandatoryFiled[i];\r\n      const fieldValue = json_AssetUpdate[item.column_name];\r\n      if (fieldValue !== null && fieldValue.trim() === \"\") {\r\n        missingFields = item.customize_label;\r\n        setErrorField(item.column_name);\r\n        break; // Stop loop as soon as a missing field is found\r\n      }\r\n    }\r\n  //  console.log(\"Code block executed\");\r\n    // If any fields are missing, display an error message\r\n    if (missingFields.length > 0) {\r\n      Swal.close();\r\n  \r\n      const errorMessage = `Please fill the required field: ${missingFields}`;\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n\r\n      \r\n    }else{\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/update_asset.php\",\r\n        JSON.stringify(json_AssetUpdate)\r\n      );\r\n     // console.log(\"response_____update__\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        if (selectedPdfFiles.length > 0) {\r\n          const formData = new FormData();\r\n          for (let i = 0; i < selectedPdfFiles.length; i++) {\r\n            formData.append(\"files[]\", selectedPdfFiles[i]);\r\n          }\r\n          formData.append(\"site_cd\", site_ID);\r\n          formData.append(\"RowID\", RowID);\r\n          formData.append(\"RefImgUploadStatus\", imguploadRefStatus);\r\n          formData.append(\"audit_user\", emp_mst_login_id.trim());\r\n        \r\n          try {\r\n          \r\n            const response = await httpCommon.post(\r\n              \"/AssetFormReferenceMultipalImgUpload.php\",\r\n              formData,\r\n              {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data' // Ensure proper content type\r\n                }\r\n            }\r\n            );\r\n\r\n          //  console.log(\"upload_mltipal____\",response);\r\n            if (response.data.status == \"SUCCESS\") {\r\n              Swal.close();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                customClass: {\r\n                  container: \"swalcontainercustom\",\r\n                },\r\n                title: response.data.status,\r\n                text: response.data.message,\r\n              }).then(() => {\r\n               // navigate(`/dashboard/work/order`);\r\n               navigate(`/dashboard/asset/list`, {\r\n                state: {\r\n                  currentPage,\r\n                  selectedOption,\r\n                },\r\n              });\r\n              });\r\n            }\r\n          } catch (error) {\r\n            console.log(\"error__\", error);\r\n            //Handle error  WorkOrderNo\r\n          }\r\n        } else {\r\n          Swal.close();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: response.data.status,\r\n            text: response.data.message,\r\n          }).then(() => {\r\n            if (response.data.status === \"SUCCESS\") {\r\n             // navigate(`/dashboard/work/order`);\r\n             navigate(`/dashboard/asset/list`, {\r\n              state: {\r\n                currentPage,\r\n                selectedOption,\r\n              },\r\n            });\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: \"Oops...\",\r\n          text: response.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n        title: \"Oops Data Not Updated...\",\r\n        text: error,\r\n      });\r\n    }\r\n  }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n  // Save button // update button click funcation\r\n  const onClickChange = (event) => {\r\n    event.preventDefault();\r\n    \r\n    if(Asset_type_ID === \"AG\" && Asset_group_ID === \"0\" && AssetNo === \"\"){\r\n      setIsAssetEmpty(true);\r\n      const errorMessage = 'Please fill the required field Asset No is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n    }else if(Asset_type_ID === \"MG\" && Asset_group_ID === \"0\" && AssetNo === \"\"){\r\n      setIsAssetEmpty(true);\r\n      const errorMessage = 'Please fill the required field Asset No is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n    }else if(Asset_type_ID === \"MM\" && AssetNo === \"\"){\r\n      setIsAssetEmpty(true);\r\n      const errorMessage = 'Please fill the required field Asset No is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n    }\r\n    else if (selected_Status == \"\" || selected_Status == null) {\r\n   \r\n      setIsAssetStatusEmpty(true);\r\n      const errorMessage = 'Please fill the required field Status is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n\r\n    }else if(selected_CriFactor == \"\" || selected_CriFactor == null){\r\n   \r\n      setIsAssetCriticalFactorEmpty(true);\r\n      const errorMessage = 'Please fill the required field Critical Factor is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n      //setIsAssetCriticalFactorEmpty(true);\r\n    }else if(Short_Description == \"\" || Short_Description == null){\r\n     \r\n      setIsAssetShortDescEmpty(true);\r\n      const errorMessage = 'Please fill the required field Short Description is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n\r\n    }else if(selected_AssetType == \"\" || selected_AssetType == null){ \r\n\r\n      setIsAssetTypeEmpty(true);\r\n      const errorMessage = 'Please fill the required field Asset Type is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n    }else if(selected_AssetCode == \"\" || selected_AssetCode == null){\r\n\r\n      setIsAssetCodeEmpty(true);\r\n      const errorMessage = 'Please fill the required field Asset Code is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n    }else if(selected_AssetGroupCode == \"\" || selected_AssetGroupCode == null){\r\n     \r\n      setIsAssetGroupCodeEmpty(true);\r\n      const errorMessage = 'Please fill the required field Asset Group Code is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n     \r\n    }else if(selected_Work_Area == \"\" || selected_Work_Area == null){\r\n      \r\n      setIsAssetWorkAreaEmpty(true);\r\n      const errorMessage = 'Please fill the required field Zone is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n    }else if(selected_Asset_Location == \"\" || selected_Asset_Location == null){\r\n    \r\n      setIsAssetLocation(true);\r\n      const errorMessage = 'Please fill the required field Asset Location is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n\r\n    }else if(selected_Asset_Level == \"\" || selected_Asset_Level == null){\r\n     \r\n      setIsAssetLeavelEmpty(true);\r\n      const errorMessage = 'Please fill the required field Level is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n\r\n    }else if(selected_Charge_Cost_Center == \"\" || selected_Charge_Cost_Center == null){\r\n    \r\n      setIsAssetCostCenterEmpty(true);\r\n      const errorMessage = 'Please fill the required field Cost Center is required!';\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity('error');\r\n      \r\n    } else {\r\n      if (Button_save === \"Save\") {\r\n        New_Asset();\r\n    \r\n      } else if (Button_save === \"Update\") {\r\n        Update_Asset();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (snackbarOpen) {\r\n      timer = setInterval(() => {\r\n        setProgress((oldProgress) => {\r\n          if (oldProgress === 100) {\r\n            clearInterval(timer);\r\n            setSnackbarOpen(false);\r\n            return 0;\r\n          }\r\n          const diff = Math.random() * 10;\r\n          return Math.min(oldProgress + diff, 100);\r\n        });\r\n      }, 400);\r\n    } else {\r\n      setProgress(0);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [snackbarOpen]);\r\n\r\n  const onClickDuplicate = (event) =>{\r\n    event.preventDefault();\r\n    if (Button_save === \"Duplicate\") {\r\n     // console.log(\"claing Api to duplicate key \");\r\n      New_Asset();\r\n    }\r\n  }\r\n\r\n  const onClickCancel = (event) => {\r\n    event.preventDefault();\r\n    if (isFormFiled) {\r\n    Swal.fire({\r\n      title: \"Discard changes?\",\r\n      icon: \"warning\",\r\n      showDenyButton: true,\r\n      showCancelButton: true,\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n      confirmButtonText: \"Yes\",\r\n      denyButtonText: `No`,\r\n      focusCancel: true // Add this option\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n       // Swal.fire(\"Saved!\", \"\", \"success\");\r\n       onClickChange(event);\r\n      } else if (result.isDenied) {\r\n          navigate(`/dashboard/asset/list`, {\r\n            state: {\r\n              currentPage,\r\n              selectedOption,\r\n            },\r\n          });\r\n        setIsFormFiled(false);\r\n      }\r\n    });\r\n  }else{\r\n    navigate(`/dashboard/asset/list`, {\r\n      state: {\r\n        currentPage,\r\n        selectedOption,\r\n      },\r\n    });\r\n  }\r\n   \r\n  };\r\n\r\n  // Status Audit PopUp\r\n  const formatDuration = (duration) => {\r\n    // const seconds = Math.floor(duration % 60);\r\n    const minutes = Math.floor(duration % 60);\r\n    const hours = Math.floor((duration % 1440) / 60);\r\n    const days = Math.floor(duration / 1440);\r\n\r\n    if (days > 0) {\r\n      return `${days}d: ${hours}h: ${minutes}m`;\r\n    } else if (hours > 0) {\r\n      return `${hours}h: ${minutes}m`;\r\n    } else if (minutes > 0) {\r\n      return `${minutes}m`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n    // return `${days}d: ${hours}h: ${minutes}m`;\r\n  };\r\n  const getsteps = async () => {\r\n     console.log(\"enter_getSteps___\");\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false , customClass: {\r\n      container: \"swalcontainercustom\",\r\n    }, });\r\n    Swal.showLoading();\r\n\r\n    try {\r\n\r\n      const responseJson = await httpCommon.get(\r\n        `/get_assetmaster_statusaudit.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n     //  console.log(\"responseJson___audit\",responseJson);\r\n      if (responseJson.data.status === \"SUCCESS\") {\r\n        // console.log('get_workordermaster_statusaudit', responseJson.data.data)\r\n\r\n        let Status = responseJson.data.data.map((item, index) => {\r\n          let date = new Date(item.ast_aud_start_date.date);\r\n          let formattedDate = date.toLocaleDateString(\"en-GB\"); \r\n          let formattedTime = date.toLocaleString(\"default\", {\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            hour12: true, // 3:37 PM\r\n          });\r\n          let formattedWeekday = date.toLocaleString(\"default\", { weekday: \"short\" }); // Fri\r\n    \r\n          return {\r\n            label: item.ast_sts_desc,\r\n            label1: item.ast_aud_status,\r\n            label2: item.emp_mst_name,\r\n            label3: item.audit_user,\r\n            label4: `${formattedWeekday} ${formattedDate} ${formattedTime}`,\r\n            label5: formatDuration(item.duration),\r\n            step: index + 1,\r\n          };\r\n        });\r\n    \r\n        setsteps(Status);\r\n\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: responseJson.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  const StatushandleShow = () => {\r\n    setStatusShow(true);\r\n    getsteps();\r\n  };\r\n\r\n\r\n\r\n  const toggleDiv = () => {\r\n    setIsOpenWork(!isOpenWork);\r\n  };\r\n\r\n\r\n  const handleDataFromSecondComponent = (data) => {\r\n  //  console.log(\"data++++++++\", data);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleToggle = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleNumericInputChange = (e, setterFunction) => {\r\n    let { value } = e.target;\r\n    value = value.replace(/[^\\d.]/g, ''); // Remove non-numeric characters except decimal\r\n    value = value.slice(0, 16); // Limit to 16 characters including decimals and commas\r\n\r\n    const parts = value.split('.');\r\n    let integerPart = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    if (integerPart.length > 11) {\r\n      integerPart = integerPart.slice(0, 12) + '.' + integerPart.slice(12, 16);\r\n    }\r\n    let decimalPart = parts[1] ? parts[1].slice(0, 4) : '';\r\n\r\n    const formattedValue = decimalPart ? `${integerPart}.${decimalPart}` : integerPart;\r\n    setterFunction(formattedValue); // Set the state for the respective UDFNumber state\r\n    setErrorField(null);\r\n  };\r\n\r\n  const handleNumericInputChange_14 = (e, setterFunction) => {\r\n    let { value } = e.target;\r\n    value = value.replace(/[^\\d.]/g, ''); // Remove non-numeric characters except decimal\r\n    value = value.slice(0, 14); // Limit to 16 characters including decimals and commas\r\n\r\n    const parts = value.split('.');\r\n    let integerPart = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    if (integerPart.length > 11) {\r\n      integerPart = integerPart.slice(0, 12) + '.' + integerPart.slice(12, 14);\r\n    }\r\n    let decimalPart = parts[1] ? parts[1].slice(0, 2) : '';\r\n\r\n    const formattedValue = decimalPart ? `${integerPart}.${decimalPart}` : integerPart;\r\n    setterFunction(formattedValue); // Set the state for the respective UDFNumber state\r\n    setErrorField(null);\r\n  };\r\n\r\n  const handleNumericInputChange_4_limit = (e, setterFunction) =>{\r\n    let { value } = e.target;\r\n    value = value.replace(/[^\\d.]/g, ''); // Remove non-numeric characters except decimal\r\n    value = value.slice(0, 4); // Limit to 16 characters including decimals and commas\r\n\r\n    const parts = value.split('.');\r\n    let integerPart = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    if (integerPart.length > 5) {\r\n      integerPart = integerPart.slice(0, 5);\r\n    }\r\n    let decimalPart = parts[1] ? parts[1].slice(0, 5) : '';\r\n\r\n    const formattedValue = decimalPart ? `${integerPart}` : integerPart;\r\n    setterFunction(formattedValue); // Set the state for the respective UDFNumber state\r\n    setErrorField(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n   \r\n    const selectedKey = Asset_Group_Code.find(item => item.value === selected_AssetGroupCode?.value)?.key;\r\n\r\n     if (AssetAutoNumbring.length !== 0) {\r\n      const assetStsus = AssetAutoNumbring[0];\r\n\r\n      if (assetStsus.cnt_mst_numbering === \"A\" && assetStsus.cnt_mst_option === \"G\") {\r\n        if (selectedKey === \"0\") {\r\n          setAsset_group_ID(selectedKey); \r\n          setAsset_type_ID(\"AG\");\r\n        } else {\r\n          setAsset_group_ID(selectedKey); \r\n          setAsset_type_ID(\"AG\");\r\n        }\r\n      } else if (assetStsus.cnt_mst_numbering === \"A\" && assetStsus.cnt_mst_option === \"M\") {\r\n        setAsset_group_ID(selectedKey); \r\n        setAsset_type_ID(\"AM\");\r\n      } else if (assetStsus.cnt_mst_numbering === \"M\" && assetStsus.cnt_mst_option === \"G\") {\r\n        if (selectedKey === \"0\") {\r\n          setAsset_group_ID(selectedKey);\r\n          setAsset_type_ID(\"MG\");\r\n        } else {\r\n          setAsset_group_ID(selectedKey); \r\n          setAsset_type_ID(\"MG\");\r\n        }\r\n      } else if (assetStsus.cnt_mst_numbering === \"M\" && assetStsus.cnt_mst_option === \"M\") {\r\n        setAsset_group_ID(selectedKey); \r\n        setAsset_type_ID(\"MM\");\r\n      }\r\n    }\r\n  }, [selected_AssetGroupCode, AssetAutoNumbring,DuplicatRowid]);\r\n\r\n  // Asset number filed show baseon condition\r\n  const AssetRenderTextField = () => {\r\n\r\n    const selectedKey = Asset_Group_Code.find(item => item.value === selected_AssetGroupCode?.value)?.key;\r\n    \r\n   if (AssetAutoNumbring.length !== 0 ) {\r\n      \r\n      const assetStsus = AssetAutoNumbring[0];\r\n\r\n      if(assetStsus.cnt_mst_numbering == \"A\" && assetStsus.cnt_mst_option == \"G\" && selectedKey !== \"0\"){\r\n       \r\n        return (\r\n        <TextField\r\n          name=\"name\"\r\n          size=\"small\"\r\n          disabled\r\n          value={AssetNo}\r\n          className=\"ExtrasizeDisable\"\r\n        />\r\n      );\r\n\r\n      }else if(assetStsus.cnt_mst_numbering == \"A\" && assetStsus.cnt_mst_option == \"G\" && selectedKey == \"0\"){\r\n       \r\n    \r\n        return (\r\n        <TextField\r\n          name=\"name\"\r\n          size=\"small\"\r\n          value={AssetNo}\r\n\r\n          onChange={(e) => {\r\n            const value = e.target.value.toUpperCase();\r\n          if (value.length <= 30) {\r\n            setAssetNo(value);\r\n            setIsAssetEmpty(false);\r\n          }\r\n        }}\r\n        className={`Extrasize ${\r\n          isAssetAssetEmpty\r\n            ? \"errorEmpty\"\r\n            : \"\"\r\n        }`}\r\n        />\r\n      );\r\n\r\n      }else if(assetStsus.cnt_mst_numbering === \"A\" && assetStsus.cnt_mst_option === \"M\"){\r\n        \r\n        return (\r\n          <TextField\r\n          name=\"name\"\r\n          size=\"small\"\r\n          disabled\r\n          value={AssetNo}\r\n          className=\"ExtrasizeDisable\"\r\n        />\r\n        );\r\n  \r\n        }else if(assetStsus.cnt_mst_numbering === \"M\" && assetStsus.cnt_mst_option === \"G\" && selectedKey !== \"0\"){\r\n        \r\n        return (\r\n          <TextField\r\n          name=\"name\"\r\n          size=\"small\"\r\n          disabled\r\n          value={AssetNo}\r\n          className=\"ExtrasizeDisable\"\r\n        />\r\n        );\r\n  \r\n        }else if(assetStsus.cnt_mst_numbering == \"M\" && assetStsus.cnt_mst_option == \"G\" && selectedKey == \"0\"){\r\n        \r\n          return (\r\n            <TextField\r\n              name=\"name\"\r\n              size=\"small\"\r\n              value={AssetNo}\r\n              onChange={(e) => {\r\n                const value = e.target.value.toUpperCase();\r\n              if (value.length <= 30) {\r\n                setAssetNo(value);\r\n                setIsAssetEmpty(false);\r\n              }\r\n            }}\r\n            className={`Extrasize ${\r\n              isAssetAssetEmpty\r\n                ? \"errorEmpty\"\r\n                : \"\"\r\n            }`}\r\n        />\r\n          );\r\n\r\n      }else if(assetStsus.cnt_mst_numbering == \"M\" && assetStsus.cnt_mst_option == \"M\"){\r\n       \r\n        return (\r\n\r\n          <TextField\r\n          name=\"name\"\r\n          size=\"small\"\r\n          value={AssetNo}\r\n          onChange={(e) => {\r\n            const value = e.target.value.toUpperCase();\r\n          if (value.length <= 30) {\r\n            setAssetNo(value);\r\n            setIsAssetEmpty(false);\r\n          }\r\n          }}\r\n          className={`Extrasize ${\r\n            isAssetAssetEmpty\r\n              ? \"errorEmpty\"\r\n              : \"\"\r\n          }`}\r\n       />\r\n        );\r\n  \r\n        }\r\n        \r\n    } \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {RowID\r\n            ? \"CMMS System\"\r\n            : DuplicatRowid\r\n            ? \"CMMS System\"\r\n            : \"CMMS System\"}\r\n        </title>\r\n        <meta name=\"description\" content=\"Create New Asset\" />\r\n      </Helmet>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <div\r\n          className=\"CustomBreadAssetSave asset\"\r\n          style={{\r\n            position: \"-webkit-sticky\",\r\n            position: \"sticky\",\r\n            top: \"55px\",\r\n            backgroundColor: \"white\",\r\n            zIndex: 1000,\r\n            borderBottom: \"1px solid #00000021\",\r\n            height: \"60px !important\",\r\n          }}\r\n        >\r\n          <CustomBreadcrumbs\r\n            // heading=\"Create Work Order\"\r\n            heading={\r\n              RowID\r\n                ? `Edit ${AssetNo} Asset`\r\n                : DuplicatRowid\r\n                ? \"Duplicate Asset\" \r\n                : \"Create New Asset\"\r\n            }\r\n            links={[\r\n              {\r\n                name: \"Asset\",\r\n              },\r\n              { name: RowID ? \"Update\" : \"Create\" },\r\n            ]}\r\n            action={\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {(() => {\r\n                 if (\r\n                    DuplicatRowid !== undefined &&\r\n                    DuplicatRowid !== null &&\r\n                    DuplicatRowid !== \"\"\r\n                  ) {\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickDuplicate}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {Button_save === \"Duplicate\" ? \"Save\" : Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          className=\"CloseButton\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  } else {\r\n                    \r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickChange}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          className=\"CloseButton\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })()}\r\n              </div>\r\n            }\r\n            sx={{ mb: { xs: 3, md: 5 } }}\r\n          />\r\n       \r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <p>Loading data...</p>\r\n          ) : (\r\n            <>\r\n          \r\n              {/* toggle view strting from here */}\r\n              <div\r\n                className=\"MainOrderFromGd\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <Grid container spacing={0}>\r\n                  <Grid xs={12} md={12}>\r\n                    <Card sx={{ padding: \"10px 24px 15px 24px\" }}>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <button className=\"ToggleBttnIcon\" onClick={toggleDiv}>\r\n                          <Iconify\r\n                            icon=\"fluent-mdl2:pen-workspace\"\r\n                            style={{ marginRight: \"5px\", width: \"17px\" }}\r\n                          />{\" \"}\r\n                          Asset Master\r\n                          {isOpenWork ? (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-up-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          ) : (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-down-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                      {isOpenWork && (\r\n                        <Grid container spacing={0}>\r\n                          <Grid xs={12} md={10}>\r\n                            {/* ************************************* img  mobile ******************************************* */}\r\n                            <div className=\"col-md-2 mobileImgversion\">\r\n                              <div className=\"row\">\r\n                                <div className=\"row ImgShowMobile\">\r\n                                  <div>\r\n                                    <label htmlFor=\"upload-button\">\r\n                                      {getDbImg && getDbImg.length > 0 ? (\r\n                                        <div>\r\n                                          <img\r\n                                             src={getDbImg[0].attachment ? `${httpCommon.defaults.baseURL}${getDbImg[0].attachment}` :\"\"}\r\n                                            className=\"imgCurPont\"\r\n                                            // width=\"200\"\r\n                                            // height=\"180\"\r\n                                            alt=\"Base64 Image\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                          <div className=\"col btnCenter\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn dlt\"\r\n                                              onClick={() =>\r\n                                                handleDeleteImgApi(\r\n                                                  getDbImg[0].RowID\r\n                                                )\r\n                                              }\r\n                                              style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n\r\n                                                justifyContent: \"center\",\r\n                                                marginTop: \"10px\",\r\n                                              }}\r\n                                            >\r\n                                              <Iconify\r\n                                                icon=\"fluent:delete-48-filled\"\r\n                                                style={{ fontSize: \"24px\" }}\r\n                                              />\r\n                                              Delete\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : image.preview ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={image.preview}\r\n                                            alt=\"dummy\"\r\n                                            // width=\"200\"\r\n                                            // height=\"180\"\r\n                                            className=\"imgCurPont\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                          <div className=\"col btnCenter\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn dlt\"\r\n                                              onClick={handleClearImg}\r\n                                              style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                              }}\r\n                                            >\r\n                                              <Iconify\r\n                                                icon=\"fluent:delete-48-filled\"\r\n                                                style={{ marginRight: \"5px\" }}\r\n                                              />\r\n                                              Delete\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <>\r\n                                          <span className=\"fa-stack fa-2x mb-2\">\r\n                                            <img\r\n                                              src={require(\"../../../assets/img/Add_Image_icon.png\")}\r\n                                              className=\"sliderimg2\"\r\n                                              onClick={handleImgChangeSingle2}\r\n                                              width=\"200\"\r\n                                              height=\"180\"\r\n                                              alt=\"\"\r\n                                            />\r\n                                          </span>\r\n                                        </>\r\n                                      )}\r\n                                    </label>\r\n                                    {getDbImg && getDbImg.length > 0 ? (\r\n                                      <div></div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <input\r\n                                          type=\"file\"\r\n                                          id=\"upload-button\"\r\n                                          disabled={disabledBtn}\r\n                                          style={{ display: \"none\" }}\r\n                                          onChange={handleImgChangeSingle}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                    <br />\r\n                                  </div>\r\n                                  <BootstrapDialog\r\n                                    onClose={handleClosedd2}\r\n                                    aria-labelledby=\"customized-dialog-title\"\r\n                                    open={showdd2}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"close\"\r\n                                      onClick={handleClosedd2}\r\n                                      sx={{\r\n                                        position: \"absolute\",\r\n                                        right: 8,\r\n                                        top: 8,\r\n                                        color: (theme) =>\r\n                                          theme.palette.grey[500],\r\n                                      }}\r\n                                    >\r\n                                      X\r\n                                    </IconButton>\r\n                                    <DialogContent\r\n                                      dividers\r\n                                      style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      {getDbImg && getDbImg.length > 0 ? (\r\n                                        <div>\r\n                                          <img\r\n                                             src={getDbImg[0].attachment ? `${httpCommon.defaults.baseURL}${getDbImg[0].attachment}` :\"\"}\r\n                                            alt=\"dummy\"\r\n                                            className=\"dummyImg\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                        </div>\r\n                                      ) : (\r\n                                        <img\r\n                                          src={image.preview}\r\n                                          alt=\"dummy\"\r\n                                          style={{\r\n                                            height: \"50%\",\r\n                                            width: \"50%\",\r\n                                          }}\r\n                                          onClick={openSaveImg}\r\n                                          className=\"dummyImg\"\r\n                                        />\r\n                                      )}\r\n                                    </DialogContent>\r\n                                  </BootstrapDialog>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              width=\"100%\"\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                display=\"flex\"\r\n                                alignItems=\"center\"\r\n                                width=\"100%\"\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                              >\r\n                                \r\n                              <Stack flexGrow={1} spacing={1}>\r\n                                <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                                  {findCustomizeLabel(\"ast_mst_asset_no\") ||\r\n                                    \"Asset No\"}\r\n                                </Typography>\r\n                                {/* <TextField\r\n                                  name=\"name\"\r\n                                  size=\"small\"\r\n                                  disabled\r\n                                  defaultValue={DuplicatRowid !== undefined && DuplicatRowid !== \"\" ? \"\" : AssetNo}\r\n                                  className=\"ExtrasizeDisable\"\r\n                                  \r\n                                /> */}\r\n                                 {AssetRenderTextField()}\r\n                                \r\n                              </Stack>\r\n\r\n                              <Tooltip\r\n                                  title=\"Asset History\"\r\n                                  placement=\"bottom\"\r\n                                  className=\"tooltipRht\"\r\n                                  disabled={Button_save == \"Save\"}\r\n                                  arrow\r\n                                  arrowTransform=\"translateY(4px)\"\r\n                                >\r\n                                  <IconButton onClick={handleToggle}>\r\n                                    <Iconify\r\n                                      icon=\"pepicons-pencil:dots-y\"\r\n                                      \r\n                                    />\r\n                                  </IconButton>\r\n                                  \r\n                                 \r\n                                </Tooltip>\r\n                                <Menu\r\n                                  anchorEl={anchorEl}\r\n                                  open={Boolean(anchorEl)}\r\n                                  className=\"AssetHistorycss\"\r\n                                  onClose={handleClose}\r\n                                  anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                  }}\r\n                                  transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                  }}\r\n                                >\r\n                                  <MenuItem onClick={PMSetuphandleShow}>\r\n                                    <Iconify\r\n                                      icon=\"mingcute:time-fill\" \r\n                                      width={14} \r\n                                      height={14}\r\n                                      style={{ marginRight: '5px' }}\r\n        \r\n                                    /> PM Setup\r\n                                    </MenuItem>\r\n                                  <MenuItem onClick={WOHistoryhandleShow}>\r\n                                  <Iconify\r\n                                      icon=\"icon-park:history-query\" \r\n                                      width={14} \r\n                                      height={14}\r\n                                      style={{ marginRight: '5px' }}\r\n        \r\n                                    />WO History\r\n                                    </MenuItem>\r\n                                  <MenuItem onClick={RelocationHistoryhandleShow}>\r\n                                  <Iconify\r\n                                      icon=\"system-uicons:files-history\" \r\n                                      width={14} \r\n                                      height={14}\r\n                                      style={{ marginRight: '5px' }}\r\n        \r\n                                    />\r\n                                     Relocation History\r\n                                    </MenuItem>\r\n                                  <MenuItem onClick={CheckListhandleShow}>\r\n                                  <Iconify\r\n                                      icon=\"cil:list\" \r\n                                      width={14} \r\n                                      height={14}\r\n                                      style={{ marginRight: '5px' }}\r\n        \r\n                                    />Check list</MenuItem>\r\n                                </Menu>\r\n                                \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"flex\"\r\n                                alignItems=\"center\" \r\n                                width=\"100%\"\r\n                              >\r\n                                <Stack flexGrow={1} spacing={1}>\r\n                                  <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                                    {findCustomizeLabel(\"ast_mst_asset_status\") ||\r\n                                      \"Asset Status\"}\r\n                                  </Typography>\r\n                                  \r\n                                  <Autocomplete\r\n                                    options={Status}\r\n                                    value={(selected_Status?.label || \"\")\r\n                                    .split(\" : \")\r\n                                    .slice(0, 2)\r\n                                    .join(\" : \")}\r\n                                    onChange={(event, value) => {\r\n                                   \r\n                                      setSelected_Status(value);\r\n                                      setIsAssetStatusEmpty(false);\r\n                                      setIsFormFiled(true);\r\n                                  \r\n                                    }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\" \r\n                                          className={`Extrasize ${\r\n                                            isAssetStatusEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                         \r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                                </Stack>\r\n                               \r\n                                <Tooltip\r\n                                  title=\"Status Audit\"\r\n                                  placement=\"bottom\"\r\n                                  className=\"tooltipRht\"\r\n                                  disabled={Button_save == \"Save\" || Button_save == \"Duplicate\"}  \r\n                                  arrow\r\n                                  arrowTransform=\"translateY(4px)\" // Adjust the translateY value to adjust the space between the Tooltip and the IconButton\r\n                                 \r\n                                >\r\n                                  <IconButton onClick={StatushandleShow}>\r\n                                    <Iconify\r\n                                      icon=\"pajamas:status-alert\"\r\n                                      \r\n                                    />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                              </Box>\r\n                            </Box>\r\n                           \r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                             <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                                  {findCustomizeLabel(\"ast_mst_asset_shortdesc\") ||\r\n                                    \"Short Descriptions\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  minRows={6.5}\r\n                                  value={Short_Description}\r\n                                  onChange={(e) => {\r\n                                    const value = e.target.value;\r\n                                    if (value.length <= 80) {\r\n                                      setShort_Description(value);\r\n                                    }\r\n                                    setIsAssetShortDescEmpty(false);\r\n                                    setIsFormFiled(true);\r\n                                    }}\r\n\r\n                                //  className=\"TxtAra\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetShortDescEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"TxtAra\"\r\n                                  }`}\r\n                                />\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={1}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                \r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                                    {findCustomizeLabel(\"ast_mst_cri_factor\") ||\r\n                                      \"Critical Factor\"}\r\n                                  </Typography>\r\n\r\n                                  <Autocomplete\r\n                                    options={Asset_CriFactor}\r\n                                    value={(selected_CriFactor?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                      onChange={(event, value) => {\r\n                                        setselected_CriFactor(value);\r\n                                        setIsAssetCriticalFactorEmpty(false);\r\n                                        setIsFormFiled(true);\r\n                                        \r\n                                      }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isAssetCriticalFactorEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                               \r\n                                </Stack>\r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_mst_perm_id\")}>\r\n                                    {findCustomizeLabel(\r\n                                      \"ast_mst_perm_id\"\r\n                                    ) || \"Permanent ID\"}\r\n                                  </Typography>\r\n                                    <TextField\r\n                                      id=\"outlined-basic\"\r\n                                      size=\"small\"\r\n                                      variant=\"outlined\"\r\n                                      value={Area_ID}\r\n                                      \r\n                                      onChange={(e) => {\r\n                                        const value = e.target.value;\r\n                                        if (value.length <= 50) {\r\n                                          setArea_ID(value);\r\n                                        }\r\n                                        setErrorField(null);\r\n                                        setIsFormFiled(true);\r\n                                        }}\r\n                                      className={errorField === \"ast_mst_perm_id\" ? \"erroBorderadd\" : \"\"}\r\n                                      fullWidth\r\n                                    />\r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n                          \r\n                            <Grid item xs={12} sx={{ mt:0}}>\r\n                              <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_mst_asset_longdesc11\")}>\r\n                                  {findCustomizeLabel(\"ast_mst_asset_longdesc11\") ||\r\n                                    \"Long Description\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  minRows={6.5}\r\n                                  value={Long_Description}\r\n                                  \r\n                                  onChange={(e) => {\r\n                                    const value = e.target.value;\r\n                                    if (value.length <= 255 ) {\r\n                                      setLong_Description(value);\r\n                                    }\r\n                                    setErrorField(null); \r\n                                    setIsFormFiled(true);\r\n                                    }}\r\n                                  className={errorField === \"ast_mst_asset_longdesc\" ? \"erroBorderadd\" : \"TxtAra\"}\r\n                                />\r\n                              </Stack>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid xs={12} md={2} className=\"imgGird\">\r\n                            <Card sx={{ pt: 2, pb: 0, px: 3 }}>\r\n                              <Box\r\n                                sx={{\r\n                                  mb: 5,\r\n                                  display: \"flex\",\r\n                                  flexDirection: \"column\",\r\n                                  alignItems: \"center\",\r\n                                  justifyContent: \"center\",\r\n                                }}\r\n                              >\r\n                                {/* ************************************* img web ******************************************* */}\r\n\r\n                                <div className=\"col-md-2\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"row ImgShowMobile\">\r\n                                      <div>\r\n                                        <label htmlFor=\"upload-button\">\r\n                                          {getDbImg && getDbImg.length > 0 ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={getDbImg[0].attachment ? `${httpCommon.defaults.baseURL}${getDbImg[0].attachment}` :\"\"}\r\n                                                className=\"imgCurPont\"\r\n                                                // width=\"200\"\r\n                                                // height=\"180\"\r\n                                                alt=\"Base64 Image\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                              <div className=\"col btnCenter\">\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"btn dlt\"\r\n                                                  onClick={() =>\r\n                                                    handleDeleteImgApi(\r\n                                                      getDbImg[0].RowID\r\n                                                    )\r\n                                                  }\r\n                                                  style={{\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n\r\n                                                    justifyContent: \"center\",\r\n                                                    marginTop: \"10px\",\r\n                                                  }}\r\n                                                >\r\n                                                  <Iconify\r\n                                                    icon=\"fluent:delete-48-filled\"\r\n                                                    style={{ fontSize: \"24px\" }}\r\n                                                  />\r\n                                                  Delete\r\n                                                </button>\r\n                                              </div>\r\n                                            </div>\r\n                                          ) : image.preview ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={image.preview}\r\n                                                alt=\"dummy\"\r\n                                                // width=\"200\"\r\n                                                // height=\"180\"\r\n                                                className=\"imgCurPont\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                              <div className=\"col btnCenter\">\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"btn dlt\"\r\n                                                  onClick={handleClearImg}\r\n                                                  style={{\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n                                                    justifyContent: \"center\",\r\n                                                  }}\r\n                                                >\r\n                                                  <Iconify\r\n                                                    icon=\"fluent:delete-48-filled\"\r\n                                                    style={{\r\n                                                      marginRight: \"5px\",\r\n                                                    }}\r\n                                                  />\r\n                                                  Delete\r\n                                                </button>\r\n                                              </div>\r\n                                            </div>\r\n                                          ) : (\r\n                                            <>\r\n                                              <span className=\"fa-stack fa-2x mb-2\">\r\n                                                <img\r\n                                                  src={require(\"../../../assets/img/Add_Image_icon.png\")}\r\n                                                  className=\"sliderimg2\"\r\n                                                  onClick={\r\n                                                    handleImgChangeSingle2\r\n                                                  }\r\n                                                  width=\"200\"\r\n                                                  height=\"180\"\r\n                                                  alt=\"\"\r\n                                                />\r\n                                              </span>\r\n                                            </>\r\n                                          )}\r\n                                        </label>\r\n                                        {getDbImg && getDbImg.length > 0 ? (\r\n                                          <div></div>\r\n                                        ) : (\r\n                                          <div>\r\n                                            <input\r\n                                              type=\"file\"\r\n                                              id=\"upload-button\"\r\n                                              disabled={disabledBtn}\r\n                                              style={{ display: \"none\" }}\r\n                                              onChange={handleImgChangeSingle}\r\n                                            />\r\n                                          </div>\r\n                                        )}\r\n                                        <br />\r\n                                      </div>\r\n                                      <BootstrapDialog\r\n                                        onClose={handleClosedd2}\r\n                                        aria-labelledby=\"customized-dialog-title\"\r\n                                        open={showdd2}\r\n                                      >\r\n                                        <IconButton\r\n                                          aria-label=\"close\"\r\n                                          onClick={handleClosedd2}\r\n                                          sx={{\r\n                                            position: \"absolute\",\r\n                                            right: 8,\r\n                                            top: 8,\r\n                                            color: (theme) =>\r\n                                              theme.palette.grey[500],\r\n                                          }}\r\n                                        >\r\n                                          X\r\n                                        </IconButton>\r\n                                        <DialogContent\r\n                                          dividers\r\n                                          style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                          }}\r\n                                        >\r\n                                          {getDbImg && getDbImg.length > 0 ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={getDbImg[0].attachment ? `${httpCommon.defaults.baseURL}${getDbImg[0].attachment}` :\"\"}\r\n                                                alt=\"dummy\"\r\n                                                className=\"dummyImg\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                            </div>\r\n                                          ) : (\r\n                                            <img\r\n                                              src={image.preview}\r\n                                              alt=\"dummy\"\r\n                                              style={{\r\n                                                height: \"50%\",\r\n                                                width: \"50%\",\r\n                                              }}\r\n                                              onClick={openSaveImg}\r\n                                              className=\"dummyImg\"\r\n                                            />\r\n                                          )}\r\n                                        </DialogContent>\r\n                                      </BootstrapDialog>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </Box>\r\n                            </Card>\r\n                          </Grid>\r\n                        </Grid>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              {/* toggle view End */}\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid xs={12} md={12}>\r\n                  <Card sx={{ p: 3 }}>\r\n                    <Tabs\r\n                      value={Tabvalue}\r\n                      onChange={handleChange}\r\n                      aria-label=\"Basic tabs\"\r\n                      defaultValue={0}\r\n                    >\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:information-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Details\r\n                          </div>\r\n                        }\r\n                      />\r\n                     \r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:folder-information-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            UDF1\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"fluent:window-dev-tools-20-regular\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Spares\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"fluent:calendar-data-bar-24-regular\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Usage\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:axis-arrow-info\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Specification\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"codicon:references\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Reference\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </Tabs>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 0}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {/*Details*/}\r\n                      \r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                              {findCustomizeLabel(\"ast_mst_asset_type\") ||\r\n                                \"Asset Type\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Type}\r\n                              value={selected_AssetType?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setselectedAssetType(value);\r\n                                setIsAssetTypeEmpty(false);\r\n                                setIsFormFiled(true);\r\n                                \r\n                              }}\r\n                             \r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                //  onClick={handleClickProjectID}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetTypeEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                              {findCustomizeLabel(\"ast_mst_asset_code\") ||\r\n                                \"Asset Code\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Code}\r\n                              value={selected_AssetCode?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setselectedAssetCode(value);\r\n                                setIsAssetCodeEmpty(false);\r\n                                setIsFormFiled(true);\r\n                                \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetCodeEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                              {findCustomizeLabel(\"ast_mst_asset_grpcode\") ||\r\n                                \"Asset Group Code\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Group_Code } \r\n                              value={selected_AssetGroupCode?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setselectedAssetGroupCode(value);\r\n                                setIsAssetGroupCodeEmpty(false);\r\n                                setIsFormFiled(true);\r\n                                \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetGroupCodeEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                              {findCustomizeLabel(\"ast_mst_cost_center\") ||\r\n                                \"Cost Center\"}\r\n                            </Typography>\r\n                            <Autocomplete \r\n                              options={Charge_Cost_Center}\r\n                              value={selected_Charge_Cost_Center?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Charge_Cost_Center(value || null);\r\n                                setIsAssetCostCenterEmpty(false);\r\n                                setIsFormFiled(true);\r\n                              \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetCostCenterEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_mst_parent_id\")}>\r\n                              {findCustomizeLabel(\"ast_mst_parent_id\") ||\r\n                                \"Parent Flage\"}\r\n                             \r\n                            </Typography>\r\n                           \r\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                              <Checkbox\r\n                                checked={Permanent_ID === 1}\r\n                                onChange={(e) => setPermanent_ID(Permanent_ID === 1 ? 0 : 1)}\r\n                                color=\"primary\"\r\n                              />\r\n                              {Permanent_ID !== 1 && (\r\n                                <div ref={assetNoAutocompleteRef} style={{ flexGrow: 1 }}>\r\n                                  <CustomTextField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    className={`ExtrasizeDisable ${\r\n                                      isAssetNoEmpty ? \"errorEmpty\" : \"\"\r\n                                    }`}\r\n                                    fullWidth\r\n                                    value={Permanent_IDFlag || \"\"}\r\n                                    disabled\r\n                                    placeholder=\"Select...\"\r\n                                    rightIcons={[\r\n                                      <Iconify\r\n                                        icon=\"material-symbols:close\"\r\n                                        onClick={handleCancelClick}\r\n                                      />,\r\n                                      <Iconify\r\n                                        icon=\"tabler:edit\"\r\n                                        onClick={handleEditClick}\r\n                                      />,\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            </Stack>\r\n                          </Stack>\r\n                         \r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                              {findCustomizeLabel(\"ast_mst_work_area\") ||\r\n                                \"Work Area\"}\r\n                              \r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Work_Area}\r\n                              value={selected_Work_Area?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Area(value || null);\r\n                                setIsAssetWorkAreaEmpty(false);\r\n                                setIsFormFiled(true);\r\n                               \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetWorkAreaEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                              {findCustomizeLabel(\"ast_mst_asset_locn\") ||\r\n                                \"Asset Location\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Asset_Location }\r\n                              value={selected_Asset_Location?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Asset_Location(value || null);\r\n                                setIsAssetLocation(false);\r\n                                setIsFormFiled(true);\r\n                                \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetLocation ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className=\"Requiredlabel\">\r\n                              {findCustomizeLabel(\"ast_mst_ast_lvl\") ||\r\n                                \"Level\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Asset_Level}\r\n                              value={selected_Asset_Level?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Asset_Level(value || null);\r\n                                setIsAssetLeavelEmpty(false);\r\n                                setIsFormFiled(true);\r\n                               \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetLeavelEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }} >\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_mst_wrk_grp\")}>\r\n                              {findCustomizeLabel(\"ast_mst_wrk_grp\") ||\r\n                                \"Work Group\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Work_Group}\r\n                              value={selected_Work_Group ?.label ?? \"\"}\r\n                              \r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Group(value || null);\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  // className={`Extrasize ${\r\n                                  //   isOriginalPeriorityEmpty ? \"errorEmpty\" : \"\"\r\n                                  // }`}\r\n                                  className={errorField === \"ast_mst_wrk_grp\" ? \"erroBorderadd\" : \"\"}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                        \r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_mst_safety_rqmts\")}>\r\n                              {findCustomizeLabel(\"ast_mst_safety_rqmts\") ||\r\n                                \"Safety Requirement\"}\r\n                                  \r\n                            </Typography>\r\n                            \r\n                            <TextareaAutosize\r\n                                aria-label=\"empty textarea\"\r\n                                minRows={1.9}\r\n                                value={SafetyRequirement}\r\n                                \r\n                                onChange={(e) => {\r\n                                  const value = e.target.value;\r\n                                  if (value.length <= 2000 ) {\r\n                                    setSafetyRequirement(value);\r\n                                  }\r\n                                  setErrorField(null); \r\n                                  setIsFormFiled(true);\r\n                                  }}\r\n                              className={errorField === \"ast_mst_safety_rqmts\" ? \"erroBorderadd\" : \"TxtAra\"}\r\n                            />\r\n\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_mst_print_count\")}>\r\n                              {findCustomizeLabel(\"ast_mst_print_count\") ||\r\n                                \"Barcode Print Count\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              value={BarcodeCount}\r\n                              onChange={(e) => {\r\n                                setBarcodeCount(e.target.value);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              fullWidth\r\n                              placeholder=\"0\"\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_mfg_cd\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_mfg_cd\") ||\r\n                                \"Manufacturer\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              value={ManufactureCode}\r\n                              onChange={(e) => {\r\n                                setManufactureCode(e.target.value);\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                             \r\n                              className={errorField === \"ast_det_mfg_cd\" ? \"erroBorderadd\" : \"\"}\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar6\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar6\") ||\r\n                                \"Model\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                              \r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Box\r\n                      sx={{ marginTop: \"8px\" }}\r\n                    >\r\n                    <div\r\n                      style={{\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"auto 1fr\", \r\n                        alignItems: \"center\",\r\n                        borderBottom: \"1px solid #cfcfcf\", \r\n                        paddingBottom: \"10px\",\r\n                        fontWeight: \"500\"\r\n                      }}\r\n                    >\r\n                      <Iconify\r\n                        className=\"IconCss\"\r\n                        icon=\"fluent-mdl2:financial\"\r\n                        style={{ marginRight: \"4px\" }}\r\n                      />\r\n                      Financial\r\n                    </div>\r\n                    </Box>\r\n                    <Grid container spacing={2} sx={{ mt: 1.5 }}>\r\n                        <Grid item xs={12} md={4} >\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_asset_cost\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_asset_cost\") ||\r\n                                \"Asset Cost\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\".00\"\r\n                              value={AssetCost}\r\n                             \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange_14(e, setAssetCost);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n\r\n                              className={errorField === \"ast_det_asset_cost\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                                }}\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                          \r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_repl_cost\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_repl_cost\") ||\r\n                                \"Residual Value\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".00\"\r\n                              value={ResidualValue}\r\n                              onChange={(e) => {\r\n                                handleNumericInputChange_14(e, setResidualValue);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                                }}\r\n                              className={errorField === \"ast_det_repl_cost\" ? \"erroBorderadd\" : \"\"}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_depr_method\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_depr_method\") ||\r\n                                \"Depreciation Method\"}\r\n                              \r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={DepreciationMethod}\r\n                              value={selected_Depreciation_Method?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelectedDepreciationMethod(value);\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              //getOptionLabel={(option) => option.label} \r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={errorField === \"ast_det_depr_method\" ? \"erroBorderadd\" : \"\"}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_c_account\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_c_account\") ||\r\n                                \"Contract Account\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Laboraccount} \r\n                              value={selected_Contract_Account?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Contract_Account(value);\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={errorField === \"ast_det_c_account\" ? \"erroBorderadd\" : \"\"}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n\r\n                          </Grid>\r\n                          <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_purchase_date\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_purchase_date\") ||\r\n                                \"Purchase Date\"}\r\n                              \r\n                            </Typography>\r\n                          \r\n                            <DateTimePicker\r\n                              value={PurchaseDate}\r\n                              format=\"dd/MM/yyyy\"\r\n                              onChange={(newDate) => {\r\n                                setPurchaseDate(newDate); // Update your state with the new value\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                              className={errorField === \"ast_det_purchase_date\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_warranty_date\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_warranty_date\") ||\r\n                                \"Warranty End Date\"}\r\n                            </Typography>\r\n\r\n                            <DateTimePicker\r\n                              value={WarrantyDate}\r\n                              format=\"dd/MM/yyyy\"\r\n                             \r\n                              onChange={(newDate) => {\r\n                                setWarrantyDate(newDate); // Update your state with the new value\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                              className={errorField === \"ast_det_warranty_date\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_l_account\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_l_account\") ||\r\n                                \"Labor Account\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Laboraccount}\r\n                              value={selected_Labor_Account?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Labor_Account(value);\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={errorField === \"ast_det_l_account\" ? \"erroBorderadd\" : \"\"}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_depr_term\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_depr_term\") ||\r\n                                \"Expected Life (Year)\"}\r\n                                  \r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              variant=\"outlined\"\r\n                              value={ExpectedLifeYear}\r\n                            \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange_14(e, setExpectedLifeYear);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                                }}\r\n                              //inputProps={{ maxLength: 4, max: 9999 }}\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_cus_code\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_cus_code\") ||\r\n                                \"Customer Code\"}\r\n                            </Typography>\r\n                            <div ref={CustomerCodeRef}>\r\n                              <CustomTextField\r\n                                id=\"outlined-basic\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className={`ExtrasizeDisable ${\r\n                                  isAssetNoEmpty ? \"errorEmpty\" : \"\"\r\n                                }`}\r\n                                \r\n                                fullWidth\r\n                                value={CustomerCode || \"\"}\r\n                                disabled\r\n                                placeholder=\"Select...\"\r\n                                rightIcons={[\r\n                                  <Iconify\r\n                                    icon=\"material-symbols:close\"\r\n                                    onClick={handleCancelClickCustomeCode}\r\n                                  />,\r\n                                  <Iconify\r\n                                    icon=\"tabler:edit\"\r\n                                    onClick={handleEditClickCustomerCode}\r\n                                  />,\r\n                                ]}\r\n                              />\r\n                            </div>\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_m_account\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_m_account\") ||\r\n                                \"Material Account\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Laboraccount} \r\n                              value={selected_Material_Account?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Material_Account(value);\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={errorField === \"ast_det_m_account\" ? \"erroBorderadd\" : \"\"}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                        \r\n                        </Grid>\r\n                    </Grid> \r\n                      <Box\r\n                      sx={{ marginTop: \"8px\" }}\r\n                      >\r\n                      <div\r\n                        style={{\r\n                          display: \"grid\",\r\n                          gridTemplateColumns: \"auto 1fr\", \r\n                          alignItems: \"center\",\r\n                          borderBottom: \"1px solid #cfcfcf\", \r\n                          paddingBottom: \"10px\",\r\n                          fontWeight: \"500\"\r\n                        }}\r\n                      >\r\n                        <Iconify\r\n                          className=\"IconCss\"\r\n                          icon=\"mdi:card-account-details-star-outline\" width={27} height={27}\r\n                          style={{ marginRight: \"4px\" }}\r\n                        />\r\n                        \r\n                        Depreciation and Disposal Details\r\n                      </div>\r\n                      <Grid container spacing={2} sx={{ mt: 1.5 }}>\r\n                        <Grid item xs={12} md={4} >\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_depr_date\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_depr_date\") ||\r\n                                \"Depreciation Date\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_net_book_value\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_net_book_value\") ||\r\n                                \"Netbook Value\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_dispose_type\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_dispose_type\") ||\r\n                                \"Disposal type\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n\r\n                          </Grid>\r\n                          <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_depr_by\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_depr_by\") ||\r\n                                \"Updated By\"}\r\n                              \r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_dispose_date\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_dispose_date\") ||\r\n                                \"Disposal Date\"}\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_dispose_value\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_dispose_value\") ||\r\n                                \"Disposal Value\"}\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_acc_depr_cost\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_acc_depr_cost\") ||\r\n                                \"Acc.Depreciation\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_dispose_by\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_dispose_by\") ||\r\n                                \"Disposal By\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                        \r\n                        </Grid>\r\n                          </Grid> \r\n                    </Box> \r\n                    <Box\r\n                      sx={{ marginTop: \"8px\" }}\r\n                      >\r\n                      <div\r\n                        style={{\r\n                          display: \"grid\",\r\n                          gridTemplateColumns: \"auto 1fr\", \r\n                          alignItems: \"center\",\r\n                          borderBottom: \"1px solid #cfcfcf\", \r\n                          paddingBottom: \"10px\",\r\n                          fontWeight: \"500\"\r\n                        }}\r\n                      >\r\n                        <Iconify\r\n                          className=\"IconCss\"\r\n                          icon=\"carbon:license-maintenance-draft\" width={25} height={25}\r\n                          style={{ marginRight: \"4px\" }}\r\n                        />\r\n                        Maintenance Cost\r\n                      </div>\r\n                      <Grid container spacing={2} sx={{ mt: 1.5 }}>\r\n                        <Grid item xs={12} md={4} >\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                            Labour Cost:\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                            Total:\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          \r\n\r\n                          </Grid>\r\n                          <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                               Material Cost:\r\n                             \r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          \r\n                          \r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                               Contract Cost:\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                          </Grid> \r\n                      </Box>  \r\n                    </Box>\r\n                   \r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 1}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                     \r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar1\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar1\") ||\r\n                                \"UDF Text1\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_1}\r\n                             \r\n                              onChange={(e) => {\r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_1(value);\r\n                                }\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true); \r\n                              }}\r\n\r\n                              className={errorField === \"ast_det_varchar1\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                            \r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar2\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar2\") ||\r\n                                \"UDF Text2\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_2}\r\n                              onChange={(e) => {\r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_2(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar2\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar3\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar3\") ||\r\n                                \"UDF Text3\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_3}\r\n                              onChange={(e) => {\r\n                                \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_3(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar3\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar4\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar4\") ||\r\n                                \"UDF Text4\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_4}\r\n                              onChange={(e) => {\r\n                              \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_4(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar4\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar5\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar5\") ||\r\n                                \"UDF Text5\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_5}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_5(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar5\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar6\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar6\") ||\r\n                                \"UDF Text6\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_6}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_6(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar6\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar7\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar7\") ||\r\n                                \"UDF Text7\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_7}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_7(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar7\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar8\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar8\") ||\r\n                                \"UDF Text8\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              value={UDFText_8}\r\n                              onChange={(e) => {\r\n                                \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_8(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar8\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar9\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar9\") ||\r\n                                \"UDF Text9\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_9}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_9(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar9\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar10\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar10\") ||\r\n                                \"UDF Text10\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_10}\r\n                              onChange={(e) => {\r\n                              \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_10(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar10\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar11\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar11\") ||\r\n                                \"UDF Text11\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_11}\r\n                              onChange={(e) => {\r\n                                \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_11(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar11\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar12\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar12\") ||\r\n                                \"UDF Text12\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_12}\r\n                              onChange={(e) => {\r\n\r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_12(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar12\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar13\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar13\") ||\r\n                                \"UDF Text13\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_13}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_13(value);\r\n                                }\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true); \r\n                              }}\r\n                              className={errorField === \"ast_det_varchar13\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar14\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar14\") ||\r\n                                \"UDF Text14\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_14}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_14(value);\r\n                                }\r\n                                setErrorField(null); \r\n                              }}\r\n                              className={errorField === \"ast_det_varchar14\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar15\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar15\") ||\r\n                                \"UDF Text15\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_15}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_15(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar15\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar16\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar16\") ||\r\n                                \"UDF Text16\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_16}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_16(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar16\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar17\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar17\") ||\r\n                                \"UDF Text17\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_17}\r\n                              onChange={(e) => {\r\n\r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_17(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar17\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar18\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar18\") ||\r\n                                \"UDF Text18\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_18}\r\n                              onChange={(e) => {\r\n                              \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_18(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar18\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar19\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar19\") ||\r\n                                \"UDF Text19\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_19}\r\n                              onChange={(e) => {\r\n                                \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_19(value);\r\n                                }\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true); \r\n                              }}\r\n                              className={errorField === \"ast_det_varchar19\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar20\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar20\") ||\r\n                                \"UDF Text20\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_20}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_20(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar19\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                        \r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                        <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar21\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar21\") ||\r\n                                \"UDF Text21\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_21}\r\n                              onChange={(e) => {\r\n                                \r\n                                const value = e.target.value;\r\n                                if (value.length <= 100) {\r\n                                  setUDFText_21(value);\r\n                                }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar21\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar22\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar22\") ||\r\n                                \"UDF Text22\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_22}\r\n                              onChange={(e) => {\r\n\r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_22(value);\r\n                                  }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar22\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar23\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar23\") ||\r\n                                \"UDF Text23\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_23}\r\n                              onChange={(e) => {\r\n                                \r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_23(value);\r\n                                  }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar23\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar24\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar24\") ||\r\n                                \"UDF Text24\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_24}\r\n                              onChange={(e) => {\r\n\r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_24(value);\r\n                                  }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar24\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar25\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar25\") ||\r\n                                \"UDF Text25\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_25}\r\n                              onChange={(e) => {\r\n                                \r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_25(value);\r\n                                  }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar25\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar26\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar26\") ||\r\n                                \"UDF Text26\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_26}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_26(value);\r\n                                  }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar26\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar27\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar27\") ||\r\n                                \"UDF Text27\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_27}\r\n                              onChange={(e) => {\r\n                               \r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_27(value);\r\n                                  }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar27\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar28\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar28\") ||\r\n                                \"UDF Text28\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_28}\r\n                              onChange={(e) => {\r\n\r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_28(value);\r\n                                  }\r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar28\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar29\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar29\") ||\r\n                                \"UDF Text29\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_29}\r\n                              onChange={(e) => {\r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_29(value);\r\n                                  }\r\n                                \r\n                                setErrorField(null); \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar29\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_varchar30\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_varchar30\") ||\r\n                                \"UDF Text30\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              value={UDFText_30}\r\n                              onChange={(e) => {\r\n                                const value = e.target.value;\r\n                                  if (value.length <= 100) {\r\n                                    setUDFText_30(value);\r\n                                  }\r\n                                setErrorField(null);  \r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_varchar30\" ? \"erroBorderadd\" : \"\"}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric1\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric1\") ||\r\n                                \"UDF Numeric1\"}\r\n                            </Typography>\r\n                            \r\n                            <TextField\r\n                             type=\"text\"\r\n                             id=\"outlined-basic\"\r\n                             variant=\"outlined\"\r\n                             size=\"small\"\r\n                             placeholder=\".0000\"\r\n                             fullWidth\r\n                             value={UDFNumber_1}\r\n                             // onChange={(e) => handleNumericInputChange(e, setUDFNumber_1)}\r\n                              onChange={(e) => {\r\n\r\n                                handleNumericInputChange(e, setUDFNumber_1);\r\n                              \r\n                                setIsFormFiled(true);\r\n                              \r\n                              }}\r\n                              className={errorField === \"ast_det_numeric1\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric2\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric2\") ||\r\n                                \"UDF Numeric2\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              type=\"text\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_2}\r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_2);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric2\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric3\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric3\") ||\r\n                                \"UDF Numeric3\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_3}\r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_3);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric3\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric4\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric4\") ||\r\n                                \"UDF Numeric4\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_4}\r\n                              \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_4);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n\r\n                              className={errorField === \"ast_det_numeric4\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric5\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric5\") ||\r\n                                \"UDF Numeric5\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_5}\r\n\r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_5);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n\r\n                              className={errorField === \"ast_det_numeric5\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric6\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric6\") ||\r\n                                \"UDF Numeric6\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              type=\"text\"\r\n                              value={UDFNumber_6}\r\n                              \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_6);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric6\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric7\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric7\") ||\r\n                                \"UDF Numeric7\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_7}\r\n                             \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_7);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric7\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric8\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric8\") ||\r\n                                \"UDF Numeric8\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              type=\"text\"\r\n                              value={UDFNumber_8}\r\n                             \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_8);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric8\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric9\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric9\") ||\r\n                                \"UDF Numeric9\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_9}\r\n                             \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_9);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric9\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric10\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric10\") ||\r\n                                \"UDF Numeric10\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_10}\r\n                             \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_10);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric10\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        \r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                        <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric11\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric11\") ||\r\n                                \"UDF Numeric11\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_11}\r\n                            \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_11);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric11\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric12\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric12\") ||\r\n                                \"UDF Numeric12\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_12}\r\n                             \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_12);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric12\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric13\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric13\") ||\r\n                                \"UDF Numeric13\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_13}\r\n                             \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_13);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric13\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric14\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric14\") ||\r\n                                \"UDF Numeric14\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_14}\r\n                              \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_14);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric14\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_numeric15\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_numeric15\") ||\r\n                                \"UDF Numeric15\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              type=\"text\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              value={UDFNumber_15}\r\n                              \r\n                              onChange={(e) => {\r\n                                handleNumericInputChange(e, setUDFNumber_15);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              className={errorField === \"ast_det_numeric15\" ? \"erroBorderadd\" : \"\"}\r\n                              InputProps={{\r\n                                inputProps: { style: { textAlign: 'right' } }\r\n                              }}\r\n                            />\r\n                           \r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime1\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime1\") ||\r\n                                \"UDF Date1\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_1} \r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime1\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_1(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime2\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime2\") ||\r\n                                \"UDF Date2\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_2}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime2\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_2(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime3\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime3\") ||\r\n                                \"UDF Date3\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_3}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime3\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_3(newDate); \r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime4\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime4\") ||\r\n                                \"UDF Date4\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_4}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime4\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_4(newDate); \r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime5\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime5\") ||\r\n                                \"UDF Date5\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_5}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime5\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_5(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime6\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime6\") ||\r\n                                \"UDF Date6\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_6}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime6\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_6(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime7\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime7\") ||\r\n                                \"UDF Date7\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_7}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime7\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_7(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime8\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime8\") ||\r\n                                \"UDF Date8\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_8}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime8\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_8(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime9\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime9\") ||\r\n                                \"UDF Date9\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_9}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime9\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_9(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              \r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime10\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime10\") ||\r\n                                \"UDF Date10\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_10}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime10\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_10(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n                                \r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime11\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime11\") ||\r\n                                \"UDF Date11\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_11}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime11\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_11(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime12\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime12\") ||\r\n                                \"UDF Date12\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_12}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime12\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_12(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime13\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime13\") ||\r\n                                \"UDF Date13\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_13}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime13\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_13(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime14\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime14\") ||\r\n                                \"UDF Date14\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_14}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime14\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_14(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_datetime15\")}>\r\n                              {findCustomizeLabelDet(\"ast_det_datetime15\") ||\r\n                                \"UDF Date15\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_15}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={errorField === \"ast_det_datetime15\" ? \"erroBorderadd\" : \"Extrasize\"}\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_15(newDate);\r\n                                setErrorField(null);\r\n                                setIsFormFiled(true);\r\n\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          \r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                   \r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 2}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                     \r\n                      {RowID && (\r\n                        <AssetSpares\r\n                          data={{\r\n                            RowID: RowID,\r\n                          }}\r\n                          onDataFromSecondComponent={\r\n                            handleDataFromSecondComponent\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 3}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                    \r\n                      {RowID && (\r\n                        <AssetUsage\r\n                          data={{\r\n                            RowID: RowID,\r\n                          }}\r\n                          onDataFromSecondComponent={\r\n                            handleDataFromSecondComponent\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 4}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                    {RowID && (\r\n                        <AssetSpecification\r\n                          data={{\r\n                            RowID: RowID,\r\n                          }}\r\n                          \r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 5}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                       {RowID && (\r\n                        \r\n                     <div>\r\n                        <div\r\n                          style={{\r\n                            paddingBottom: \"20px\",\r\n                            backgroundColor: \"white\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"template-demo\"\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <div style={{ marginRight: \"0px\" }}>\r\n                             \r\n                              <Iconify\r\n                              icon=\"codicon:references\"\r\n                              style={{ marginRight: \"4px\",width: \"30px\", height: \"30px\" }}\r\n                            />\r\n                            </div>\r\n                            <div\r\n                              className=\"template-demo\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                              }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  marginRight: \"10px\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                              >\r\n                                Reference\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-hover mt-2 col-sm-12 astFimg\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>Image</th>\r\n                                <th>File Name</th>\r\n                                <th>Audit User</th>\r\n                                <th>Audit Date</th>\r\n                                <th>Action</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody >\r\n                              {RefImg !== \"\" &&\r\n                                RefImg !== null &&\r\n                                RefImg.map((item, index) => (\r\n                                  <tr key={index} className=\"tableRow_Attachment_hover\">\r\n                                    <td>\r\n                                    {console.log(\"item____\",item)}\r\n                                      {item.file_name\r\n                                        .toLowerCase()\r\n                                        .endsWith(\".pdf\") ? (\r\n                                        <FontAwesomeIcon\r\n                                          icon={faFilePdf}\r\n                                          onClick={() =>\r\n                                            openPDFInNewTab(item.attachment)\r\n                                          }\r\n                                          style={{\r\n                                            width: \"50px\",\r\n                                            height: \"50px\",\r\n                                          }}\r\n                                          className=\"fntpdf\"\r\n                                        />\r\n                                      ) : (\r\n                                        \r\n                                        <img\r\n                                          key={index}\r\n                                          //src={item.attachment}\r\n                                          src={item.attachment ? `${httpCommon.defaults.baseURL}${item.attachment}` :\"\"}\r\n                                          style={{\r\n                                            width: \"60px\",\r\n                                            height: \"80px\",\r\n                                          }}\r\n                                          onClick={() => handleShowdata(item)}\r\n                                        />\r\n                                      )}\r\n                                    </td>\r\n\r\n                                    <td>{item.file_name}</td>\r\n                                    <td>{item.audit_user}</td>\r\n                                    <td>\r\n                                      {new Date(\r\n                                        item.audit_date.date\r\n                                      ).toLocaleString(\"en-US\", {\r\n                                        year: \"numeric\",\r\n                                        month: \"2-digit\",\r\n                                        day: \"2-digit\",\r\n                                        hour: \"2-digit\",\r\n                                        minute: \"2-digit\",\r\n                                        second: \"2-digit\",\r\n                                        // Show milliseconds with 3 digits\r\n                                      })}\r\n                                    </td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={() =>\r\n                                          handleDeleteReferenceApi(item.RowID)\r\n                                        }\r\n                                        className=\"btn multiplsimg\"\r\n                                      >\r\n                                        <Iconify icon=\"carbon:close-outline\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                ))}\r\n\r\n                              {selectedImages.map((image, index) =>\r\n                                image && index === undefined ? (\r\n                                  <tr>\r\n                                    <td>\r\n                                      <img\r\n                                        src={RefImg[0].attachment ? `${httpCommon.defaults.baseURL}${RefImg[0].attachment}` :\"\"}\r\n                                        style={{\r\n                                          width: \"60px\",\r\n                                          height: \"60px\",\r\n                                        }}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                ) : image.name\r\n                                    .toLowerCase()\r\n                                    .endsWith(\".pdf\") ? (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <FontAwesomeIcon\r\n                                        icon={faFilePdf}\r\n                                        style={{\r\n                                          width: \"50px\",\r\n                                          height: \"50px\",\r\n                                        }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>{image.name}</td>\r\n                                    <td>Admin</td>\r\n                                    <td>{new Date().toLocaleString() + \"\"}</td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          handleDeleteImg(index);\r\n                                        }}\r\n                                      >\r\n                                        <Iconify icon=\"carbon:close-outline\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                ) : (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <img\r\n                                        key={index}\r\n                                        src={URL.createObjectURL(image)}\r\n                                        alt=\"Uploaded image\"\r\n                                        onClick={(e) => handleShowdd(e, image)}\r\n                                      />\r\n                                    </td>\r\n                                    <td>{image.name}</td>\r\n                                    <td>Admin</td>\r\n                                    <td>{new Date().toLocaleString() + \"\"}</td>\r\n\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          handleDeleteImg(index);\r\n                                        }}\r\n                                      >\r\n                                        <Iconify icon=\"carbon:close-outline\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                )\r\n                              )}\r\n                            </tbody>\r\n\r\n                            {isMyStateEmpty ? (\r\n                              <BootstrapDialog\r\n                                onClose={handleClosedd}\r\n                                aria-labelledby=\"customized-dialog-title\"\r\n                                open={showdd}\r\n                              >\r\n                                <IconButton\r\n                                  aria-label=\"close\"\r\n                                  onClick={handleClosedd}\r\n                                  sx={{\r\n                                    position: \"absolute\",\r\n                                    right: 8,\r\n                                    top: 8,\r\n                                    color: (theme) => theme.palette.grey[500],\r\n                                  }}\r\n                                >\r\n                                  <Iconify\r\n                                    icon=\"carbon:close-outline\"\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                  />\r\n                                </IconButton>\r\n                                <DialogContent dividers>\r\n                                  <Typography gutterBottom>\r\n                                   \r\n                                    <img\r\n                                     // src={selectedImage}\r\n                                      src={selectedImage ? `${httpCommon.defaults.baseURL}${selectedImage}` :\"\"}\r\n                                      style={{ width: \"100%\", height: \"auto\" }}\r\n                                    />\r\n                                  </Typography>\r\n                                </DialogContent>\r\n                              </BootstrapDialog>\r\n                            ) : (\r\n                              <BootstrapDialog\r\n                                onClose={handleClosedd}\r\n                                aria-labelledby=\"customized-dialog-title\"\r\n                                open={showdd}\r\n                              >\r\n                                <IconButton\r\n                                  aria-label=\"close\"\r\n                                  onClick={handleClosedd}\r\n                                  sx={{\r\n                                    position: \"absolute\",\r\n                                    right: 8,\r\n                                    top: 8,\r\n                                    color: (theme) => theme.palette.grey[500],\r\n                                  }}\r\n                                >\r\n                                  <Iconify icon=\"carbon:close-outline\" />\r\n                                </IconButton>\r\n                                <DialogContent dividers>\r\n                                  <Typography gutterBottom>\r\n                                    <img\r\n                                      style={{ height: \"100%\", width: \"100%\" }}\r\n                                      src={URL.createObjectURL(handalImg)}\r\n                                      alt=\"Uploaded image\"\r\n                                    />\r\n                                  </Typography>\r\n                                </DialogContent>\r\n                              </BootstrapDialog>\r\n                            )}\r\n                          </table>\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            marginTop: \"20px\",\r\n                          }}\r\n                        >\r\n                        <form onSubmit={handleSubmit} className=\"row\">\r\n                                  <div className=\"col-sm-10 text-center\">\r\n                                    <input\r\n                                      type=\"file\"\r\n                                      ref={fileInputRef}\r\n                                      style={{ display: \"none\" }}\r\n                                      multiple\r\n                                      onChange={handleImageChange}\r\n                                      className=\"form-control form-control-lg\"\r\n                                      id=\"formFileMultiple\"\r\n                                    />\r\n                                    <Button\r\n                                      onClick={handleButtonClick}\r\n                                      type=\"submit\"\r\n                                     // className=\"btn Refbtl\"\r\n                                     className=\"tabAddButton\"\r\n                                      \r\n                                    >\r\n                                      + Add Attachment\r\n                                    </Button>\r\n                                  </div>\r\n                                </form>\r\n                                </div>\r\n                      </div>\r\n                       )}\r\n                    </Box>\r\n                    <Grid\r\n                      container\r\n                      xs={12}\r\n                      md={12}\r\n                      justifyContent=\"flex-end\"\r\n                      style={{ paddingRight: \"20px\", marginTop: \"20px\" }}\r\n                    >\r\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          // href={paths.dashboard.work.neworder}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                          onClick={onClickChange}\r\n                        >\r\n                          {Button_save === \"Duplicate\" ? \"Save\" : Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          className=\"CloseButton\"\r\n                          onClick={onClickCancel}\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </div>\r\n                    </Grid>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n              {/* Asset Parent Flag model popup */}\r\n              <BootstrapDialog\r\n                onClose={handleCloseModal}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={modalOpenAsset}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Parent ID\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleCloseModal}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div className=\"TblSelect\">\r\n                    <AssetParentIdList\r\n                      onRowClick={handleRowData2}\r\n                      onChangePage={handleRowDataPagechg}\r\n                      onSearchChange={handelRowSearch}\r\n                      asset={AssetNo}\r\n                      \r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span class=\"TotlFont\">\r\n                      {TotalSearch\r\n                        ? // Content to render if condition1 is true\r\n                          TotalSearch\r\n                        : viewedTotlRows\r\n                        ? // Content to render if condition2 is true\r\n                          TotalAssetNo - viewedTotlRows\r\n                        : TotalAssetNo\r\n                        ? // Content to render if condition3 is true\r\n                          TotalAssetNo\r\n                        : // Content to render if none of the conditions are true\r\n                          0}\r\n                      &nbsp;Asset\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"mlauto\">\r\n                    <Button variant=\"primary\" onClick={handleCloseModal}>\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </BootstrapDialog>\r\n              {/* Asset model popup end*/}\r\n\r\n               {/* Asset Customer Code model popup */}\r\n               <BootstrapDialog\r\n                onClose={handleCloseModalCustomeCode}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={modalOpenAssetCustomerCode}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Customer Code\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleCloseModalCustomeCode}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div className=\"TblSelect\">\r\n                    <AssetCustomerCodeList\r\n                      onRowClick={handleRowData3}\r\n                      onChangePage={handleRowDataPagechg}\r\n                      onSearchChange={handelRowSearch}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span class=\"TotlFont\">\r\n                      {TotalSearch\r\n                        ? // Content to render if condition1 is true\r\n                          TotalSearch\r\n                        : viewedTotlRows\r\n                        ? // Content to render if condition2 is true\r\n                          TotalAssetNo - viewedTotlRows\r\n                        : TotalAssetNo\r\n                        ? // Content to render if condition3 is true\r\n                          TotalAssetNo\r\n                        : // Content to render if none of the conditions are true\r\n                          0}\r\n                      &nbsp;Total\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"mlauto\">\r\n                    <Button variant=\"primary\" onClick={handleCloseModalCustomeCode}>\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </BootstrapDialog>\r\n               {/* Asset customer code model popup end*/}\r\n\r\n              {/******************** Status Details ********************/}\r\n              <div>\r\n                <BootstrapDialog\r\n                  onClose={StatushandleClose}\r\n                  aria-labelledby=\"customized-dialog-title\"\r\n                  open={StatusShow}\r\n                  maxWidth=\"lg\"\r\n                  fullWidth\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2 }}\r\n                    id=\"customized-dialog-title\"\r\n                    className=\"dailogTitWork\"\r\n                  >\r\n                    Asset Status Audit\r\n                  </DialogTitle>\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={StatushandleClose}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      right: 8,\r\n                      top: 8,\r\n                      color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                  >\r\n                    <Iconify icon=\"material-symbols:close\" />\r\n                  </IconButton>\r\n                  <DialogContent dividers>\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        maxWidth: \"600px\",\r\n                        marginLeft: \"110px\",\r\n                        marginTop: \"-30px\",\r\n                      }}\r\n                    >\r\n                      <StepContainer>\r\n                        {steps.map(\r\n                          ({\r\n                            step,\r\n                            label,\r\n                            label1,\r\n                            label2,\r\n                            label3,\r\n                            label4,\r\n                            label5,\r\n                          }) => (\r\n                            <div\r\n                              key={step}\r\n                              style={{ position: \"relative\", zIndex: 1 }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  fontSize: \"11px\",\r\n                                  color: \"grey\",\r\n                                  position: \"absolute\",\r\n                                  left: \"-81px\",\r\n                                  top: \"45px\",\r\n                                  width: \"80px\",\r\n                                  height: \"20px\",\r\n                                  borderRadius: \"5%\",\r\n                                  textAlign: \"right\",\r\n                                }}\r\n                              >\r\n                                {label5}\r\n                              </div>\r\n                              <div\r\n                                step={step}\r\n                                style={{\r\n                                  width: \"30px\",\r\n                                  height: \"30px\",\r\n                                  borderRadius: \"50%\",\r\n                                  backgroundColor: \"#4694d1\",\r\n                                  border: `3px solid ${\r\n                                    step === \"completed\" ? \"#0080FF\" : \"#F3E7F3\"\r\n                                  }`,\r\n                                  transition: \"0.4s ease\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  style={{ fontSize: \"15px\", color: \"#f3e7f3\" }}\r\n                                >\r\n                                  {step}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"15px\", color: \"#4a154b\" }}\r\n                                >\r\n                                  {label} ({label1})\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"11px\", color: \"grey\" }}\r\n                                >\r\n                                  Status Update By: {label2} ({label3})\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"11px\", color: \"grey\" }}\r\n                                >\r\n                                  On Start Date: {label4}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                      </StepContainer>\r\n                    </div>\r\n                  </DialogContent>\r\n                </BootstrapDialog>\r\n              </div>\r\n              {/******************** Comments add Details ********************/}\r\n\r\n              {/* single Upload Img Show */}\r\n              <BootstrapDialog\r\n                onClose={UploadImghandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={uploadImgShow}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Selected Image\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={UploadImghandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={imagePreview}\r\n                      alt=\"upload_img\"\r\n                      style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n              {/******************** PM Setup ********************/}\r\n              <BootstrapDialog\r\n                onClose={PMSetuphandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={PMSetupShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                {/* <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  PM Setup\r\n                </DialogTitle> */}\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={PMSetuphandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                 \r\n                    <PmSetup \r\n                    data={{\r\n                        RowID: RowID,\r\n                        WorkOrderNo: WorkOrderNo,\r\n                        Asset_No: AssetNo,\r\n                      }}\r\n                    />\r\n                  \r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n              \r\n              {/******************** WO History ********************/}\r\n              <BootstrapDialog\r\n                onClose={WOHistoryhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={WOHistoryShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n            \r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={WOHistoryhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                 \r\n                    <WoHistory \r\n                    data={{\r\n                        RowID: RowID,\r\n                        WorkOrderNo: WorkOrderNo,\r\n                        Asset_No: AssetNo,\r\n                      }}\r\n                    />\r\n                  \r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n              {/******************** Relocation History ********************/}\r\n              <BootstrapDialog\r\n                onClose={RelocationHistoryhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={RelocationHistoryShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n            \r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={RelocationHistoryhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n              \r\n                <DialogContent dividers>\r\n                    <RelocationHistory \r\n                    data={{\r\n                        RowID: RowID,\r\n                        WorkOrderNo: WorkOrderNo,\r\n                        Asset_No: AssetNo,\r\n                      }}\r\n                    />\r\n                  \r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n               {/******************** Check List ********************/}\r\n               <BootstrapDialog\r\n                onClose={CheckListhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={CheckListShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n            \r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={CheckListhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                    <CheckList \r\n                    data={{\r\n                        RowID: RowID,\r\n                        WorkOrderNo: WorkOrderNo,\r\n                        Asset_No: AssetNo,\r\n                      }}\r\n                    />\r\n                  \r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n              <div className=\"AssetFromSnackbar\">       \r\n              <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={null}\r\n                onClose={handleCloseSnackbar}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                // sx={{\r\n                //   boxShadow: '0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05)'\r\n                // }}\r\n                sx={{\r\n                  boxShadow: '0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05)',\r\n                  '& .MuiAlert-filledError': {\r\n                    backgroundColor: '#fff',\r\n                    color: '#000',\r\n                    fontWeight: '600',\r\n                    position: 'relative',\r\n                    animation: snackbarOpen ? 'bounce-in 0.5s ease-out' : 'none', // Apply bouncing animation conditionally\r\n                  },\r\n                }}\r\n              >\r\n                <Alert\r\n                  onClose={handleCloseSnackbar}\r\n                  severity=\"error\"\r\n                  variant=\"filled\"\r\n                  // sx={{ backgroundColor: '#fff', color: '#000', fontWeight: '600', position: 'relative' }}\r\n                  sx={{\r\n                    '@keyframes bounce-in': {\r\n                      '0%': { transform: 'scale(0.9)' },\r\n                      '50%': { transform: 'scale(1.05)' },\r\n                      '100%': { transform: 'scale(1)' },\r\n                    },\r\n                  }}\r\n                >\r\n                  {snackbarMessage}\r\n                  \r\n                  <LinearProgress variant=\"determinate\" value={snackbarOpen ? 100 - progress : 0} style={{ width: '99%', position: 'absolute', bottom: '0',marginLeft: '-50px',\r\n                  }}\r\n                  sx={{\r\n                    '& .MuiLinearProgress-bar': {\r\n                      backgroundColor: 'green', // Change the color here\r\n                    },\r\n                  }}\r\n                   />\r\n                   \r\n                </Alert>\r\n              </Snackbar>\r\n              </div> \r\n\r\n            </>\r\n          )}\r\n         \r\n        </div>\r\n       \r\n      </Container>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nCreateAssetFrom.propTypes = {\r\n  currentUser: PropTypes.object,\r\n};\r\n"],"names":["_ref","onRowClick","onChangePage","onSearchChange","site_ID","localStorage","getItem","data","setData","useState","selectedRowKeys","setSelectedRowKeys","viewedRows","setViewedRows","window","performance","now","useEffect","Swal","title","allowOutsideClick","httpCommon","get","then","response","AssetCustomerCode","length","catch","error","console","log","columns","field","render","rowData","renderIcon","width","cus_mst_customer_cd","_jsxs","children","_jsx","Iconify","icon","style","marginRight","marginTop","float","fontSize","color","_Fragment","class","MaterialTable","options","search","paging","pageSize","pageSizeOptions","overflowY","paginationPosition","toolbarButtonAlignment","paginationType","rowStyle","backgroundColor","handleRowClick","event","page","viewedRowsCount","searchText","filteredData","filter","item","toLowerCase","includes","cus_det_varchar2","cus_mst_acct_no","cus_mst_desc","handleSearch","withReactContent","BootstrapDialog","styled","Dialog","theme","padding","spacing","StepContainer","_templateObject","_taggedTemplateLiteral","_ref2","CreateAssetFrom","_ref3","_selected_AssetType$l","_selected_AssetCode$l","_selected_AssetGroupC","_selected_Charge_Cost","_selected_Work_Area$l","_selected_Asset_Locat","_selected_Asset_Level","_selected_Work_Group$","_selected_Depreciatio","_selected_Contract_Ac","_selected_Labor_Accou","_selected_Material_Ac","currentUser","onPageChange","location","useLocation","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","progress","setProgress","state","RowID","Ast_no","DuplicatRowid","DupRowID","DupAst_no","currentPage","selectedOption","loading","setLoading","astMstLabel","setAstMstLabel","astdetLabel","setAstdetLabel","navigate","useNavigate","fileInputRef","useRef","settings","useSettingsContext","selectedImages","setSelectedImages","selectedImages2","setSelectedImages2","selectedPdfFiles","setSelectedPdfFiles","RefImg","setRefImg","selectedImage","setSelectedImage","getDbImg","setDbImg","image","setImage","preview","raw","imguploadStatus","setImguploadStatus","imguploadRefStatus","setImguploadRefStatus","removedRefItems","setRemovedRefItems","disabledBtn","setDisabledBtn","imageSelect","setImageSelect","name","path","Tabvalue","setTabValue","showdd","setShowdd","handalImg","sethandalImg","handleClosedd","showdd2","setShowdd2","handleClosedd2","Asset_No","setAsset_No","TotalAssetNo","setTotalAssetNo","TotalSearch","setTotalSearch","viewedTotlRows","setViewedTotlRows","AssetNo","setAssetNo","Status","setStatus","selected_Status","setSelected_Status","Asset_CriFactor","setAsset_CriFactor","selected_CriFactor","setselected_CriFactor","Short_Description","setShort_Description","Long_Description","setLong_Description","Area_ID","setArea_ID","Asset_Type","setAsset_Type","selected_AssetType","setselectedAssetType","Asset_Code","setAsset_Code","selected_AssetCode","setselectedAssetCode","Asset_Group_Code","setAsset_Group_Code","selected_AssetGroupCode","setselectedAssetGroupCode","Charge_Cost_Center","setCharge_Cost_Center","selected_Charge_Cost_Center","setSelected_Charge_Cost_Center","Work_Area","setWork_Area","selected_Work_Area","setSelected_Work_Area","Asset_Location","setAsset_Location","selected_Asset_Location","setSelected_Asset_Location","Asset_Level","setAsset_Level","selected_Asset_Level","setSelected_Asset_Level","Work_Group","setWork_Group","selected_Work_Group","setSelected_Work_Group","Permanent_ID","setPermanent_ID","SafetyRequirement","setSafetyRequirement","BarcodeCount","setBarcodeCount","ManufactureCode","setManufactureCode","AssetCost","setAssetCost","ResidualValue","setResidualValue","Permanent_IDFlag","setPermanentIDFlag","CustomerCode","setCustomerCode","selected_Customer_Code","setSelected_Customer_Code","selected_Contract_Account","setSelected_Contract_Account","PurchaseDate","setPurchaseDate","Date","WarrantyDate","setWarrantyDate","selected_Labor_Account","setSelected_Labor_Account","ExpectedLifeYear","setExpectedLifeYear","selected_Material_Account","setSelected_Material_Account","DepreciationMethod","setDepreciationMethod","label","value","selected_Depreciation_Method","setSelectedDepreciationMethod","UDFText_1","setUDFText_1","UDFText_2","setUDFText_2","UDFText_3","setUDFText_3","UDFText_4","setUDFText_4","UDFText_5","setUDFText_5","UDFText_6","setUDFText_6","UDFText_7","setUDFText_7","UDFText_8","setUDFText_8","UDFText_9","setUDFText_9","UDFText_10","setUDFText_10","UDFText_11","setUDFText_11","UDFText_12","setUDFText_12","UDFText_13","setUDFText_13","UDFText_14","setUDFText_14","UDFText_15","setUDFText_15","UDFText_16","setUDFText_16","UDFText_17","setUDFText_17","UDFText_18","setUDFText_18","UDFText_19","setUDFText_19","UDFText_20","setUDFText_20","UDFText_21","setUDFText_21","UDFText_22","setUDFText_22","UDFText_23","setUDFText_23","UDFText_24","setUDFText_24","UDFText_25","setUDFText_25","UDFText_26","setUDFText_26","UDFText_27","setUDFText_27","UDFText_28","setUDFText_28","UDFText_29","setUDFText_29","UDFText_30","setUDFText_30","UDFNumber_1","setUDFNumber_1","UDFNumber_2","setUDFNumber_2","UDFNumber_3","setUDFNumber_3","UDFNumber_4","setUDFNumber_4","UDFNumber_5","setUDFNumber_5","UDFNumber_6","setUDFNumber_6","UDFNumber_7","setUDFNumber_7","UDFNumber_8","setUDFNumber_8","UDFNumber_9","setUDFNumber_9","UDFNumber_10","setUDFNumber_10","UDFNumber_11","setUDFNumber_11","UDFNumber_12","setUDFNumber_12","UDFNumber_13","setUDFNumber_13","UDFNumber_14","setUDFNumber_14","UDFNumber_15","setUDFNumber_15","UDFDate_1","setUDFDate_1","UDFDate_2","setUDFDate_2","UDFDate_3","setUDFDate_3","UDFDate_4","setUDFDate_4","UDFDate_5","setUDFDate_5","UDFDate_6","setUDFDate_6","UDFDate_7","setUDFDate_7","UDFDate_8","setUDFDate_8","UDFDate_9","setUDFDate_9","UDFDate_10","setUDFDate_10","UDFDate_11","setUDFDate_11","UDFDate_12","setUDFDate_12","UDFDate_13","setUDFDate_13","UDFDate_14","setUDFDate_14","UDFDate_15","setUDFDate_15","isAssetAssetEmpty","setIsAssetEmpty","isAssetStatusEmpty","setIsAssetStatusEmpty","isAssetCriticalFactorEmpty","setIsAssetCriticalFactorEmpty","isAssetShortDescEmpty","setIsAssetShortDescEmpty","isAssetTypeEmpty","setIsAssetTypeEmpty","isAssetCodeEmpty","setIsAssetCodeEmpty","isAssetGroupCodeEmpty","setIsAssetGroupCodeEmpty","isAssetWorkAreaEmpty","setIsAssetWorkAreaEmpty","isAssetLocation","setIsAssetLocation","isAssetLeavelEmpty","setIsAssetLeavelEmpty","isAssetCostCenterEmpty","setIsAssetCostCenterEmpty","Asset_Laboraccount","setAsset_Laboraccount","WorkOrderNo","setWorkOrderNo","selected_Asset_Status","setSelected_Asset_Status","selected_Asset_Group_Code","setSelected_Asset_Group_Code","AutoNumring","setAutoNumring","Button_save","setButton_save","getDbImgRowId","setDbImgRowId","SpecialOdrResult","setSpecialOdrResult","steps","setsteps","StatushandleClose","setStatusShow","StatusShow","imagePreview","setImagePreview","uploadImgShow","setUploadImgShow","UploadImghandleClose","isAssetNoEmpty","setIsAssetNoEmpty","isOpenWork","setIsOpenWork","autocompleteRef","assetNoAutocompleteRef","CustomerCodeRef","anchorEl","setAnchorEl","PMSetupShow","setPMSetupShow","PMSetuphandleClose","WOHistoryShow","setWOHistoryShow","WOHistoryhandleClose","RelocationHistoryShow","setRelocationHistoryShow","RelocationHistoryhandleClose","CheckListShow","setCheckListShow","CheckListhandleClose","AssetMandatoryFiled","setAssetMandatoryFiled","errorField","setErrorField","AssetAutoNumbring","setAssetAutoNumbring","Asset_type_ID","setAsset_type_ID","Asset_group_ID","setAsset_group_ID","isFormFiled","setIsFormFiled","async","get_assetmaster_selected","fetchStatusData","getAssetFromLebel","getAssetMandatoryfiled","fetchData","status","ast_mst","ast_det","MandatoryField","json","undefined","post","JSON","stringify","ast_mst_asset_no","ast_mst_asset_status","ast_sts_desc","ast_mst_asset_shortdesc","ast_mst_cri_factor","ast_cri_desc","ast_mst_perm_id","ast_mst_asset_longdesc","ast_mst_asset_type","ast_type_descs","ast_mst_asset_code","ast_cod_desc","ast_mst_asset_grpcode","ast_grp_desc","key","Auto_number","ast_mst_cost_center","descs","ast_mst_work_area","mst_war_desc","ast_mst_asset_locn","ast_loc_desc","ast_mst_ast_lvl","ast_lvl_desc","ast_mst_wrk_grp","wrk_grp_desc","ast_mst_parent_flag","ast_mst_parent_id","ast_mst_safety_rqmts","ast_mst_print_count","ast_det_mfg_cd","ast_det_asset_cost","ast_det_repl_cost","ast_det_depr_method","ast_det_c_account","ast_det_l_account","ast_det_m_account","ast_det_purchase_date","apiDate","date","formattedDate","Moment","toDate","ast_det_warranty_date","ast_det_depr_term","ast_det_cus_code","ast_det_varchar1","ast_det_varchar2","ast_det_varchar3","ast_det_varchar4","ast_det_varchar5","ast_det_varchar6","ast_det_varchar7","ast_det_varchar8","ast_det_varchar9","ast_det_varchar10","ast_det_varchar11","ast_det_varchar12","ast_det_varchar13","ast_det_varchar14","ast_det_varchar15","ast_det_varchar16","ast_det_varchar17","ast_det_varchar18","ast_det_varchar19","ast_det_varchar20","ast_det_varchar21","ast_det_varchar22","ast_det_varchar23","ast_det_varchar24","ast_det_varchar25","ast_det_varchar26","ast_det_varchar27","ast_det_varchar28","ast_det_varchar29","ast_det_varchar30","ast_det_numeric1","ast_det_numeric2","ast_det_numeric3","ast_det_numeric4","ast_det_numeric5","ast_det_numeric6","ast_det_numeric7","ast_det_numeric8","ast_det_numeric9","ast_det_numeric10","ast_det_numeric11","ast_det_numeric12","ast_det_numeric13","ast_det_numeric14","ast_det_numeric15","ast_det_datetime1","ast_det_datetime2","ast_det_datetime3","ast_det_datetime4","ast_det_datetime5","ast_det_datetime6","ast_det_datetime7","ast_det_datetime8","ast_det_datetime9","ast_det_datetime10","ast_det_datetime11","ast_det_datetime12","ast_det_datetime13","ast_det_datetime14","ast_det_datetime15","fetchImgData","text","AssetStatusListDropdown","map","ast_sts_status","AssetGroupCode","ast_grp_grp_cd","AssetZone","mst_war_work_area","Assetcostcenter","costcenter","Assetwrkgrp","wrk_grp_grp_cd","Assetleavel","ast_lvl_ast_lvl","Assetlocation","ast_loc_ast_loc","AssetType","ast_type_cd","AssetCode","ast_cod_ast_cd","Assetcriticalfactor","ast_cri_cri_factor","Asset_laboraccount","Assetlaboraccount","account","AssetAutoNumbering","AllImgGet","ImgStatus","file_name","attachment","AllRef","ImgStatusRef","openSaveImg","handleDeleteImgApi","ImgIDdlt","updatedImages","handleImgChangeSingle","e","target","files","URL","createObjectURL","file","reader","FileReader","onloadend","result","readAsDataURL","handleClearImg","preventDefault","handleImgChangeSingle2","handleDeleteImg","s","index","isMyStateEmpty","Object","keys","constructor","findCustomizeLabel","columnName","matchingColumn","find","column_name","customize_label","findCustomizeLabelDet","findCustomizerequiredLabel","foundItem","cf_label_required","modalOpenAsset","setModalOpenAsset","modalOpenAssetCustomerCode","setModalOpenAssetCustomerCode","handleCloseModal","handleCloseModalCustomeCode","handleRowDataPagechg","pageCount","handelRowSearch","searchTotl","CustomTextField","_ref4","rightIcons","props","TextField","InputProps","endAdornment","display","flexDirection","IconButton","onClick","New_Asset","customClass","container","utcOffset","format","PermanentIDFlag","Asset_Critical","setAsset_Critical","Asset_GroupCode","setAsset_GroupCode","Asset_CostCenter","setAsset_CostCenter","Asset_WorkArea","setAsset_WorkArea","Asset_WorkGroup","setAsset_WorkGroup","LaborAccountValue","MaterialAccountValue","ContractAccountValue","emp_mst_login_id","emp_mst_empl_id","split","trim","date_of_purchase","date_of_Warranty","date_of_1","date_of_2","date_of_3","date_of_4","date_of_5","date_of_6","date_of_7","date_of_8","date_of_9","date_of_10","date_of_11","date_of_12","date_of_13","date_of_14","date_of_15","missingFields","json_AssetInsert","site_cd","toString","ast_det_modelno","ast_det_depr_date","ast_det_depr_by","ast_det_acc_depr_cost","ast_det_net_book_value","ast_det_dispose_date","ast_det_dispose_by","ast_det_dispose_type","ast_det_dispose_value","asset_type_ID","asset_group_ID","ImgUpload","audit_user","ast_mst_create_by","ast_aud_originator","i","fieldValue","errorMessage","concat","message","handleCloseSnackbar","onClickChange","CustomerCodeValue","get_date","setDbImgRowIdUpdate","json_AssetUpdate","ast_mst_create_date","SingleImguploadStatus","ImguploadRefStatus","ImgGetDbImgRowId","formData","FormData","append","headers","Update_Asset","timer","setInterval","oldProgress","clearInterval","diff","Math","random","min","onClickDuplicate","onClickCancel","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","focusCancel","isConfirmed","isDenied","formatDuration","duration","minutes","floor","hours","days","handleDataFromSecondComponent","reload","handleNumericInputChange","setterFunction","replace","slice","parts","integerPart","decimalPart","handleNumericInputChange_14","_Asset_Group_Code$fin","selectedKey","assetStsus","cnt_mst_numbering","cnt_mst_option","Helmet","content","Container","maxWidth","themeStretch","className","position","top","zIndex","borderBottom","height","CustomBreadcrumbs","heading","links","action","alignItems","Button","component","RouterLink","variant","startIcon","sx","mb","xs","md","Grid","Card","toggleDiv","marginLeft","htmlFor","src","defaults","baseURL","alt","type","justifyContent","require","id","disabled","onChange","onClose","open","right","palette","grey","DialogContent","dividers","Box","rowGap","columnGap","gridTemplateColumns","sm","marginBottom","Stack","flexGrow","Typography","AssetRenderTextField","_Asset_Group_Code$fin2","size","toUpperCase","Tooltip","placement","arrow","arrowTransform","currentTarget","Menu","Boolean","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","PMSetuphandleShow","WOHistoryhandleShow","RelocationHistoryhandleShow","CheckListhandleShow","Autocomplete","join","disableAnimation","renderInput","params","placeholder","ref","StatushandleShow","responseJson","ast_aud_start_date","toLocaleDateString","formattedTime","toLocaleString","hour","minute","hour12","formattedWeekday","weekday","label1","ast_aud_status","label2","emp_mst_name","label3","label4","label5","step","getsteps","TextareaAutosize","minRows","fullWidth","mt","pt","pb","px","p","Tabs","handleChange","newValue","defaultValue","Tab","role","hidden","direction","Checkbox","checked","handleCancelClick","handleEditClick","paddingBottom","fontWeight","inputProps","textAlign","DateTimePicker","newDate","slotProps","textField","handleCancelClickCustomeCode","handleEditClickCustomerCode","AssetSpares","onDataFromSecondComponent","AssetUsage","AssetSpecification","endsWith","FontAwesomeIcon","faFilePdf","fileName","binaryData","atob","byteArray","Uint8Array","charCodeAt","blob","Blob","url","openPDFInNewTab","handleShowdata","audit_date","year","month","day","second","RefImgDlt","removedItem","updatedRefImg","prevRemovedRefItems","handleDeleteReferenceApi","gutterBottom","onSubmit","forEach","multiple","prevSelectedPdfFiles","selectedImagesArray","onload","imageData","base64","push","handleButtonClick","current","click","paddingRight","DialogTitle","m","AssetParentIdList","handleRowData2","dataLenth","dataa","dataSecond","asset","DialogActions","AssetCustomerCodeList","handleRowData3","_ref5","left","borderRadius","border","transition","bottom","maxHeight","PmSetup","WoHistory","RelocationHistory","CheckList","Snackbar","autoHideDuration","boxShadow","animation","Alert","severity","transform","LinearProgress","ToastContainer"],"sourceRoot":""}