{"version":3,"file":"static/js/7265.57b01410.chunk.js","mappings":"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VC,WAAY,SAEd,CACEL,KAAM,cACNC,WAAY,YACZC,SACE,qHACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,UACNC,WAAY,YACZC,SACE,mJACFC,MAAO,WACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,UACNC,WAAY,YACZC,SACE,uKACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,UACNC,WAAY,YACZC,SACE,6JACFC,MAAO,UACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,eACNC,WAAY,YACZC,SACE,uGACFC,MAAO,eACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,cACNC,WAAY,YACZC,SACE,6HACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,YACNC,WAAY,YACZC,SACE,qXACFC,MAAO,aACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,SACNC,WAAY,YACZC,SACE,uHACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,WACNC,WAAY,UACZC,SACE,6HACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,SACNC,WAAY,UACZC,SACE,2GACFC,MAAO,QACPC,SAAU,QACVC,WAAY,QAEd,CACEL,KAAM,eACNC,WAAY,UACZC,SACE,iLACFC,MAAO,UACPC,SAAU,OACVC,WAAY,SAEd,CACEL,KAAM,gBACNC,WAAY,UACZC,SACE,qJACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,WACNC,WAAY,UACZC,SACE,uIACFC,MAAO,OACPC,SAAU,QACVC,WAAY,QAEd,CACEL,KAAM,eACNC,WAAY,UACZC,SACE,uJACFC,MAAO,UACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,aACNC,WAAY,UACZC,SACE,uHACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,YACNC,WAAY,UACZC,SACE,uHACFC,MAAO,iBACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,UACNC,WAAY,UACZC,SACE,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","sources":["components/map/styles.js","components/map/map-popup.js","components/map/map-marker.js","components/map/map-control.js","_mock/map/cities.js","_mock/map/countries.js","sections/_examples/extra/map-view/heatmap/control-panel.js","sections/_examples/extra/map-view/heatmap/map-style.js","sections/_examples/extra/map-view/heatmap/index.js","sections/_examples/extra/map-view/clusters/layers.js","sections/_examples/extra/map-view/clusters/index.js","sections/_examples/extra/map-view/interaction/control-panel.js","sections/_examples/extra/map-view/interaction/index.js","sections/_examples/extra/map-view/side-by-side/control-panel.js","sections/_examples/extra/map-view/side-by-side/index.js","sections/_examples/extra/map-view/change-theme/control-panel.js","sections/_examples/extra/map-view/change-theme/index.js","sections/_examples/extra/map-view/map-markers-popups.js","sections/_examples/extra/map-view/draggable-markers/control-panel.js","sections/_examples/extra/map-view/draggable-markers/index.js","sections/_examples/extra/map-view/viewport-animation/control-panel.js","sections/_examples/extra/map-view/viewport-animation/index.js","sections/_examples/extra/map-view/map-geo-json-animation.js","sections/_examples/extra/map-view/map-highlight-by-filter.js","sections/_examples/extra/map-view/index.js","pages/components/extra/map.js","utils/format-time.js","utils/mapboxgl.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","../node_modules/date-fns/esm/formatDistanceToNow/index.js","../node_modules/date-fns/esm/getTime/index.js"],"sourcesContent":["import { Popup } from 'react-map-gl';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport GlobalStyles from '@mui/material/GlobalStyles';\n// theme\nimport { bgBlur } from 'src/theme/css';\n\n// ----------------------------------------------------------------------\n\nexport function StyledMapControls() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.mapboxgl-ctrl.mapboxgl-ctrl-group': {\n          borderRadius: '8px',\n          boxShadow: theme.customShadows.z8,\n        },\n        '.mapboxgl-ctrl-zoom-in': {\n          borderRadius: '8px 8px 0 0',\n        },\n        '.mapboxgl-ctrl-compass': {\n          borderRadius: '0 0 8px 8px',\n        },\n        '.mapboxgl-ctrl-fullscreen': {\n          '.mapboxgl-ctrl-icon': {\n            transform: ' scale(0.75)',\n          },\n        },\n        '.mapboxgl-ctrl-group button+button': {\n          borderTop: `1px solid ${theme.palette.divider}`,\n        },\n        '.mapboxgl-ctrl.mapboxgl-ctrl-scale': {\n          border: 'none',\n          lineHeight: '14px',\n          borderRadius: '4px',\n          color: theme.palette.common.white,\n          fontWeight: theme.typography.fontWeightBold,\n          backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n\n// ----------------------------------------------------------------------\n\nexport const StyledPopup = styled(Popup)(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .mapboxgl-popup-content': {\n      maxWidth: 180,\n      padding: theme.spacing(1),\n      boxShadow: theme.customShadows.z20,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[800],\n    },\n    '& .mapboxgl-popup-close-button': {\n      width: 24,\n      height: 24,\n      fontSize: 16,\n      opacity: 0.48,\n      color: theme.palette.common.white,\n      right: isRTL && '0',\n      left: isRTL && 'auto',\n      '&:hover': {\n        opacity: 1,\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n    },\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\n      marginBottom: -1,\n      borderBottomColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\n      marginLeft: -1,\n      borderLeftColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\n      marginTop: -1,\n      borderTopColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\n      marginRight: -1,\n      borderRightColor: theme.palette.grey[800],\n    },\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport const StyledControlPanel = styled('div')(({ theme }) => ({\n  ...bgBlur({ color: theme.palette.grey[900] }),\n  zIndex: 9,\n  minWidth: 200,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n}));\n","// @mui\n//\nimport PropTypes from 'prop-types';\nimport { StyledPopup } from './styles';\n\n// ----------------------------------------------------------------------\n\nexport default function MapPopup({ sx, children, ...other }) {\n  return (\n    <StyledPopup anchor=\"bottom\" sx={sx} {...other}>\n      {children}\n    </StyledPopup>\n  );\n}\n\nMapPopup.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n};\n","import { Marker } from 'react-map-gl';\n// @mui\nimport Box from '@mui/material/Box';\n\n// ----------------------------------------------------------------------\n\nconst SIZE = 20;\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n// ----------------------------------------------------------------------\n\nexport default function MapMarker({ ...other }) {\n  return (\n    <Marker {...other}>\n      <Box\n        component=\"svg\"\n        viewBox=\"0 0 24 24\"\n        sx={{\n          height: SIZE,\n          stroke: 'none',\n          cursor: 'pointer',\n          fill: (theme) => theme.palette.error.main,\n          transform: `translate(${-SIZE / 2}px,${-SIZE}px)`,\n        }}\n      >\n        <path d={ICON} />\n      </Box>\n    </Marker>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { NavigationControl, FullscreenControl, ScaleControl, GeolocateControl } from 'react-map-gl';\n//\nimport { StyledMapControls } from './styles';\n\n// ----------------------------------------------------------------------\n\nexport default function MapControl({\n  hideScaleControl,\n  hideGeolocateControl,\n  hideFullscreenControl,\n  hideNavigationnControl,\n}) {\n  return (\n    <>\n      <StyledMapControls />\n\n      {!hideGeolocateControl && (\n        <GeolocateControl position=\"top-left\" positionOptions={{ enableHighAccuracy: true }} />\n      )}\n\n      {!hideFullscreenControl && <FullscreenControl position=\"top-left\" />}\n\n      {!hideScaleControl && <ScaleControl position=\"bottom-left\" />}\n\n      {!hideNavigationnControl && <NavigationControl position=\"bottom-left\" />}\n    </>\n  );\n}\n\nMapControl.propTypes = {\n  hideFullscreenControl: PropTypes.bool,\n  hideGeolocateControl: PropTypes.bool,\n  hideNavigationnControl: PropTypes.bool,\n  hideScaleControl: PropTypes.bool,\n};\n","export const cities = [\n  {\n    city: 'New York',\n    population: '8,175,133',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg',\n    state: 'New York',\n    latitude: 40.6643,\n    longitude: -73.9385,\n  },\n  {\n    city: 'Los Angeles',\n    population: '3,792,621',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/57/LA_Skyline_Mountains2.jpg/240px-LA_Skyline_Mountains2.jpg',\n    state: 'California',\n    latitude: 34.0194,\n    longitude: -118.4108,\n  },\n  {\n    city: 'Chicago',\n    population: '2,695,598',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/8/85/2008-06-10_3000x1000_chicago_skyline.jpg/240px-2008-06-10_3000x1000_chicago_skyline.jpg',\n    state: 'Illinois',\n    latitude: 41.8376,\n    longitude: -87.6818,\n  },\n  {\n    city: 'Houston',\n    population: '2,100,263',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg/240px-Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg',\n    state: 'Texas',\n    latitude: 29.7805,\n    longitude: -95.3863,\n  },\n  {\n    city: 'Phoenix',\n    population: '1,445,632',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Downtown_Phoenix_Aerial_Looking_Northeast.jpg/207px-Downtown_Phoenix_Aerial_Looking_Northeast.jpg',\n    state: 'Arizona',\n    latitude: 33.5722,\n    longitude: -112.088,\n  },\n  {\n    city: 'Philadelphia',\n    population: '1,526,006',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Philly_skyline.jpg/240px-Philly_skyline.jpg',\n    state: 'Pennsylvania',\n    latitude: 40.0094,\n    longitude: -75.1333,\n  },\n  {\n    city: 'San Antonio',\n    population: '1,327,407',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Downtown_San_Antonio_View.JPG/240px-Downtown_San_Antonio_View.JPG',\n    state: 'Texas',\n    latitude: 29.4724,\n    longitude: -98.5251,\n  },\n  {\n    city: 'San Diego',\n    population: '1,307,402',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/53/US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg/240px-US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg',\n    state: 'California',\n    latitude: 32.8153,\n    longitude: -117.135,\n  },\n  {\n    city: 'Dallas',\n    population: '1,197,816',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Dallas_skyline_daytime.jpg/240px-Dallas_skyline_daytime.jpg',\n    state: 'Texas',\n    latitude: 32.7757,\n    longitude: -96.7967,\n  },\n  {\n    city: 'San Jose',\n    population: '945,942',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Downtown_San_Jose_skyline.PNG/240px-Downtown_San_Jose_skyline.PNG',\n    state: 'California',\n    latitude: 37.2969,\n    longitude: -121.8193,\n  },\n  {\n    city: 'Austin',\n    population: '790,390',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Austin2012-12-01.JPG/240px-Austin2012-12-01.JPG',\n    state: 'Texas',\n    latitude: 30.3072,\n    longitude: -97.756,\n  },\n  {\n    city: 'Jacksonville',\n    population: '821,784',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg/240px-Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg',\n    state: 'Florida',\n    latitude: 30.337,\n    longitude: -81.6613,\n  },\n  {\n    city: 'San Francisco',\n    population: '805,235',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/San_Francisco_skyline_from_Coit_Tower.jpg/240px-San_Francisco_skyline_from_Coit_Tower.jpg',\n    state: 'California',\n    latitude: 37.7751,\n    longitude: -122.4193,\n  },\n  {\n    city: 'Columbus',\n    population: '787,033',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Columbus-ohio-skyline-panorama.jpg/240px-Columbus-ohio-skyline-panorama.jpg',\n    state: 'Ohio',\n    latitude: 39.9848,\n    longitude: -82.985,\n  },\n  {\n    city: 'Indianapolis',\n    population: '820,445',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Downtown_indy_from_parking_garage_zoom.JPG/213px-Downtown_indy_from_parking_garage_zoom.JPG',\n    state: 'Indiana',\n    latitude: 39.7767,\n    longitude: -86.1459,\n  },\n  {\n    city: 'Fort Worth',\n    population: '741,206',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/d/db/FortWorthTexasSkylineW.jpg/240px-FortWorthTexasSkylineW.jpg',\n    state: 'Texas',\n    latitude: 32.7795,\n    longitude: -97.3463,\n  },\n  {\n    city: 'Charlotte',\n    population: '731,424',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Charlotte_skyline45647.jpg/222px-Charlotte_skyline45647.jpg',\n    state: 'North Carolina',\n    latitude: 35.2087,\n    longitude: -80.8307,\n  },\n  {\n    city: 'Seattle',\n    population: '608,660',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/SeattleI5Skyline.jpg/240px-SeattleI5Skyline.jpg',\n    state: 'Washington',\n    latitude: 47.6205,\n    longitude: -122.3509,\n  },\n  {\n    city: 'Denver',\n    population: '600,158',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/DenverCP.JPG/240px-DenverCP.JPG',\n    state: 'Colorado',\n    latitude: 39.7618,\n    longitude: -104.8806,\n  },\n  {\n    city: 'El Paso',\n    population: '649,121',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Downtown_El_Paso_at_sunset.jpeg/240px-Downtown_El_Paso_at_sunset.jpeg',\n    state: 'Texas',\n    latitude: 31.8484,\n    longitude: -106.427,\n  },\n];\n","import { _mock } from '../_mock';\n\n// ----------------------------------------------------------------------\n\nexport const countries = [\n  {\n    timezones: ['America/Aruba'],\n    latlng: [12.5, -69.96666666],\n    name: 'Aruba',\n    country_code: 'AW',\n    capital: 'Oranjestad',\n    photoUrl: _mock.image.cover(1),\n  },\n  {\n    timezones: ['Asia/Kabul'],\n    latlng: [33, 65],\n    name: 'Afghanistan',\n    country_code: 'AF',\n    capital: 'Kabul',\n    photoUrl: _mock.image.cover(2),\n  },\n  {\n    timezones: ['Africa/Luanda'],\n    latlng: [-12.5, 18.5],\n    name: 'Angola',\n    country_code: 'AO',\n    capital: 'Luanda',\n    photoUrl: _mock.image.cover(3),\n  },\n  {\n    timezones: ['Pacific/Efate'],\n    latlng: [-16, 167],\n    name: 'Vanuatu',\n    country_code: 'VU',\n    capital: 'Port Vila',\n    photoUrl: _mock.image.cover(4),\n  },\n  {\n    timezones: ['Pacific/Wallis'],\n    latlng: [-13.3, -176.2],\n    name: 'Wallis and Futuna',\n    country_code: 'WF',\n    capital: 'Mata-Utu',\n    photoUrl: _mock.image.cover(5),\n  },\n  {\n    timezones: ['Pacific/Apia'],\n    latlng: [-13.58333333, -172.33333333],\n    name: 'Samoa',\n    country_code: 'WS',\n    capital: 'Apia',\n    photoUrl: _mock.image.cover(6),\n  },\n  {\n    timezones: ['Asia/Aden'],\n    latlng: [15, 48],\n    name: 'Yemen',\n    country_code: 'YE',\n    capital: \"Sana'a\",\n    photoUrl: _mock.image.cover(7),\n  },\n  {\n    timezones: ['Africa/Johannesburg'],\n    latlng: [-29, 24],\n    name: 'South Africa',\n    country_code: 'ZA',\n    capital: 'Pretoria',\n    photoUrl: _mock.image.cover(8),\n  },\n  {\n    timezones: ['Africa/Lusaka'],\n    latlng: [-15, 30],\n    name: 'Zambia',\n    country_code: 'ZM',\n    capital: 'Lusaka',\n    photoUrl: _mock.image.cover(9),\n  },\n  {\n    timezones: ['Africa/Harare'],\n    latlng: [-20, 30],\n    name: 'Zimbabwe',\n    country_code: 'ZW',\n    capital: 'Harare',\n    photoUrl: _mock.image.cover(10),\n  },\n];\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport Slider from '@mui/material/Slider';\nimport Switch from '@mui/material/Switch';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n// utils\nimport { fDate } from 'src/utils/format-time';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction ControlPanel({\n  startTime,\n  endTime,\n  allDays,\n  selectedTime,\n  onChangeTime,\n  onChangeAllDays,\n}) {\n  const day = 24 * 60 * 60 * 1000;\n\n  const days = Math.round((endTime - startTime) / day);\n\n  const selectedDay = Math.round((selectedTime - startTime) / day);\n\n  const handleChangeDays = (value) => {\n    const daysToAdd = value;\n\n    const newTime = startTime + daysToAdd * day;\n\n    onChangeTime(newTime);\n  };\n\n  return (\n    <StyledControlPanel>\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n          All Days\n        </Typography>\n\n        <Switch\n          size=\"small\"\n          checked={allDays}\n          onChange={(event) => onChangeAllDays(event.target.checked)}\n        />\n      </Box>\n\n      <br />\n\n      <Typography\n        gutterBottom\n        variant=\"body2\"\n        sx={{ color: allDays ? 'text.disabled' : 'common.white' }}\n      >\n        Each Day: {fDate(selectedTime)}\n      </Typography>\n\n      <Slider\n        min={1}\n        step={1}\n        max={days}\n        disabled={allDays}\n        value={selectedDay}\n        onChange={(event, newValue) => {\n          if (typeof newValue === 'number') handleChangeDays(newValue);\n        }}\n      />\n    </StyledControlPanel>\n  );\n}\n\nControlPanel.propTypes = {\n  allDays: PropTypes.bool,\n  endTime: PropTypes.number,\n  onChangeAllDays: PropTypes.func,\n  onChangeTime: PropTypes.func,\n  selectedTime: PropTypes.number,\n  startTime: PropTypes.number,\n};\n\nexport default memo(ControlPanel);\n","// ----------------------------------------------------------------------\n\nconst MAX_ZOOM_LEVEL = 9;\n\nexport const heatmapLayer = {\n  id: 'heatmap',\n  maxzoom: MAX_ZOOM_LEVEL,\n  type: 'heatmap',\n  paint: {\n    // Increase the heatmap weight based on frequency and property magnitude\n    'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n    // Increase the heatmap color weight weight by zoom level\n    // heatmap-intensity is a multiplier on top of heatmap-weight\n    'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, MAX_ZOOM_LEVEL, 3],\n    // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n    // Begin color ramp at 0-stop with a 0-transparancy color\n    // to create a blur-like effect.\n    'heatmap-color': [\n      'interpolate',\n      ['linear'],\n      ['heatmap-density'],\n      0,\n      'rgba(33,102,172,0)',\n      0.2,\n      'rgb(103,169,207)',\n      0.4,\n      'rgb(209,229,240)',\n      0.6,\n      'rgb(253,219,199)',\n      0.8,\n      'rgb(239,138,98)',\n      0.9,\n      'rgb(255,201,101)',\n    ],\n    // Adjust the heatmap radius by zoom level\n    'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, MAX_ZOOM_LEVEL, 20],\n    // Transition from heatmap to circle layer by zoom level\n    'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0],\n  },\n};\n","import { useState, useEffect, useMemo, memo } from 'react';\nimport Map, { Source, Layer } from 'react-map-gl';\n// components\n//\nimport ControlPanel from './control-panel';\nimport { heatmapLayer } from './map-style';\n\n// ----------------------------------------------------------------------\n\nfunction MapHeatmap({ ...other }) {\n  const [allDays, useAllDays] = useState(true);\n\n  const [timeRange, setTimeRange] = useState([0, 0]);\n\n  const [selectedTime, selectTime] = useState(0);\n\n  const [earthquakes, setEarthQuakes] = useState();\n\n  useEffect(() => {\n    fetch('https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson')\n      .then((resp) => resp.json())\n      .then((json) => {\n        const { features } = json;\n\n        const endTime = features[0].properties.time;\n\n        const startTime = features[features.length - 1].properties.time;\n\n        setTimeRange([startTime, endTime]);\n\n        setEarthQuakes(json);\n\n        selectTime(endTime);\n      })\n      .catch((error) => console.error('Could not load data', error));\n  }, []);\n\n  const data = useMemo(\n    () => (allDays ? earthquakes : filterFeaturesByDay(earthquakes, selectedTime)),\n    [earthquakes, allDays, selectedTime]\n  );\n\n  return (\n    <>\n      <Map\n        initialViewState={{\n          latitude: 40,\n          longitude: -100,\n          zoom: 3,\n        }}\n        {...other}\n      >\n        {data && (\n          <Source type=\"geojson\" data={data}>\n            <Layer {...heatmapLayer} />\n          </Source>\n        )}\n      </Map>\n\n      <ControlPanel\n        startTime={timeRange[0]}\n        endTime={timeRange[1]}\n        selectedTime={selectedTime}\n        allDays={allDays}\n        onChangeTime={selectTime}\n        onChangeAllDays={useAllDays}\n      />\n    </>\n  );\n}\n\nexport default memo(MapHeatmap);\n\n// ----------------------------------------------------------------------\n\nfunction filterFeaturesByDay(featureCollection, time) {\n  const date = new Date(time);\n\n  const year = date.getFullYear();\n\n  const month = date.getMonth();\n\n  const day = date.getDate();\n\n  const features = featureCollection?.features.filter((feature) => {\n    const featureDate = new Date(feature.properties?.time);\n\n    return (\n      featureDate.getFullYear() === year &&\n      featureDate.getMonth() === month &&\n      featureDate.getDate() === day\n    );\n  });\n  return { type: 'FeatureCollection', features };\n}\n","// ----------------------------------------------------------------------\n\nexport const clusterLayer = {\n  id: 'clusters',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  paint: {\n    'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\n    'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40],\n  },\n};\n\nexport const clusterCountLayer = {\n  id: 'cluster-count',\n  type: 'symbol',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  layout: {\n    'text-field': '{point_count_abbreviated}',\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n    'text-size': 12,\n  },\n};\n\nexport const unclusteredPointLayer = {\n  id: 'unclustered-point',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['!', ['has', 'point_count']],\n  paint: {\n    'circle-color': '#11b4da',\n    'circle-radius': 4,\n    'circle-stroke-width': 1,\n    'circle-stroke-color': '#FFFFFF',\n  },\n};\n","import { useRef, memo } from 'react';\nimport Map, { Layer, Source } from 'react-map-gl';\n//\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer } from './layers';\n\n// ----------------------------------------------------------------------\n\nfunction MapClusters({ ...other }) {\n  const mapRef = useRef(null);\n\n  const onClick = (event) => {\n    const feature = event.features?.[0];\n\n    const clusterId = feature?.properties?.cluster_id;\n\n    const mapboxSource = mapRef.current?.getSource('earthquakes');\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (error, zoom) => {\n      if (error) {\n        return;\n      }\n\n      if (feature?.geometry.type === 'Point') {\n        mapRef.current?.easeTo({\n          center: feature?.geometry.coordinates,\n          zoom: Number.isNaN(zoom) ? 3 : zoom,\n          duration: 500,\n        });\n      }\n    });\n  };\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 40.67,\n        longitude: -103.59,\n        zoom: 3,\n      }}\n      interactiveLayerIds={[clusterLayer.id || '']}\n      onClick={onClick}\n      ref={mapRef}\n      {...other}\n    >\n      <Source\n        id=\"earthquakes\"\n        type=\"geojson\"\n        data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\n        cluster\n        clusterMaxZoom={14}\n        clusterRadius={50}\n      >\n        <Layer {...clusterLayer} />\n        <Layer {...clusterCountLayer} />\n        <Layer {...unclusteredPointLayer} />\n      </Source>\n    </Map>\n  );\n}\n\nexport default memo(MapClusters);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\nimport InputBase from '@mui/material/InputBase';\nimport Typography from '@mui/material/Typography';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nconst StyledRow = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  textTransform: 'capitalize',\n  justifyContent: 'space-between',\n  color: theme.palette.common.white,\n  '&:not(:last-of-type)': {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nconst camelPattern = /(^|[A-Z])[a-z]*/g;\n\nfunction formatSettingName(name) {\n  return name.match(camelPattern)?.join(' ');\n}\n\nfunction ControlPanel({ settings, onChange }) {\n  const renderSetting = (name, value) => {\n    switch (typeof value) {\n      case 'boolean':\n        return (\n          <StyledRow key={name}>\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\n            <Switch\n              size=\"small\"\n              checked={value}\n              onChange={(event) => onChange(name, event.target.checked)}\n            />\n          </StyledRow>\n        );\n      case 'number':\n        return (\n          <StyledRow key={name}>\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\n            <InputBase\n              value={value}\n              onChange={(event) => onChange(name, Number(event.target.value))}\n              inputProps={{ type: 'number' }}\n              sx={{\n                '& input': {\n                  py: 0.25,\n                  width: 40,\n                  fontSize: 14,\n                  borderRadius: 0.5,\n                  textAlign: 'center',\n                  color: 'common.white',\n                  bgcolor: (theme) => alpha(theme.palette.grey[500], 0.12),\n                },\n              }}\n            />\n          </StyledRow>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <StyledControlPanel>\n      {Object.keys(settings).map((name) => renderSetting(name, settings[name]))}\n    </StyledControlPanel>\n  );\n}\n\nControlPanel.propTypes = {\n  onChange: PropTypes.func,\n  settings: PropTypes.string,\n};\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl } from 'src/components/map';\n//\nimport ControlPanel from './control-panel';\n\n// ----------------------------------------------------------------------\n\nfunction MapInteraction({ ...other }) {\n  const [settings, setSettings] = useState({\n    minZoom: 0,\n    maxZoom: 20,\n    minPitch: 0,\n    maxPitch: 85,\n    dragPan: true,\n    boxZoom: true,\n    keyboard: true,\n    touchZoom: true,\n    dragRotate: true,\n    scrollZoom: true,\n    touchPitch: true,\n    touchRotate: true,\n    doubleClickZoom: true,\n    touchZoomRotate: true,\n  });\n\n  const updateSettings = useCallback(\n    (name, value) =>\n      setSettings((prevSettings) => ({\n        ...prevSettings,\n        [name]: value,\n      })),\n    []\n  );\n\n  return (\n    <Map\n      {...settings}\n      initialViewState={{\n        latitude: 37.729,\n        longitude: -122.36,\n        zoom: 11,\n        bearing: 0,\n        pitch: 50,\n      }}\n      {...other}\n    >\n      <MapControl />\n\n      <ControlPanel settings={settings} onChange={updateSettings} />\n    </Map>\n  );\n}\n\nexport default memo(MapInteraction);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction ControlPanel({ mode, onModeChange }) {\n  return (\n    <StyledControlPanel>\n      <ToggleButtonGroup color=\"primary\" value={mode} exclusive onChange={onModeChange}>\n        <ToggleButton value=\"side-by-side\">Side by side</ToggleButton>\n\n        <ToggleButton value=\"split-screen\">Split screen</ToggleButton>\n      </ToggleButtonGroup>\n    </StyledControlPanel>\n  );\n}\n\nControlPanel.propTypes = {\n  mode: PropTypes.string,\n  onModeChange: PropTypes.func,\n};\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, useMemo, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\n//\nimport ControlPanel from './control-panel';\n\n// ----------------------------------------------------------------------\n\nconst LeftMapStyle = {\n  position: 'absolute',\n  width: '50%',\n  height: '100%',\n};\n\nconst RightMapStyle = {\n  position: 'absolute',\n  left: '50%',\n  width: '50%',\n  height: '100%',\n};\n\n// ----------------------------------------------------------------------\n\nfunction MapSideBySide({ ...other }) {\n  const [viewState, setViewState] = useState({\n    longitude: -122.43,\n    latitude: 37.78,\n    zoom: 12,\n    pitch: 30,\n  });\n\n  const [mode, setMode] = useState('side-by-side');\n\n  const [activeMap, setActiveMap] = useState('left');\n\n  const onLeftMoveStart = useCallback(() => setActiveMap('left'), []);\n\n  const onRightMoveStart = useCallback(() => setActiveMap('right'), []);\n\n  const onMove = useCallback((event) => setViewState(event.viewState), []);\n\n  const width = typeof window === 'undefined' ? 100 : window.innerWidth;\n\n  const leftMapPadding = useMemo(\n    () => ({\n      left: mode === 'split-screen' ? width / 2 : 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    [width, mode]\n  );\n\n  const rightMapPadding = useMemo(\n    () => ({\n      right: mode === 'split-screen' ? width / 2 : 0,\n      top: 0,\n      left: 0,\n      bottom: 0,\n    }),\n    [width, mode]\n  );\n\n  const handleChangeMode = (event, newMode) => {\n    if (newMode !== null) {\n      setMode(newMode);\n    }\n  };\n\n  return (\n    <>\n      <Map\n        id=\"left-map\"\n        {...viewState}\n        padding={leftMapPadding}\n        onMoveStart={onLeftMoveStart}\n        onMove={(event) => {\n          if (activeMap === 'left') {\n            onMove(event);\n          }\n        }}\n        style={LeftMapStyle}\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\n        {...other}\n      />\n\n      <Map\n        id=\"right-map\"\n        {...viewState}\n        padding={rightMapPadding}\n        onMoveStart={onRightMoveStart}\n        onMove={(event) => {\n          if (activeMap === 'right') {\n            onMove(event);\n          }\n        }}\n        style={RightMapStyle}\n        mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n        {...other}\n      />\n\n      <ControlPanel mode={mode} onModeChange={handleChangeMode} />\n    </>\n  );\n}\n\nexport default memo(MapSideBySide);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport Radio from '@mui/material/Radio';\nimport Typography from '@mui/material/Typography';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction ControlPanel({ themes, selectTheme, onChangeTheme }) {\n  return (\n    <StyledControlPanel>\n      <Typography gutterBottom variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n        Select Theme:\n      </Typography>\n\n      <RadioGroup value={selectTheme} onChange={(event, newValue) => onChangeTheme(newValue)}>\n        {Object.keys(themes).map((item) => (\n          <FormControlLabel\n            key={item}\n            value={item}\n            control={<Radio size=\"small\" />}\n            label={item}\n            sx={{ color: 'common.white', textTransform: 'capitalize' }}\n          />\n        ))}\n      </RadioGroup>\n    </StyledControlPanel>\n  );\n}\n\nControlPanel.propTypes = {\n  onChangeTheme: PropTypes.func,\n  selectTheme: PropTypes.string,\n  themes: PropTypes.object,\n};\n\nexport default memo(ControlPanel);\n","import PropTypes from 'prop-types';\nimport { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl } from 'src/components/map';\n//\nimport ControlPanel from './control-panel';\n\n// ----------------------------------------------------------------------\n\nfunction MapChangeTheme({ themes, ...other }) {\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n\n  const handleChangeTheme = useCallback((value) => setSelectTheme(value), []);\n\n  return (\n    <>\n      <Map\n        initialViewState={{\n          latitude: 37.785164,\n          longitude: -100,\n          zoom: 3.5,\n          bearing: 0,\n          pitch: 0,\n        }}\n        mapStyle={themes?.[selectTheme]}\n        {...other}\n      >\n        <MapControl />\n      </Map>\n\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\n    </>\n  );\n}\n\nMapChangeTheme.propTypes = {\n  themes: PropTypes.object,\n};\n\nexport default memo(MapChangeTheme);\n","import PropTypes from 'prop-types';\nimport { useState, memo } from 'react';\nimport Map from 'react-map-gl';\n// @mui\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n// components\nimport Image from 'src/components/image';\nimport { MapPopup, MapMarker, MapControl } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapMarkersPopups({ data, ...other }) {\n  const [popupInfo, setPopupInfo] = useState(null);\n\n  return (\n    <Map\n      initialViewState={{\n        zoom: 2,\n      }}\n      {...other}\n    >\n      <MapControl />\n\n      {data.map((city, index) => (\n        <MapMarker\n          key={`marker-${index}`}\n          latitude={city.latlng[0]}\n          longitude={city.latlng[1]}\n          onClick={(event) => {\n            event.originalEvent.stopPropagation();\n            setPopupInfo(city);\n          }}\n        />\n      ))}\n\n      {popupInfo && (\n        <MapPopup\n          latitude={popupInfo.latlng[0]}\n          longitude={popupInfo.latlng[1]}\n          onClose={() => setPopupInfo(null)}\n        >\n          <Box sx={{ color: 'common.white' }}>\n            <Box\n              sx={{\n                mb: 1,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <Box\n                sx={{\n                  height: '18px',\n                  minWidth: '28px',\n                  marginRight: '8px',\n                  borderRadius: '4px',\n                  backgroundSize: 'cover',\n                  backgroundPosition: 'center',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${popupInfo.country_code.toLowerCase()}.svg)`,\n                }}\n              />\n              <Typography variant=\"subtitle2\">{popupInfo.name}</Typography>\n            </Box>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Timezones: {popupInfo.timezones}\n            </Typography>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Lat: {popupInfo.latlng[0]}\n            </Typography>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Long: {popupInfo.latlng[1]}\n            </Typography>\n\n            <Image\n              alt={popupInfo.name}\n              src={popupInfo.photoUrl}\n              ratio=\"4/3\"\n              sx={{ mt: 1, borderRadius: 1 }}\n            />\n          </Box>\n        </MapPopup>\n      )}\n    </Map>\n  );\n}\n\nMapMarkersPopups.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default memo(MapMarkersPopups);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport Typography from '@mui/material/Typography';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nconst EVENT_NAMES = ['onDragStart', 'onDrag', 'onDragEnd'];\n\nfunction round5(value) {\n  return (Math.round(value * 1e5) / 1e5).toFixed(5);\n}\n\n// ----------------------------------------------------------------------\n\nfunction ControlPanel({ events = {} }) {\n  return (\n    <StyledControlPanel>\n      {EVENT_NAMES.map((event) => {\n        const lngLat = events[event];\n\n        return (\n          <div key={event}>\n            <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n              {event}:\n            </Typography>\n\n            {lngLat ? (\n              <Typography variant=\"subtitle2\" sx={{ color: 'primary.main' }}>\n                {`${round5(lngLat.lng)}, ${round5(lngLat.lat)}`}\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" component=\"em\" sx={{ color: 'error.main' }}>\n                null\n              </Typography>\n            )}\n          </div>\n        );\n      })}\n    </StyledControlPanel>\n  );\n}\n\nControlPanel.propTypes = {\n  events: PropTypes.object,\n};\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapMarker, MapControl } from 'src/components/map';\n//\nimport ControlPanel from './control-panel';\n\n// ----------------------------------------------------------------------\n\nfunction MapDraggableMarkers({ ...other }) {\n  const [marker, setMarker] = useState({\n    latitude: 40,\n    longitude: -100,\n  });\n\n  const [events, logEvents] = useState({});\n\n  const onMarkerDragStart = useCallback((event) => {\n    logEvents((prevEvents) => ({ ...prevEvents, onDragStart: event.lngLat }));\n  }, []);\n\n  const onMarkerDrag = useCallback((event) => {\n    logEvents((prevEvents) => ({ ...prevEvents, onDrag: event.lngLat }));\n\n    setMarker({\n      longitude: event.lngLat.lng,\n      latitude: event.lngLat.lat,\n    });\n  }, []);\n\n  const onMarkerDragEnd = useCallback((event) => {\n    logEvents((prevEvents) => ({ ...prevEvents, onDragEnd: event.lngLat }));\n  }, []);\n\n  return (\n    <>\n      <Map initialViewState={{ latitude: 40, longitude: -100, zoom: 3.5 }} {...other}>\n        <MapControl />\n\n        <MapMarker\n          longitude={marker.longitude}\n          latitude={marker.latitude}\n          anchor=\"bottom\"\n          draggable\n          onDragStart={onMarkerDragStart}\n          onDrag={onMarkerDrag}\n          onDragEnd={onMarkerDragEnd}\n        />\n      </Map>\n\n      <ControlPanel events={events} />\n    </>\n  );\n}\n\nexport default memo(MapDraggableMarkers);\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n// @mui\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction ControlPanel({ data, selectedCity, onSelectCity }) {\n  return (\n    <StyledControlPanel>\n      {data.map((city) => (\n        <RadioGroup\n          key={city.city}\n          value={selectedCity}\n          onChange={(event) => onSelectCity(event, city)}\n        >\n          <FormControlLabel\n            value={city.city}\n            label={city.city}\n            control={<Radio size=\"small\" />}\n            sx={{ color: 'common.white' }}\n          />\n        </RadioGroup>\n      ))}\n    </StyledControlPanel>\n  );\n}\n\nControlPanel.propTypes = {\n  data: PropTypes.array,\n  onSelectCity: PropTypes.func,\n  selectedCity: PropTypes.string,\n};\n\nexport default memo(ControlPanel);\n","import PropTypes from 'prop-types';\nimport { useRef, useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl } from 'src/components/map';\n//\nimport ControlPanel from './control-panel';\n\n// ----------------------------------------------------------------------\n\nfunction MapViewportAnimation({ data, ...other }) {\n  const mapRef = useRef(null);\n\n  const [selectedCity, setSelectedCity] = useState(data[2].city);\n\n  const onSelectCity = useCallback((event, { longitude, latitude }) => {\n    setSelectedCity(event.target.value);\n    mapRef.current?.flyTo({ center: [longitude, latitude], duration: 2000 });\n  }, []);\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 37.7751,\n        longitude: -122.4193,\n        zoom: 11,\n        bearing: 0,\n        pitch: 0,\n      }}\n      ref={mapRef}\n      {...other}\n    >\n      <MapControl />\n\n      <ControlPanel data={data} selectedCity={selectedCity} onSelectCity={onSelectCity} />\n    </Map>\n  );\n}\n\nMapViewportAnimation.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default memo(MapViewportAnimation);\n","import { useState, useEffect, memo } from 'react';\nimport Map, { Layer, Source } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\n// components\nimport { MapControl } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapGeoJSONAnimation({ ...other }) {\n  const theme = useTheme();\n\n  const pointLayer = {\n    id: 'point',\n    type: 'circle',\n    paint: {\n      'circle-radius': 10,\n      'circle-color': theme.palette.error.main,\n    },\n  };\n\n  const [pointData, setPointData] = useState(null);\n\n  useEffect(() => {\n    const animation = window.requestAnimationFrame(() =>\n      setPointData(\n        pointOnCircle({\n          center: [-100, 0],\n          angle: Date.now() / 1000,\n          radius: 20,\n        })\n      )\n    );\n\n    return () => window.cancelAnimationFrame(animation);\n  });\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 0,\n        longitude: -100,\n        zoom: 3,\n      }}\n      mapStyle=\"mapbox://styles/mapbox/satellite-streets-v11\"\n      {...other}\n    >\n      <MapControl />\n\n      {pointData && (\n        <Source type=\"geojson\" data={pointData}>\n          <Layer {...pointLayer} />\n        </Source>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapGeoJSONAnimation);\n\n// ----------------------------------------------------------------------\n\nfunction pointOnCircle({ center, angle, radius }) {\n  return {\n    type: 'Point',\n    coordinates: [center[0] + Math.cos(angle) * radius, center[1] + Math.sin(angle) * radius],\n  };\n}\n","import { useState, useCallback, useMemo, memo } from 'react';\nimport Map, { Layer, Source } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n// components\nimport { MapPopup, MapControl } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapHighlightByFilter({ ...other }) {\n  const theme = useTheme();\n\n  const countiesLayer = {\n    id: 'counties',\n    type: 'fill',\n    'source-layer': 'original',\n    paint: {\n      'fill-outline-color': theme.palette.grey[900],\n      'fill-color': theme.palette.grey[900],\n      'fill-opacity': 0.12,\n    },\n  };\n\n  const highlightLayer = {\n    id: 'counties-highlighted',\n    type: 'fill',\n    source: 'counties',\n    'source-layer': 'original',\n    paint: {\n      'fill-outline-color': theme.palette.error.main,\n      'fill-color': theme.palette.error.main,\n      'fill-opacity': 0.48,\n    },\n  };\n\n  const [hoverInfo, setHoverInfo] = useState(null);\n\n  const onHover = useCallback((event) => {\n    const county = event.features && event.features[0];\n\n    setHoverInfo({\n      longitude: event.lngLat.lng,\n      latitude: event.lngLat.lat,\n      countyName: county && county.properties?.COUNTY,\n    });\n  }, []);\n\n  const selectedCounty = (hoverInfo && hoverInfo.countyName) || '';\n\n  const filter = useMemo(() => ['in', 'COUNTY', selectedCounty], [selectedCounty]);\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 38.88,\n        longitude: -98,\n        zoom: 3,\n      }}\n      minZoom={2}\n      onMouseMove={onHover}\n      interactiveLayerIds={['counties']}\n      {...other}\n    >\n      <MapControl />\n\n      <Source type=\"vector\" url=\"mapbox://mapbox.82pkq93d\">\n        <Layer beforeId=\"waterway-label\" {...countiesLayer} />\n        <Layer beforeId=\"waterway-label\" {...highlightLayer} filter={filter} />\n      </Source>\n\n      {selectedCounty && hoverInfo && (\n        <MapPopup longitude={hoverInfo.longitude} latitude={hoverInfo.latitude} closeButton={false}>\n          <Typography variant=\"body2\" sx={{ color: 'common.white' }}>\n            {selectedCounty}\n          </Typography>\n        </MapPopup>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapHighlightByFilter);\n","import 'src/utils/mapboxgl';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\n// routes\nimport { paths } from 'src/routes/paths';\n// config\nimport { MAPBOX_API } from 'src/config-global';\n// _mock\nimport { cities as CITIES } from 'src/_mock/map/cities';\nimport { countries as COUNTRIES } from 'src/_mock/map/countries';\n// components\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport MapHeatmap from './heatmap';\nimport MapClusters from './clusters';\nimport MapInteraction from './interaction';\nimport MapSideBySide from './side-by-side';\nimport MapChangeTheme from './change-theme';\nimport MapMarkersPopups from './map-markers-popups';\nimport MapDraggableMarkers from './draggable-markers';\nimport MapViewportAnimation from './viewport-animation';\nimport MapGeoJSONAnimation from './map-geo-json-animation';\nimport MapHighlightByFilter from './map-highlight-by-filter';\n\n// ----------------------------------------------------------------------\n\nconst THEMES = {\n  streets: 'mapbox://styles/mapbox/streets-v11',\n  outdoors: 'mapbox://styles/mapbox/outdoors-v11',\n  light: 'mapbox://styles/mapbox/light-v10',\n  dark: 'mapbox://styles/mapbox/dark-v10',\n  satellite: 'mapbox://styles/mapbox/satellite-v9',\n  satelliteStreets: 'mapbox://styles/mapbox/satellite-streets-v11',\n};\n\nconst baseSettings = {\n  mapboxAccessToken: MAPBOX_API,\n  minZoom: 1,\n};\n\nconst StyledMapContainer = styled('div')(({ theme }) => ({\n  zIndex: 0,\n  height: 560,\n  overflow: 'hidden',\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  '& .mapboxgl-ctrl-logo, .mapboxgl-ctrl-bottom-right': {\n    display: 'none',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapView() {\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Map\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Map' },\n            ]}\n            moreLink={[\n              'http://visgl.github.io/react-map-gl',\n              'http://visgl.github.io/react-map-gl/examples',\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Change Theme\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapChangeTheme {...baseSettings} themes={THEMES} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Markers & Popups\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapMarkersPopups {...baseSettings} data={COUNTRIES} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Draggable Markers\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapDraggableMarkers {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Geojson Animation\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapGeoJSONAnimation {...baseSettings} mapStyle={THEMES.satelliteStreets} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Clusters\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapClusters {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Interaction\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapInteraction {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Viewport Animation\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapViewportAnimation\n                  {...baseSettings}\n                  data={CITIES.filter((city) => city.state === 'Texas')}\n                  mapStyle={THEMES.light}\n                />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Highlight By Filter\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapHighlightByFilter {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Heatmap\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapHeatmap {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Side By Side\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapSideBySide {...baseSettings} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport MapView from 'src/sections/_examples/extra/map-view';\n\n// ----------------------------------------------------------------------\n\nexport default function MapPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra: Map</title>\n      </Helmet>\n\n      <MapView />\n    </>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n      })\n    : '';\n}\n","import mapboxgl from 'mapbox-gl';\n\n// @ts-ignore\n// eslint-disable-next-line\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker')?.default;\n","import assign from \"../assign/index.js\";\nexport default function cloneObject(object) {\n  return assign({}, object);\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options !== null && options !== void 0 && options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n  months = differenceInMonths(dateRight, dateLeft);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport default function formatDistanceToNow(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), options);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}"],"names":["StyledMapControls","theme","useTheme","_jsx","GlobalStyles","styles","borderRadius","boxShadow","customShadows","z8","transform","borderTop","concat","palette","divider","border","lineHeight","color","common","white","fontWeight","typography","fontWeightBold","backgroundImage","StyledPopup","styled","Popup","_ref","isRTL","direction","maxWidth","padding","spacing","z20","shape","backgroundColor","grey","width","height","fontSize","opacity","right","left","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","StyledControlPanel","_ref2","bgBlur","zIndex","minWidth","position","top","MapPopup","sx","children","other","anchor","SIZE","ICON","MapMarker","Marker","Box","component","viewBox","stroke","cursor","fill","error","main","d","MapControl","hideScaleControl","hideGeolocateControl","hideFullscreenControl","hideNavigationnControl","_jsxs","_Fragment","GeolocateControl","positionOptions","enableHighAccuracy","FullscreenControl","ScaleControl","NavigationControl","cities","city","population","photoUrl","state","latitude","longitude","countries","timezones","latlng","name","country_code","capital","_mock","image","cover","ControlPanel","startTime","endTime","allDays","selectedTime","onChangeTime","onChangeAllDays","day","days","Math","round","selectedDay","display","alignItems","justifyContent","Typography","variant","Switch","size","checked","onChange","event","target","gutterBottom","fDate","Slider","min","step","max","disabled","value","newValue","memo","heatmapLayer","id","maxzoom","type","paint","MapHeatmap","useAllDays","useState","timeRange","setTimeRange","selectTime","earthquakes","setEarthQuakes","useEffect","fetch","then","resp","json","features","properties","time","length","catch","console","data","useMemo","featureCollection","date","Date","year","getFullYear","month","getMonth","getDate","filter","feature","_feature$properties","featureDate","filterFeaturesByDay","Map","initialViewState","zoom","Source","Layer","clusterLayer","source","clusterCountLayer","layout","unclusteredPointLayer","MapClusters","mapRef","useRef","interactiveLayerIds","onClick","_event$features","_mapRef$current","clusterId","cluster_id","current","getSource","getClusterExpansionZoom","_mapRef$current2","geometry","easeTo","center","coordinates","Number","isNaN","duration","ref","cluster","clusterMaxZoom","clusterRadius","StyledRow","textTransform","camelPattern","formatSettingName","_name$match","match","join","settings","Object","keys","map","renderSetting","InputBase","inputProps","py","textAlign","bgcolor","alpha","MapInteraction","setSettings","minZoom","maxZoom","minPitch","maxPitch","dragPan","boxZoom","keyboard","touchZoom","dragRotate","scrollZoom","touchPitch","touchRotate","doubleClickZoom","touchZoomRotate","updateSettings","useCallback","prevSettings","bearing","pitch","mode","onModeChange","ToggleButtonGroup","exclusive","ToggleButton","LeftMapStyle","RightMapStyle","MapSideBySide","viewState","setViewState","setMode","activeMap","setActiveMap","onLeftMoveStart","onRightMoveStart","onMove","window","innerWidth","leftMapPadding","bottom","rightMapPadding","onMoveStart","style","mapStyle","handleChangeMode","newMode","themes","selectTheme","onChangeTheme","RadioGroup","item","FormControlLabel","control","Radio","label","MapChangeTheme","setSelectTheme","handleChangeTheme","MapMarkersPopups","popupInfo","setPopupInfo","index","originalEvent","stopPropagation","onClose","mb","backgroundSize","backgroundPosition","backgroundRepeat","toLowerCase","Image","alt","src","ratio","mt","EVENT_NAMES","round5","toFixed","events","lngLat","lng","lat","MapDraggableMarkers","marker","setMarker","logEvents","onMarkerDragStart","prevEvents","onDragStart","onMarkerDrag","onDrag","onMarkerDragEnd","onDragEnd","draggable","selectedCity","onSelectCity","MapViewportAnimation","setSelectedCity","flyTo","MapGeoJSONAnimation","pointLayer","pointData","setPointData","animation","requestAnimationFrame","angle","radius","cos","sin","pointOnCircle","now","cancelAnimationFrame","MapHighlightByFilter","countiesLayer","highlightLayer","hoverInfo","setHoverInfo","onHover","_county$properties","county","countyName","COUNTY","selectedCounty","onMouseMove","url","beforeId","closeButton","THEMES","streets","outdoors","light","dark","satellite","satelliteStreets","baseSettings","mapboxAccessToken","MAPBOX_API","StyledMapContainer","overflow","MapView","Container","CustomBreadcrumbs","heading","links","href","paths","components","moreLink","my","Stack","Card","CardHeader","title","CardContent","COUNTRIES","CITIES","MapPage","Helmet","newFormat","fm","format","fDateTime","fTimestamp","getTime","fToNow","formatDistanceToNow","addSuffix","mapboxgl","_require","require","default","cloneObject","object","assign","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyDate","options","requiredArgs","arguments","dirtyBaseDate","_options$locale","defaultOptions","getDefaultOptions","locale","defaultLocale","formatDistance","RangeError","comparison","compareAsc","dateLeft","dateRight","localizeOptions","Boolean","toDate","months","seconds","differenceInSeconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","includeSeconds","hours","differenceInMonths","nearestMonth","monthsSinceStartOfYear","years","floor","distanceInWords"],"sourceRoot":""}