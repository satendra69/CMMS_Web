{"version":3,"file":"static/js/2735.7643abae.chunk.js","mappings":"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","sources":["../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/base/GridBody.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/utils/EventManager.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../node_modules/@mui/x-data-grid/constants/envConstants.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/utils/fastMemo.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/internals/utils/slotsMigration.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/utils.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/components/containers/GridToolbarContainer.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarColumnsButton.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarDensitySelector.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarQuickFilter.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbar.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useLazyRef.js","../node_modules/@mui/x-data-grid/hooks/utils/useOnMount.js","../node_modules/@mui/x-data-grid/hooks/utils/useTimeout.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/reselect/es/index.js","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/utils/warning.js","../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${gridClasses.columnSeparator}, .${gridClasses['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${gridClasses.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${gridClasses.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${gridClasses.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${gridClasses.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${gridClasses['root--disableUserSelection']} .${gridClasses.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  },\n  // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${gridClasses['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${gridClasses['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${gridClasses['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${gridClasses['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = getBorderColor(theme);\n  const radius = theme.shape.borderRadius;\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': theme.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': theme.vars ? `rgba(${theme.vars.palette.background.defaultChannel} / ${theme.vars.palette.action.disabledOpacity})` : alpha(theme.palette.background.default, theme.palette.action.disabledOpacity),\n    '--DataGrid-cellOffsetMultiplier': 2,\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (theme.vars || theme).palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / 0.5)` : alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `none`\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.headerFilterRow}`]: {\n      borderTop: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    '@media (hover: hover)': {\n      [`& .${gridClasses.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${gridClasses.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${gridClasses.columnHeaders}`]: columnHeadersStyles,\n      [`& .${gridClasses.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (theme.vars || theme).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: (theme.vars || theme).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: (theme.vars || theme).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity + theme.palette.action.hoverOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: '1px solid',\n      '&.Mui-selected': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity + theme.palette.action.hoverOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`&.${gridClasses['root--disableUserSelection']} .${gridClasses.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: (theme.vars || theme).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(theme.vars || theme).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: (theme.vars || theme).palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: (theme.vars || theme).palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`.${gridClasses.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${gridClasses['cell--withRightBorder']}`]: {\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${gridClasses['columnHeader--withRightBorder']}`]: {\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: (theme.vars || theme).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: (theme.vars || theme).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n  return gridStyle;\n});","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$unwra;\n  return (_columnGrouping$unwra = columnGrouping == null ? void 0 : columnGrouping.unwrappedGroupingModel) != null ? _columnGrouping$unwra : {};\n});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$looku;\n  return (_columnGrouping$looku = columnGrouping == null ? void 0 : columnGrouping.lookup) != null ? _columnGrouping$looku : {};\n});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$heade;\n  return (_columnGrouping$heade = columnGrouping == null ? void 0 : columnGrouping.headerStructure) != null ? _columnGrouping$heade : [];\n});\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$maxDe;\n  return (_columnGrouping$maxDe = columnGrouping == null ? void 0 : columnGrouping.maxDepth) != null ? _columnGrouping$maxDe : 0;\n});","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nexport const useGridAriaAttributes = () => {\n  var _rootProps$experiment;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 && rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': !rootProps.disableMultipleRowSelection\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  var _rootProps$experiment;\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const getAriaAttributes = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 // ariaV7 should never change\n  ? null : useGridAriaAttributes;\n  const ariaAttributes = typeof getAriaAttributes === 'function' ? getAriaAttributes() : null;\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.register('public', {\n    rootElementRef: rootContainerRef\n  });\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, ariaAttributes, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.preferencesPanel, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.preferencesPanel)), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment;\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const getAriaAttributes = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 // ariaV7 should never change\n  ? useGridAriaAttributes : null;\n  const ariaAttributes = typeof getAriaAttributes === 'function' ? getAriaAttributes() : null;\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    ownerState: rootProps\n  }, ariaAttributes, {\n    children: props.children\n  }));\n});","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, unstable_gridTabIndexColumnGroupHeaderSelector, unstable_gridFocusColumnGroupHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridDensityFactorSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridBody(props) {\n  const {\n    VirtualScrollerComponent,\n    ColumnHeadersProps,\n    children\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const rootRef = React.useRef(null);\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, unstable_gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, unstable_gridFocusColumnGroupHeaderSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  useEnhancedEffect(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n    const elementToObserve = rootRef.current;\n    if (typeof ResizeObserver === 'undefined') {\n      return () => {};\n    }\n    let animationFrame;\n    const observer = new ResizeObserver(() => {\n      // See https://github.com/mui/mui-x/issues/8733\n      animationFrame = window.requestAnimationFrame(() => {\n        apiRef.current.computeSizeAndPublishResizeEvent();\n      });\n    });\n    if (elementToObserve) {\n      observer.observe(elementToObserve);\n    }\n    return () => {\n      if (animationFrame) {\n        window.cancelAnimationFrame(animationFrame);\n      }\n      if (elementToObserve) {\n        observer.unobserve(elementToObserve);\n      }\n    };\n  }, [apiRef]);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []);\n  React.useEffect(() => {\n    setIsVirtualizationDisabled(rootProps.disableVirtualization);\n  }, [rootProps.disableVirtualization]);\n\n  // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerElementRef: columnsContainerRef,\n    columnHeadersElementRef: columnHeadersRef,\n    virtualScrollerRef,\n    mainElementRef: rootRef\n  });\n  const hasDimensions = !!apiRef.current.getRootDimensions();\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    ref: rootRef,\n    children: [/*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef,\n      visibleColumns: visibleColumns,\n      filterColumnLookup: filterColumnLookup,\n      sortColumnLookup: sortColumnLookup,\n      columnPositions: columnPositions,\n      columnHeaderTabIndexState: columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n      columnHeaderFocus: columnHeaderFocus,\n      columnGroupHeaderFocus: columnGroupHeaderFocus,\n      densityFactor: densityFactor,\n      headerGroupingMaxDepth: headerGroupingMaxDepth,\n      columnMenuState: columnMenuState,\n      columnVisibility: columnVisibility,\n      columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence: hasOtherElementInTabSequence\n    }, ColumnHeadersProps)), hasDimensions && /*#__PURE__*/_jsx(VirtualScrollerComponent\n    // The content is only rendered after dimensions are computed because\n    // the lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // If this event is published while dimensions haven't been computed,\n    // the `onFetchRows` prop won't be called during mount.\n    , {\n      ref: virtualScrollerRef,\n      disableVirtualization: isVirtualizationDisabled\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersProps: PropTypes.object,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$slotProps;\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.footer));\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n          (_handlerRef$current = handlerRef.current) == null || _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n        (_subscription$current = subscription.current) == null || _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n            (_handlerRef$current2 = handlerRef.current) == null || _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        var _subscription$current2;\n        (_subscription$current2 = subscription.current) == null || _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n  (_registryContainer$re = registryContainer.registry) == null || _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  var _publicApiRef$current;\n  const existingPrivateApi = (_publicApiRef$current = publicApiRef.current) == null ? void 0 : _publicApiRef$current[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if ((currentPrivateMethod == null ? void 0 : currentPrivateMethod.spying) === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if ((currentPublicMethod == null ? void 0 : currentPublicMethod.spying) === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef, props);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null || input.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { buildWarning } from '../../../utils/warning';\nimport { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  return 0;\n};\nexport const noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridFilteredTopLevelRowCountSelector, gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridFilteredTopLevelRowCountSelector, (paginationModel, visibleTopLevelRowCount) => getPageCount(visibleTopLevelRowCount, paginationModel.pageSize));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    var _rowTree$row$id;\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = (_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$slotProps;\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getCellParams(id, field));\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if ((meta == null ? void 0 : meta.changeReason) !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column) {\n    return null;\n  }\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { convertLegacyOperators, tagInternalFilter } from './utils';\nexport const getGridStringQuickFilterFn = tagInternalFilter(value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    const columnValue = apiRef.current.getRowFormattedValue(row, column);\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n});\nexport const getGridStringOperators = (disableTrim = false) => convertLegacyOperators([{\n  value: 'contains',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}]);","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\nimport { convertQuickFilterV7ToLegacy } from './utils';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: convertQuickFilterV7ToLegacy(getGridStringQuickFilterFn),\n  getApplyQuickFilterFnV7: getGridStringQuickFilterFn\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    validDescendants.push(...getTreeNodeDescendants(tree, child, skipAutoGeneratedRows));\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates\n}) => {\n  var _previousCache$update, _previousCache$update2, _previousCache$update3;\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI: Unable to prepare a partial update if a full update is not applied yet');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...((_previousCache$update = previousCache.updates.actions.insert) != null ? _previousCache$update : [])],\n      modify: [...((_previousCache$update2 = previousCache.updates.actions.modify) != null ? _previousCache$update2 : [])],\n      remove: [...((_previousCache$update3 = previousCache.updates.actions.remove) != null ? _previousCache$update3 : [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup)\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef, rowHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  return 2 * Math.floor(rowHeight * densityFactor);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  var _rootProps$slotProps;\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  var _rootProps$slotProps, _baseSelectProps$nati, _rootProps$slotProps2, _rootProps$slotProps3;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const baseSelectOptionProps = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelectOption) || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp != null ? labelProp : apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: \"standard\",\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: \"standard\",\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any.isRequired\n  })]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nimport { convertLegacyOperators } from './utils';\nexport const getGridBooleanOperators = () => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = filterItem.value === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, delimiterCharacter) {\n  if (typeof value === 'string') {\n    // Make sure value containing delimiter or line break won't be split into multiple rows\n    if ([delimiterCharacter, '\\n', '\\r', '\"'].some(delimiter => value.includes(delimiter))) {\n      return `\"${value.replace(/\"/g, '\"\"')}\"`;\n    }\n    return value;\n  }\n  return value;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    delimiterCharacter,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    var _cellParams$value2;\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      var _cellParams$value;\n      value = (_cellParams$value = cellParams.value) == null ? void 0 : _cellParams$value.toISOString();\n    } else if (typeof ((_cellParams$value2 = cellParams.value) == null ? void 0 : _cellParams$value2.toString) === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, delimiterCharacter);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.delimiterCharacter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.delimiterCharacter);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  delimiterCharacter,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    delimiterCharacter\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      delimiterCharacter,\n      ignoreValueFormatter\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    delimiterCharacter,\n    includeHeaders,\n    includeColumnGroupsHeaders,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    delimiterCharacter,\n    ignoreValueFormatter\n  })}\\r\\n`, '').trim();\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.unstable_getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.unstable_getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        delimiterCharacter,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    delimiterCharacter,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  var _window$getSelection;\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if ((_window$getSelection = window.getSelection()) != null && _window$getSelection.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.unstable_ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp == null ? void 0 : ignoreValueFormatterProp.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key === 'c')) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        // TODO: make it configurable\n        delimiter: clipboardCopyCellDelimiter\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          delimiterCharacter: clipboardCopyCellDelimiter,\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { convertQuickFilterV7ToLegacy } from './utils';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: convertQuickFilterV7ToLegacy(getGridNumericQuickFilterFn),\n  getApplyQuickFilterFnV7: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$slotProps;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    var _item$value2;\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nimport { convertLegacyOperators } from './utils';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    const timeToCompare = dateCopy.setHours(showTime ? value.getHours() : 0, showTime ? value.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\nexport const getGridDateOperators = showTime => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const hasUpdatedEditValueOnMount = React.useRef(false);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  const handleInputRef = el => {\n    inputRef.current = el;\n    if (meta != null && meta.unstable_updateValueOnRender && !hasUpdatedEditValueOnMount.current) {\n      const inputValue = inputRef.current.value;\n      const parsedDate = parseValueToDate(inputValue);\n      setValueState({\n        parsed: parsedDate,\n        formatted: inputValue\n      });\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: parsedDate\n      });\n      hasUpdatedEditValueOnMount.current = true;\n    }\n  };\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: handleInputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport function gridDateFormatter({\n  value,\n  field,\n  id\n}) {\n  if (!value) {\n    return '';\n  }\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId: id,\n    field\n  });\n  return value.toLocaleDateString();\n}\nexport function gridDateTimeFormatter({\n  value,\n  field,\n  id\n}) {\n  if (!value) {\n    return '';\n  }\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId: id,\n    field\n  });\n  return value.toLocaleString();\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","export function isSingleSelectColDef(colDef) {\n  return (colDef == null ? void 0 : colDef.type) === 'singleSelect';\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}\nexport const getLabelFromValueOption = valueOption => {\n  const label = typeof valueOption === 'object' ? valueOption.label : valueOption;\n  return label != null ? String(label) : '';\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\", \"getOptionLabel\", \"getOptionValue\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$slotProps, _baseSelectProps$nati, _rootProps$slotProps2;\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell,\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  const _ref = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelect) || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) == null || _inputRef$current.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  let valueOptions;\n  if (typeof (colDef == null ? void 0 : colDef.valueOptions) === 'function') {\n    valueOptions = colDef == null ? void 0 : colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptions = colDef == null ? void 0 : colDef.valueOptions;\n  }\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = getOptionValueProp || colDef.getOptionValue;\n  const getOptionLabel = getOptionLabelProp || colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      var _rootProps$slotProps3;\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, ((_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseSelectOption) || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"getOptionLabel\", \"getOptionValue\", \"placeholder\", \"tabIndex\", \"label\", \"isFilterActive\", \"clearButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column: {\n    valueOptions,\n    field\n  },\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    const label = getOptionLabel(option);\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$slotProps$, _rootProps$slotProps, _resolvedColumn, _resolvedColumn2, _rootProps$slotProps2, _rootProps$slotProps3, _rootProps$slotProps4;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = (_rootProps$slotProps$ = (_rootProps$slotProps = rootProps.slotProps) == null || (_rootProps$slotProps = _rootProps$slotProps.baseSelect) == null ? void 0 : _rootProps$slotProps.native) != null ? _rootProps$slotProps$ : true;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = getOptionValueProp || ((_resolvedColumn = resolvedColumn) == null ? void 0 : _resolvedColumn.getOptionValue);\n  const getOptionLabel = getOptionLabelProp || ((_resolvedColumn2 = resolvedColumn) == null ? void 0 : _resolvedColumn2.getOptionLabel);\n  const currentValueOptions = React.useMemo(() => {\n    if (!resolvedColumn) {\n      return undefined;\n    }\n    return typeof resolvedColumn.valueOptions === 'function' ? resolvedColumn.valueOptions({\n      field: resolvedColumn.field\n    }) : resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  React.useEffect(() => {\n    var _itemValue;\n    let itemValue;\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions, getOptionValue);\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue, getOptionValue]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp != null ? labelProp : apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: \"standard\",\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: \"standard\",\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder != null ? placeholder : apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative\n      }, others, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: (_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\", \"getOptionLabel\", \"getOptionValue\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  var _resolvedColumn, _resolvedColumn2;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard',\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = getOptionValueProp || ((_resolvedColumn = resolvedColumn) == null ? void 0 : _resolvedColumn.getOptionValue);\n  const getOptionLabel = getOptionLabelProp || ((_resolvedColumn2 = resolvedColumn) == null ? void 0 : _resolvedColumn2.getOptionLabel);\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    var _resolvedColumn3;\n    if (!((_resolvedColumn3 = resolvedColumn) != null && _resolvedColumn3.valueOptions)) {\n      return [];\n    }\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getOptionValue);\n  }, [resolvedValueOptions, getOptionValue]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // Gets the index matching between values and valueOptions\n        return resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formattedOption => formattedOption === element);\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filteredValues.length !== item.value.length) {\n      // Updates the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filteredValues.map(getOptionValue)\n      }));\n    }\n  }, [item, filteredValues, applyValue, getOptionValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: getOptionLabel(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$slotProps;\n      return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nimport { convertLegacyOperators } from './utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(params) {\n    const {\n      id,\n      field,\n      value,\n      api\n    } = params;\n    const colDef = params.api.getColumn(field);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    let valueOptions;\n    if (typeof colDef.valueOptions === 'function') {\n      valueOptions = colDef.valueOptions({\n        id,\n        row: id ? api.getRow(id) : null,\n        field\n      });\n    } else {\n      valueOptions = colDef.valueOptions;\n    }\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, params) => {\n    const colDef = params.colDef;\n    const colDefValueOptions = colDef.valueOptions;\n    const valueOptions = typeof colDefValueOptions === 'function' ? colDefValueOptions({\n      field: colDef.field\n    }) : colDefValueOptions || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  var _rootProps$slotProps;\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null || ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        setFocusedButtonIndex(0);\n      }\n    }\n  }), []);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      if (theme.direction === 'rtl') {\n        newIndex -= 1;\n      } else {\n        newIndex += 1;\n      }\n    } else if (event.key === 'ArrowLeft') {\n      if (theme.direction === 'rtl') {\n        newIndex += 1;\n      } else {\n        newIndex -= 1;\n      }\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      onClickAway: hideMenu,\n      onClick: hideMenu,\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width || GRID_STRING_COL_DEF.width, newColumn.minWidth || GRID_STRING_COL_DEF.minWidth, newColumn.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(columnTypes, type) {\n  let colDef = columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && columnTypes[type]) {\n    colDef = columnTypes[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current;\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(columnTypes, newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, existingState, getDefaultColTypeDef(columnTypes, newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null || (_apiRef$current$getRo2 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, headerHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  return Math.floor(headerHeight * densityFactor) * ((maxDepth != null ? maxDepth : 0) + 1);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { getGridDefaultColumnTypes } from '../../../colDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultColumnTypes = getGridDefaultColumnTypes();\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _ref, _props$columnVisibili, _props$initialState2;\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: defaultColumnTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.columns,\n    columnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.columns) == null ? void 0 : _props$initialState2.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState4, _props$slotProps2;\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = defaultColumnTypes;\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    var _columnVisibilityMode;\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const column = apiRef.current.getColumn(field);\n    const newColumn = _extends({}, column, {\n      width\n    });\n    apiRef.current.updateColumns([newColumn]);\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState$c, _props$initialState3;\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys((_props$initialState$c = (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.columns) == null ? void 0 : _props$initialState3.columnVisibilityModel) != null ? _props$initialState$c : {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, (_props$initialState4 = props.initialState) == null ? void 0 : _props$initialState4.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const columnVisibilityModelToImport = (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$slotProps;\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$slotProps = props.slotProps) == null ? void 0 : _props$slotProps.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, (_props$slotProps2 = props.slotProps) == null ? void 0 : _props$slotProps2.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: {\n    value: props.density,\n    factor: DENSITY_FACTORS[props.density]\n  }\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback(newDensity => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = {\n        value: newDensity,\n        factor: DENSITY_FACTORS[newDensity]\n      };\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density);\n  }, [apiRef, props.density]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = (pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.map(row => row.id)) || [];\n  const bottomPinnedRowsIds = (pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.map(row => row.id)) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.unstable_ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp == null ? void 0 : ignoreValueFormatterProp.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade, _options$includeColum;\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true,\n      includeColumnGroupsHeaders: (_options$includeColum = options.includeColumnGroupsHeaders) != null ? _options$includeColum : true,\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationModelSelector } from './gridPaginationSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getPageCount, noRowCountInServerMode, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$paginationMode, _props$initialState;\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_props$paginationMode = props.paginationModel) != null ? _props$paginationMode : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.pagination) == null ? void 0 : _props$initialState.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  return _extends({}, state, {\n    pagination: {\n      paginationModel\n    }\n  });\n};\nexport const mergeStateWithPaginationModel = (rowCount, signature, paginationModelProp) => paginationState => {\n  var _paginationModelProp$;\n  let paginationModel = paginationState.paginationModel;\n  const pageSize = (_paginationModelProp$ = paginationModelProp == null ? void 0 : paginationModelProp.pageSize) != null ? _paginationModelProp$ : paginationModel.pageSize;\n  const pageCount = getPageCount(rowCount, pageSize);\n  if (paginationModelProp && ((paginationModelProp == null ? void 0 : paginationModelProp.page) !== paginationModel.page || (paginationModelProp == null ? void 0 : paginationModelProp.pageSize) !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return {\n    paginationModel\n  };\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPagination');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'pagination',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    var _props$rowCount;\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount = props.rowCount) != null ? _props$rowCount : visibleTopLevelRowCount, props.signature, paginationModel), 'setPaginationModel');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.rowCount, props.signature, visibleTopLevelRowCount]);\n  const pageApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, pageApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.pagination) == null ? void 0 : _props$initialState2.paginationModel) != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.pagination) == null ? void 0 : _props$initialState3.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2, _props$rowCount2;\n    const paginationModel = (_context$stateToResto = context.stateToRestore.pagination) != null && _context$stateToResto.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : visibleTopLevelRowCount, props.signature, paginationModel), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.rowCount, props.signature, visibleTopLevelRowCount]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    var _apiRef$current$virtu;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if ((_apiRef$current$virtu = apiRef.current.virtualScrollerRef) != null && _apiRef$current$virtu.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n    apiRef.current.forceUpdate();\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    var _props$rowCount3;\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount3 = props.rowCount) != null ? _props$rowCount3 : visibleTopLevelRowCount, props.signature, props.paginationModel));\n  }, [apiRef, props.paginationModel, props.rowCount, props.paginationMode, visibleTopLevelRowCount, props.signature]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { mergeStateWithPaginationModel } from '../pagination/useGridPagination';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.offsetHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.offsetHeight) || 0;\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null || _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null || _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu;\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu = _previousGridState$cu.columns) != null && _previousGridState$cu.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_enableVirtualization();\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.updateControlState('pagination',\n      // Using signature `DataGridPro` to allow more than 100 rows in the print export\n      mergeStateWithPaginationModel(visibleRowCount, 'DataGridPro', paginationModel));\n      apiRef.current.forceUpdate();\n    }\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState;\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.filter) == null ? void 0 : _props$initialState.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  var _props$initialState3, _props$slotProps2;\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(props.getRowId, filterModel, apiRef, props.disableEval) : null;\n      const filteringResult = apiRef.current.applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel != null ? filterModel : getDefaultGridFilterModel()\n      });\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef, props.filterMode, props.getRowId, props.disableEval]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        var _column$filterOperato;\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof (filterOperator == null ? void 0 : filterOperator.requiresFilterValue) === 'undefined' ? true : filterOperator == null ? void 0 : filterOperator.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.filter) == null ? void 0 : _props$initialState2.filterModel) != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.filter) == null ? void 0 : _props$initialState3.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$slotProps;\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$slotProps = props.slotProps) == null ? void 0 : _props$slotProps.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, (_props$slotProps2 = props.slotProps) == null ? void 0 : _props$slotProps2.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && filterableColumnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && filterModel.quickFilterExcludeHiddenColumns) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, unstable_gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => unstable_gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    var _event$relatedTarget;\n    if ((_event$relatedTarget = event.relatedTarget) != null && _event$relatedTarget.className.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'headerFilterBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","/* eslint-disable @typescript-eslint/naming-convention */\nimport { createSelector } from '../../../utils/createSelector';\nexport const unstable_gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const unstable_gridHeaderFilteringEditFieldSelector = createSelector(unstable_gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const unstable_gridHeaderFilteringMenuSelector = createSelector(unstable_gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { unstable_gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { unstable_gridHeaderFilteringEditFieldSelector, unstable_gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled =\n  // @ts-expect-error // TODO move relevant code to the `DataGridPro`\n  props.signature !== 'DataGrid' && props.unstable_headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows == null ? void 0 : currentPageRows[rowIndex].id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const isEditing = unstable_gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = unstable_gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const focusedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (currentPageRows.length === 0 || !dimensions) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.preferencePanel) != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, (_props$initialState3 = props.initialState) == null ? void 0 : _props$initialState3.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key,\n      colDef\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('17')) {\n        // In React 17, cleaning the input is enough.\n        // The sequence of events makes the key pressed by the end-users update the textbox directly.\n        startCellEditModeParams.deleteValue = true;\n      } else {\n        const initialValue = colDef.valueParser ? colDef.valueParser(key) : key;\n        startCellEditModeParams.initialValue = initialValue;\n      }\n    } else if (reason === GridCellEditStartReasons.deleteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {});\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    let unstable_updateValueOnRender = false;\n    if (deleteValue || initialValue) {\n      newValue = deleteValue ? '' : initialValue;\n      unstable_updateValueOnRender = true;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false,\n      unstable_updateValueOnRender\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    var _editingState$id;\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !((_editingState$id = editingState[id]) != null && (_editingState$id = _editingState$id[field]) != null && _editingState$id.error);\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _idToIdLookup$id;\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null || (_copyOfPrevCellModes$ = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n      focusTimeout.current = null;\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          key: event.key,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key,\n      columns\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('17')) {\n        // In React 17, cleaning the input is enough.\n        // The sequence of events makes the key pressed by the end-users update the textbox directly.\n        startRowEditModeParams.deleteValue = !!field;\n      } else {\n        const colDef = columns.find(col => col.field === field);\n        startRowEditModeParams.initialValue = colDef.valueParser ? colDef.valueParser(key) : key;\n      }\n    } else if (reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {});\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      let unstable_updateValueOnRender = false;\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n        unstable_updateValueOnRender = true;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false,\n        unstable_updateValueOnRender\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    var _editingState$id$fiel, _editingState$id;\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return (_editingState$id$fiel = (_editingState$id = editingState[id]) == null ? void 0 : _editingState$id[field]) != null ? _editingState$id$fiel : null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector } from './gridRowsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = React.useRef(null);\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      timeout.current = null;\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.current = setTimeout(run, throttleRemainingTimeMs);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = [];\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      const rowNode = apiRef.current.getRowNode(id);\n      if ((rowNode == null ? void 0 : rowNode.type) === 'pinnedRow') {\n        // @ts-ignore because otherwise `release:build` doesn't work\n        const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n        const prevModel = pinnedRowsCache.idLookup[id];\n        if (prevModel) {\n          pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n        }\n      } else {\n        nonPinnedRowsUpdates.push(update);\n      }\n    });\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => {\n      var _idRowsLookup$id;\n      return [id, (_idRowsLookup$id = idRowsLookup[id]) != null ? _idRowsLookup$id : {}];\n    }));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI: Only group nodes can be expanded or collapsed');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _ref;\n    return (_ref = gridRowTreeSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI: No row with id #${rowId} found`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI: The row reordering do not support reordering of grouped rows yet`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI: The row reordering do not support reordering of footer or grouping rows`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error([\"MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [replacedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      delete dataRowIdToModelLookup[replacedRowId];\n      delete dataRowIdToIdLookup[replacedRowId];\n      delete tree[replacedRowId];\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId].type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      if (timeout.current !== null) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []);\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      return;\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n  return findParentElementFromClassName(cell, gridClasses.row);\n}\n\n// TODO remove\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { GRID_ID_AUTOGENERATED } from './gridRowsUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const {\n    getRowId\n  } = props;\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n      if (!rowModel) {\n        throw new MissingRowIdError(`No row with id #${id} found`);\n      }\n      return rowModel[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    var _getRowId;\n    const id = GRID_ID_AUTOGENERATED in row ? row[GRID_ID_AUTOGENERATED] : (_getRowId = getRowId == null ? void 0 : getRowId(row)) != null ? _getRowId : row.id;\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [getBaseCellParams, getRowId]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    var _ref;\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    const id = (_ref = getRowId ? getRowId(row) : row.id) != null ? _ref : row[GRID_ID_AUTOGENERATED];\n    const field = colDef.field;\n    return colDef.valueFormatter({\n      id,\n      field,\n      value,\n      api: apiRef.current\n    });\n  }, [apiRef, getRowId, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n  return _extends({}, state, {\n    rowSelection: props.rowSelection ? (_getSelectionModelPro = getSelectionModelPropValue(props.rowSelectionModel)) != null ? _getSelectionModelPro : [] : []\n  });\n};\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleRowSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleRowSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !props.checkboxSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, props.checkboxSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if ((rowNode == null ? void 0 : rowNode.type) === 'footer' || (rowNode == null ? void 0 : rowNode.type) === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    var _closest;\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = (_closest = event.target.closest(`.${gridClasses.cell}`)) == null ? void 0 : _closest.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if ((column == null ? void 0 : column.type) === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n      (_window$getSelection = window.getSelection()) == null || _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState;\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.sorting) == null ? void 0 : _props$initialState.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      var _col$sortingOrder;\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.sorting) == null ? void 0 : _props$initialState2.sortModel) != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.sorting) == null ? void 0 : _props$initialState3.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: virtualScrollerRef.current.clientWidth,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = virtualScrollerRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = virtualScrollerRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: virtualScrollerRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left != null && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top != null) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(virtualScrollerRef != null && virtualScrollerRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"contentWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      contentWidth\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  contentWidth: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$slotProps;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.panel, props, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter';\nimport { gridPaginationModelSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCount = React.useMemo(() => {\n    var _ref, _rootProps$rowCount;\n    return (_ref = (_rootProps$rowCount = rootProps.rowCount) != null ? _rootProps$rowCount : visibleTopLevelRowCount) != null ? _ref : 0;\n  }, [rootProps.rowCount, visibleTopLevelRowCount]);\n  const lastPage = React.useMemo(() => Math.floor(rowCount / (paginationModel.pageSize || 1)), [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pagination, _rootProps$pagination2;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = (_rootProps$pagination = (_rootProps$pagination2 = rootProps.paginationModel) == null ? void 0 : _rootProps$pagination2.pageSize) != null ? _rootProps$pagination : paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(TrapFocus, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2, _baseSelectProps$nati, _rootProps$slotProps3, _rootProps$slotProps4, _rootProps$slotProps5, _rootProps$slotProps6, _rootProps$slotProps7, _rootProps$slotProps8, _currentColumn$filter2;\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      multiFilterOperator,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const baseInputLabelProps = ((_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseInputLabel) || {};\n  const baseSelectOptionProps = ((_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseSelectOption) || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const filteredColumns = React.useMemo(() => {\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return filterableColumns;\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: (filterModel == null ? void 0 : filterModel.items) || []\n    });\n    return filterableColumns.filter(column => filteredFields.includes(column.field));\n  }, [filterColumns, filterModel == null ? void 0 : filterModel.items, filterableColumns, item.field]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component is modified\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n        valueRef == null || (_valueRef$current = valueRef.current) == null || _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\"\n      }, (_rootProps$slotProps5 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps5.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$slotProps6 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps6.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.field || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$slotProps7 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps7.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$slotProps8 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps8.baseSelect, {\n        children: currentColumn == null || (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: (filterModel == null ? void 0 : filterModel.items) || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => {\n        var _colDef$filterOperato;\n        return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n      });\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel == null ? void 0 : filterModel.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const addNewFilter = () => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  };\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  const handleRemoveAll = () => {\n    if (items.length === 1 && items[0].value === undefined) {\n      apiRef.current.deleteFilterItem(items[0]);\n      apiRef.current.hideFilterPanel();\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: []\n    }));\n  };\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.logicOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sort\", \"searchPredicate\", \"autoFocusSearchField\", \"disableHideAllButton\", \"disableShowAllButton\", \"getTogglableColumns\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})({\n  padding: '8px 0px 8px 8px'\n});\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nconst collator = new Intl.Collator();\nconst defaultSearchPredicate = (column, searchValue) => {\n  return (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;\n};\nfunction GridColumnsPanel(props) {\n  var _rootProps$slotProps, _rootProps$slotProps3, _rootProps$slotProps4;\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n      sort,\n      searchPredicate = defaultSearchPredicate,\n      autoFocusSearchField = true,\n      disableHideAllButton = false,\n      disableShowAllButton = false,\n      getTogglableColumns\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    columns.forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: currentColumns.map(column => {\n          var _rootProps$slotProps2;\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            ownerState: rootProps,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.slots.baseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\",\n                inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n              }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(rootProps.slots.columnReorderIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), disableShowAllButton && disableHideAllButton ? null : /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableHideAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseButton, {\n        disabled: disableHideAllButton,\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableShowAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseButton, {\n        disabled: disableShowAllButton,\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      })) : null]\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Hide all` button will not be displayed.\n   * @default false\n   */\n  disableHideAllButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show all` button will be disabled\n   * @default false\n   */\n  disableShowAllButton: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  slotProps: PropTypes.object,\n  sort: PropTypes.oneOf(['asc', 'desc'])\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    var _apiRef$current$rootE;\n    const columnHeadersElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null || (_apiRef$current$rootE = _apiRef$current$rootE.current) == null ? void 0 : _apiRef$current$rootE.querySelector(`.${gridClasses.columnHeaders}`);\n    if (columnHeadersElement) {\n      setAnchorEl(columnHeadersElement);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"changeReason\", \"unstable_updateValueOnRender\"],\n  _excluded2 = [\"align\", \"children\", \"editCellState\", \"colIndex\", \"column\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"isSelected\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded3 = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"height\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded4 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    isSelected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', isSelected && 'selected', showRightBorder && 'cell--withRightBorder', 'withBorderColor'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// GridCellWrapper is a compatibility layer for the V6 cell slot. If we can use the more efficient\n// `GridCellV7`, we should. That component is a merge of `GridCellWrapper` and `GridCell`.\n// TODO(v7): Remove the wrapper & cellV6 and use the cellV7 exclusively.\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\nconst GridCellWrapper = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    column,\n    rowId,\n    editCellState\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const managesOwnFocus = column.type === 'actions';\n  const tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  const {\n    slots\n  } = rootProps;\n  const CellComponent = slots.cell;\n  const cellProps = _extends({}, props, {\n    ref,\n    field,\n    formattedValue,\n    hasFocus,\n    isEditable,\n    isSelected,\n    value,\n    cellMode,\n    children,\n    tabIndex,\n    className: clsx(classNames)\n  });\n  return /*#__PURE__*/React.createElement(CellComponent, cellProps);\n});\nconst GridCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment, _rootProps$experiment2;\n  const {\n      align,\n      children: childrenProp,\n      colIndex,\n      column,\n      cellMode,\n      field,\n      formattedValue,\n      hasFocus,\n      height,\n      isEditable,\n      isSelected,\n      rowId,\n      tabIndex,\n      value,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0\n      };\n    }\n    const cellStyle = {\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n    };\n\n    return cellStyle;\n  }, [width, height, isNotVisible]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  const managesOwnFocus = column.type === 'actions';\n  let children = childrenProp;\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      role: \"presentation\",\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  const ariaV7 = (_rootProps$experiment2 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment2.ariaV7;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      ref: handleRef,\n      className: clsx(className, classes.root),\n      role: ariaV7 ? 'gridcell' : 'cell',\n      \"data-field\": field,\n      \"data-colindex\": colIndex,\n      \"aria-colindex\": colIndex + 1,\n      \"aria-colspan\": colSpan,\n      style: style,\n      tabIndex: tabIndex,\n      onClick: publish('cellClick', onClick),\n      onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n      onMouseOver: publish('cellMouseOver', onMouseOver),\n      onMouseDown: publishMouseDown('cellMouseDown'),\n      onMouseUp: publishMouseUp('cellMouseUp'),\n      onKeyDown: publish('cellKeyDown', onKeyDown),\n      onKeyUp: publish('cellKeyUp', onKeyUp)\n    }, draggableEventHandlers, other, {\n      onFocus: handleFocus,\n      children: children\n    }))\n  );\n});\nconst MemoizedCellWrapper = fastMemo(GridCellWrapper);\nprocess.env.NODE_ENV !== \"production\" ? GridCellWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  isNotVisible: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nexport { MemoizedCellWrapper as GridCellWrapper, GridCell };\nconst GridCellV7 = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment3, _rootProps$experiment4;\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      height,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const managesOwnFocus = column.type === 'actions';\n  const tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0\n      };\n    }\n    const cellStyle = {\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n    };\n\n    return cellStyle;\n  }, [width, height, isNotVisible]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment3 = rootProps.experimentalFeatures) != null && _rootProps$experiment3.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded4);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      role: \"presentation\",\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  const ariaV7 = (_rootProps$experiment4 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment4.ariaV7;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      ref: handleRef,\n      className: clsx(className, classNames, classes.root),\n      role: ariaV7 ? 'gridcell' : 'cell',\n      \"data-field\": field,\n      \"data-colindex\": colIndex,\n      \"aria-colindex\": colIndex + 1,\n      \"aria-colspan\": colSpan,\n      style: style,\n      tabIndex: tabIndex,\n      onClick: publish('cellClick', onClick),\n      onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n      onMouseOver: publish('cellMouseOver', onMouseOver),\n      onMouseDown: publishMouseDown('cellMouseDown'),\n      onMouseUp: publishMouseUp('cellMouseUp'),\n      onKeyDown: publish('cellKeyDown', onKeyDown),\n      onKeyUp: publish('cellKeyUp', onKeyUp)\n    }, draggableEventHandlers, other, {\n      onFocus: handleFocus,\n      children: children\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellV7.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isNotVisible: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCellV7 = fastMemo(GridCellV7);\nexport { MemoizedGridCellV7 as GridCellV7 };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"isLastVisible\", \"focusedCellColumnIndexNotInRange\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { GridCellWrapper, GridCellV7 } from './cell/GridCell';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: `${gridClasses.cell} ${gridClasses.withBorderColor}`,\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n}\n\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      position,\n      rowHeight,\n      className,\n      visibleColumns,\n      renderedColumns,\n      containerWidth,\n      firstColumnToRender,\n      isLastVisible = false,\n      focusedCellColumnIndexNotInRange,\n      isNotVisible,\n      focusedCell,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if ((column == null ? void 0 : column.type) === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const CellComponent = slots.cell === GridCellV7 ? GridCellV7 : GridCellWrapper;\n  const rowReordering = rootProps.rowReordering;\n  const getCell = (column, cellProps) => {\n    var _editRowsState$rowId$, _editRowsState$rowId;\n    const disableDragEvents = disableColumnReorder && column.disableReorder || !rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n    const editCellState = (_editRowsState$rowId$ = (_editRowsState$rowId = editRowsState[rowId]) == null ? void 0 : _editRowsState$rowId[column.field]) != null ? _editRowsState$rowId$ : null;\n    let cellIsNotVisible = false;\n    if (focusedCellColumnIndexNotInRange !== undefined && visibleColumns[focusedCellColumnIndexNotInRange].field === column.field) {\n      cellIsNotVisible = true;\n    }\n    return /*#__PURE__*/_jsx(CellComponent, _extends({\n      column: column,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      align: column.align || 'left',\n      colIndex: cellProps.indexRelativeToAllColumns,\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible\n    }, slotProps == null ? void 0 : slotProps.cell), column.field);\n  };\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n      if (!isBaseHeight) {\n        return acc;\n      }\n      numberOfBaseSizes += 1;\n      if (size > acc) {\n        return size;\n      }\n      return acc;\n    }, 0);\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight\n    });\n    if (sizes != null && sizes.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes != null && sizes.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  if (!rowNode) {\n    return null;\n  }\n  const rowType = rowNode.type;\n  const cells = [];\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    let indexRelativeToAllColumns = firstColumnToRender + i;\n    if (focusedCellColumnIndexNotInRange !== undefined && focusedCell) {\n      if (visibleColumns[focusedCellColumnIndexNotInRange].field === column.field) {\n        indexRelativeToAllColumns = focusedCellColumnIndexNotInRange;\n      } else {\n        indexRelativeToAllColumns -= 1;\n      }\n    }\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (rowType !== 'skeletonRow') {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder: rootProps.showCellVerticalBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  containerWidth: PropTypes.number.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedCell: PropTypes.string,\n  focusedCellColumnIndexNotInRange: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  isNotVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  var _rootProps$slotProps;\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\"\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    if (!(target != null && target.contains(event.target))) {\n      apiRef.current.hideColumnMenu();\n    }\n  }, [apiRef, target]);\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$slotProps;\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef != null && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      columnMenuOpen,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  var _rootProps$slotProps, _colDef$sortingOrder, _rootProps$slotProps2, _colDef$headerName;\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder: rootProps.showColumnVerticalBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = (_colDef$sortingOrder = colDef.sortingOrder) != null ? _colDef$sortingOrder : rootProps.sortingOrder;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.columnHeaderFilterIconButton)), colDef.sortable && !colDef.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = (_colDef$headerName = colDef.headerName) != null ? _colDef$headerName : colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"style\"],\n  _excluded2 = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useTheme } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Uses binary search to avoid looping through all possible positions\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\nexport const areRenderContextsEqual = (context1, context2) => {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n};\n// The `maxSize` is 3 so that reselect caches the `renderedColumns` values for the pinned left,\n// unpinned, and pinned right sections.\nconst MEMOIZE_OPTIONS = {\n  maxSize: 3\n};\nexport const useGridVirtualScroller = props => {\n  var _currentPage$range3, _currentPage$range4;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const {\n    ref,\n    disableVirtualization,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const theme = useTheme();\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerDimensions, setContainerDimensions] = React.useState({\n    width: null,\n    height: null\n  });\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  const rowStyleCache = React.useRef(Object.create(null));\n  const prevGetRowProps = React.useRef();\n  const prevRootRowStyle = React.useRef();\n  const getRenderedColumnsRef = React.useRef(defaultMemoize((columns, firstColumnToRender, lastColumnToRender, minFirstColumn, maxLastColumn, indexOfColumnWithFocusedCell) => {\n    // If the selected column is not within the current range of columns being displayed,\n    // we need to render it at either the left or right of the columns,\n    // depending on whether it is above or below the range.\n    let focusedCellColumnIndexNotInRange;\n    const renderedColumns = columns.slice(firstColumnToRender, lastColumnToRender);\n    if (indexOfColumnWithFocusedCell > -1) {\n      // check if it is not on the left pinned column.\n      if (firstColumnToRender > indexOfColumnWithFocusedCell && indexOfColumnWithFocusedCell >= minFirstColumn) {\n        focusedCellColumnIndexNotInRange = indexOfColumnWithFocusedCell;\n      }\n      // check if it is not on the right pinned column.\n      else if (lastColumnToRender < indexOfColumnWithFocusedCell && indexOfColumnWithFocusedCell < maxLastColumn) {\n        focusedCellColumnIndexNotInRange = indexOfColumnWithFocusedCell;\n      }\n    }\n    return {\n      focusedCellColumnIndexNotInRange,\n      renderedColumns\n    };\n  }, MEMOIZE_OPTIONS));\n  const indexOfColumnWithFocusedCell = React.useMemo(() => {\n    if (cellFocus !== null) {\n      return visibleColumns.findIndex(column => column.field === cellFocus.field);\n    }\n    return -1;\n  }, [cellFocus, visibleColumns]);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    var _currentPage$range, _currentPage$range2;\n    const lastMeasuredIndexRelativeToAllRows = apiRef.current.getLastMeasuredRowIndex();\n    let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n    if ((_currentPage$range = currentPage.range) != null && _currentPage$range.lastRowIndex && !allRowsMeasured) {\n      // Check if all rows in this page are already measured\n      allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= currentPage.range.lastRowIndex;\n    }\n    const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (((_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.firstRowIndex) || 0), 0, rowsMeta.positions.length);\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    }\n\n    // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage);\n  }, [apiRef, (_currentPage$range3 = currentPage.range) == null ? void 0 : _currentPage$range3.firstRowIndex, (_currentPage$range4 = currentPage.range) == null ? void 0 : _currentPage$range4.lastRowIndex, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (disableVirtualization) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + containerDimensions.height);\n    let hasRowWithAutoHeight = false;\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: firstRowIndex,\n      lastIndex: lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = currentPage.rows[i];\n      hasRowWithAutoHeight = apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(Math.abs(left), columnPositions);\n      lastColumnIndex = binarySearch(Math.abs(left) + containerDimensions.width, columnPositions);\n    }\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [disableVirtualization, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerDimensions]);\n  useEnhancedEffect(() => {\n    if (disableVirtualization) {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    } else {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    }\n  }, [disableVirtualization]);\n  useEnhancedEffect(() => {\n    setContainerDimensions({\n      width: rootRef.current.clientWidth,\n      height: rootRef.current.clientHeight\n    });\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(() => {\n    if (rootRef.current) {\n      setContainerDimensions({\n        width: rootRef.current.clientWidth,\n        height: rootRef.current.clientHeight\n      });\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'debouncedResize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = direction * gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer, theme.direction]);\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (prevRenderContext.current && areRenderContextsEqual(nextRenderContext, prevRenderContext.current)) {\n      updateRenderZonePosition(nextRenderContext);\n      return;\n    }\n    setRenderContext(nextRenderContext);\n    updateRenderZonePosition(nextRenderContext);\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    apiRef.current.publishEvent('renderedRowsIntervalChange', {\n      firstRowToRender,\n      lastRowToRender\n    });\n    prevRenderContext.current = nextRenderContext;\n  }, [apiRef, setRenderContext, prevRenderContext, currentPage.rows.length, rootProps.rowBuffer, updateRenderZonePosition]);\n  useEnhancedEffect(() => {\n    if (containerDimensions.width == null) {\n      return;\n    }\n    const initialRenderContext = computeRenderContext();\n    updateRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('scrollPositionChange', params);\n  }, [apiRef, computeRenderContext, containerDimensions.width, updateRenderContext]);\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (!prevRenderContext.current || scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n\n    // When virtualization is disabled, the context never changes during scroll\n    const nextRenderContext = disableVirtualization ? prevRenderContext.current : computeRenderContext();\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth;\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        updateRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const indexOfRowWithFocusedCell = React.useMemo(() => {\n    if (cellFocus !== null) {\n      return currentPage.rows.findIndex(row => row.id === cellFocus.id);\n    }\n    return -1;\n  }, [cellFocus, currentPage.rows]);\n  const getRows = (params = {\n    renderContext\n  }) => {\n    var _rootProps$slotProps;\n    const {\n      onRowRender,\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerDimensions.width,\n      rowIndexOffset = 0,\n      position = 'center'\n    } = params;\n    if (!nextRenderContext || availableSpace == null) {\n      return null;\n    }\n    const rowBuffer = !disableVirtualization ? rootProps.rowBuffer : 0;\n    const columnBuffer = !disableVirtualization ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n    if (params.rows) {\n      params.rows.forEach(row => {\n        renderedRows.push(row);\n        apiRef.current.calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      });\n    } else {\n      if (!currentPage.range) {\n        return null;\n      }\n      for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n        const row = currentPage.rows[i];\n        renderedRows.push(row);\n        apiRef.current.calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    // If the selected row is not within the current range of rows being displayed,\n    // we need to render it at either the top or bottom of the rows,\n    // depending on whether it is above or below the range.\n\n    let isRowWithFocusedCellNotInRange = false;\n    if (indexOfRowWithFocusedCell > -1) {\n      const rowWithFocusedCell = currentPage.rows[indexOfRowWithFocusedCell];\n      if (firstRowToRender > indexOfRowWithFocusedCell || lastRowToRender < indexOfRowWithFocusedCell) {\n        isRowWithFocusedCellNotInRange = true;\n        if (indexOfRowWithFocusedCell > firstRowToRender) {\n          renderedRows.push(rowWithFocusedCell);\n        } else {\n          renderedRows.unshift(rowWithFocusedCell);\n        }\n        apiRef.current.calculateColSpan({\n          rowId: rowWithFocusedCell.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    let isColumnWihFocusedCellNotInRange = false;\n    if (firstColumnToRender > indexOfColumnWithFocusedCell || lastColumnToRender < indexOfColumnWithFocusedCell) {\n      isColumnWihFocusedCellNotInRange = true;\n    }\n    const {\n      focusedCellColumnIndexNotInRange,\n      renderedColumns\n    } = getRenderedColumnsRef.current(visibleColumns, firstColumnToRender, lastColumnToRender, minFirstColumn, maxLastColumn, isColumnWihFocusedCellNotInRange ? indexOfColumnWithFocusedCell : -1);\n    const _ref = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.row) || {},\n      {\n        style: rootRowStyle\n      } = _ref,\n      rootRowProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const invalidatesCachedRowStyle = prevGetRowProps.current !== getRowProps || prevRootRowStyle.current !== rootRowStyle;\n    if (invalidatesCachedRowStyle) {\n      rowStyleCache.current = Object.create(null);\n    }\n    const rows = [];\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _currentPage$range5;\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const isRowNotVisible = isRowWithFocusedCellNotInRange && cellFocus.id === id;\n      const lastVisibleRowIndex = isRowWithFocusedCellNotInRange ? firstRowToRender + i === currentPage.rows.length : firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      if (onRowRender) {\n        onRowRender(id);\n      }\n      const focusedCell = cellFocus !== null && cellFocus.id === id ? cellFocus.field : null;\n      const columnWithFocusedCellNotInRange = focusedCellColumnIndexNotInRange !== undefined && visibleColumns[focusedCellColumnIndexNotInRange];\n      const renderedColumnsWithFocusedCell = columnWithFocusedCellNotInRange && focusedCell ? [columnWithFocusedCellNotInRange, ...renderedColumns] : renderedColumns;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      const _ref2 = typeof getRowProps === 'function' && getRowProps(id, model) || {},\n        {\n          style: rowStyle\n        } = _ref2,\n        rowProps = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n      if (!rowStyleCache.current[id]) {\n        const style = _extends({}, rowStyle, rootRowStyle);\n        rowStyleCache.current[id] = style;\n      }\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        focusedCellColumnIndexNotInRange: focusedCellColumnIndexNotInRange,\n        isNotVisible: isRowNotVisible,\n        rowHeight: baseRowHeight,\n        focusedCell: focusedCell,\n        tabbableCell: tabbableCell,\n        renderedColumns: renderedColumnsWithFocusedCell,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: rowIndexOffset + ((currentPage == null || (_currentPage$range5 = currentPage.range) == null ? void 0 : _currentPage$range5.firstRowIndex) || 0) + firstRowToRender + i,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex,\n        position: position\n      }, rowProps, rootRowProps, {\n        style: rowStyleCache.current[id]\n      }), id));\n    }\n    prevGetRowProps.current = getRowProps;\n    prevRootRowStyle.current = rootRowStyle;\n    return rows;\n  };\n  const needsHorizontalScrollbar = containerDimensions.width && columnsTotalWidth >= containerDimensions.width;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n    }\n\n    return size;\n  }, [apiRef, rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, needsHorizontalScrollbar, rootProps.autoHeight, rootProps.rowHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  const rootStyle = React.useMemo(() => {\n    const style = {};\n    if (!needsHorizontalScrollbar) {\n      style.overflowX = 'hidden';\n    }\n    if (rootProps.autoHeight) {\n      style.overflowY = 'hidden';\n    }\n    return style;\n  }, [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const getRenderContext = React.useCallback(() => {\n    return prevRenderContext.current;\n  }, []);\n  apiRef.current.register('private', {\n    getRenderContext\n  });\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (inputProps = {}) => _extends({\n      ref: handleRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove\n    }, inputProps, {\n      style: inputProps.style ? _extends({}, inputProps.style, rootStyle) : rootStyle,\n      role: 'presentation'\n    }),\n    getContentProps: ({\n      style\n    } = {}) => ({\n      style: style ? _extends({}, style, contentSize) : contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef,\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showColumnBorder,\n    groupId\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showColumnBorder && 'columnHeader--showColumnBorder', showColumnBorder && 'columnHeader--withRightBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  var _columnGroupsLookup$g;\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId != null ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) == null ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showColumnBorder = rootProps.showColumnVerticalBorder;\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showColumnBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName != null ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/system';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { areRenderContextsEqual, getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContextRaw] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (renderContext && nextRenderContext && areRenderContextsEqual(renderContext, nextRenderContext)) {\n      return;\n    }\n    setRenderContextRaw(nextRenderContext);\n  }, [renderContext]);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition, setRenderContext]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n      const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n        var _column$computedWidth;\n        const column = apiRef.current.getColumn(field);\n        return acc + ((_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0);\n      }, 0);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(({\n        groupId,\n        columnFields\n      }) => {\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex,\n          hasFocus,\n          tabIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnsToRender,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    }),\n    headerHeight\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  alignItems: 'center',\n  boxSizing: 'border-box',\n  borderBottom: '1px solid',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n  const {\n      isDragging,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnPositions\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"densityFactor\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeaders(props, ref) {\n  const {\n      innerRef,\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnPositions,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      densityFactor,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumnHeaders,\n    getColumnGroupHeaders\n  } = useGridColumnHeaders({\n    innerRef,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsx(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsxs(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: [getColumnGroupHeaders(), getColumnHeaders()]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnPositions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  densityFactor: PropTypes.number.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n  minColumnIndex: PropTypes.number,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps == null ? void 0 : leftItemProps.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps == null ? void 0 : rightItemProps.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  var _colDef$sortingOrder;\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = (_colDef$sortingOrder = colDef.sortingOrder) != null ? _colDef$sortingOrder : rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (!colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon,\n  ColumnMenuHideIcon: GridVisibilityOffIcon,\n  ColumnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  ColumnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  ColumnMenuFilterIcon: GridFilterAltIcon,\n  ColumnMenuManageColumnsIcon: GridViewColumnIcon,\n  ColumnMenuClearIcon: GridClearIcon,\n  LoadIcon: GridLoadIcon,\n  FilterPanelAddIcon: GridAddIcon,\n  FilterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  ColumnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseIconButton: MUIIconButton,\n  BaseInputAdornment: MUIInputAdornment,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  BaseInputLabel: MUIInputLabel,\n  BaseSelectOption: MUISelectOption,\n  BaseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridColumnHeaderFilterIconButton } from '../components';\nimport { GridCellV7 } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  Cell: GridCellV7,\n  SkeletonCell: GridSkeletonCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ColumnHeaders: GridColumnHeaders,\n  Footer: GridFooter,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TODO v7: This file exist only to simplify typing between\n// components/componentsProps and slots/slotProps\n// Should be deleted when components/componentsProps are removed\n\nexport const uncapitalizeObjectKeys = capitalizedObject => {\n  if (capitalizedObject === undefined) {\n    return undefined;\n  }\n  return Object.keys(capitalizedObject).reduce((acc, key) => _extends({}, acc, {\n    [`${key.charAt(0).toLowerCase()}${key.slice(1)}`]: capitalizedObject[key]\n  }), {});\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"components\", \"componentsProps\"];\nimport * as React from 'react';\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  var _props$forwardedProps;\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = (_props$forwardedProps = props.forwardedProps) != null ? _props$forwardedProps : {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const {\n        components,\n        componentsProps\n      } = allProps,\n      themedProps = _objectWithoutPropertiesLoose(allProps, _excluded);\n    return [components, componentsProps, groupForwardedProps(themedProps)];\n  }, [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps, uncapitalizeObjectKeys } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleRowSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  rowSelection: true,\n  density: 'standard',\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleRowSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: 'client',\n  filterDebounceMs: 150,\n  columnHeaderHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: 'client',\n  rowHeight: 52,\n  pageSizeOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: 'client',\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false,\n  unstable_ignoreValueFormatterDuringExport: false,\n  clipboardCopyCellDelimiter: '\\t'\n};\nconst defaultSlots = uncapitalizeObjectKeys(DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\nexport const useDataGridProps = inProps => {\n  const [components, componentsProps, themedProps] = useProps(useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots,\n    components\n  }), [components, themedProps.slots]);\n  return React.useMemo(() => {\n    var _themedProps$slotProp;\n    return _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n      localeText,\n      slots,\n      slotProps: (_themedProps$slotProp = themedProps.slotProps) != null ? _themedProps$slotProp : componentsProps\n    }, DATA_GRID_FORCED_PROPS);\n  }, [themedProps, localeText, slots, componentsProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { uncapitalizeObjectKeys } from './slotsMigration';\n\n// TODO v7: Remove `components` and usages of `UncapitalizeObjectKeys` type\n// after converting keys in Grid(Pro|Premium)SlotsComponent to camelCase.\n// https://github.com/mui/mui-x/issues/7940\nexport function computeSlots({\n  defaultSlots,\n  slots,\n  components\n}) {\n  const overrides = slots != null ? slots : components ? uncapitalizeObjectKeys(components) : null;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  return _extends({}, defaultSlots, overrides);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce, unstable_capitalize as capitalize } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    var _pinnedRows$top, _pinnedRows$bottom;\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {};\n      /* eslint-disable-next-line no-restricted-syntax */\n      for (const key in sizes) {\n        if (/^base[A-Z]/.test(key)) {\n          initialHeights[key] = sizes[key];\n        }\n      }\n      initialHeights.baseCenter = baseRowHeight;\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let maximumBaseSize = 0;\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line no-restricted-syntax, guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (/^base[A-Z]/.test(key)) {\n          maximumBaseSize = value > maximumBaseSize ? value : maximumBaseSize;\n        } else {\n          otherSizes += value;\n        }\n      }\n      return acc + maximumBaseSize + otherSizes;\n    }, 0);\n    pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null || _pinnedRows$top.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null || _pinnedRows$bottom.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta), [hydrateRowsMeta]);\n  const storeMeasuredRowHeight = React.useCallback((id, height, position) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel) => {\n  const getParents = field => {\n    var _unwrappedGroupingMod;\n    return (_unwrappedGroupingMod = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod : [];\n  };\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      var _getParents$depth;\n      const groupId = (_getParents$depth = getParents(newField)[depth]) != null ? _getParents$depth : null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (!children) {\n      console.warn(`MUI: group groupId=${groupId} has no children.`);\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  var _props$experimentalFe, _props$columnGrouping, _props$columnGrouping2;\n  if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup((_props$columnGrouping = props.columnGroupingModel) != null ? _props$columnGrouping : []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel((_props$columnGrouping2 = props.columnGroupingModel) != null ? _props$columnGrouping2 : []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel);\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => {\n    var _unwrappedGroupingMod, _unwrappedGroupingMod2;\n    return (_unwrappedGroupingMod = (_unwrappedGroupingMod2 = unwrappedGroupingModel[field]) == null ? void 0 : _unwrappedGroupingMod2.length) != null ? _unwrappedGroupingMod : 0;\n  }));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  var _props$experimentalFe3;\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    var _unwrappedGroupingMod3;\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return (_unwrappedGroupingMod3 = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod3 : [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    unstable_getColumnGroupPath: getColumnGroupPath,\n    unstable_getAllGroupDetails: getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    var _props$columnGrouping3;\n    const unwrappedGroupingModel = unwrapGroupingColumnModel((_props$columnGrouping3 = props.columnGroupingModel) != null ? _props$columnGrouping3 : []);\n    apiRef.current.setState(state => {\n      var _state$columns$ordere, _state$columns;\n      const orderedFields = (_state$columns$ordere = (_state$columns = state.columns) == null ? void 0 : _state$columns.orderedFields) != null ? _state$columns$ordere : [];\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    var _props$experimentalFe2;\n    if (!((_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.columnGrouping)) {\n      return;\n    }\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel != null ? columnGroupingModel : []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel != null ? columnGroupingModel : []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => {\n      var _unwrappedGroupingMod4, _unwrappedGroupingMod5;\n      return (_unwrappedGroupingMod4 = (_unwrappedGroupingMod5 = unwrappedGroupingModel[field]) == null ? void 0 : _unwrappedGroupingMod5.length) != null ? _unwrappedGroupingMod4 : 0;\n    }));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef, (_props$experimentalFe3 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe3.columnGrouping]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const privateApiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(privateApiRef, props);\n  useGridRowsPreProcessors(privateApiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(rowSelectionStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnsStateInitializer, privateApiRef, props);\n  useGridInitializeState(rowsStateInitializer, privateApiRef, props);\n  useGridInitializeState(editingStateInitializer, privateApiRef, props);\n  useGridInitializeState(focusStateInitializer, privateApiRef, props);\n  useGridInitializeState(sortingStateInitializer, privateApiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, privateApiRef, props);\n  useGridInitializeState(filterStateInitializer, privateApiRef, props);\n  useGridInitializeState(densityStateInitializer, privateApiRef, props);\n  useGridInitializeState(paginationStateInitializer, privateApiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, privateApiRef, props);\n  useGridKeyboardNavigation(privateApiRef, props);\n  useGridRowSelection(privateApiRef, props);\n  useGridColumns(privateApiRef, props);\n  useGridRows(privateApiRef, props);\n  useGridParamsApi(privateApiRef, props);\n  useGridColumnSpanning(privateApiRef);\n  useGridColumnGrouping(privateApiRef, props);\n  useGridEditing(privateApiRef, props);\n  useGridFocus(privateApiRef, props);\n  useGridPreferencesPanel(privateApiRef, props);\n  useGridFilter(privateApiRef, props);\n  useGridSorting(privateApiRef, props);\n  useGridDensity(privateApiRef, props);\n  useGridPagination(privateApiRef, props);\n  useGridRowsMeta(privateApiRef, props);\n  useGridScroll(privateApiRef, props);\n  useGridColumnMenu(privateApiRef);\n  useGridCsvExport(privateApiRef, props);\n  useGridPrintExport(privateApiRef, props);\n  useGridClipboard(privateApiRef, props);\n  useGridDimensions(privateApiRef, props);\n  useGridEvents(privateApiRef, props);\n  useGridStatePersistence(privateApiRef);\n  return privateApiRef;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []);\n\n  // Calculate `colSpan` for the cell.\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex,\n      columns\n    } = params;\n    const columnsLength = columns.length;\n    const column = columns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n    let width = column.computedWidth;\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j;\n      // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = columns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]);\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import * as React from 'react';\nimport { unstable_debounce as debounce, unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height;\n\n    // We recalculate the scroll x to consider the size of the y scrollbar.\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, props.columnHeaderHeight);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n    let scrollBarSize;\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: Math.max(rootDimensionsRef.current.height - totalHeaderHeight, 0)\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: {\n          width: Math.round(viewportOuterSize.width),\n          height: viewportOuterSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom\n        },\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, totalHeaderHeight]);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => debounce(setSavedSize, 60), []);\n  const previousSize = React.useRef();\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateGridDimensionsRef();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateGridDimensionsRef]);\n\n  // This is the function called by apiRef.current.resize()\n  const resize = React.useCallback(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n  }, [apiRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const computeSizeAndPublishResizeEvent = React.useCallback(() => {\n    var _apiRef$current$mainE, _previousSize$current, _previousSize$current2;\n    const mainEl = (_apiRef$current$mainE = apiRef.current.mainElementRef) == null ? void 0 : _apiRef$current$mainE.current;\n    if (!mainEl) {\n      return;\n    }\n    const win = ownerWindow(mainEl);\n    const computedStyle = win.getComputedStyle(mainEl);\n    const height = parseFloat(computedStyle.height) || 0;\n    const width = parseFloat(computedStyle.width) || 0;\n    const hasHeightChanged = height !== ((_previousSize$current = previousSize.current) == null ? void 0 : _previousSize$current.height);\n    const hasWidthChanged = width !== ((_previousSize$current2 = previousSize.current) == null ? void 0 : _previousSize$current2.width);\n    if (!previousSize.current || hasHeightChanged || hasWidthChanged) {\n      const size = {\n        width,\n        height\n      };\n      apiRef.current.publishEvent('resize', size);\n      previousSize.current = size;\n    }\n  }, [apiRef]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions\n  };\n  const dimensionsPrivateApi = {\n    getViewportPageSize,\n    updateGridDimensionsRef,\n    computeSizeAndPublishResizeEvent\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'public');\n  useGridApiMethod(apiRef, dimensionsPrivateApi, 'private');\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  height: '100%',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  }\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref\n  }, props, {\n    className: clsx(classes.root, props.className),\n    ownerState: rootProps\n  }));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  var _props$style;\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && ((_props$style = props.style) == null ? void 0 : _props$style.minHeight) === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 0,\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: 4 // Should be above pinned columns, pinned rows and detail panel\n});\n\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n  if (rootProps.autoHeight && height === 0) {\n    height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n  }\n\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  if (!viewportInnerSize) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0\n      }\n    }, props))\n  });\n}\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  if (showNoRowsOverlay) {\n    var _rootProps$slotProps;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.noRowsOverlay));\n  }\n  if (showNoResultsOverlay) {\n    var _rootProps$slotProps2;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.noResultsOverlay));\n  }\n  if (loading) {\n    var _rootProps$slotProps3;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.loadingOverlay));\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { GridOverlays } from './base/GridOverlays';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n      className,\n      disableVirtualization\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref,\n    disableVirtualization\n  });\n  return /*#__PURE__*/_jsxs(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))]\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, DATA_GRID_PROPS_DEFAULT_VALUES } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {\n        VirtualScrollerComponent: DataGridVirtualScroller\n      }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\n\n/**\n * Remove at v7\n * @deprecated\n */\nexport const SUBMIT_FILTER_STROKE_TIME = DATA_GRID_PROPS_DEFAULT_VALUES.filterDebounceMs;\n\n/**\n * Remove at v7\n * @deprecated\n */\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = DATA_GRID_PROPS_DEFAULT_VALUES.filterDebounceMs;\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef[]]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Overridable components.\n   * @deprecated Use `slots` instead.\n   */\n  components: PropTypes.object,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   * @deprecated Use the `slotProps` prop instead.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   * @ignore - do not document\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    ariaV7: PropTypes.bool,\n    columnGrouping: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n    return null;\n  },\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default: false\n   */\n  unstable_ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { convertLegacyOperators, tagInternalFilter } from './utils';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = tagInternalFilter(value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n});\nexport const getGridNumericOperators = () => convertLegacyOperators([{\n  value: '=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * A global API ref, for v7-to-legacy converter\n */\nexport const GLOBAL_API_REF = {\n  current: null\n};\n\n/**\n * A tagger to determine if the filter is internal or custom user-supplied.\n * To be a valid internal filter, the v7 function *must* be defined/redefined at\n * the same time as the legacy one.\n * https://github.com/mui/mui-x/pull/9254#discussion_r1231095551\n */\nexport function tagInternalFilter(fn) {\n  fn.isInternal = true;\n  return fn;\n}\nexport function isInternalFilter(fn) {\n  return fn !== undefined && fn.isInternal === true;\n}\nexport function convertFilterV7ToLegacy(fn) {\n  return tagInternalFilter((filterItem, column) => {\n    const filterFn = fn(filterItem, column);\n    if (!filterFn) {\n      return filterFn;\n    }\n    return cellParams => {\n      return filterFn(cellParams.value, cellParams.row, column, GLOBAL_API_REF.current);\n    };\n  });\n}\nexport function convertLegacyOperators(ops) {\n  return ops.map(op => {\n    return _extends({}, op, {\n      getApplyFilterFn: convertFilterV7ToLegacy(op.getApplyFilterFnV7),\n      getApplyFilterFnV7: tagInternalFilter(op.getApplyFilterFnV7)\n    });\n  });\n}\nexport function convertQuickFilterV7ToLegacy(fn) {\n  return tagInternalFilter((filterItem, column, apiRef) => {\n    const filterFn = fn(filterItem, column, apiRef);\n    if (!filterFn) {\n      return filterFn;\n    }\n    return cellParams => {\n      return filterFn(cellParams.value, cellParams.row, column, apiRef);\n    };\n  });\n}","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClickAway\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  var _rootProps$slotProps;\n  const {\n      open,\n      target,\n      onClickAway,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: onClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClickAway: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$slotProps;\n      return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$slotProps;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id) {\n      var _item$value2;\n      setFilterValueState(String((_item$value2 = item.value) != null ? _item$value2 : ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarContainer',\n  overridesResolver: (_, styles) => styles.toolbarContainer\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  gap: theme.spacing(1),\n  padding: theme.spacing(0.5, 0.5, 0)\n}));\nconst GridToolbarContainer = /*#__PURE__*/React.forwardRef(function GridToolbarContainer(props, ref) {\n  const {\n      className,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  if (!children) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarContainerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbarContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridToolbarColumnsButton = /*#__PURE__*/React.forwardRef(function GridToolbarColumnsButton(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const columnButtonId = useId();\n  const columnPanelId = useId();\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const showColumns = event => {\n    if (preferencePanel.open && preferencePanel.openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns, columnPanelId, columnButtonId);\n    }\n    onClick == null || onClick(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === columnPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n    ref: ref,\n    id: columnButtonId,\n    size: \"small\",\n    \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": isOpen,\n    \"aria-controls\": isOpen ? columnPanelId : undefined,\n    startIcon: /*#__PURE__*/_jsx(rootProps.slots.columnSelectorIcon, {})\n  }, other, {\n    onClick: showColumns\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n    children: apiRef.current.getLocaleText('toolbarColumns')\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarDensitySelector = /*#__PURE__*/React.forwardRef(function GridToolbarDensitySelector(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: 'compact'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: 'standard'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: 'comfortable'\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (densityValue) {\n      case 'compact':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {});\n      case 'comfortable':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {});\n      default:\n        return /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {});\n    }\n  }, [densityValue, rootProps]);\n  const handleDensitySelectorOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null || onClick(event);\n  };\n  const handleDensitySelectorClickAway = event => {\n    var _buttonRef$current;\n    if (buttonRef.current === event.target || // if user clicked on the icon\n    (_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      setOpen(false);\n    }\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === densityValue,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: startIcon,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? densityMenuId : undefined,\n      id: densityButtonId\n    }, other, {\n      onClick: handleDensitySelectorOpen\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarDensity')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleDensitySelectorClickAway,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"componentsProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { gridColumnLookupSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridFilterActiveItemsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (_props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = /*#__PURE__*/React.forwardRef(function GridToolbarFilterButton(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n      componentsProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const buttonProps = componentsProps.button || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const classes = useUtilityClasses(rootProps);\n  const filterButtonId = useId();\n  const filterPanelId = useId();\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n    const getOperatorLabel = item => lookup[item.field].filterOperators.find(operator => operator.value === item.operator).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operator)}`).toString();\n    const getFilterItemValue = item => {\n      const {\n        getValueAsString\n      } = lookup[item.field].filterOperators.find(operator => operator.value === item.operator);\n      return getValueAsString ? getValueAsString(item.value) : item.value;\n    };\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: activeFilters.map((item, index) => _extends({}, lookup[item.field] && /*#__PURE__*/_jsx(\"li\", {\n          children: `${lookup[item.field].headerName || item.field}\n                  ${getOperatorLabel(item)}\n                  ${\n          // implicit check for null and undefined\n          item.value != null ? getFilterItemValue(item) : ''}`\n        }, index)))\n      })]\n    });\n  }, [apiRef, rootProps, preferencePanel.open, activeFilters, lookup, classes]);\n  const toggleFilter = event => {\n    var _buttonProps$onClick;\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.filters, filterPanelId, filterButtonId);\n    }\n    (_buttonProps$onClick = buttonProps.onClick) == null || _buttonProps$onClick.call(buttonProps, event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === filterPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: ref,\n      id: filterButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      \"aria-controls\": isOpen ? filterPanelId : undefined,\n      \"aria-expanded\": isOpen,\n      \"aria-haspopup\": true,\n      startIcon: /*#__PURE__*/_jsx(Badge, {\n        badgeContent: activeFilters.length,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(rootProps.slots.openFilterButtonIcon, {})\n      })\n    }, buttonProps, {\n      onClick: toggleFilter\n    }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"quickFilterParser\", \"quickFilterFormatter\", \"debounceMs\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridQuickFilterValuesSelector } from '../../hooks/features/filter';\nimport { isDeepEqual } from '../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridToolbarQuickFilterRoot = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarQuickFilter',\n  overridesResolver: (props, styles) => styles.toolbarQuickFilter\n})(({\n  theme\n}) => ({\n  width: 'auto',\n  paddingBottom: theme.spacing(0.5),\n  '& input': {\n    marginLeft: theme.spacing(0.5)\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n  },\n  [`& input[type=search]::-ms-clear,\n& input[type=search]::-ms-reveal`]: {\n    /* clears the 'X' icon from IE */\n    display: 'none',\n    width: 0,\n    height: 0\n  },\n  [`& input[type=\"search\"]::-webkit-search-decoration,\n  & input[type=\"search\"]::-webkit-search-cancel-button,\n  & input[type=\"search\"]::-webkit-search-results-button,\n  & input[type=\"search\"]::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\nconst defaultSearchValueParser = searchText => searchText.split(' ').filter(word => word !== '');\nconst defaultSearchValueFormatter = values => values.join(' ');\nfunction GridToolbarQuickFilter(props) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const quickFilterValues = useGridSelector(apiRef, gridQuickFilterValuesSelector);\n  const {\n      quickFilterParser = defaultSearchValueParser,\n      quickFilterFormatter = defaultSearchValueFormatter,\n      debounceMs = rootProps.filterDebounceMs\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [searchValue, setSearchValue] = React.useState(() => quickFilterFormatter(quickFilterValues != null ? quickFilterValues : []));\n  const prevQuickFilterValuesRef = React.useRef(quickFilterValues);\n  React.useEffect(() => {\n    if (!isDeepEqual(prevQuickFilterValuesRef.current, quickFilterValues)) {\n      // The model of quick filter value has been updated\n      prevQuickFilterValuesRef.current = quickFilterValues;\n\n      // Update the input value if needed to match the new model\n      setSearchValue(prevSearchValue => isDeepEqual(quickFilterParser(prevSearchValue), quickFilterValues) ? prevSearchValue : quickFilterFormatter(quickFilterValues != null ? quickFilterValues : []));\n    }\n  }, [quickFilterValues, quickFilterFormatter, quickFilterParser]);\n  const updateSearchValue = React.useCallback(newSearchValue => {\n    const newQuickFilterValues = quickFilterParser(newSearchValue);\n    prevQuickFilterValuesRef.current = newQuickFilterValues;\n    apiRef.current.setQuickFilterValues(newQuickFilterValues);\n  }, [apiRef, quickFilterParser]);\n  const debouncedUpdateSearchValue = React.useMemo(() => debounce(updateSearchValue, debounceMs), [updateSearchValue, debounceMs]);\n  const handleSearchValueChange = React.useCallback(event => {\n    const newSearchValue = event.target.value;\n    setSearchValue(newSearchValue);\n    debouncedUpdateSearchValue(newSearchValue);\n  }, [debouncedUpdateSearchValue]);\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    updateSearchValue('');\n  }, [updateSearchValue]);\n  return /*#__PURE__*/_jsx(GridToolbarQuickFilterRoot, _extends({\n    as: rootProps.slots.baseTextField,\n    ownerState: rootProps,\n    variant: \"standard\",\n    value: searchValue,\n    onChange: handleSearchValueChange,\n    placeholder: apiRef.current.getLocaleText('toolbarQuickFilterPlaceholder'),\n    \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterLabel'),\n    type: \"search\"\n  }, other, {\n    InputProps: _extends({\n      startAdornment: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {\n        fontSize: \"small\"\n      }),\n      endAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterDeleteIconLabel'),\n        size: \"small\",\n        sx: {\n          visibility: searchValue ? 'visible' : 'hidden'\n        },\n        onClick: handleSearchReset\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterClearIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }, other.InputProps)\n  }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarQuickFilter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The debounce time in milliseconds.\n   * @default 150\n   */\n  debounceMs: PropTypes.number,\n  /**\n   * Function responsible for formatting values of quick filter in a string when the model is modified\n   * @param {any[]} values The new values passed to the quick filter model\n   * @returns {string} The string to display in the text field\n   */\n  quickFilterFormatter: PropTypes.func,\n  /**\n   * Function responsible for parsing text input in an array of independent values for quick filtering.\n   * @param {string} input The value entered by the user\n   * @returns {any[]} The array of value on which quick filter is applied\n   */\n  quickFilterParser: PropTypes.func\n} : void 0;\nexport { GridToolbarQuickFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"csvOptions\", \"printOptions\", \"excelOptions\", \"showQuickFilter\", \"quickFilterProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { GridToolbarContainer } from '../containers/GridToolbarContainer';\nimport { GridToolbarColumnsButton } from './GridToolbarColumnsButton';\nimport { GridToolbarDensitySelector } from './GridToolbarDensitySelector';\nimport { GridToolbarFilterButton } from './GridToolbarFilterButton';\nimport { GridToolbarExport } from './GridToolbarExport';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridToolbarQuickFilter } from './GridToolbarQuickFilter';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbar = /*#__PURE__*/React.forwardRef(function GridToolbar(props, ref) {\n  // TODO v7: think about where export option should be passed.\n  // from slotProps={{ toolbarExport: { ...exportOption } }} seems to be more appropriate\n  const {\n      csvOptions,\n      printOptions,\n      excelOptions,\n      showQuickFilter = false,\n      quickFilterProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  if (rootProps.disableColumnFilter && rootProps.disableColumnSelector && rootProps.disableDensitySelector && !showQuickFilter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridToolbarContainer, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridToolbarColumnsButton, {}), /*#__PURE__*/_jsx(GridToolbarFilterButton, {}), /*#__PURE__*/_jsx(GridToolbarDensitySelector, {}), /*#__PURE__*/_jsx(GridToolbarExport, {\n      csvOptions: csvOptions,\n      printOptions: printOptions\n      // TODO: remove the reference to excelOptions in community package\n      ,\n      excelOptions: excelOptions\n    }), /*#__PURE__*/_jsx(Box, {\n      sx: {\n        flex: 1\n      }\n    }), showQuickFilter && /*#__PURE__*/_jsx(GridToolbarQuickFilter, _extends({}, quickFilterProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Props passed to the quick filter component.\n   */\n  quickFilterProps: PropTypes.object,\n  /**\n   * Show the quick filter component.\n   * @default false\n   */\n  showQuickFilter: PropTypes.bool,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      children,\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null || onClick(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  const handleMenuClickAway = event => {\n    var _buttonRef$current;\n    if (buttonRef.current === event.target || // if user clicked on the icon\n    (_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n      \"aria-expanded\": open,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-controls\": open ? exportMenuId : undefined,\n      id: exportButtonId\n    }, other, {\n      onClick: handleMenuOpen\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarExport')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleMenuClickAway,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null || hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null || hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell', 'cellContent', 'cellCheckbox', 'cellSkeleton', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnGroupHeader', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeader--showColumnBorder', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorderColor', 'cell--withRightBorder', 'columnHeader--withRightBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n    if (!item.field) {\n      return false;\n    }\n    const column = columnLookup[item.field];\n    if (!(column != null && column.filterOperators) || (column == null || (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n    if (!filterOperator) {\n      return false;\n    }\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { GLOBAL_API_REF, isInternalFilter } from '../../../colDef/utils';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\ntry {\n  // eslint-disable-next-line no-eval\n  hasEval = eval('true');\n} catch (_) {\n  hasEval = false;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    var _filterItem$value;\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!(filterOperators != null && filterOperators.length)) {\n    throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const hasUserFunctionLegacy = !isInternalFilter(filterOperator.getApplyFilterFn);\n  const hasUserFunctionV7 = !isInternalFilter(filterOperator.getApplyFilterFnV7);\n  if (filterOperator.getApplyFilterFnV7 && !(hasUserFunctionLegacy && !hasUserFunctionV7)) {\n    const applyFilterOnRow = filterOperator.getApplyFilterFnV7(newFilterItem, column);\n    if (typeof applyFilterOnRow !== 'function') {\n      return null;\n    }\n    return {\n      v7: true,\n      item: newFilterItem,\n      fn: row => {\n        const value = apiRef.current.getRowValue(row, column);\n        return applyFilterOnRow(value, row, column, apiRef);\n      }\n    };\n  }\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    v7: false,\n    item: newFilterItem,\n    fn: rowId => {\n      const params = apiRef.current.getCellParams(rowId, newFilterItem.field);\n      GLOBAL_API_REF.current = apiRef;\n      const result = applyFilterOnRow(params);\n      GLOBAL_API_REF.current = null;\n      return result;\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridRowIdGetter | undefined} getRowId The getter for row's id.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nexport const buildAggregatedFilterItemsApplier = (getRowId, filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (!hasEval || disableEval) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.v7 ? applier.fn(row) : applier.fn(getRowId ? getRowId(row) : row.id);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `eval()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, e.g. `{ [dynamicKey]: value }`.\n  const filterItemTemplate = `(function filterItem$$(row, shouldApplyFilter) {\n      ${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\n      const result$$ = {\n      ${appliers.map((applier, i) => `${JSON.stringify(String(applier.item.id))}:\n          !shouldApply${i} ?\n            false :\n            ${applier.v7 ? `appliers[${i}].fn(row)` : `appliers[${i}].fn(${getRowId ? 'getRowId(row)' : 'row.id'})`},\n      `).join('\\n')}};\n\n      return result$$;\n    })`;\n\n  // eslint-disable-next-line no-eval\n  const filterItem = eval(filterItemTemplate.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n  return filterItem;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {GridRowIdGetter | undefined} getRowId The getter for row's id.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nexport const buildAggregatedQuickFilterApplier = (getRowId, filterModel, apiRef) => {\n  var _filterModel$quickFil, _filterModel$quickFil2, _filterModel$quickFil3;\n  const quickFilterValues = (_filterModel$quickFil = (_filterModel$quickFil2 = filterModel.quickFilterValues) == null ? void 0 : _filterModel$quickFil2.filter(Boolean)) != null ? _filterModel$quickFil : [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const quickFilterExcludeHiddenColumns = (_filterModel$quickFil3 = filterModel.quickFilterExcludeHiddenColumns) != null ? _filterModel$quickFil3 : false;\n  const columnFields = quickFilterExcludeHiddenColumns ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n    const getApplyQuickFilterFnV7 = column == null ? void 0 : column.getApplyQuickFilterFnV7;\n    const hasUserFunctionLegacy = !isInternalFilter(getApplyQuickFilterFn);\n    const hasUserFunctionV7 = !isInternalFilter(getApplyQuickFilterFnV7);\n    if (getApplyQuickFilterFnV7 && !(hasUserFunctionLegacy && !hasUserFunctionV7)) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(value => ({\n          v7: true,\n          fn: getApplyQuickFilterFnV7(value, column, apiRef)\n        }))\n      });\n    } else if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(value => ({\n          v7: false,\n          fn: getApplyQuickFilterFn(value, column, apiRef)\n        }))\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n    const usedCellParams = {};\n\n    /* eslint-disable no-restricted-syntax, no-labels, no-continue */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        const value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (applier.v7) {\n          const isMatching = applier.fn(value, row, column, apiRef);\n          if (isMatching) {\n            result[filterValue] = true;\n            continue outer;\n          }\n        } else {\n          var _usedCellParams$field;\n          const cellParams = (_usedCellParams$field = usedCellParams[field]) != null ? _usedCellParams$field : apiRef.current.getCellParams(getRowId ? getRowId(row) : row.id, field);\n          usedCellParams[field] = cellParams;\n          const isMatching = applier.fn(cellParams);\n          if (isMatching) {\n            result[filterValue] = true;\n            continue outer;\n          }\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-restricted-syntax, no-labels, no-continue */\n\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (getRowId, filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(getRowId, filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(getRowId, filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    var _isRowMatchingFilterI, _isRowMatchingQuickFi;\n    result.passingFilterItems = (_isRowMatchingFilterI = isRowMatchingFilterItems == null ? void 0 : isRowMatchingFilterItems(row, shouldApplyFilter)) != null ? _isRowMatchingFilterI : null;\n    result.passingQuickFilterValues = (_isRowMatchingQuickFi = isRowMatchingQuickFilter == null ? void 0 : isRowMatchingQuickFilter(row, shouldApplyFilter)) != null ? _isRowMatchingQuickFi : null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    var _filterModel$logicOpe;\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = (_filterModel$logicOpe = filterModel.logicOperator) != null ? _filterModel$logicOpe : getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    var _filterModel$quickFil4;\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = (_filterModel$quickFil4 = filterModel.quickFilterLogicOperator) != null ? _filterModel$quickFil4 : getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows == null ? void 0 : rows.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  var _rawPinnedRows$bottom, _rawPinnedRows$top;\n  const rawPinnedRows = additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows;\n  return {\n    bottom: rawPinnedRows == null || (_rawPinnedRows$bottom = rawPinnedRows.bottom) == null ? void 0 : _rawPinnedRows$bottom.map(rowEntry => {\n      var _rowEntry$model;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model = rowEntry.model) != null ? _rowEntry$model : {}\n      };\n    }),\n    top: rawPinnedRows == null || (_rawPinnedRows$top = rawPinnedRows.top) == null ? void 0 : _rawPinnedRows$top.map(rowEntry => {\n      var _rowEntry$model2;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model2 = rowEntry.model) != null ? _rowEntry$model2 : {}\n      };\n    })\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  return ((pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector,\n// TODO rows v6: Is this the best approach ?\n(sortedIds, idRowsLookup) => sortedIds.map(id => {\n  var _idRowsLookup$id;\n  return {\n    id,\n    model: (_idRowsLookup$id = idRowsLookup[id]) != null ? _idRowsLookup$id : {}\n  };\n}));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nconst UNINITIALIZED = {};\n\n// See https://github.com/facebook/react/issues/14490 for when to use this.\nexport function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","import * as React from 'react';\nconst EMPTY = [];\nexport function useOnMount(fn) {\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nclass Timeout {\n  constructor() {\n    this.currentId = 0;\n    this.clear = () => {\n      if (this.currentId !== 0) {\n        clearTimeout(this.currentId);\n        this.currentId = 0;\n      }\n    };\n    this.disposeEffect = () => {\n      return this.clear;\n    };\n  }\n  static create() {\n    return new Timeout();\n  }\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(fn, delay);\n  }\n}\nexport function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: new WeakMap()\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (...selectorArgs) => {\n    var _cache$get, _cache$get3;\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const {\n      cache\n    } = cacheContainer;\n    if (cache.get(cacheKey) && (_cache$get = cache.get(cacheKey)) != null && _cache$get.get(args)) {\n      var _cache$get2;\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return (_cache$get2 = cache.get(cacheKey)) == null ? void 0 : _cache$get2.get(args)(state, cacheKey);\n    }\n    const newSelector = reselectCreateSelector(...args);\n    if (!cache.get(cacheKey)) {\n      cache.set(cacheKey, new Map());\n    }\n    (_cache$get3 = cache.get(cacheKey)) == null || _cache$get3.set(args, newSelector);\n    return newSelector(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = new WeakMap();\n};","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable no-restricted-syntax */\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  /* eslint-enable no-restricted-syntax */\n  /* eslint-enable guard-for-in */\n\n  return aLength === bLength;\n}","export const isEscapeKey = key => key === 'Escape'; // TODO remove\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace';\n\n// Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isEnterKey(event.key) || isDeleteKeys(event.key) || isPrintableKey(event);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["columnHeadersStyles","concat","gridClasses","columnSeparator","visibility","width","columnHeaderStyles","iconButtonContainer","menuIcon","GridRootStyles","styled","name","slot","overridesResolver","props","styles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","editBooleanCell","cellContent","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","root","_ref","theme","borderColor","vars","palette","TableCell","border","mode","lighten","alpha","divider","darken","getBorderColor","radius","shape","borderRadius","_extends","typography","fontWeightMedium","background","defaultChannel","action","disabledOpacity","default","flex","boxSizing","position","borderWidth","borderStyle","color","text","primary","body2","outline","height","display","minWidth","minHeight","flexDirection","overflowAnchor","borderBottomColor","WebkitTapHighlightColor","lineHeight","padding","mainChannel","main","outlineWidth","outlineOffset","justifyContent","alignItems","opacity","transition","transitions","create","duration","shorter","whiteSpace","overflow","columnHeaderTitleContainerContent","borderBottomWidth","borderBottomStyle","borderBottom","borderTop","fontSize","cursor","marginRight","marginLeft","backgroundColor","hover","zIndex","columnHeaders","left","right","touchAction","pointerEvents","breakInside","selectedOpacity","hoverOpacity","userSelect","textOverflow","boxShadow","shadows","paper","booleanCell","secondary","disabled","actionsCell","gridGap","spacing","rowReorderCellContainer","borderRightWidth","borderRightStyle","alignSelf","groupingCriteriaCell","groupingCriteriaCellToggle","GridPrivateApiContext","React","undefined","useGridPrivateApiContext","privateApiRef","Error","join","gridColumnGroupingSelector","state","columnGrouping","gridColumnGroupsUnwrappedModelSelector","createSelectorMemoized","_columnGrouping$unwra","unwrappedGroupingModel","gridColumnGroupsLookupSelector","_columnGrouping$looku","lookup","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","createSelector","_columnGrouping$maxDe","maxDepth","useGridAriaAttributes","_rootProps$experiment","apiRef","rootProps","useGridRootProps","visibleColumns","useGridSelector","gridVisibleColumnDefinitionsSelector","totalRowCount","gridRowCountSelector","headerGroupingMaxDepth","pinnedRowsCount","gridPinnedRowsCountSelector","role","experimentalFeatures","ariaV7","treeData","length","disableMultipleRowSelection","_excluded","GridRoot","ref","children","className","other","_objectWithoutPropertiesLoose","densityValue","gridDensityValueSelector","rootContainerRef","handleRef","useForkRef","getAriaAttributes","ariaAttributes","ownerState","density","classes","slots","capitalize","composeClasses","getDataGridUtilityClass","useUtilityClasses","current","register","rootElementRef","mountedState","setMountedState","useEnhancedEffect","_jsx","clsx","GridHeader","_rootProps$slotProps","_rootProps$slotProps2","_jsxs","preferencesPanel","slotProps","toolbar","GridMainContainerRoot","flexGrow","GridMainContainer","gridFocusStateSelector","focus","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","unstable_gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","tabIndex","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","unstable_gridTabIndexColumnGroupHeaderSelector","gridColumnMenuSelector","columnMenu","GridBody","VirtualScrollerComponent","ColumnHeadersProps","rootRef","filterColumnLookup","gridFilterActiveItemsLookupSelector","sortColumnLookup","gridSortColumnLookupSelector","columnPositions","gridColumnPositionsSelector","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","densityFactor","gridDensityFactorSelector","columnMenuState","columnVisibility","gridColumnVisibilityModelSelector","columnGroupsHeaderStructure","hasOtherElementInTabSequence","isVirtualizationDisabled","setIsVirtualizationDisabled","disableVirtualization","computeSizeAndPublishResizeEvent","elementToObserve","ResizeObserver","animationFrame","observer","window","requestAnimationFrame","observe","cancelAnimationFrame","unobserve","enableVirtualization","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","virtualScrollerRef","columnHeadersContainerElementRef","columnHeadersElementRef","mainElementRef","hasDimensions","getRootDimensions","innerRef","GridFooterPlaceholder","hideFooter","footer","GridContextProvider","getPublicApi","GridRootPropsContext","Provider","value","GridApiContext","useGridApiMethod","apiMethods","isFirstRender","forceDebug","localStorageAvailable","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","arguments","console","minLogLevelIdx","indexOf","logger","reduce","loggerObj","method","idx","_len","args","Array","_key","message","Store","constructor","_value","this","listeners","subscribe","fn","add","delete","getSnapshot","update","forEach","l","Set","TimerBasedCleanupTracking","timeout","timeouts","Map","cleanupTimeout","object","unsubscribe","unregisterToken","setTimeout","cleanupToken","set","unregister","get","clearTimeout","reset","key","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","event","details","_handlerRef$current","defaultMuiPrevented","call","subscribeEvent","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","from","keys","regularListeners","i","has","apply","once","that","oneTimeListener","_len2","_key2","SYMBOL_API_PRIVATE","Symbol","globalId","useGridApiInitialization","inputApiRef","publicApiRef","_publicApiRef$current","existingPrivateApi","privateApi","store","instanceId","id","methods","Object","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","isPropagationStopped","isSyntheticEvent","signature","DataGridPro","api","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","useGridLoggerFactory","getLogger","toString","useGridStateInitialization","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","setState","reason","newState","isFunction","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","map","el","model","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","processorsCache","isRunning","runAppliers","groupCache","values","appliers","callback","registerPipeProcessor","group","processor","processors","registerPipeApplier","applier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","acc","preProcessor","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","entries","find","_ref2","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","getLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","GridCellCheckboxRenderer","field","isChecked","rowNode","hasFocus","useGridApiContext","checkboxElement","rippleRef","element","getCellElement","_checkboxElement$curr","input","querySelector","preventScroll","stop","handleKeyDown","isSpaceKey","stopPropagation","type","isSelectable","isRowSelectable","label","baseCheckbox","checked","onChange","inputProps","onKeyDown","touchRippleRef","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","gridRowsLookupSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","rowId","getPageCount","rowCount","pageSize","Math","ceil","getDefaultGridPaginationModel","buildWarning","autoPageSize","page","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPageSelector","gridPageSizeSelector","gridPaginationRowRangeSelector","gridFilteredTopLevelRowCountSelector","visibleTopLevelRowCount","gridRowTreeSelector","gridRowMaximumTreeDepthSelector","gridExpandedSortedRowEntriesSelector","gridFilteredSortedTopLevelRowEntriesSelector","rowTree","rowTreeDepth","visibleSortedRowEntries","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","min","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","findIndex","topLevelRowAdded","_rowTree$row$id","depth","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","slice","gridPaginatedVisibleSortedGridRowIdsSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowIds","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","filter","getRow","getRowParams","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","getColumnHeaderElement","handleSelectionChange","p","indeterminate","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","debounceMs","isProcessingProps","onValueChange","inputRef","valueState","setValueState","handleChange","async","newValue","column","getColumn","parsedValue","valueParser","getCellParams","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","fullWidth","endAdornment","loadIcon","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","getNextGridSortDirection","sortingOrder","currentIdx","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","Number","gridDateComparator","getGridStringQuickFilterFn","tagInternalFilter","filterRegex","RegExp","escapeRegExp","_","columnValue","getRowFormattedValue","test","GRID_STRING_COL_DEF","maxWidth","Infinity","hideable","sortable","resizable","filterable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","compare","align","filterOperators","disableTrim","convertLegacyOperators","getApplyFilterFnV7","filterItem","filterItemValue","trim","String","InputComponent","GridFilterInputValue","sensitivity","usage","requiresFilterValue","isArray","val","some","filterValue","GridFilterInputMultipleValue","getGridStringOperators","renderEditCell","getApplyQuickFilterFn","convertQuickFilterV7ToLegacy","getApplyQuickFilterFnV7","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","getRowId","detailErrorMessage","JSON","stringify","checkGridRowIdIsValid","createRowsInternalCache","rows","loading","updates","dataRowIdToModelLookup","dataRowIdToIdLookup","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","tree","rowCountProp","rootGroupNode","max","footerId","getRowsStateFromCache","_ref3","loadingProp","previousTree","previousTreeDepths","cache","unProcessedTree","treeDepths","unProcessedTreeDepths","dataRowIds","unProcessedDataRowIds","groupingName","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","totalTopLevelRowCount","isAutoGeneratedRow","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","calculatePinnedRowsHeight","_pinnedRows$top","_pinnedRows$bottom","pinnedRows","gridPinnedRowsSelector","top","unstable_getRowHeight","bottom","getMinimalContentHeight","rowHeight","floor","GridBooleanCellRaw","Icon","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","Boolean","GridBooleanCell","GridEditBooleanCell","idProp","useId","htmlFor","size","BooleanOperatorContainer","margin","GridFilterInputBoolean","_baseSelectProps$nati","_rootProps$slotProps3","item","applyValue","focusElementRef","clearButton","labelProp","others","filterValueState","setFilterValueState","labelId","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","onFilterChange","baseFormControl","baseInputLabel","shrink","variant","displayEmpty","GRID_BOOLEAN_COL_DEF","headerAlign","renderCell","valueFormatter","valueAsBoolean","pastedValueParser","toLowerCase","stringToBoolean","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableColumnMenu","disableReorder","disableExport","valueGetter","renderHeader","sanitizeCellValue","delimiterCharacter","delimiter","includes","replace","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","columnType","_cellParams$value","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","buildCSV","columns","rowIds","includeHeaders","includeColumnGroupsHeaders","CSVBody","serializeRow","filteredColumns","headerRows","columnGroupLookup","unstable_getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","unstable_getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","CSVHead","writeToClipboardPolyfill","data","span","document","createElement","style","textContent","body","appendChild","range","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","unstable_ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","ctrlKey","metaKey","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","textToCopy","getSelectedRows","getDataAsCsv","focusedCell","navigator","clipboard","writeText","catch","useGridNativeEventListener","added","setAdded","wrapHandler","targetElement","addEventListener","boundElem","removeEventListener","onClipboardCopy","columnMenuStateInitializer","open","useFirstRender","useGridRegisterPipeProcessor","round","random","registerPreProcessor","useGridRegisterPipeApplier","GRID_NUMERIC_COL_DEF","isNumber","toLocaleString","getGridNumericOperators","getGridNumericQuickFilterFn","GridFilterInputDate","_item$value","InputProps","filterTimeout","useTimeout","applying","setIsApplying","start","filterDebounceMs","_item$value2","itemValue","baseTextField","placeholder","InputLabelProps","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","year","month","day","hour","minute","match","time","Date","getTime","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","InputComponentProps","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","isNaN","getTimezoneOffset","substr","parsed","formatted","hasUpdatedEditValueOnMount","parseValueToDate","date","split","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","unstable_updateValueOnRender","inputValue","renderEditDateCell","throwIfNotDateObject","GRID_DATE_COL_DEF","toLocaleDateString","GRID_DATETIME_COL_DEF","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueFromValueOptions","valueOptions","getOptionValue","result","option","optionValue","_excluded2","GridEditSingleSelectCell","initialOpen","editMode","Cell","getOptionLabel","getOptionLabelProp","getOptionValueProp","setOpen","MenuProps","otherBaseSelectProps","_inputRef$current","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","Row","isEscapeKey","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","_resolvedColumn","_resolvedColumn2","_rootProps$slotProps4","resolvedColumn","currentValueOptions","_itemValue","createFilterOptions","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","isOptionEqualToValue","resolvedValueOptions","_resolvedColumn3","resolvedFormattedValueOptions","filteredValues","formattedOption","index","Autocomplete","multiple","filterOptions","renderTags","getTagProps","baseChip","renderInput","parseObjectValue","isObject","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","colDefValueOptions","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","useTheme","menuId","buttonId","getActions","hasActions","iconButtons","showInMenu","menuButtons","numberOfButtons","hideMenu","handleTouchRippleRef","instance","handleButtonClick","onClick","newIndex","direction","preventDefault","button","baseIconButton","showMenu","moreActionsIcon","GridMenu","onClickAway","MenuList","autoFocusItem","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","DEFAULT_GRID_COL_TYPE_KEY","COLUMNS_DIMENSION_PROPERTIES","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","orderedFields","columnField","newColumn","columnVisibilityModel","computedWidth","clamp","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","col","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","columnTypes","createColumnsState","_ref4","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","_apiRef$current$getRo","_apiRef$current$getRo2","_apiRef$current","isInsideStateInitializer","columnsState","currentState","gridColumnsStateSelector","columnsToKeep","columnsToUpsertLookup","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","viewportInnerSize","mergeColumnsState","getFirstNonSpannedColumnToRender","_ref5","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","_ref6","firstColumnIndex","minColumnIndex","columnBuffer","getTotalHeaderHeight","headerHeight","defaultColumnTypes","string","number","dateTime","boolean","singleSelect","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","DENSITY_FACTORS","compact","comfortable","standard","densityStateInitializer","factor","getColumnsToExport","gridColumnDefinitionsSelector","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","gridFilteredSortedRowIdsSelector","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","unshift","useGridCsvExport","csvExport","_options$getRowsToExp","_options$includeHeade","_options$includeColum","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","prototype","url","URL","createObjectURL","a","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","component","GridCsvExportMenuItem","componentName","gridRowsMetaSelector","rowsMeta","paginationStateInitializer","_props$paginationMode","mergeStateWithPaginationModel","paginationModelProp","paginationState","_paginationModelProp$","pageCount","validPage","getValidPage","useGridPrintExport","doc","previousGridState","previousColumnVisibility","ownerDocument","updateGridColumnsForPrint","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","handlePrintWindowLoad","printWindow","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","columnHeadersInner","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","currentPageTotalHeight","columnHeaderHeight","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","j","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","exportDataAsPrint","exportState","visibleRowCount","gridExpandedRowCountSelector","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","_options$printOptions","printOptions","GridPrintExportMenuItem","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","filterModel","getDefaultGridFilterModel","sanitizeFilterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","defaultMemoize","getVisibleRows","paginationMode","useGridVisibleRows","response","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","unstable_gridHeaderFilteringStateSelector","headerFiltering","unstable_gridHeaderFilteringEditFieldSelector","headerFilteringState","editing","unstable_gridHeaderFilteringMenuSelector","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","unstable_headerFilters","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","rightVisibleCellIndex","rowIndexRelativeToAllRows","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","currentTarget","contains","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","isNavigationKey","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","preferencePanelStateInitializer","_props$initialState$p","preferencePanel","gridEditRowsStateSelector","editRows","missingOnProcessRowUpdateErrorWarning","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","isPrintableKey","printableKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","startsWith","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editingState","updateCellModesModel","useEventCallback","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","gridRowsDataRowIdToIdLookupSelector","copyOfPrevCellModes","deepClone","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","columnFields","gridVisibleColumnFieldsSelector","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","gridColumnFieldsSelector","updateStateToStopRowEditMode","focusedField","finishRowEditMode","fieldProps","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","rowsStateInitializer","useGridRows","currentPage","lastUpdateMs","now","getRowNode","getRowIdProp","throttledRowsChange","throttle","run","gridRowTreeDepthsSelector","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","idLookup","previousCache","_previousCache$update","_previousCache$update2","_previousCache$update3","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","updateCacheWithNewRows","getRowModels","dataRows","gridDataRowIdsSelector","idRowsLookup","_idRowsLookup$id","getRowsCount","getAllRowIds","getRowIndexRelativeToVisibleRows","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","applySorting","applyFiltering","groupNode","sortedRowIds","gridSortedRowIdsSelector","gridFilteredRowsLookupSelector","childId","setRowIndex","targetIndex","parent","allRows","oldIndex","updatedRows","splice","rowApi","unstable_replaceRows","newRows","rootGroup","rootGroupChildren","replacedRowId","rowTreeNodeConfig","groupingKey","rowProApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","gridRowGroupingNameSelector","applyHydrateRowsProcessor","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","flatRowTreeCreationMethod","groupingField","childrenFromPath","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","updateFlatRowTree","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","getBaseCellParams","cellFocus","cellTabIndex","getRowValue","_getRowId","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","selector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","_getSelectionModelPro","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","sortedRows","scrollIntoView","clientHeight","scrollTop","offsetTop","elementBottom","GridIconButtonContainerRoot","GridIconButtonContainer","GridRowCountRoot","GridRowCount","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","gridTopLevelRowCountSelector","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","paginationElement","hideFooterPagination","GridPreferencesPanel","_preferencePanelState","preferencePanelState","gridPreferencePanelStateSelector","panelContent","openedPanelValue","GridPreferencePanelsValue","filters","panel","as","basePopper","panelId","GridOverlayRoot","overlay","GridOverlay","GridLoadingOverlay","CircularProgress","GridNoRowsOverlay","noRowsLabel","GridPaginationRoot","TablePagination","tablePaginationClasses","selectLabel","GridPagination","_rootProps$rowCount","lastPage","handlePageSizeChange","setPageSize","handlePageChange","setPage","pageSizeOptions","isPageSizeIncludedInPageSizeOptions","count","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","GridPanelContentRoot","maxHeight","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","TrapFocus","disableEnforceFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","flexShrink","marginBottom","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","GridLogicOperator","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","gridFilterableColumnDefinitionsSelector","gridFilterModelSelector","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","filteredFields","currentFilters","items","sortedFilteredColumns","sort","b","currentColumn","currentOperator","_currentColumn$filter","operator","changeColumn","newOperator","eraseItemValue","changeOperator","op","changeLogicOperator","logicOperator","_valueRef$current","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","upsertFilterItem","applyFilterLogicOperator","setFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","shouldCloseFilterPanel","deleteFilterItem","hideFilterPanel","baseButton","addNewFilter","newFilter","upsertFilterItems","startIcon","filterPanelAddIcon","handleRemoveAll","setFilterModel","filterPanelRemoveAllIcon","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridColumnsPanelRoot","columnsPanel","GridColumnsPanelRowRoot","columnsPanelRow","switchClasses","IconButton","defaultSearchPredicate","searchValue","gridPanelClasses","generateUtilityClasses","GridPanelRoot","Popper","modal","GridPaperRoot","Paper","GridPanel","isPlaced","setIsPlaced","handleClickAway","hidePreferences","modifiers","enabled","phase","effect","anchorEl","setAnchorEl","_apiRef$current$rootE","columnHeadersElement","placement","ClickAwayListener","mouseEvent","elevation","fastMemo","fastObjectShallowCompare","cachedSupportsPreventScroll","_excluded3","_excluded4","EMPTY_CELL_PARAMS","showRightBorder","isSelected","content","MemoizedCellWrapper","editCellState","cellParamsWithAPI","e","objectShallowCompare","managesOwnFocus","rootClasses","getCellClassName","classNames","updatedRow","editCellStateRest","CellComponent","cellProps","MemoizedGridCellV7","_rootProps$experiment4","colSpan","disableDragEvents","isNotVisible","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publishMouseDown","publish","propHandler","activeElement","focusableElement","elementToFocus","scrollPosition","getScrollPosition","scroll","handleFocus","onFocus","valueString","draggableEventHandlers","EmptyCell","MemoizedGridRow","refProp","selected","styleProp","renderedColumns","containerWidth","isLastVisible","focusedCellColumnIndexNotInRange","onMouseEnter","onMouseLeave","columnsTotalWidth","gridColumnsTotalWidthSelector","gridSortModelSelector","treeDepth","editRowsState","ariaRowIndex","unstable_storeRowHeightMeasurement","unstable_setLastMeasuredRowIndex","rootElement","resizeObserver","entry","borderBoxSize","blockSize","contentRect","disconnect","nodeType","publishClick","disableColumnReorder","GridCellV7","GridCellWrapper","rowReordering","getCell","_editRowsState$rowId$","_editRowsState$rowId","cellIsNotVisible","indexRelativeToAllColumns","sizes","unstable_getRowInternalSizes","numberOfBaseSizes","maximumSize","rowStyle","spacingTop","rowSpacingType","spacingBottom","property","propertyValue","parseInt","rowClassNames","getRowClassName","_currentPage$range","indexRelativeToCurrentPage","isFirstVisible","randomNumber","randomNumberBetween","rowType","cells","showCellVerticalBorder","contentWidth","skeletonCell","emptyCellWidth","eventHandlers","GridColumnHeaderSortIconRaw","icon","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","Badge","badgeContent","GridColumnHeaderSortIcon","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","hideColumnMenu","labelledby","GridColumnHeaderTitleRoot","columnHeaderTitle","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","scrollWidth","clientWidth","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","side","Right","resizing","stopClick","showColumnVerticalBorder","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","ariaSort","scrollLeft","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","disableColumnResize","GridColumnHeaderItem","_colDef$sortingOrder","_colDef$headerName","sortIndex","filterItemsCounter","isDragging","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onMouseOut","onBlur","onDragStart","onDragEnd","handleExited","disableColumnFilter","columnHeaderFilterIconButton","counter","hideSortIcons","elementId","binarySearch","offset","positions","sliceStart","sliceEnd","pivot","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","areRenderContextsEqual","context1","context2","lastColumnIndex","MEMOIZE_OPTIONS","maxSize","useGridVirtualScroller","_currentPage$range3","_currentPage$range4","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","renderContext","setRenderContext","prevRenderContext","containerDimensions","setContainerDimensions","prevTotalWidth","rowStyleCache","prevGetRowProps","prevRootRowStyle","getRenderedColumnsRef","lastColumnToRender","minFirstColumn","maxLastColumn","indexOfColumnWithFocusedCell","getNearestIndexToRender","_currentPage$range2","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","abs","exponentialSearch","computeRenderContext","hasRowWithAutoHeight","rowBuffer","rowHasAutoHeight","transform","handleResize","updateRenderZonePosition","nextRenderContext","initialFirstColumnToRender","updateRenderContext","initialRenderContext","handleScroll","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","rowThreshold","columnThreshold","ReactDOM","handleWheel","handleTouchMove","indexOfRowWithFocusedCell","needsHorizontalScrollbar","contentSize","shouldExtendContent","rootStyle","overflowX","overflowY","getRenderContext","getRows","onRowRender","availableSpace","rowIndexOffset","renderedRows","calculateColSpan","isRowWithFocusedCellNotInRange","rowWithFocusedCell","isColumnWihFocusedCellNotInRange","rootRowStyle","rootRowProps","_currentPage$range5","isRowNotVisible","lastVisibleRowIndex","baseRowHeight","columnWithFocusedCellNotInRange","renderedColumnsWithFocusedCell","tabbableCell","rowProps","getRootProps","onScroll","onWheel","onTouchMove","getContentProps","getRenderZoneProps","GridColumnGroupHeader","_columnGroupsLookup$g","isLastColumn","columnGroupsLookup","render","renderHeaderGroup","renderParams","showColumnBorder","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","GridColumnHeadersInnerRoot","columnHeaderDropZone","borderRight","GridColumnHeadersInner","hasScrollX","MemoizedGridColumnHeaders","getInnerProps","getColumnHeaders","getColumnGroupHeaders","innerRefProp","dragCol","setDragCol","resizeCol","setResizeCol","handleInnerRef","setRenderContextRaw","prevScrollLeft","totalHeaderHeight","getFirstColumnIndexToRenderRef","equalityCheck","every","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","columnsToRender","columnIndex","isFirstColumn","headerToRender","_apiRef$current$unsta","_apiRef$current$unsta2","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","leftOverflow","_column$computedWidth","elements","headerInfo","depthInfo","depthIndex","groupIndex","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","isTabKey","isHideMenuKey","autoFocus","GridColumnMenuHideItem","toggleColumn","setColumnVisibility","disableColumnSelector","MenuItem","ListItemIcon","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","showPreferences","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","sortItem","onSortMenuItemClick","sortColumn","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","showFilterPanel","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","Component","otherProps","GridColumnMenu","GridNoResultsOverlay","noResultsOverlayLabel","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","createSvgIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","BooleanCellTrueIcon","BooleanCellFalseIcon","ColumnMenuIcon","OpenFilterButtonIcon","FilterPanelDeleteIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","MoreActionsIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","ColumnMenuHideIcon","ColumnMenuSortAscendingIcon","ColumnMenuSortDescendingIcon","ColumnMenuFilterIcon","ColumnMenuManageColumnsIcon","ColumnMenuClearIcon","LoadIcon","FilterPanelAddIcon","FilterPanelRemoveAllIcon","ColumnReorderIcon","BaseCheckbox","MUICheckbox","BaseTextField","MUITextField","BaseFormControl","MUIFormControl","BaseSelect","MUISelect","BaseSwitch","MUISwitch","BaseButton","MUIButton","BaseIconButton","MUIIconButton","BaseInputAdornment","MUIInputAdornment","BaseTooltip","MUITooltip","BasePopper","MUIPopper","BaseInputLabel","MUIInputLabel","BaseSelectOption","MUIMenuItem","BaseChip","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","SkeletonCell","Skeleton","ColumnHeaderFilterIconButton","toggleFilter","columnFilteredIcon","ColumnMenu","ColumnHeaders","GridColumnHeaders","Footer","Toolbar","PreferencesPanel","LoadingOverlay","NoResultsOverlay","NoRowsOverlay","Pagination","FilterPanel","ColumnsPanel","searchInputRef","setSearchValue","searchPredicate","autoFocusSearchField","disableHideAllButton","disableShowAllButton","getTogglableColumns","sortedColumns","toggleAllColumns","isVisible","currentModel","togglableColumns","handleSearchValueChange","togglableSortedColumns","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","FormControlLabel","control","baseSwitch","Panel","GridRow","uncapitalizeObjectKeys","capitalizedObject","charAt","groupForwardedProps","_props$forwardedProps","forwardedProps","DATA_GRID_FORCED_PROPS","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","disableDensitySelector","disableEval","disableRowSelectionOnClick","filterMode","sortingMode","keepNonExistentRowsSelected","useDataGridProps","inProps","components","componentsProps","themedProps","allProps","useThemeProps","GRID_DEFAULT_LOCALE_TEXT","overrides","computeSlots","_themedProps$slotProp","rowsMetaStateInitializer","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","getParents","_unwrappedGroupingMod","groupingHeaderStructure","haveSameParents","field1","field2","isDeepEqual","depthStructure","structure","newField","_getParents$depth","lastGroup","prevField","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$experimentalFe","_props$columnGrouping","_props$columnGrouping2","visibleColumnFields","_unwrappedGroupingMod2","useDataGridComponent","useGridRowSelection","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","isStateControlled","_props$initialState4","_props$slotProps2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","gridColumnLookupSelector","getColumnPosition","updateColumns","_columnVisibilityMode","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","setColumnWidth","columnReorderApi","stateExportPreProcessing","prevState","_props$initialState$c","_props$initialState3","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","stateRestorePreProcessing","_context$stateToResto","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","_props$slotProps","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","setCellColSpanInfo","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","nextColumnIndex","columnSpanningPrivateApi","handleColumnReorderChange","useGridColumnSpanning","useGridColumnGrouping","_props$experimentalFe3","getColumnGroupPath","_unwrappedGroupingMod3","getAllGroupDetails","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","updateColumnGroupingState","_props$experimentalFe2","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","doNotHidePanel","hidePreferencesDelayed","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","buildAggregatedFilterApplier","filteringResult","visibleRowsLookupState","addColumnMenuItem","applyFilters","itemIndex","existingItems","itemToDelete","targetColumnField","filterItemsWithValue","_column$filterOperato","filterOperator","newFilterItems","filterItemOnTarget","targetColumn","cleanFilterItem","setQuickFilterValues","quickFilterValues","mergeStateWithFilterModel","unstable_applyFilters","filterModelToExport","callbacks","filterPanel","getRowsRef","useLazyRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","passFilterLogic","handleColumnsChange","filterableColumnsLookup","gridFilterableColumnLookupSelector","updateVisibleRowsLookupState","quickFilterExcludeHiddenColumns","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortCellParams","comparator","rowList","compareRows","row1","row2","res","sortCellParams1","sortCellParams2","setSortModel","allowMultipleSorting","getSortModel","getSortedRows","gridSortedRowEntriesSelector","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","isEnterKey","latestColumns","useGridDensity","setDensity","newDensity","currentDensityState","gridDensitySelector","newDensityState","useGridPagination","onPaginationModelChange","setPaginationModel","_props$rowCount","_context$stateToResto2","_props$rowCount2","handleUpdateAutoPageSize","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","_apiRef$current$virtu","_props$rowCount3","useGridRowsMeta","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","baseCenter","isResized","needsFirstMeasurement","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","initialHeights","_spacing$top","_spacing$bottom","processedSizes","maximumBaseSize","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","storeMeasuredRowHeight","needsHydration","_rowsHeightLookup$cur2","setLastMeasuredRowIndex","resetRowHeights","rowsMetaPrivateApi","_rowsHeightLookup$cur","unstable_setRowHeight","useGridScroll","colRef","scrollCoordinates","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","showColumnMenu","columnLookup","visibleOrderedFields","fieldIndex","useGridColumnMenu","errorShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","scrollBarSize","viewportOuterSize","hasScrollY","scrollbarSize","scrollDiv","offsetWidth","scrollInformation","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScroll","newFullDimensions","prevDimensions","savedSize","setSavedSize","debouncedSetSavedSize","previousSize","resize","_apiRef$current$mainE","_previousSize$current","_previousSize$current2","mainEl","computedStyle","ownerWindow","getComputedStyle","parseFloat","hasHeightChanged","hasWidthChanged","dimensionsPrivateApi","isFirstSizing","isJSDOM","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","VirtualScrollerRoot","virtualScroller","GridVirtualScroller","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","_props$style","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","GridOverlayWrapperRoot","overlayWrapper","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","setViewportInnerSize","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","GridOverlays","gridRowsLoadingSelector","showNoResultsOverlay","noRowsOverlay","noResultsOverlay","loadingOverlay","DataGridVirtualScroller","DataGridRaw","propTypes","PropTypes","isRequired","warnIfFocusStateIsNotSynced","quickFilterLogicOperator","getDetailPanelContent","nonce","onColumnOrderChange","onRowEditCommit","parseNumericValue","GLOBAL_API_REF","isInternal","isInternalFilter","ops","getApplyFilterFn","filterFn","GridMenuRoot","menu","transformOrigin","TransitionProps","Grow","popperOnExited","freeSolo","newItem","fromInput","GridToolbarContainerRoot","flexWrap","gap","GridToolbarContainer","GridToolbarColumnsButton","columnButtonId","columnPanelId","isOpen","columnSelectorIcon","GridToolbarDensitySelector","densityButtonId","densityMenuId","densityOptions","densityCompactIcon","densityStandardIcon","densityComfortableIcon","densityElements","handleDensityUpdate","prevOpen","_buttonRef$current","GridToolbarFilterListRoot","_props","toolbarFilterList","GridToolbarFilterButton","buttonProps","activeFilters","gridFilterActiveItemsSelector","filterButtonId","filterPanelId","tooltipContentNode","getOperatorLabel","getFilterItemValue","getValueAsString","openFilterButtonIcon","_buttonProps$onClick","GridToolbarQuickFilterRoot","TextField","toolbarQuickFilter","paddingBottom","defaultSearchValueParser","searchText","word","defaultSearchValueFormatter","GridToolbarQuickFilter","gridQuickFilterValuesSelector","quickFilterParser","quickFilterFormatter","prevQuickFilterValuesRef","prevSearchValue","updateSearchValue","newSearchValue","newQuickFilterValues","debouncedUpdateSearchValue","handleSearchReset","startAdornment","quickFilterIcon","quickFilterClearIcon","GridToolbar","excelOptions","showQuickFilter","quickFilterProps","GridToolbarExport","Box","GridToolbarExportContainer","exportButtonId","exportMenuId","handleMenuClose","exportIcon","preProcessedButtons","generateUtilityClass","allFields","currentPosition","colCount","gridFilterStateSelector","filterState","gridFilteredSortedRowEntriesSelector","filteredSortedRowEntries","visibleSortedTopLevelRows","_filterModel$items","hasEval","eval","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","filteringState","getFilterCallbackFromItem","_filterItem$value","parser","x","newFilterItem","hasUserFunctionLegacy","hasUserFunctionV7","applyFilterOnRow","v7","filterItemsApplierId","buildAggregatedFilterItemsApplier","shouldApplyFilter","resultPerItemId","filterItemTemplate","replaceAll","buildAggregatedQuickFilterApplier","_filterModel$quickFil","_filterModel$quickFil2","_filterModel$quickFil3","appliersPerField","usedCellParams","outer","v","_usedCellParams$field","isRowMatchingFilterItems","isRowMatchingQuickFilter","_isRowMatchingFilterI","_isRowMatchingQuickFi","isNotNull","filterModelItems","cleanedFilterItems","allFilterItemResults","allQuickFilterResults","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","gridRowsStateSelector","nodeCount","gridAdditionalRowGroupsSelector","additionalRowGroups","_rawPinnedRows$bottom","_rawPinnedRows$top","rawPinnedRows","rowEntry","_rowEntry$model","_rowEntry$model2","gridSortingStateSelector","sortingState","sortedIds","contextValue","applySelector","acceptsApiRef","isOutputSelector","defaultCompare","is","createRefs","equals","refs","didInit","useOnMount","UNINITIALIZED","init","initArg","EMPTY","Timeout","currentId","clear","disposeEffect","delay","createSelectorCreator","memoize","memoizeOptionsFromArgs","funcs","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","assign","lastResult","recomputations","resetRecomputations","cacheContainer","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","f","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","_cache$get","_cache$get3","selectorArgs","cacheKey","_cache$get2","newSelector","reselectCreateSelector","aLength","bLength","isHomeOrEndKeys","isArrowKeys","isPageKeys","setItem","removeItem","err","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","seed","t","imul","obj","structuredClone","parse","gravity","alreadyWarned","cleanMessage","NOT_FOUND","defaultEqualityCheck","func","equalityCheckOrOptions","providedOptions","_providedOptions$equa","_providedOptions$maxS","resultEqualityCheck","prev","next","createCacheKeyComparator","put","getEntries","createSingletonCache","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}