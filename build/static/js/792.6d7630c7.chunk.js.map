{"version":3,"file":"static/js/792.6d7630c7.chunk.js","mappings":"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","sources":["sections/Preventive_setup/PopupModel/GetAssetList.js","sections/Preventive_setup/Form/CreateNewPmform.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Swal from \"sweetalert2\";\r\nimport MaterialTable from \"material-table\";\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst GetAssetList = ({ onRowClick, onChangePage, onSearchChange }) => {\r\n    \r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [data, setData] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(null);\r\n  const startTime = window.performance.now();\r\n  const [viewedRows, setViewedRows] = useState(0);\r\nconsole.log(\"Enter_assetList\");\r\n  useEffect(() => {\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    httpCommon\r\n      .get(\"/GetAssetPmListModel.php?site_cd=\" + site_ID)\r\n      .then((response) => {\r\n       // console.log(\"response__NET\", response);\r\n        const endTime = window.performance.now();\r\n        const loadTime = endTime - startTime;\r\n       // console.log(`API load time: ${loadTime} milliseconds`);\r\n        Swal.close();\r\n        //setData(response.data.data.result);\r\n        setData(response.data.data.WorkAssetNo);\r\n        onRowClick(response.data.data.WorkAssetNo.length);\r\n        // setTotalData(response.data.data.WorkAssetNo.length);\r\n        const endTime2 = window.performance.now();\r\n        const loadTime2 = endTime2 - startTime;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //Table colums\r\n  const columns = [\r\n    {\r\n      title: \"Asset No\",\r\n      field: \"ast_mst_asset_no\",\r\n      render: (rowData) => renderIcon(rowData),\r\n    },\r\n    { title: \"Long Description\", field: \"ast_mst_asset_longdesc\",width: 450 },\r\n    { title: \"Level\", field: \"ast_mst_ast_lvl\",width: 40 },\r\n    { title: \"Zone\", field: \"ast_mst_work_area\",width: 40 },\r\n    { title: \"Asset Location\", field: \"ast_mst_asset_locn\",width: 150 },\r\n    { title: \"Cost Center\", field: \"ast_mst_cost_center\",width: 40 },\r\n    { title: \"Asset Type\", field: \"ast_mst_asset_type\",width: 300 },\r\n    { title: \"Status\", field: \"ast_mst_asset_status\",width: 40 },\r\n    { title: \"Customer Code\", field: \"ast_det_cus_code\",width: 40 },\r\n  ];\r\n\r\n  const renderIcon = (rowData) => {\r\n    if (rowData.ast_mst_asset_no === selectedRowKeys) {\r\n      return (\r\n        <div>\r\n          <Iconify\r\n            icon=\"mingcute:save-fill\"\r\n            style={{\r\n              marginRight: \"0px\",\r\n              marginTop: \"2px\",\r\n              float: \"left\",\r\n              fontSize: \"16px\",\r\n              color: \"#289e49\",\r\n            }}\r\n          />\r\n          {rowData.ast_mst_asset_no}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{rowData.ast_mst_asset_no}</div>;\r\n  };\r\n  const handleRowClick = (event, rowData) => {\r\n    if (selectedRowKeys && selectedRowKeys === rowData.ast_mst_asset_no) {\r\n      onRowClick(data.length, rowData.ast_mst_asset_no+' : '+rowData.ast_mst_asset_shortdesc, 1);\r\n    }\r\n    setSelectedRowKeys(rowData.ast_mst_asset_no);\r\n    onRowClick(data.length, rowData.ast_mst_asset_no+' : '+rowData.ast_mst_asset_shortdesc);\r\n  };\r\n  const handlePageChange = (page) => {\r\n    const pageSize = 10; // Assuming each page displays 10 rows\r\n    const viewedRowsCount = page * pageSize;\r\n    setViewedRows(viewedRowsCount);\r\n    onChangePage(viewedRowsCount);\r\n  };\r\n\r\n  const handleSearch = (searchText) => {\r\n    // Filter the data based on the search text\r\n    const filteredData = data.filter(\r\n      (item) =>\r\n        item.ast_mst_asset_no\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.ast_mst_asset_longdesc\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.ast_mst_work_area\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase()) ||\r\n        item.ast_mst_asset_type.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n\r\n    // setData(filteredData);\r\n    //setSearchedDataCount(filteredData.length);\r\n    onSearchChange(filteredData.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"container Ordertbl\">\r\n          <MaterialTable\r\n            title=\"\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              pageSize: 10,\r\n              pageSizeOptions: false,\r\n              overflowY: \"auto\",\r\n              paginationPosition: \"top\",\r\n              toolbarButtonAlignment: \"right\",\r\n              paginationType: \"normal\",\r\n              rowStyle: (rowData) => ({\r\n                backgroundColor:\r\n                  rowData.ast_mst_asset_no === selectedRowKeys\r\n                    ? \"#a9ebb9\"\r\n                    : \"#FFF\",\r\n                fontSize: \"12px !important\",\r\n              }),\r\n            }}\r\n            onRowClick={handleRowClick}\r\n            onChangePage={handlePageChange}\r\n            onSearchChange={(searchText) => handleSearch(searchText)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetAssetList;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n// @mui\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Container from \"@mui/material/Container\";\r\n// @bootstrap\r\n\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\n\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\n\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\n// utils\r\n\r\n// routes\r\nimport { RouterLink } from \"src/routes/components\";\r\n\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\nimport httpCommon from \"src/http-common\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\n\r\n\r\n// components\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport refrencImg from \"../../../assets/img/specification.png\";\r\n// import WorkOrderAssetNo from \"../WorkOrderAssetNo\";\r\nimport axios from \"axios\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport GetAssetList from \"../PopupModel/GetAssetList\";\r\n\r\n//import AssetCustomerCodeList from \"../AssetCustomerCodeList\"\r\n\r\n//import PmSetup from \"../Asset_module/PmSetup\";\r\n//import WoHistory from \"../Asset_module/AssetWoHistory\";\r\n//import RelocationHistory from \"../Asset_module/RelocationHistory\";\r\n//import CheckList from \"../Asset_module/AssetCheckList\";\r\nimport loderImg from \"../../../assets/img/loder.gif\";\r\n\r\n\r\n//import WorkOrderSpecialOrder from \"../component_module/Planning/WorkOrderSpecialOrder\";\r\nconst MySwal = withReactContent(Swal);\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\nconst StepContainer = styled(\"div\")`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 40px;\r\n  position: relative;\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: #4694d1;\r\n    height: 90%;\r\n    width: 2px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: 15px;\r\n  }\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: #f3e7f3;\r\n    height: ${({ width }) => width};\r\n    width: 2px;\r\n    top: 45%;\r\n    transition: 0.4s ease;\r\n    transform: translateY(-50%);\r\n    left: 14px;\r\n  }\r\n`;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CreateNewPmform ({ currentUser, onPageChange }) {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_name = localStorage.getItem(\"emp_mst_name\");\r\n  const location = useLocation();\r\n  \r\n  const state = location.state || {};\r\n\r\n    const { RowID, PM_no, currentPage, selectedOption } = state || {};\r\n  \r\n\r\n  const { completeRowID } = location.state || {};\r\n  const { closeRowID } = location.state || {};\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [PmMstLabel, setPmMstLabel] = useState([]);\r\n  const [PmdetLabel, setPmdetLabel] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const fileInputRef = useRef(null);\r\n  const settings = useSettingsContext();\r\n\r\n  const currentDate = new Date();\r\n  const formattedDateTime = currentDate.toISOString().slice(0, 16);\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [selectedImages2, setSelectedImages2] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [selectedPdfFiles, setSelectedPdfFiles] = useState([]);\r\n  const [RefImg, setRefImg] = useState([]);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [getDbImg, setDbImg] = useState();\r\n  const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n  const [removedRefItems, setRemovedRefItems] = useState([]);\r\n  const [disabledBtn, setDisabledBtn] = useState(false);\r\n  const [imageSelect, setImageSelect] = useState({ name: \"\", path: \"\" });\r\n  const [Tabvalue, setTabValue] = useState(0);\r\n\r\n  const [showdd, setShowdd] = useState(false);\r\n  const [handalImg, sethandalImg] = useState({});\r\n  const handleClosedd = () => setShowdd(false);\r\n  const [showdd2, setShowdd2] = useState(false);\r\n  const handleClosedd2 = () => setShowdd2(false);\r\n\r\n  const [Asset_No, setAsset_No] = useState(\"\");\r\n  const [TotalAssetNo, setTotalAssetNo] = useState(0);\r\n  const [TotalSearch, setTotalSearch] = useState(\"\");\r\n  const [viewedTotlRows, setViewedTotlRows] = useState(0);\r\n\r\n  // form filed state\r\n  const [AssetNo, setAssetNo] = useState(\"\");\r\n\r\n\r\n// New State added by stya\r\n\r\nconst [Pm_type, setPm_type] = useState([{label:'Asset',value:'Asset'},{label:'Group',value:'Group'}]); \r\nconst [selected_PmType, setselected_PmType] = useState([]);\r\n\r\nconst [modalOpenAsset, setModalOpenAsset] = useState(false);\r\nconst [modalOpenAssetCustomerCode, setModalOpenAssetCustomerCode] = useState(false);\r\n\r\nconst [Status, setStatus] = useState([]);\r\nconst [selected_Status, setSelected_Status] = useState([]);\r\n\r\nconst [isCheckedFlag, setIsCheckedFlag] = useState(false); \r\nconst [isCheckedLoop, setIsCheckedLoop] = useState(false);\r\nconst [isCheckedPmDate, setIsCheckedPmDate] = useState(false);\r\n\r\nconst [FrequencyCode, setFrequencyCode] = useState([]);\r\nconst [selected_FrequencyCode, setSelected_FrequencyCode] = useState([]);\r\n\r\nconst [PlanPriority, setPlanPriority] = useState([]);\r\nconst [selected_PlanPriority, setSelected_PlanPriority] = useState([]);\r\n\r\nconst [LeadDay, setLeadDay] = useState(\"\");\r\nconst [ShadowGroup, setShadowGroup] = useState(\"\");\r\n\r\nconst [PmLPMUOM, setPmLPMUOM] = useState([]);\r\nconst [selected_PmLPMUOM, setselected_PmLPMUOM] = useState([]);\r\n\r\nconst [LPMDate, setLPMDate] = useState(new Date());\r\nconst [LPMClosedDate, setLPMClosedDate] = useState(new Date());\r\n\r\nconst [FaultCode ,setFaultCode] = useState([]);\r\nconst [selected_FaultCode, setselected_FaultCode] = useState([]);\r\n\r\nconst [NextDueSate, setNextDueDate] = useState(\"\");\r\nconst [NextCreateDate, setNextCreateDate] = useState(\"\");\r\n\r\nconst [Short_Description, setShort_Description] = useState(\"\");\r\n\r\nconst [PmOriginator ,setPmOriginator] = useState([]);\r\nconst [selected_PmOriginator ,setselected_PmOriginator] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n// End -----staya close code\r\nconst [Asset_CriFactor, setAsset_CriFactor] = useState([]); \r\nconst [selected_CriFactor, setselected_CriFactor] = useState([]);\r\n\r\n  \r\n  const [Long_Description, setLong_Description] = useState(\"\");\r\n\r\n  const [Area_ID, setArea_ID] = useState(\"\");\r\n \r\n\r\n  const [Asset_Type, setAsset_Type] = useState([]); \r\n  const [selected_AssetType, setselectedAssetType] = useState([]);\r\n\r\n  const [Asset_Code, setAsset_Code] = useState([]); \r\n  const [selected_AssetCode, setselectedAssetCode] = useState([]);\r\n\r\n  const [Asset_Group_Code, setAsset_Group_Code] = useState([]);\r\n  const [selected_AssetGroupCode, setselectedAssetGroupCode] = useState([]);\r\n\r\n  const [Charge_Cost_Center, setCharge_Cost_Center] = useState([]);\r\n  const [selected_Charge_Cost_Center, setSelected_Charge_Cost_Center] =\r\n    useState([]);\r\n\r\n  const [Work_Area, setWork_Area] = useState([]);\r\n  const [selected_Work_Area, setSelected_Work_Area] = useState([]);\r\n\r\n  const [Asset_Location, setAsset_Location] = useState([]); \r\n  const [selected_Asset_Location, setSelected_Asset_Location] = useState([]);\r\n\r\n  const [Asset_Level, setAsset_Level] = useState([]);\r\n  const [selected_Asset_Level, setSelected_Asset_Level] = useState([]);\r\n\r\n  const [Work_Group, setWork_Group] = useState([]);\r\n  const [selected_Work_Group, setSelected_Work_Group] = useState([]);\r\n\r\n  const [Permanent_ID, setPermanent_ID] = useState(\"\");\r\n\r\n  const [SafetyRequirement, setSafetyRequirement] = useState(\"\");\r\n  const [BarcodeCount, setBarcodeCount] = useState(\"0\");\r\n  const [ManufactureCode, setManufactureCode] = useState(\"\");\r\n  const [AssetCost, setAssetCost] = useState([]);\r\n  const [ResidualValue, setResidualValue] = useState([]);\r\n  const [Permanent_IDFlag, setPermanentIDFlag] =useState([]);\r\n  const [CustomerCode, setCustomerCode] = useState(\"\");\r\n  const [selected_Customer_Code, setSelected_Customer_Code] = useState([]);\r\n  \r\n  const [Contract_Account, setContract_Account] = useState([]);\r\n  const [selected_Contract_Account, setSelected_Contract_Account] = useState(\r\n    []\r\n  );\r\n  const [PurchaseDate, setPurchaseDate] = useState(new Date());\r\n  const [Select_PurchaseDate, setSelectPurchaseDate] = useState(\"\");\r\n \r\n\r\n  const [WarrantyDate, setWarrantyDate] = useState(new Date());\r\n  const [Select_WarrantyDate, setSelectWarrantyDate] = useState(\"\");\r\n\r\n  const [Labor_Account, setLabor_Account] = useState([]);\r\n  const [selected_Labor_Account, setSelected_Labor_Account] = useState([]);\r\n\r\n  const [ExpectedLifeYear, setExpectedLifeYear] = useState(\"\");\r\n\r\n  const [Material_Account, setMaterial_Account] = useState([]);\r\n  const [selected_Material_Account, setSelected_Material_Account] = useState(\r\n    []\r\n  );\r\n\r\n  const [DepreciationMethod, setDepreciationMethod] = useState([{ label: \"Straight-Line\", value: \"SL\" }, { label: \"Declining-Balance\", value: \"DB\" }, { label: \"Double-Declining\", value: \"DD\" }]);\r\n  const [selected_Depreciation_Method, setSelectedDepreciationMethod] = useState([]);\r\n\r\n  const [UDFText_1, setUDFText_1] = useState(\"\");\r\n  const [UDFText_2, setUDFText_2] = useState(\"\");\r\n  const [UDFText_3, setUDFText_3] = useState(\"\");\r\n  const [UDFText_4, setUDFText_4] = useState(\"\");\r\n  const [UDFText_5, setUDFText_5] = useState(\"\");\r\n  const [UDFText_6, setUDFText_6] = useState(\"\");\r\n  const [UDFText_7, setUDFText_7] = useState(\"\");\r\n  const [UDFText_8, setUDFText_8] = useState(\"\");\r\n  const [UDFText_9, setUDFText_9] = useState(\"\");\r\n  const [UDFText_10, setUDFText_10] = useState(\"\");\r\n  const [UDFText_11, setUDFText_11] = useState(\"\");\r\n  const [UDFText_12, setUDFText_12] = useState(\"\");\r\n  const [UDFText_13, setUDFText_13] = useState(\"\");\r\n  const [UDFText_14, setUDFText_14] = useState(\"\");\r\n  const [UDFText_15, setUDFText_15] = useState(\"\");\r\n  const [UDFText_16, setUDFText_16] = useState(\"\");\r\n  const [UDFText_17, setUDFText_17] = useState(\"\");\r\n  const [UDFText_18, setUDFText_18] = useState(\"\");\r\n  const [UDFText_19, setUDFText_19] = useState(\"\");\r\n  const [UDFText_20, setUDFText_20] = useState(\"\");\r\n  const [UDFText_21, setUDFText_21] = useState(\"\");\r\n  const [UDFText_22, setUDFText_22] = useState(\"\");\r\n  const [UDFText_23, setUDFText_23] = useState(\"\");\r\n  const [UDFText_24, setUDFText_24] = useState(\"\");\r\n  const [UDFText_25, setUDFText_25] = useState(\"\");\r\n  const [UDFText_26, setUDFText_26] = useState(\"\");\r\n  const [UDFText_27, setUDFText_27] = useState(\"\");\r\n  const [UDFText_28, setUDFText_28] = useState(\"\");\r\n  const [UDFText_29, setUDFText_29] = useState(\"\");\r\n  const [UDFText_30, setUDFText_30] = useState(\"\");\r\n\r\n  const [UDFNumber_1, setUDFNumber_1] = useState();\r\n  const [UDFNumber_2, setUDFNumber_2] = useState();\r\n  const [UDFNumber_3, setUDFNumber_3] = useState();\r\n  const [UDFNumber_4, setUDFNumber_4] = useState();\r\n  const [UDFNumber_5, setUDFNumber_5] = useState();\r\n  const [UDFNumber_6, setUDFNumber_6] = useState();\r\n  const [UDFNumber_7, setUDFNumber_7] = useState();\r\n  const [UDFNumber_8, setUDFNumber_8] = useState();\r\n  const [UDFNumber_9, setUDFNumber_9] = useState();\r\n  const [UDFNumber_10, setUDFNumber_10] = useState();\r\n  const [UDFNumber_11, setUDFNumber_11] = useState();\r\n  const [UDFNumber_12, setUDFNumber_12] = useState();\r\n  const [UDFNumber_13, setUDFNumber_13] = useState();\r\n  const [UDFNumber_14, setUDFNumber_14] = useState();\r\n  const [UDFNumber_15, setUDFNumber_15] = useState();\r\n\r\n  const [UDFDate_1, setUDFDate_1] = useState(new Date());\r\n  const [UDFDate_2, setUDFDate_2] = useState(new Date());\r\n  const [UDFDate_3, setUDFDate_3] = useState(new Date());\r\n  const [UDFDate_4, setUDFDate_4] = useState(new Date());\r\n  const [UDFDate_5, setUDFDate_5] = useState(new Date());\r\n  const [UDFDate_6, setUDFDate_6] = useState(new Date());\r\n  const [UDFDate_7, setUDFDate_7] = useState(new Date());\r\n  const [UDFDate_8, setUDFDate_8] = useState(new Date());\r\n  const [UDFDate_9, setUDFDate_9] = useState(new Date());\r\n  const [UDFDate_10, setUDFDate_10] = useState(new Date());\r\n  const [UDFDate_11, setUDFDate_11] = useState(new Date());\r\n  const [UDFDate_12, setUDFDate_12] = useState(new Date());\r\n  const [UDFDate_13, setUDFDate_13] = useState(new Date());\r\n  const [UDFDate_14, setUDFDate_14] = useState(new Date());\r\n  const [UDFDate_15, setUDFDate_15] = useState(new Date());\r\n\r\n  const [isAssetStatusEmpty, setIsAssetStatusEmpty] = useState(false);\r\n  const [isAssetCriticalFactorEmpty, setIsAssetCriticalFactorEmpty] = useState(false);\r\n  const [isAssetShortDescEmpty,setIsAssetShortDescEmpty] = useState(false);\r\n  const [isAssetTypeEmpty, setIsAssetTypeEmpty] =useState(false);\r\n  const [isAssetCodeEmpty,setIsAssetCodeEmpty] = useState(false);\r\n  const [isAssetGroupCodeEmpty,setIsAssetGroupCodeEmpty]= useState(false);\r\n  const [isAssetWorkAreaEmpty,setIsAssetWorkAreaEmpty] = useState(false);\r\n  const [isAssetLocation,setIsAssetLocation] =useState(false);\r\n  const [isAssetLeavelEmpty,setIsAssetLeavelEmpty] = useState(false);\r\n  const [isAssetCostCenterEmpty,setIsAssetCostCenterEmpty] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n  const [Plan_Priority, setPlan_Priority] = useState([]);\r\n  const [selected_Project_ID, setSelected_Project_ID] = useState([]);\r\n  const [selected_Plan_Priority, setSelected_Plan_Priority] = useState([]);\r\n\r\n\r\n  const [Fault_Code, setFault_Code] = useState([]);\r\n  const [selected_Fault_Code, setSelected_Fault_Code] = useState([]);\r\n  const [Asset_Status, setAsset_Status] = useState([]);\r\n\r\n\r\n  const [Supervisor_ID, setSupervisor_ID] = useState([]);\r\n\r\n\r\n  const [Asset_Laboraccount, setAsset_Laboraccount] = useState([]); \r\n  \r\n  const [Cause_Code, setCause_Code] = useState([]);\r\n  const [Action_Code, setAction_Code] = useState([]);\r\n  const [Delay_Code, setDelay_Code] = useState([]);\r\n  const [Work_Type, setWork_Type] = useState([]);\r\n  const [Work_Class, setWork_Class] = useState([]);\r\n  const [Original_Periority, setOriginal_Periority] = useState([]);\r\n\r\n \r\n  \r\n  const [Originator, setOriginator] = useState([]);\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(\"\");\r\n  \r\n  const [selected_Asset_Status, setSelected_Asset_Status] = useState([]);\r\n  const [selected_Asset_Group_Code, setSelected_Asset_Group_Code] = useState(\r\n    []\r\n  );\r\n\r\n  const [selected_Originator, setSelected_Originator] = useState([]);\r\n \r\n  const [Phone, setPhone] = useState(\"\");\r\n  const [OriginationDate, setOriginationDate] = useState(new Date());\r\n  const [DueDate, setDueDate] = useState(new Date());\r\n  const [CorrectiveAction, setCorrectiveAction] = useState(\"\");\r\n  const [selected_Original_Periority, setSelected_Original_Periority] =\r\n    useState([]);\r\n  const [selected_Cause_Code, setSelected_Cause_Code] = useState([]);\r\n  const [ScheduleDate, setScheduleDate] = useState();\r\n  const [selected_Action_Code, setSelected_Action_Code] = useState([]);\r\n  const [ExceptionDate, setExceptionDate] = useState();\r\n  const [selected_Delay_Code, setSelected_Delay_Code] = useState([]);\r\n  const [StatusChangeDate, setStatusChangeDate] = useState();\r\n  const [Project_ID, setProject_ID] = useState([]);\r\n\r\n  const [selected_Work_Type, setSelected_Work_Type] = useState([]);\r\n  const [CompletionDate, setCompletionDate] = useState();\r\n  const [CompletionDate2, setCompletionDate2] = useState(new Date());\r\n\r\n  const [selected_Work_Class, setSelected_Work_Class] = useState([]);\r\n  const [CloseDate, setCloseDate] = useState();\r\n  const [CloseDate2, setCloseDate2] = useState(new Date());\r\n  const [selected_Supervisor_ID, setSelected_Supervisor_ID] = useState([]);\r\n  const [Planner, setPlanner] = useState([]);\r\n  const [selected_Planner, setSelected_Planner] = useState([]);\r\n\r\n  const [Approver, setApprover] = useState([]);\r\n  const [selected_Approver, setSelected_Approver] = useState([]);\r\n\r\n  const [Assign_To, setAssign_To] = useState([]);\r\n  const [selected_Assign_To, setSelected_Assign_To] = useState([]);\r\n\r\n \r\n\r\n  const [Temporary_Asset, setTemporary_Asset] = useState(false);\r\n  const [CheckBox_Temporary_Asset, setCheckBox_Temporary_Asset] = useState(\"0\");\r\n\r\n  const [Approved, setApproved] = useState(false);\r\n  const [CheckBox_Approved, setCheckBox_Approved] = useState(\"0\");\r\n\r\n  const [Safety, setSafety] = useState(false);\r\n  const [CheckBox_Safety, setCheckBox_Safety] = useState(\"0\");\r\n\r\n\r\n\r\n  const [Credit_Cost_Center, setCredit_Cost_Center] = useState([]);\r\n  const [selected_Credit_Cost_Center, setSelected_Credit_Cost_Center] =\r\n    useState([]);\r\n\r\n\r\n\r\n  const [Miscellaneous_Account, setMiscellaneous_Account] = useState([]);\r\n  const [selected_Miscellaneous_Account, setSelected_Miscellaneous_Account] =\r\n    useState([]);\r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n  const [AutoNumring, setAutoNumring] = useState(\"\");\r\n\r\n  const [UDFNote1, setUDFNote1] = useState(\"\");\r\n\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n  const [getDbImgRowId, setDbImgRowId] = useState(\"\");\r\n  const [SpecialOdrResult, setSpecialOdrResult] = useState([]);\r\n\r\n  const [steps, setsteps] = useState([]);\r\n  const StatushandleClose = () => setStatusShow(false);\r\n\r\n  const [StatusShow, setStatusShow] = useState(false);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [imageComment, setimageComment] = useState(null);\r\n  const messageRef = useRef(null);\r\n  const [AllCommnet, setAllComment] = useState([]);\r\n\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const fileInputRef2 = useRef(null);\r\n  const [selectedImageCommnt, setSelectedImageCommnt] = useState(null);\r\n\r\n  const [uploadImgShow, setUploadImgShow] = useState(false);\r\n  const UploadImghandleClose = () => setUploadImgShow(false);\r\n  const chatContainerRef = useRef(null);\r\n  const [isFiledValueEmpty, setIsFiledValueEmpty] = useState(false);\r\n \r\n  const [isChargeCostEmpty, setIsChargeCostEmpty] = useState(false);\r\n  const [isFaultCodeEmpty, setIsFaultCodeEmpty] = useState(false);\r\n  const [isOriginalPeriorityEmpty, setIsOriginalPeriorityEmpty] =\r\n    useState(false);\r\n  const [isWorkTypeEmpty, setIsWorkTypeEmpty] = useState(false);\r\n  const [isWorkGroupEmpty, setIsWorkGroupEmpty] = useState(false);\r\n  const [isAssetNoEmpty, setIsAssetNoEmpty] = useState(false);\r\n  const [isCorrectiveValueEmpty, setIsCorrectiveValueEmpty] = useState(false);\r\n  const [isCauseCodeValueEmpty, setIsCauseCodeValueEmpty] = useState(false);\r\n  const [isActionCodeValueEmpty, setIsActionCodeValueEmpty] = useState(false);\r\n  const [isOpenWork, setIsOpenWork] = useState(true);\r\n  const [isOpenAsset, setIsOpenAsset] = useState(true);\r\n\r\n  const autocompleteRef = useRef(null);\r\n  const assetNoAutocompleteRef = useRef(null);\r\n  const CustomerCodeRef = useRef(null);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [PMSetupShow, setPMSetupShow] = useState(false);\r\n  const PMSetuphandleClose = () => setPMSetupShow(false);\r\n  const PMSetuphandleShow = () => setPMSetupShow(true);\r\n\r\n  const [WOHistoryShow, setWOHistoryShow] = useState(false);\r\n  const WOHistoryhandleClose = () => setWOHistoryShow(false);\r\n  const WOHistoryhandleShow = () => setWOHistoryShow(true);\r\n\r\n  const [RelocationHistoryShow, setRelocationHistoryShow] = useState(false);\r\n  const RelocationHistoryhandleClose = () => setRelocationHistoryShow(false);\r\n  const RelocationHistoryhandleShow = () => setRelocationHistoryShow(true);\r\n\r\n  const [CheckListShow, setCheckListShow] = useState(false);\r\n  const CheckListhandleClose = () => setCheckListShow(false);\r\n  const CheckListhandleShow = () => setCheckListShow(true);\r\n  /*   new state added by satya  */\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (RowID && PM_no) {\r\n        setButton_save(\"Update\");\r\n        await get_assetmaster_selected();\r\n        await fetchStatusData();\r\n        await getPMFormLebel();\r\n      } else {\r\n        await getPMFormLebel();\r\n        await fetchStatusData();\r\n      //  await fetchStusPriortyData();\r\n        setButton_save(\"Save\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // test funcation\r\n\r\n  // Get All Filed label Name\r\n  const getPMFormLebel = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\"/getPMFormLebal.php\");\r\n      // console.log(\"response____getLabel\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setPmMstLabel(response.data.data.prm_mst);\r\n        setPmdetLabel(response.data.data.prm_det);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  const get_workordermaster_select = async () => {\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n\r\n    try {\r\n      let responseJson;\r\n      if (\r\n        completeRowID !== undefined &&\r\n        completeRowID !== null &&\r\n        completeRowID !== \"\"\r\n      ) {\r\n        responseJson = await httpCommon.get(\r\n          \"/get_workordermaster_select.php?RowID=\" + completeRowID\r\n        );\r\n      } else if (\r\n        closeRowID !== undefined &&\r\n        closeRowID !== null &&\r\n        closeRowID !== \"\"\r\n      ) {\r\n        responseJson = await httpCommon.get(\r\n          \"/get_workordermaster_select.php?RowID=\" + closeRowID\r\n        );\r\n      } else {\r\n        responseJson = await httpCommon.get(\r\n          \"/get_workordermaster_select.php?RowID=\" + RowID\r\n        );\r\n      }\r\n      // console.log(\"responseJson___today\", responseJson);\r\n      if (responseJson.data.status === \"SUCCESS\") {\r\n        const gt = JSON.stringify(responseJson);\r\n\r\n        // *** Set All data to state\r\n\r\n        setWorkOrderNo(responseJson.data.data[\"0\"].wko_mst_wo_no);\r\n        setAsset_No(responseJson.data.data[\"0\"].wko_mst_assetno);\r\n        setSelected_Status({\r\n          label: responseJson.data.data[0].wko_mst_status,\r\n        });\r\n\r\n        setSelected_Asset_Status({\r\n          label: responseJson.data.data[0].wko_mst_asset_status,\r\n        });\r\n        setSelected_Plan_Priority({\r\n          label: responseJson.data.data[0].wko_mst_plan_priority,\r\n        });\r\n        setSelected_Asset_Group_Code({\r\n          label: responseJson.data.data[\"0\"].wko_mst_asset_group_code,\r\n        });\r\n        setSelected_Charge_Cost_Center({\r\n          label: responseJson.data.data[0].wko_mst_chg_costcenter,\r\n        });\r\n        setSelected_Work_Area({\r\n          label: responseJson.data.data[0].wko_mst_work_area,\r\n        });\r\n        setSelected_Originator({\r\n          label: responseJson.data.data[0].wko_mst_originator,\r\n        });\r\n        setSelected_Asset_Level({\r\n          label: responseJson.data.data[0].wko_mst_asset_level,\r\n        });\r\n        setPhone(responseJson.data.data[\"0\"].wko_mst_phone);\r\n\r\n        setSelected_Asset_Location({\r\n          label: responseJson.data.data[0].wko_mst_asset_location,\r\n        });\r\n        setSelected_Fault_Code({\r\n          label: responseJson.data.data[0].wko_mst_flt_code,\r\n        });\r\n      //  setDescription(responseJson.data.data[\"0\"].wko_mst_descs);\r\n        //setDbImg(responseJson.data.data['0'].attachment)\r\n\r\n        if (responseJson.data.data[\"0\"].wko_mst_org_date == null) {\r\n          setOriginationDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_mst_org_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setOriginationDate(formattedDate);\r\n        }\r\n\r\n        if (responseJson.data.data[\"0\"].wko_mst_due_date == null) {\r\n          setDueDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_mst_due_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setDueDate(formattedDate);\r\n        }\r\n\r\n        setCorrectiveAction(responseJson.data.data[\"0\"].wko_det_corr_action);\r\n        setSelected_Project_ID({\r\n          label: responseJson.data.data[0].wko_mst_project_id,\r\n        });\r\n\r\n        setSelected_Original_Periority({\r\n          label: responseJson.data.data[0].wko_mst_orig_priority,\r\n        });\r\n        setSelected_Cause_Code({\r\n          label: responseJson.data.data[0].wko_det_cause_code,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_sched_date == null) {\r\n          setScheduleDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_sched_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setScheduleDate(formattedDate);\r\n        }\r\n\r\n        setSelected_Action_Code({\r\n          label: responseJson.data.data[0].wko_det_act_code,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_exc_date == null) {\r\n          setExceptionDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_exc_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setExceptionDate(formattedDate);\r\n        }\r\n        setSelected_Delay_Code({\r\n          label: responseJson.data.data[0].wko_det_delay_cd,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_sc_date == null) {\r\n          setStatusChangeDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_sc_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setStatusChangeDate(formattedDate);\r\n        }\r\n\r\n        setSelected_Work_Type({\r\n          label: responseJson.data.data[0].wko_det_work_type,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_cmpl_date == null) {\r\n          setCompletionDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_cmpl_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setCompletionDate(formattedDate);\r\n        }\r\n        setSelected_Work_Class({\r\n          label: responseJson.data.data[0].wko_det_work_class,\r\n        });\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_clo_date == null) {\r\n          setCloseDate(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_clo_date.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setCloseDate(formattedDate);\r\n        }\r\n\r\n        setSelected_Work_Group({\r\n          label: responseJson.data.data[0].wko_det_work_grp,\r\n        });\r\n\r\n        setSelected_Supervisor_ID({\r\n          label: responseJson.data.data[0].wko_det_supv_id,\r\n        });\r\n        setSelected_Planner({\r\n          label: responseJson.data.data[0].wko_det_planner,\r\n        });\r\n        setSelected_Approver({\r\n          label: responseJson.data.data[0].wko_det_approver,\r\n        });\r\n        setSelected_Assign_To({\r\n          label: responseJson.data.data[0].wko_det_assign_to,\r\n        });\r\n        setPermanent_ID(responseJson.data.data[\"0\"].wko_det_perm_id);\r\n        setTemporary_Asset(responseJson.data.data[\"0\"].wko_det_temp_asset);\r\n        setApproved(responseJson.data.data[\"0\"].wko_det_approved);\r\n        setSafety(responseJson.data.data[\"0\"].wko_det_safety);\r\n\r\n        setSelected_Customer_Code({\r\n          label: responseJson.data.data[0].wko_det_customer_cd,\r\n        });\r\n        setSelected_Labor_Account({\r\n          label: responseJson.data.data[0].wko_det_laccount,\r\n        });\r\n        setSelected_Material_Account({\r\n          label: responseJson.data.data[0].wko_det_maccount,\r\n        });\r\n        setSelected_Credit_Cost_Center({\r\n          label: responseJson.data.data[0].wko_det_crd_costcenter,\r\n        });\r\n        setSelected_Contract_Account({\r\n          label: responseJson.data.data[0].wko_det_caccount,\r\n        });\r\n        setSelected_Miscellaneous_Account({\r\n          label: responseJson.data.data[0].wko_det_saccount,\r\n        });\r\n\r\n        setUDFNote1(responseJson.data.data[\"0\"].wko_det_note1);\r\n        setUDFText_1(responseJson.data.data[\"0\"].wko_det_varchar1);\r\n        setUDFText_2(responseJson.data.data[\"0\"].wko_det_varchar2);\r\n        setUDFText_3(responseJson.data.data[\"0\"].wko_det_varchar3);\r\n        setUDFText_4(responseJson.data.data[\"0\"].wko_det_varchar4);\r\n        setUDFText_5(responseJson.data.data[\"0\"].wko_det_varchar5);\r\n        setUDFText_6(responseJson.data.data[\"0\"].wko_det_varchar6);\r\n        setUDFText_7(responseJson.data.data[\"0\"].wko_det_varchar7);\r\n        setUDFText_8(responseJson.data.data[\"0\"].wko_det_varchar8);\r\n        setUDFText_9(responseJson.data.data[\"0\"].wko_det_varchar9);\r\n        setUDFText_10(responseJson.data.data[\"0\"].wko_det_varchar10);\r\n\r\n        setUDFNumber_1(responseJson.data.data[\"0\"].wko_det_numeric1);\r\n        setUDFNumber_2(responseJson.data.data[\"0\"].wko_det_numeric2);\r\n        setUDFNumber_3(responseJson.data.data[\"0\"].wko_det_numeric3);\r\n        setUDFNumber_4(responseJson.data.data[\"0\"].wko_det_numeric4);\r\n        setUDFNumber_5(responseJson.data.data[\"0\"].wko_det_numeric5);\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime1 == null) {\r\n          setUDFDate_1(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime1.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_1(formattedDate);\r\n        }\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime2 == null) {\r\n          setUDFDate_2(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime2.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_2(formattedDate);\r\n        }\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime3 == null) {\r\n          setUDFDate_3(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime3.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_3(formattedDate);\r\n        }\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime4 == null) {\r\n          setUDFDate_4(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime4.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_4(formattedDate);\r\n        }\r\n\r\n        if (responseJson.data.data[\"0\"].wko_det_datetime5 == null) {\r\n          setUDFDate_5(\"\");\r\n        } else {\r\n          const apiDate = responseJson.data.data[\"0\"].wko_det_datetime5.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_5(formattedDate);\r\n        }\r\n        fetchStatusData();\r\n\r\n        Swal.close();\r\n        fetchImgData();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: responseJson.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_WorkOrder_select...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  const get_assetmaster_selected = async () => {\r\n    var json = {\r\n\r\n        \"site_cd\": site_ID,\r\n        \"ast_mst_asset_no\": PM_no,\r\n        \"asset_shortdesc\": \"\",\r\n        \"cost_center\": \"\",\r\n        \"asset_status\": \"\",\r\n        \"asset_type\": \"\",\r\n        \"asset_grpcode\": \"\",\r\n        \"work_area\": \"\",\r\n        \"asset_locn\": \"\",\r\n        \"asset_code\": \"\",\r\n        \"ast_lvl\": \"\",\r\n        \"ast_sts_typ_cd\": \"\",\r\n        \"createby\": \"\",\r\n        \"service_type\": \"\",\r\n        \"block\": \"\",\r\n        \"floor\": \"\",\r\n        \"RowId\": RowID\r\n    }\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_assetmaster_select.php\",\r\n        JSON.stringify(json)\r\n      );\r\n      console.log(\"Get_Asset Data\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setAssetNo(response.data.data[\"0\"].ast_mst_asset_no);\r\n        setSelected_Status({\r\n          label: response.data.data[0].ast_mst_asset_status + \" : \" + response.data.data[\"0\"].ast_sts_desc\r\n        });\r\n        setShort_Description(response.data.data[\"0\"].ast_mst_asset_shortdesc);\r\n        setselected_CriFactor({ label: response.data.data[\"0\"].ast_mst_cri_factor + \" : \" + response.data.data[\"0\"].ast_cri_desc });\r\n        setArea_ID(response.data.data[\"0\"].ast_mst_perm_id);\r\n        setLong_Description(response.data.data[\"0\"].ast_mst_asset_longdesc);\r\n        setselectedAssetType({ label: response.data.data[\"0\"].ast_mst_asset_type + \" : \" + response.data.data[\"0\"].ast_type_descs });\r\n        setselectedAssetCode({ label: response.data.data[\"0\"].ast_mst_asset_code + \" : \" + response.data.data[\"0\"].ast_cod_desc });\r\n        setselectedAssetGroupCode({ label: response.data.data[\"0\"].ast_mst_asset_grpcode + \" : \" + response.data.data[\"0\"].ast_grp_desc});\r\n        setSelected_Charge_Cost_Center({ label: response.data.data[\"0\"].ast_mst_cost_center + \" : \" + response.data.data[\"0\"].descs });\r\n        setSelected_Work_Area({ label: response.data.data[\"0\"].ast_mst_work_area + \" : \" + response.data.data[\"0\"].mst_war_desc });\r\n        setSelected_Asset_Location({ label: response.data.data[\"0\"].ast_mst_asset_locn + \" : \" + response.data.data[\"0\"].ast_loc_desc });\r\n        setSelected_Asset_Level({ label: response.data.data[\"0\"].ast_mst_ast_lvl + \" : \" + response.data.data[\"0\"].ast_lvl_desc });\r\n        setSelected_Work_Group({ label: response.data.data[\"0\"].ast_mst_wrk_grp + \" : \" + response.data.data[\"0\"].wrk_grp_desc });\r\n\r\n        setPermanent_ID(response.data.data[\"0\"].ast_mst_parent_id);\r\n        setPermanentIDFlag(response.data.data[\"0\"].ast_mst_parent_id);\r\n        setSafetyRequirement(response.data.data[\"0\"].ast_mst_safety_rqmts);\r\n        setBarcodeCount(response.data.data[\"0\"].ast_mst_print_count);\r\n        setManufactureCode(response.data.data[\"0\"].ast_det_mfg_cd);\r\n        setAssetCost(response.data.data[\"0\"].ast_det_asset_cost);\r\n        setResidualValue(response.data.data[\"0\"].ast_det_repl_cost);\r\n     \r\n       setSelectedDepreciationMethod({ label: response.data.data[\"0\"].ast_det_depr_method });\r\n       setSelected_Contract_Account({ label: response.data.data[\"0\"].ast_det_c_account });\r\n       setSelected_Labor_Account({ label: response.data.data[\"0\"].ast_det_l_account });\r\n       setSelected_Material_Account({ label: response.data.data[\"0\"].ast_det_m_account });\r\n   \r\n      if (response.data.data[\"0\"].ast_det_purchase_date == null) {\r\n        setPurchaseDate(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_purchase_date.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setPurchaseDate(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_warranty_date == null) {   \r\n        setWarrantyDate(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_warranty_date.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setWarrantyDate(formattedDate);\r\n      }\r\n      setExpectedLifeYear(response.data.data[\"0\"].ast_det_depr_term);\r\n      setCustomerCode(response.data.data[\"0\"].ast_det_cus_code);\r\n\r\n      setUDFText_1(response.data.data[\"0\"].ast_det_varchar1);\r\n      setUDFText_2(response.data.data[\"0\"].ast_det_varchar2);\r\n      setUDFText_3(response.data.data[\"0\"].ast_det_varchar3);\r\n      setUDFText_4(response.data.data[\"0\"].ast_det_varchar4);\r\n      setUDFText_5(response.data.data[\"0\"].ast_det_varchar5);\r\n      setUDFText_6(response.data.data[\"0\"].ast_det_varchar6);\r\n      setUDFText_7(response.data.data[\"0\"].ast_det_varchar7);\r\n      setUDFText_8(response.data.data[\"0\"].ast_det_varchar8);\r\n      setUDFText_9(response.data.data[\"0\"].ast_det_varchar9);\r\n      setUDFText_10(response.data.data[\"0\"].ast_det_varchar10);\r\n\r\n      setUDFText_11(response.data.data[\"0\"].ast_det_varchar11);\r\n      setUDFText_12(response.data.data[\"0\"].ast_det_varchar12);\r\n      setUDFText_13(response.data.data[\"0\"].ast_det_varchar13);\r\n      setUDFText_14(response.data.data[\"0\"].ast_det_varchar14);\r\n      setUDFText_15(response.data.data[\"0\"].ast_det_varchar15);\r\n      setUDFText_16(response.data.data[\"0\"].ast_det_varchar16);\r\n      setUDFText_17(response.data.data[\"0\"].ast_det_varchar17);\r\n      setUDFText_18(response.data.data[\"0\"].ast_det_varchar18);\r\n      setUDFText_19(response.data.data[\"0\"].ast_det_varchar19);\r\n      setUDFText_20(response.data.data[\"0\"].ast_det_varchar20);\r\n\r\n      setUDFText_21(response.data.data[\"0\"].ast_det_varchar21);\r\n      setUDFText_22(response.data.data[\"0\"].ast_det_varchar22);\r\n      setUDFText_23(response.data.data[\"0\"].ast_det_varchar23);\r\n      setUDFText_24(response.data.data[\"0\"].ast_det_varchar24);\r\n      setUDFText_25(response.data.data[\"0\"].ast_det_varchar25);\r\n      setUDFText_26(response.data.data[\"0\"].ast_det_varchar26);\r\n      setUDFText_27(response.data.data[\"0\"].ast_det_varchar27);\r\n      setUDFText_28(response.data.data[\"0\"].ast_det_varchar28);\r\n      setUDFText_29(response.data.data[\"0\"].ast_det_varchar29);\r\n      setUDFText_30(response.data.data[\"0\"].ast_det_varchar30);\r\n\r\n      setUDFNumber_1(response.data.data[\"0\"].ast_det_numeric1);\r\n      setUDFNumber_2(response.data.data[\"0\"].ast_det_numeric2);\r\n      setUDFNumber_3(response.data.data[\"0\"].ast_det_numeric3);\r\n      setUDFNumber_4(response.data.data[\"0\"].ast_det_numeric4);\r\n      setUDFNumber_5(response.data.data[\"0\"].ast_det_numeric5);\r\n      setUDFNumber_6(response.data.data[\"0\"].ast_det_numeric6);\r\n      setUDFNumber_7(response.data.data[\"0\"].ast_det_numeric7);\r\n      setUDFNumber_8(response.data.data[\"0\"].ast_det_numeric8);\r\n      setUDFNumber_9(response.data.data[\"0\"].ast_det_numeric9);\r\n      setUDFNumber_10(response.data.data[\"0\"].ast_det_numeric10);\r\n      setUDFNumber_11(response.data.data[\"0\"].ast_det_numeric11);\r\n      setUDFNumber_12(response.data.data[\"0\"].ast_det_numeric12);\r\n      setUDFNumber_13(response.data.data[\"0\"].ast_det_numeric13);\r\n      setUDFNumber_14(response.data.data[\"0\"].ast_det_numeric14);\r\n      setUDFNumber_15(response.data.data[\"0\"].ast_det_numeric15);\r\n\r\n    \r\n      if (response.data.data[\"0\"].ast_det_datetime1 == null) {   \r\n        setUDFDate_1(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime1.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_1(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime2 == null) {   \r\n        setUDFDate_2(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime2.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_2(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime3 == null) {   \r\n        setUDFDate_3(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime3.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_3(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime4 == null) {   \r\n        setUDFDate_4(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime4.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_4(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime5 == null) {   \r\n        setUDFDate_5(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime5.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_5(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime6 == null) {   \r\n        setUDFDate_6(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime6.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_6(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime7 == null) {   \r\n        setUDFDate_7(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime7.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_7(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime8 == null) {   \r\n        setUDFDate_8(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime8.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_8(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime9 == null) {   \r\n        setUDFDate_9(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime9.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_9(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime10 == null) {   \r\n        setUDFDate_10(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime10.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_10(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime11 == null) {   \r\n        setUDFDate_11(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime11.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_11(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime12 == null) {   \r\n        setUDFDate_12(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime12.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_12(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime13 == null) {   \r\n        setUDFDate_13(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime13.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_13(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime14 == null) {   \r\n        setUDFDate_14(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime14.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_14(formattedDate);\r\n      }\r\n      if (response.data.data[\"0\"].ast_det_datetime15 == null) {   \r\n        setUDFDate_15(\"\");\r\n      } else {\r\n        const apiDate = response.data.data[\"0\"].ast_det_datetime15.date;\r\n        const formattedDate = Moment(\r\n          apiDate,\r\n          \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n        ).toDate();\r\n        setUDFDate_15(formattedDate);\r\n      }\r\n       \r\n      fetchImgData();\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: response.data,\r\n      });\r\n    }\r\n      \r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_Asset select Not Found...\",\r\n        text: error,\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Second Api call fetch all dropdowwn data\r\n  const fetchStatusData = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_asset_dropdownlist.php?site_cd=\" + site_ID\r\n      );\r\n      // console.log(\"response____status__\", response); \r\n        \r\n      let Status = response.data.data.AssetStatusList.map((item) => ({\r\n        label: item.ast_sts_status + \" : \" + item.ast_sts_desc,\r\n        value: item.ast_sts_desc,\r\n        key: item.ast_sts_status,\r\n      }));\r\n      setStatus(Status);\r\n\r\n      let FrequencyCode = response.data.data.AssetFrequencyCode.map((item) => ({\r\n        label: item.prm_fcd_freq_code + \" : \" + item.prm_fcd_desc,\r\n        value: item.prm_fcd_desc,\r\n        key: item.prm_fcd_freq_code,\r\n      }));\r\n      setFrequencyCode(FrequencyCode);\r\n     \r\n      let PlanPriority = response.data.data.AssetPlanPriority.map((item) => ({\r\n        label: item.wrk_pri_pri_cd + \" : \" + item.wrk_pri_desc,\r\n        value: item.wrk_pri_desc,\r\n        key: item.wrk_pri_pri_cd,\r\n      }));\r\n      setPlanPriority(PlanPriority);\r\n\r\n      let PmLPMUOM = response.data.data.AssetLPMUOM.map((item) => ({\r\n        label: item.uom_mst_uom + \" : \" + item.uom_mst_desc,\r\n        value: item.uom_mst_desc,\r\n        key:item.uom_mst_uom,\r\n      }));\r\n      setPmLPMUOM(PmLPMUOM);\r\n\r\n      let FaultCode = response.data.data.AssetFaultCode.map((item) => ({\r\n        label: item.wrk_flt_fault_cd + \" : \" + item.wrk_flt_desc,\r\n        value: item.wrk_flt_desc,\r\n        key:item.wrk_flt_fault_cd,\r\n      }));\r\n      setFaultCode(FaultCode);\r\n\r\n      let Asset_Group_Code = response.data.data.AssetGroupCode.map((item) => ({\r\n        label: item.ast_grp_grp_cd + \" : \" + item.ast_grp_desc,\r\n        value: item.ast_grp_desc,\r\n      }));\r\n      setAsset_Group_Code(Asset_Group_Code);\r\n\r\n      let Work_Area = response.data.data.AssetZone.map((item) => ({\r\n        label: item.mst_war_work_area + \" : \" + item.mst_war_desc,\r\n        value: item.mst_war_desc,\r\n      }));\r\n      setWork_Area(Work_Area);\r\n\r\n      let Charge_Cost_Center = response.data.data.Assetcostcenter.map(\r\n        (item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setCharge_Cost_Center(Charge_Cost_Center);\r\n\r\n      let Work_Group = response.data.data.Assetwrkgrp.map((item) => ({\r\n        label: item.wrk_grp_grp_cd + \" : \" + item.wrk_grp_desc,\r\n        value: item.wrk_grp_desc,\r\n      }));\r\n      setWork_Group(Work_Group);\r\n\r\n      let Asset_Level = response.data.data.Assetleavel.map((item) => ({\r\n        label: item.ast_lvl_ast_lvl + \" : \" + item.ast_lvl_desc,\r\n        value: item.ast_lvl_desc,\r\n      }));\r\n      setAsset_Level(Asset_Level);\r\n\r\n      let Asset_Location = response.data.data.Assetlocation.map((item) => ({\r\n        label: item.ast_loc_ast_loc + \" : \" + item.ast_loc_desc,\r\n        value: item.ast_loc_desc,\r\n      }));\r\n      setAsset_Location(Asset_Location);\r\n\r\n      let Asset_Type = response.data.data.AssetType.map((item) => ({\r\n        label: item.ast_type_cd + \" : \" + item.ast_type_descs,\r\n        value: item.ast_type_descs,\r\n      }));\r\n      setAsset_Type(Asset_Type);\r\n\r\n      let Asset_Code = response.data.data.AssetCode.map((item) => ({\r\n        label: item.ast_cod_ast_cd + \" : \" + item.ast_cod_desc,\r\n        value: item.ast_cod_desc,\r\n      }));\r\n      setAsset_Code(Asset_Code);\r\n\r\n      let Asset_CriFactor = response.data.data.Assetcriticalfactor.map((item) => ({\r\n        label: item.ast_cri_cri_factor + \" : \" + item.ast_cri_desc,\r\n        value: item.ast_cri_desc,\r\n      }));\r\n      setAsset_CriFactor(Asset_CriFactor);\r\n\r\n      let Asset_laboraccount = response.data.data.Assetlaboraccount.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.descs,\r\n      }));\r\n      setAsset_Laboraccount(Asset_laboraccount);\r\n\r\n      /*   end */\r\n\r\n      let Plan_Priority = response.data.data.PlanPeriority.map((item) => ({\r\n        label: item.wrk_pri_pri_cd + \" : \" + item.wrk_pri_desc,\r\n        value: item.wrk_pri_desc,\r\n      }));\r\n      setPlan_Priority(Plan_Priority);\r\n\r\n      let Fault_Code = response.data.data.FaultCode.map((item) => ({\r\n        label: item.wrk_flt_fault_cd + \" : \" + item.wrk_flt_desc,\r\n        value: item.wrk_flt_desc,\r\n      }));\r\n      setFault_Code(Fault_Code);\r\n\r\n      let Asset_Status = response.data.data.AssetStatus.map((item) => ({\r\n        label: item.ast_sts_status + \" : \" + item.ast_sts_desc,\r\n        value: item.ast_sts_desc,\r\n      }));\r\n      setAsset_Status(Asset_Status);\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Get Status And Plan Priorty Data\r\n  const fetchStusPriortyData = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/GetWordkOrderStatus_Plan_PriorityData.php\"\r\n      );\r\n      if (response.data.status == \"SUCCESS\") {\r\n        setSelected_Status({\r\n          label: response.data.data.dft_mst_wko_sts,\r\n        });\r\n        setSelected_Plan_Priority({\r\n          label: response.data.data.dft_mst_wko_pri,\r\n        });\r\n        setSelected_Originator({\r\n          label: emp_mst_name,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Thired Api Call\r\n  const fetchImgData = async () => {\r\n    console.log(\"callto api\");\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_asset_edit_img.php?RowID=\" + RowID\r\n      );\r\n    //  console.log(\"response____img____\",response);\r\n        if (response.data.data) {\r\n          // Check if AllImgGet exists and has items\r\n         // console.log(\"response____img____2\",response);\r\n          if (response.data.data.AllImgGet && response.data.data.AllImgGet.length > 0) {\r\n            setDbImg(response.data.data.AllImgGet);\r\n            setDbImgRowId(response.data.data.AllImgGet[0].RowID);\r\n            setImageSelect({\r\n              name: response.data.data.AllImgGet[0].file_name,\r\n              path: response.data.data.AllImgGet[0].attachment,\r\n            });\r\n          }\r\n        \r\n          // Check if AllRef exists and has items\r\n          if (response.data.data.AllRef && response.data.data.AllRef.length > 0) {\r\n            setRefImg(response.data.data.AllRef);\r\n          }\r\n        }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n  const openSaveImg = () => {\r\n    setShowdd2(true);\r\n  };\r\n  // First main Img funcation\r\n  const handleDeleteImgApi = (ImgIDdlt) => {\r\n    const updatedImages = getDbImg.filter((image) => image.RowID !== ImgIDdlt);\r\n\r\n    // Update the state with the new array of images after the deletion\r\n    setDbImg(updatedImages);\r\n    setDisabledBtn(true);\r\n    setImageSelect({ name: \"\", path: \"\" });\r\n  };\r\n  const handleImgChangeSingle = (e) => {\r\n    if (e.target.files.length) {\r\n      setImage({\r\n        preview: URL.createObjectURL(e.target.files[0]),\r\n        raw: e.target.files[0],\r\n      });\r\n      setDisabledBtn(true);\r\n    }\r\n    // Img set for data api\r\n    if (getDbImg != \"\") {\r\n      setDbImg(\"\");\r\n    }\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImageSelect({ name: file.name, path: reader.result });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n  const clearDataImg = () => {\r\n    setImage(\"\");\r\n  };\r\n  const handleClearImg = (event) => {\r\n    event.preventDefault();\r\n    clearDataImg();\r\n    setDisabledBtn(false);\r\n  };\r\n  const handleImgChangeSingle2 = (e) => {\r\n    setDisabledBtn(false);\r\n  };\r\n  // Refrence Imge funcation\r\n  const handleButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleDeleteImg = (e) => {\r\n    const s = selectedImages.filter((item, index) => index !== e);\r\n    setSelectedImages(s);\r\n  };\r\n  const handleShowdata = (item) => {\r\n    setSelectedImage(item.attachment);\r\n    setShowdd(true);\r\n  };\r\n  const openPDFInNewTab = (fileName) => {\r\n    const binaryData = atob(fileName);\r\n\r\n    const byteArray = new Uint8Array(binaryData.length);\r\n    for (let i = 0; i < binaryData.length; i++) {\r\n      byteArray[i] = binaryData.charCodeAt(i);\r\n    }\r\n\r\n    // Step 3: Create a Blob from the typed array\r\n    const blob = new Blob([byteArray], { type: \"application/pdf\" });\r\n\r\n    // Step 4: Generate a URL for the blob\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Step 5: Open the URL in a new tab\r\n    window.open(url, \"_blank\");\r\n  };\r\n  const handleDeleteReferenceApi = (RefImgDlt) => {\r\n    const removedItem = RefImg.find((item) => item.RowID === RefImgDlt);\r\n    const updatedRefImg = RefImg.filter((item) => item.RowID !== RefImgDlt);\r\n    setRefImg(updatedRefImg);\r\n    setRemovedRefItems((prevRemovedRefItems) => [\r\n      ...prevRemovedRefItems,\r\n      removedItem,\r\n    ]);\r\n  };\r\n  const handleShowdd = (e, rowData) => {\r\n    sethandalImg(rowData);\r\n    setShowdd(true);\r\n  };\r\n  const isMyStateEmpty =\r\n    Object.keys(handalImg).length === 0 && handalImg.constructor === Object;\r\n  function handleImageChange(event) {\r\n    const files = event.target.files;\r\n\r\n    setSelectedPdfFiles((prevSelectedPdfFiles) => [\r\n      ...prevSelectedPdfFiles,\r\n      ...files,\r\n    ]);\r\n    const selectedImagesArray = [...selectedImages2];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event) => {\r\n        const imageData = {\r\n          name: files[i].name,\r\n          type: files[i].type,\r\n          base64: event.target.result,\r\n        };\r\n        selectedImagesArray.push(imageData);\r\n        if (selectedImagesArray.length === files.length) {\r\n          setSelectedImages2(selectedImagesArray);\r\n          //setImageSelect({ name: file.name, path: reader.result });\r\n        }\r\n      };\r\n      reader.readAsDataURL(files[i]);\r\n    }\r\n    setSelectedImages([...selectedImages, ...files]);\r\n  }\r\n\r\n  //Alert msg swal\r\n  const displayWarning = (Tabvalue) => {\r\n    Swal.fire({\r\n      title: \"Warning!\",\r\n      text: \"You must save Work Order before you go into\" + \" \" + Tabvalue,\r\n      icon: \"warning\",\r\n      confirmButtonColor: \"#3085d6\",\r\n      confirmButtonText: \"OK\",\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    selectedImages.forEach((file) => {\r\n      formData.append(\"files[]\", file);\r\n    });\r\n  };\r\n  const findCustomizeLabel = (columnName) => {\r\n    const matchingColumn = PmMstLabel.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n  };\r\n  // WorkReq Label Details table\r\n  const findCustomizeLabelDet = (columnName) => {\r\n    const matchingColumn = PmdetLabel.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n  };\r\n\r\n  // staya added today\r\n  \r\n  \r\n  //get Asset Parent Flag data onther component\r\n  const handleEditClick = () => {\r\n    setModalOpenAsset(true);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setPermanentIDFlag(\"\");\r\n  };\r\n  function handleCloseModal() {\r\n    setModalOpenAsset(false);\r\n  }\r\n\r\n  const handleCancelClickCustomeCode = () =>{\r\n    setCustomerCode(\"\");\r\n  }\r\n  const handleEditClickCustomerCode = () =>{\r\n    setModalOpenAssetCustomerCode(true);\r\n  }\r\n  function handleCloseModalCustomeCode() {\r\n    setModalOpenAssetCustomerCode(false);\r\n  }\r\n\r\n  const get_assetmaster_select = async (selected_asset) => {\r\n    \r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    const parts = selected_asset.split(':');\r\n    const valueBeforeColon = parts[0].trim();\r\n\r\n    if (selected_asset != \"\") {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_workOrderAssetmaster_select.php?site_cd=\" +\r\n            site_ID +\r\n            \"&ast_mst_asset_no=\" +\r\n            valueBeforeColon +\r\n            \"&asset_shortdesc=\" +\r\n            \"\" +\r\n            \"&cost_center=\" +\r\n            \"\" +\r\n            \"&asset_status=\" +\r\n            \"\" +\r\n            \"&asset_type=\" +\r\n            \"\" +\r\n            \"&asset_grpcode=\" +\r\n            \"\" +\r\n            \"&work_area=\" +\r\n            \"\" +\r\n            \"&asset_locn=\" +\r\n            \"\" +\r\n            \"&asset_code=\" +\r\n            \"\" +\r\n            \"&ast_lvl=\" +\r\n            \"\" +\r\n            \"&ast_sts_typ_cd=\" +\r\n            \"\" +\r\n            \"&createby=\" +\r\n            \"\" +\r\n            \"&service_type=\" +\r\n            \"\" +\r\n            \"&block=\" +\r\n            \"\" +\r\n            \"&floor=\" +\r\n            \"\"\r\n        );\r\n\r\n        if (response.data.status === \"SUCCESS\") {\r\n          setSelected_Asset_Status({\r\n            label: response.data.data[\"0\"].ast_mst_asset_status,\r\n          });\r\n          setSelected_Asset_Status({\r\n            label: response.data.data[\"0\"].ast_mst_asset_status,\r\n          });\r\n          setSelected_Asset_Group_Code({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_asset_grpcode +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_grp_desc,\r\n          });\r\n          setSelected_Charge_Cost_Center({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_cost_center +\r\n              \" : \" +\r\n              response.data.data[\"0\"].descs,\r\n          });\r\n          setSelected_Work_Area({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_work_area +\r\n              \" : \" +\r\n              response.data.data[\"0\"].mst_war_desc,\r\n          });\r\n          setSelected_Asset_Level({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_ast_lvl +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_lvl_desc,\r\n          });\r\n          setSelected_Asset_Location({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_asset_locn +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_loc_desc,\r\n          });\r\n          setSelected_Work_Group({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_wrk_grp +\r\n              \" : \" +\r\n              response.data.data[\"0\"].wrk_grp_desc,\r\n          });\r\n\r\n          Swal.close();\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: response.data,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_assetmaster_select...\",\r\n          text: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectedAssetNo = (dataa) => {\r\n    get_assetmaster_select(dataa);\r\n  };\r\n\r\n  const handleRowData2 = (dataLenth, dataa, dataSecond) => {\r\n    // Use the row data in the second component\r\n    setPermanentIDFlag(dataa);\r\n   \r\n    if (dataLenth !== undefined && dataLenth !== null) {\r\n      setTotalAssetNo(dataLenth);\r\n    }\r\n    // if (dataa !== undefined && dataa !== null) {\r\n    //   handleSelectedAssetNo(dataa);\r\n    // }\r\n    if (dataSecond == \"1\") {\r\n      setModalOpenAsset(false);\r\n      setTotalSearch(\"\");\r\n    }\r\n  };\r\n \r\n  const handleRowData3 = (dataLenth, dataa, dataSecond) => {\r\n    // Use the row data in the second component\r\n    setCustomerCode(dataa);\r\n   \r\n    if (dataLenth !== undefined && dataLenth !== null) {\r\n      setTotalAssetNo(dataLenth);\r\n    }\r\n    // if (dataa !== undefined && dataa !== null) {\r\n    //   handleSelectedAssetNo(dataa);\r\n    // }\r\n    if (dataSecond == \"1\") {\r\n      setModalOpenAssetCustomerCode(false);\r\n      setTotalSearch(\"\");\r\n    }\r\n  };\r\n\r\n  const handleRowDataPagechg = (pageCount) => {\r\n    setViewedTotlRows(pageCount);\r\n  };\r\n\r\n  const handelRowSearch = (searchTotl) => {\r\n    setTotalSearch(searchTotl);\r\n  };\r\n  function CustomTextField({ rightIcons, ...props }) {\r\n    return (\r\n      <TextField\r\n        {...props}\r\n        InputProps={{\r\n          endAdornment: rightIcons && (\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              {rightIcons.map((icon, index) => (\r\n                <IconButton key={index}>{icon}</IconButton>\r\n              ))}\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n \r\n  const handleClickProjectID = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderProjectID.php?site_cd=\" + site_ID\r\n      );\r\n      let Project_ID = response.data.data.WorkProjectID.map((item) => ({\r\n        label: item.prj_mst_prj_cd + \" : \" + item.prj_mst_desc,\r\n        value: item.prj_mst_desc,\r\n      }));\r\n      setProject_ID(Project_ID);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickSupervisorId = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderSupervisorId.php?site_cd=\" + site_ID\r\n      );\r\n      let Supervisor_ID = response.data.data.WorkSupervisorID.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_name,\r\n      }));\r\n      setSupervisor_ID(Supervisor_ID);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickPlanner = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderPlanner.php?site_cd=\" + site_ID\r\n      );\r\n      let Planner = response.data.data.WorkPlanner.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_name,\r\n      }));\r\n      setPlanner(Planner);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickApprover = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderApprover.php?site_cd=\" + site_ID\r\n      );\r\n      let Approver = response.data.data.WorkApprover.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_name,\r\n      }));\r\n      setApprover(Approver);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickAssignTo = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderApprover.php?site_cd=\" + site_ID\r\n      );\r\n      let Assign_To = response.data.data.WorkApprover.map((item) => ({\r\n        label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n        value: item.emp_mst_name,\r\n      }));\r\n      setAssign_To(Assign_To);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickCustomerCode = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderCustomerCode.php?site_cd=\" + site_ID\r\n      );\r\n      let CustomerCode = response.data.data.WorkCustomerCode.map((item) => ({\r\n        label: item.cus_mst_customer_cd + \" : \" + item.cus_mst_desc,\r\n        value: item.cus_mst_desc,\r\n      }));\r\n     // setCustomer_Code(CustomerCode);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickCostCenter = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderCostCenter.php?site_cd=\" + site_ID\r\n      );\r\n      let Credit_Cost_Center = response.data.data.WorkCostCenter.map(\r\n        (item) => ({\r\n          label: item.costcenter + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setCredit_Cost_Center(Credit_Cost_Center);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickLaborAccount = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderLaborAccount.php?site_cd=\" + site_ID\r\n      );\r\n      let Labor_Account = response.data.data.WorkLaborAccount.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.descs,\r\n      }));\r\n      setLabor_Account(Labor_Account);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickContractAccount = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderLaborAccount.php?site_cd=\" + site_ID\r\n      );\r\n      let Contract_Account = response.data.data.WorkLaborAccount.map(\r\n        (item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setContract_Account(Contract_Account);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickMaterialAccount = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderLaborAccount.php?site_cd=\" + site_ID\r\n      );\r\n      let Material_Account = response.data.data.WorkLaborAccount.map(\r\n        (item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setMaterial_Account(Material_Account);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleClickMiscellaneousAccount = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_workOrderLaborAccount.php?site_cd=\" + site_ID\r\n      );\r\n      let Miscellaneous_Account = response.data.data.WorkLaborAccount.map(\r\n        (item) => ({\r\n          label: item.account + \" : \" + item.descs,\r\n          value: item.descs,\r\n        })\r\n      );\r\n      setMiscellaneous_Account(Miscellaneous_Account);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleOnChangeTemporaryAsset = () => {\r\n    setTemporary_Asset(!Temporary_Asset);\r\n\r\n    if (!Temporary_Asset) {\r\n      ////console.log('1')\r\n      setCheckBox_Temporary_Asset(\"1\");\r\n    } else {\r\n      ////console.log('0')\r\n      setCheckBox_Temporary_Asset(\"0\");\r\n    }\r\n  };\r\n\r\n  const handleOnChangeApproved = () => {\r\n    setApproved(!Approved);\r\n\r\n    if (!Approved) {\r\n      ////console.log('1')\r\n      setCheckBox_Approved(\"1\");\r\n    } else {\r\n      ////console.log('0')\r\n      setCheckBox_Approved(\"0\");\r\n    }\r\n  };\r\n\r\n  const handleOnChangeSafety = () => {\r\n    setSafety(!Safety);\r\n\r\n    if (!Safety) {\r\n      ////console.log('1')\r\n      setCheckBox_Safety(\"1\");\r\n    } else {\r\n      ////console.log('0')\r\n      setCheckBox_Safety(\"0\");\r\n    }\r\n  };\r\n  const scrollToField = (ref) => {\r\n    ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n/*   add new asset code by stay */\r\n  const New_Asset = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n   // console.log(\"enter_____save\");\r\n    let get_date = Moment().utcOffset(\"+08:00\").format(\"yyyy-MM-DD HH:mm:ss\");\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    //Select Status\r\n    let Status, setStatus;\r\n    if (selected_Status.label == \"\" || selected_Status.label == null) {\r\n      setStatus = \"\";\r\n    } else {\r\n      Status = selected_Status.label.split(\":\");\r\n      setStatus = Status[0];\r\n     // console.log(\"Status: \", Status[0])\r\n    }\r\n    //CustomerCode Permanent_IDFlag\r\n    let PermanentIDFlag , setPermanentIDFlag;\r\n    if (Permanent_IDFlag === \"\" || Permanent_IDFlag === null) {\r\n      setPermanentIDFlag = \"\";\r\n    } else {\r\n      PermanentIDFlag = Permanent_IDFlag.split(\":\");\r\n      setPermanentIDFlag = PermanentIDFlag[0].trim();\r\n    //  console.log(\"PermanentIDFlag: \", setPermanentIDFlag)\r\n    }\r\n\r\n    //Select Asset_Critical \r\n    let Asset_Critical, setAsset_Critical;\r\n    if (selected_CriFactor == \"\" || selected_CriFactor == null) {\r\n      setAsset_Critical = \"\";\r\n    } else {\r\n      Asset_Critical = selected_CriFactor.label.split(\":\");\r\n      setAsset_Critical = Asset_Critical[0];\r\n    //  console.log(\"Asset_Critical \", setAsset_Critical)\r\n    }\r\n\r\n    //Select Asset Type \r\n    let Asset_Type, setAsset_Type;\r\n    if (selected_AssetType == \"\" || selected_AssetType == null) {\r\n      setAsset_Type = \"\";\r\n    } else {\r\n      Asset_Type = selected_AssetType.label.split(\":\");\r\n      setAsset_Type = Asset_Type[0];\r\n     // console.log(\"Asset_Critical \", setAsset_Type)\r\n    }\r\n\r\n    //Select Asset Code \r\n    let Asset_Code, setAsset_Code;\r\n    if (selected_AssetCode == \"\" || selected_AssetCode == null) {\r\n      setAsset_Code = \"\";\r\n    } else {\r\n      Asset_Code = selected_AssetCode.label.split(\":\");\r\n      setAsset_Code = Asset_Code[0];\r\n    //  console.log(\"Asset_Code \", setAsset_Code);\r\n    }\r\n\r\n    //Select Asset Group Code \r\n    let Asset_GroupCode, setAsset_GroupCode;\r\n    if (selected_AssetGroupCode == \"\" || selected_AssetGroupCode == null) {\r\n      setAsset_GroupCode = \"\";\r\n    } else {\r\n      Asset_GroupCode = selected_AssetGroupCode.label.split(\":\");\r\n      setAsset_GroupCode = Asset_GroupCode[0];\r\n   //   console.log(\"Asset_GroupCode \", setAsset_GroupCode);\r\n    }\r\n\r\n    //Select Cost Center \r\n    let Asset_CostCenter, setAsset_CostCenter;\r\n    if (selected_Charge_Cost_Center == \"\" || selected_Charge_Cost_Center == null) {\r\n      setAsset_CostCenter = \"\";\r\n    } else {\r\n      Asset_CostCenter = selected_Charge_Cost_Center.label.split(\":\");\r\n      setAsset_CostCenter = Asset_CostCenter[0];\r\n   //   console.log(\"Asset_CostCenter \", setAsset_CostCenter);\r\n    }\r\n\r\n    //Select Zone \r\n    let Asset_WorkArea, setAsset_WorkArea;\r\n    if (selected_Work_Area == \"\" || selected_Work_Area == null) {\r\n      setAsset_WorkArea = \"\";\r\n    } else {\r\n      Asset_WorkArea = selected_Work_Area.label.split(\":\");\r\n      setAsset_WorkArea = Asset_WorkArea[0];\r\n   //   console.log(\"Asset_WorkArea \", setAsset_WorkArea);\r\n    }\r\n\r\n  //Select Asset Location \r\n  let Asset_Location, setAsset_Location;\r\n  if (selected_Asset_Location == \"\" || selected_Asset_Location == null) {\r\n    setAsset_Location = \"\";\r\n  } else {\r\n    Asset_Location = selected_Asset_Location.label.split(\":\");\r\n    setAsset_Location = Asset_Location[0];\r\n  //  console.log(\"Asset_Location \", setAsset_Location);\r\n  }\r\n\r\n //Select Asset Level\r\n let Asset_Level, setAsset_Level;\r\n if (selected_Asset_Level === \"\" || selected_Asset_Level === null) {\r\n   setAsset_Level = \"\";\r\n } else {\r\n   Asset_Level = selected_Asset_Level.label.split(\":\");\r\n   setAsset_Level = Asset_Level[0];\r\n //  console.log(\"Asset_Level \", Asset_Level[0])\r\n }\r\n\r\n //Select Asset Work Group\r\n let Asset_WorkGroup, setAsset_WorkGroup;\r\n if (selected_Work_Group === \"\" || selected_Work_Group === null) {\r\n  setAsset_WorkGroup = \"\";\r\n } else {\r\n  Asset_WorkGroup = selected_Work_Group.label.split(\":\");\r\n   setAsset_WorkGroup = Asset_WorkGroup[0];\r\n  // console.log(\"Asset_WorkGroup \", Asset_WorkGroup[0])\r\n }\r\n\r\n//Select Labor Account\r\nlet LaborAccountValue;\r\nif (\r\n  selected_Labor_Account.length === 0 ||\r\n  selected_Labor_Account[0] === null\r\n) {\r\n  LaborAccountValue = \"\";\r\n} else {\r\n  const LaborAccount = selected_Labor_Account.label.split(\":\");\r\n  LaborAccountValue = LaborAccount[0];\r\n}\r\n\r\n//Select Material Account\r\nlet MaterialAccountValue;\r\nif (\r\n  \r\n  selected_Material_Account.length === 0 ||\r\n  selected_Material_Account[0] === null\r\n) {\r\n  MaterialAccountValue = \"\";\r\n} else {\r\n  const MaterialAccount = selected_Material_Account.label.split(\":\");\r\n  MaterialAccountValue = MaterialAccount[0];\r\n}\r\n\r\n//Select Contract Account\r\nlet ContractAccountValue;\r\nif (\r\n  \r\n  selected_Contract_Account.length === 0 ||\r\n  selected_Contract_Account[0] === null\r\n) {\r\n  ContractAccountValue = \"\";\r\n} else {\r\n  const ContractAccount = selected_Contract_Account.label.split(\":\");\r\n  ContractAccountValue = ContractAccount[0];\r\n}\r\n\r\n  //Select Customer Code\r\n  let CustomerCodeValue;\r\n  if (\r\n    selected_Customer_Code.length === 0 ||\r\n    selected_Customer_Code[0] === null\r\n  ) {\r\n    CustomerCodeValue = \"\";\r\n  } else {\r\n    const CustomerCode = selected_Customer_Code.label.split(\":\");\r\n    CustomerCodeValue = CustomerCode[0].trim();\r\n  }\r\n\r\n  //Select Purchase Date\r\n  let date_of_purchase = \"\";\r\n  if (PurchaseDate == \"\" || PurchaseDate == null) {\r\n    date_of_purchase = \"\";\r\n  } else {\r\n    date_of_purchase = Moment(PurchaseDate)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //  console.log(\"purchase_date \", date_of_purchase);\r\n  }\r\n\r\n  //Select Warranty Date\r\n  let date_of_Warranty = \"\";\r\n  if (WarrantyDate == \"\" || WarrantyDate == null) {\r\n    date_of_purchase = \"\";\r\n  } else {\r\n    date_of_Warranty = Moment(WarrantyDate)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n  //    console.log(\"Warranty__date \", date_of_Warranty);\r\n  }\r\n\r\n  // select UDFDate_1 \r\n  let date_of_1 = \"\";\r\n  if (UDFDate_1 == \"\" || UDFDate_1 == null) {\r\n    date_of_1 = \"\";\r\n  } else {\r\n    date_of_1 = Moment(UDFDate_1)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_1 \", date_of_1);\r\n  }\r\n\r\n  // select UDFDate_2 \r\n  let date_of_2 = \"\";\r\n  if (UDFDate_2 == \"\" || UDFDate_2 == null) {\r\n    date_of_2 = \"\";\r\n  } else {\r\n    date_of_2 = Moment(UDFDate_2)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n      //console.log(\"UDFDate_2 \", date_of_2);\r\n  }\r\n\r\n  // select UDFDate_3 \r\n  let date_of_3 = \"\";\r\n  if (UDFDate_3 == \"\" || UDFDate_3 == null) {\r\n    date_of_3 = \"\";\r\n  } else {\r\n    date_of_3 = Moment(UDFDate_3)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_3 \", date_of_3);\r\n  }\r\n\r\n  // select UDFDate_4 \r\n  let date_of_4 = \"\";\r\n  if (UDFDate_4 == \"\" || UDFDate_4 == null) {\r\n    date_of_4 = \"\";\r\n  } else {\r\n    date_of_4 = Moment(UDFDate_4)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_4 \", date_of_4);\r\n  }\r\n\r\n  // select UDFDate_5 \r\n  let date_of_5 = \"\";\r\n  if (UDFDate_5 == \"\" || UDFDate_5 == null) {\r\n    date_of_5 = \"\";\r\n  } else {\r\n    date_of_5 = Moment(UDFDate_5)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_5 \", date_of_5);\r\n  }\r\n\r\n  // select UDFDate_6 \r\n  let date_of_6 = \"\";\r\n  if (UDFDate_6 == \"\" || UDFDate_6 == null) {\r\n    date_of_6 = \"\";\r\n  } else {\r\n    date_of_6 = Moment(UDFDate_6)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_6 \", date_of_6);\r\n  }\r\n\r\n  // select UDFDate_7 \r\n  let date_of_7 = \"\";\r\n  if (UDFDate_7 == \"\" || UDFDate_7 == null) {\r\n    date_of_7 = \"\";\r\n  } else {\r\n    date_of_7 = Moment(UDFDate_7)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_7 \", date_of_7);\r\n  }\r\n\r\n  // select UDFDate_8 \r\n  let date_of_8 = \"\";\r\n  if (UDFDate_8 == \"\" || UDFDate_8 == null) {\r\n    date_of_8 = \"\";\r\n  } else {\r\n    date_of_8 = Moment(UDFDate_8)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_8 \", date_of_8);\r\n  }\r\n\r\n  // select UDFDate_9 \r\n  let date_of_9 = \"\";\r\n  if (UDFDate_9 == \"\" || UDFDate_9 == null) {\r\n    date_of_9 = \"\";\r\n  } else {\r\n    date_of_9 = Moment(UDFDate_9)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_9 \", date_of_9);\r\n  }\r\n\r\n  // select UDFDate_10 \r\n  let date_of_10 = \"\";\r\n  if (UDFDate_10 == \"\" || UDFDate_10 == null) {\r\n    date_of_10 = \"\";\r\n  } else {\r\n    date_of_10 = Moment(UDFDate_10)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n  //    console.log(\"UDFDate_10 \", date_of_10);\r\n  }\r\n\r\n  // select UDFDate_11 \r\n  let date_of_11 = \"\";\r\n  if (UDFDate_11 == \"\" || UDFDate_11 == null) {\r\n    date_of_11 = \"\";\r\n  } else {\r\n    date_of_11 = Moment(UDFDate_11)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_11 \", date_of_11);\r\n  }\r\n\r\n  // select UDFDate_12 \r\n  let date_of_12 = \"\";\r\n  if (UDFDate_12 == \"\" || UDFDate_12 == null) {\r\n    date_of_12 = \"\";\r\n  } else {\r\n    date_of_12 = Moment(UDFDate_12)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_12 \", date_of_12);\r\n  }\r\n\r\n  // select UDFDate_13 \r\n  let date_of_13 = \"\";\r\n  if (UDFDate_13 == \"\" || UDFDate_13 == null) {\r\n    date_of_13 = \"\";\r\n  } else {\r\n    date_of_13 = Moment(UDFDate_13)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_13 \", date_of_13);\r\n  }\r\n\r\n  // select UDFDate_14 \r\n  let date_of_14 = \"\";\r\n  if (UDFDate_14 == \"\" || UDFDate_14 == null) {\r\n    date_of_14 = \"\";\r\n  } else {\r\n    date_of_14 = Moment(UDFDate_14)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_14 \", date_of_14);\r\n  }\r\n\r\n  // select UDFDate_15 \r\n  let date_of_15 = \"\";\r\n  if (UDFDate_15 == \"\" || UDFDate_15 == null) {\r\n    date_of_15 = \"\";\r\n  } else {\r\n    date_of_15 = Moment(UDFDate_15)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_15 \", date_of_15);\r\n  }\r\n\r\n\r\n    var json_AssetInsert = {\r\n      site_cd: site_ID,\r\n      ast_mst_asset_no: AssetNo.trim(),\r\n      ast_mst_asset_status: setStatus.trim(),\r\n      ast_mst_asset_shortdesc: Short_Description.trim(),\r\n      ast_mst_cri_factor: setAsset_Critical.trim(),\r\n      ast_mst_asset_longdesc: Long_Description.trim(),\r\n      ast_mst_perm_id: Area_ID.trim(),\r\n      ast_mst_asset_type: setAsset_Type.trim(),\r\n      ast_mst_work_area: setAsset_WorkArea.trim(),\r\n      ast_mst_asset_code: setAsset_Code.trim(),\r\n      ast_mst_asset_locn: setAsset_Location.trim(),\r\n      ast_mst_asset_grpcode: setAsset_GroupCode.trim(),\r\n      ast_mst_ast_lvl: setAsset_Level.trim(),\r\n      ast_mst_cost_center: setAsset_CostCenter.trim(),\r\n      ast_mst_wrk_grp: setAsset_WorkGroup.trim(),\r\n      ast_mst_parent_flag: setPermanentIDFlag.trim(),\r\n      ast_mst_parent_id: Permanent_ID.trim(),\r\n      ast_mst_safety_rqmts: SafetyRequirement.trim(),\r\n      ast_mst_print_count: BarcodeCount.trim(),\r\n      ast_det_mfg_cd: ManufactureCode.trim(),\r\n      ast_det_modelno: \"\",\r\n      ast_det_purchase_date: date_of_purchase,\r\n      ast_det_repl_cost: \"\",\r\n      ast_det_warranty_date: date_of_Warranty,\r\n      ast_det_depr_term: ExpectedLifeYear && typeof ExpectedLifeYear === 'string' ? ExpectedLifeYear.trim() : ExpectedLifeYear,\r\n      ast_det_cus_code: CustomerCode.trim(),\r\n      ast_det_depr_method: \"\",\r\n      ast_det_depr_date: \"\",\r\n      ast_det_depr_by: \"\",\r\n      ast_det_acc_depr_cost: \"\",\r\n      ast_det_net_book_value: \"\",\r\n      ast_det_dispose_date: \"\",\r\n      ast_det_dispose_by: \"\",\r\n      ast_det_dispose_type: \"\",\r\n      ast_det_dispose_value: \"\",\r\n\r\n      ast_det_varchar1: UDFText_1.trim(),\r\n      ast_det_varchar2: UDFText_2.trim(),\r\n      ast_det_varchar3: UDFText_3.trim(),\r\n      ast_det_varchar4: UDFText_4.trim(),\r\n      ast_det_varchar5: UDFText_5.trim(),\r\n      ast_det_varchar6: UDFText_6.trim(),\r\n      ast_det_varchar7: UDFText_7.trim(),\r\n      ast_det_varchar8: UDFText_8.trim(),\r\n      ast_det_varchar9: UDFText_9.trim(),\r\n      ast_det_varchar10: UDFText_10.trim(),\r\n      ast_det_varchar11: UDFText_11.trim(),\r\n      ast_det_varchar12: UDFText_12.trim(),\r\n      ast_det_varchar13: UDFText_13.trim(),\r\n      ast_det_varchar14: UDFText_14.trim(),\r\n      ast_det_varchar15: UDFText_15.trim(),\r\n      ast_det_varchar16: UDFText_16.trim(),\r\n      ast_det_varchar17: UDFText_17.trim(),\r\n      ast_det_varchar18: UDFText_18.trim(),\r\n      ast_det_varchar19: UDFText_19.trim(),\r\n      ast_det_varchar20: UDFText_20.trim(),\r\n      ast_det_varchar21: UDFText_21.trim(),\r\n      ast_det_varchar22: UDFText_22.trim(),\r\n      ast_det_varchar23: UDFText_23.trim(),\r\n      ast_det_varchar24: UDFText_24.trim(),\r\n      ast_det_varchar25: UDFText_25.trim(),\r\n      ast_det_varchar26: UDFText_26.trim(),\r\n      ast_det_varchar27: UDFText_27.trim(),\r\n      ast_det_varchar28: UDFText_28.trim(),\r\n      ast_det_varchar29: UDFText_29.trim(),\r\n      ast_det_varchar30: UDFText_30.trim(),\r\n\r\n      ast_det_numeric1: \"0.00\",\r\n      ast_det_numeric2: \"0.00\",\r\n      ast_det_numeric3: \"0.00\",\r\n      ast_det_numeric4: \"0.00\",\r\n      ast_det_numeric5: \"0.00\",\r\n      ast_det_numeric6: \"0.00\",\r\n      ast_det_numeric7: \"0.00\",\r\n      ast_det_numeric8: \"0.00\",\r\n      ast_det_numeric9: \"0.00\",\r\n      ast_det_numeric10: \"0.00\",\r\n      ast_det_numeric11: \"0.00\",\r\n      ast_det_numeric12: \"0.00\",\r\n      ast_det_numeric13: \"0.00\",\r\n      ast_det_numeric14: \"0.00\",\r\n      ast_det_numeric15: \"0.00\",\r\n\r\n      ast_det_datetime1: date_of_1,\r\n      ast_det_datetime2: date_of_2,\r\n      ast_det_datetime3: date_of_3,\r\n      ast_det_datetime4: date_of_4,\r\n      ast_det_datetime5: date_of_5,\r\n      ast_det_datetime6: date_of_6,\r\n      ast_det_datetime7: date_of_7,\r\n      ast_det_datetime8: date_of_8,\r\n      ast_det_datetime9: date_of_9,\r\n      ast_det_datetime10: date_of_10,\r\n      ast_det_datetime11: date_of_11,\r\n      ast_det_datetime12: date_of_12,\r\n      ast_det_datetime13: date_of_13,\r\n      ast_det_datetime14: date_of_14,\r\n      ast_det_datetime15: date_of_15,\r\n\r\n      asset_type_ID: AutoNumring.trim(),\r\n      ImgUpload: imageSelect,\r\n      audit_user: emp_mst_login_id.trim(),\r\n      ast_mst_create_by: emp_mst_login_id.trim(),\r\n      ast_aud_originator: emp_mst_empl_id.trim(),\r\n    };\r\n\r\n   // console.log(\"json_asset_insert\", json_AssetInsert);\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_new_asset2.php\",\r\n        JSON.stringify(json_AssetInsert)\r\n      );\r\n      console.log(\"json_Asset Data\", response);\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        console.log(\"responseJson\", response.data.ROW_ID);\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: response.data.status,\r\n          text: response.data.message,\r\n        }).then(() => {\r\n          navigate(`/dashboard/asset/list`);\r\n        });\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_WorkOrder_select...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const Update_Asset = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n\r\n    let get_date = Moment().utcOffset(\"+08:00\").format(\"yyyy-MM-DD HH:mm:ss\");\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    //Select Status\r\n    let Status, setStatus;\r\n    if (selected_Status.label == \"\" || selected_Status.label == null) {\r\n      setStatus = \"\";\r\n    } else {\r\n      Status = selected_Status.label.split(\":\");\r\n      setStatus = Status[0];\r\n     // console.log(\"Status: \", Status[0])\r\n    }\r\n    //CustomerCode Permanent_IDFlag\r\n    let PermanentIDFlag , setPermanentIDFlag;\r\n    if (Permanent_IDFlag === \"\" || Permanent_IDFlag === null) {\r\n      setPermanentIDFlag = \"\";\r\n    } else {\r\n      PermanentIDFlag = Permanent_IDFlag.split(\":\");\r\n      setPermanentIDFlag = PermanentIDFlag[0].trim();\r\n    //  console.log(\"PermanentIDFlag: \", setPermanentIDFlag)\r\n    }\r\n\r\n    //Select Asset_Critical \r\n    let Asset_Critical, setAsset_Critical;\r\n    if (selected_CriFactor == \"\" || selected_CriFactor == null) {\r\n      setAsset_Critical = \"\";\r\n    } else {\r\n      Asset_Critical = selected_CriFactor.label.split(\":\");\r\n      setAsset_Critical = Asset_Critical[0];\r\n    //  console.log(\"Asset_Critical \", setAsset_Critical)\r\n    }\r\n\r\n    //Select Asset Type \r\n    let Asset_Type, setAsset_Type;\r\n    if (selected_AssetType == \"\" || selected_AssetType == null) {\r\n      setAsset_Type = \"\";\r\n    } else {\r\n      Asset_Type = selected_AssetType.label.split(\":\");\r\n      setAsset_Type = Asset_Type[0];\r\n     // console.log(\"Asset_Critical \", setAsset_Type)\r\n    }\r\n\r\n    //Select Asset Code \r\n    let Asset_Code, setAsset_Code;\r\n    if (selected_AssetCode == \"\" || selected_AssetCode == null) {\r\n      setAsset_Code = \"\";\r\n    } else {\r\n      Asset_Code = selected_AssetCode.label.split(\":\");\r\n      setAsset_Code = Asset_Code[0];\r\n    //  console.log(\"Asset_Code \", setAsset_Code);\r\n    }\r\n\r\n    //Select Asset Group Code \r\n    let Asset_GroupCode, setAsset_GroupCode;\r\n    if (selected_AssetGroupCode == \"\" || selected_AssetGroupCode == null) {\r\n      setAsset_GroupCode = \"\";\r\n    } else {\r\n      Asset_GroupCode = selected_AssetGroupCode.label.split(\":\");\r\n      setAsset_GroupCode = Asset_GroupCode[0];\r\n   //   console.log(\"Asset_GroupCode \", setAsset_GroupCode);\r\n    }\r\n\r\n    //Select Cost Center \r\n    let Asset_CostCenter, setAsset_CostCenter;\r\n    if (selected_Charge_Cost_Center == \"\" || selected_Charge_Cost_Center == null) {\r\n      setAsset_CostCenter = \"\";\r\n    } else {\r\n      Asset_CostCenter = selected_Charge_Cost_Center.label.split(\":\");\r\n      setAsset_CostCenter = Asset_CostCenter[0];\r\n   //   console.log(\"Asset_CostCenter \", setAsset_CostCenter);\r\n    }\r\n\r\n    //Select Zone \r\n    let Asset_WorkArea, setAsset_WorkArea;\r\n    if (selected_Work_Area == \"\" || selected_Work_Area == null) {\r\n      setAsset_WorkArea = \"\";\r\n    } else {\r\n      Asset_WorkArea = selected_Work_Area.label.split(\":\");\r\n      setAsset_WorkArea = Asset_WorkArea[0];\r\n   //   console.log(\"Asset_WorkArea \", setAsset_WorkArea);\r\n    }\r\n\r\n  //Select Asset Location \r\n  let Asset_Location, setAsset_Location;\r\n  if (selected_Asset_Location == \"\" || selected_Asset_Location == null) {\r\n    setAsset_Location = \"\";\r\n  } else {\r\n    Asset_Location = selected_Asset_Location.label.split(\":\");\r\n    setAsset_Location = Asset_Location[0];\r\n  //  console.log(\"Asset_Location \", setAsset_Location);\r\n  }\r\n\r\n //Select Asset Level\r\n let Asset_Level, setAsset_Level;\r\n if (selected_Asset_Level === \"\" || selected_Asset_Level === null) {\r\n   setAsset_Level = \"\";\r\n } else {\r\n   Asset_Level = selected_Asset_Level.label.split(\":\");\r\n   setAsset_Level = Asset_Level[0];\r\n //  console.log(\"Asset_Level \", Asset_Level[0])\r\n }\r\n\r\n //Select Asset Work Group\r\n let Asset_WorkGroup, setAsset_WorkGroup;\r\n if (selected_Work_Group === \"\" || selected_Work_Group === null) {\r\n  setAsset_WorkGroup = \"\";\r\n } else {\r\n  Asset_WorkGroup = selected_Work_Group.label.split(\":\");\r\n   setAsset_WorkGroup = Asset_WorkGroup[0];\r\n  // console.log(\"Asset_WorkGroup \", Asset_WorkGroup[0])\r\n }\r\n\r\n//Select Labor Account\r\n//console.log(\"selected_Labor_Account____\",selected_Labor_Account);\r\nlet LaborAccountValue;\r\nif (\r\n  selected_Labor_Account.label === \"\" ||\r\n  selected_Labor_Account.label === null\r\n) {\r\n  LaborAccountValue = \"\";\r\n} else {\r\n  const LaborAccount = selected_Labor_Account.label.split(\":\");\r\n  LaborAccountValue = LaborAccount[0];\r\n}\r\n\r\n//Select Material Account\r\nlet MaterialAccountValue;\r\nif (\r\n  \r\n  selected_Material_Account.label === \"\" ||\r\n  selected_Material_Account.label === null\r\n) {\r\n  MaterialAccountValue = \"\";\r\n} else {\r\n  const MaterialAccount = selected_Material_Account.label.split(\":\");\r\n  MaterialAccountValue = MaterialAccount[0];\r\n}\r\n\r\n//Select Contract Account\r\nlet ContractAccountValue;\r\nif (\r\n  \r\n  selected_Contract_Account.label === \"\" ||\r\n  selected_Contract_Account.label === null\r\n) {\r\n  ContractAccountValue = \"\";\r\n} else {\r\n  const ContractAccount = selected_Contract_Account.label.split(\":\");\r\n  ContractAccountValue = ContractAccount[0];\r\n}\r\n\r\n  //Select Customer Code\r\n  let CustomerCodeValue;\r\n  if (\r\n    selected_Customer_Code.length === 0 ||\r\n    selected_Customer_Code[0] === null\r\n  ) {\r\n    CustomerCodeValue = \"\";\r\n  } else {\r\n    const CustomerCode = selected_Customer_Code.label.split(\":\");\r\n    CustomerCodeValue = CustomerCode[0].trim();\r\n  }\r\n\r\n  //Select Purchase Date\r\n  let date_of_purchase = \"\";\r\n  if (PurchaseDate == \"\" || PurchaseDate == null) {\r\n    date_of_purchase = \"\";\r\n  } else {\r\n    date_of_purchase = Moment(PurchaseDate)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //  console.log(\"purchase_date \", date_of_purchase);\r\n  }\r\n\r\n  //Select Warranty Date\r\n  let date_of_Warranty = \"\";\r\n  if (WarrantyDate == \"\" || WarrantyDate == null) {\r\n    date_of_purchase = \"\";\r\n  } else {\r\n    date_of_Warranty = Moment(WarrantyDate)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n  //    console.log(\"Warranty__date \", date_of_Warranty);\r\n  }\r\n\r\n  // select UDFDate_1 \r\n  let date_of_1 = \"\";\r\n  if (UDFDate_1 == \"\" || UDFDate_1 == null) {\r\n    date_of_1 = \"\";\r\n  } else {\r\n    date_of_1 = Moment(UDFDate_1)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_1 \", date_of_1);\r\n  }\r\n\r\n  // select UDFDate_2 \r\n  let date_of_2 = \"\";\r\n  if (UDFDate_2 == \"\" || UDFDate_2 == null) {\r\n    date_of_2 = \"\";\r\n  } else {\r\n    date_of_2 = Moment(UDFDate_2)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n      //console.log(\"UDFDate_2 \", date_of_2);\r\n  }\r\n\r\n  // select UDFDate_3 \r\n  let date_of_3 = \"\";\r\n  if (UDFDate_3 == \"\" || UDFDate_3 == null) {\r\n    date_of_3 = \"\";\r\n  } else {\r\n    date_of_3 = Moment(UDFDate_3)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_3 \", date_of_3);\r\n  }\r\n\r\n  // select UDFDate_4 \r\n  let date_of_4 = \"\";\r\n  if (UDFDate_4 == \"\" || UDFDate_4 == null) {\r\n    date_of_4 = \"\";\r\n  } else {\r\n    date_of_4 = Moment(UDFDate_4)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_4 \", date_of_4);\r\n  }\r\n\r\n  // select UDFDate_5 \r\n  let date_of_5 = \"\";\r\n  if (UDFDate_5 == \"\" || UDFDate_5 == null) {\r\n    date_of_5 = \"\";\r\n  } else {\r\n    date_of_5 = Moment(UDFDate_5)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_5 \", date_of_5);\r\n  }\r\n\r\n  // select UDFDate_6 \r\n  let date_of_6 = \"\";\r\n  if (UDFDate_6 == \"\" || UDFDate_6 == null) {\r\n    date_of_6 = \"\";\r\n  } else {\r\n    date_of_6 = Moment(UDFDate_6)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n   //   console.log(\"UDFDate_6 \", date_of_6);\r\n  }\r\n\r\n  // select UDFDate_7 \r\n  let date_of_7 = \"\";\r\n  if (UDFDate_7 == \"\" || UDFDate_7 == null) {\r\n    date_of_7 = \"\";\r\n  } else {\r\n    date_of_7 = Moment(UDFDate_7)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_7 \", date_of_7);\r\n  }\r\n\r\n  // select UDFDate_8 \r\n  let date_of_8 = \"\";\r\n  if (UDFDate_8 == \"\" || UDFDate_8 == null) {\r\n    date_of_8 = \"\";\r\n  } else {\r\n    date_of_8 = Moment(UDFDate_8)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_8 \", date_of_8);\r\n  }\r\n\r\n  // select UDFDate_9 \r\n  let date_of_9 = \"\";\r\n  if (UDFDate_9 == \"\" || UDFDate_9 == null) {\r\n    date_of_9 = \"\";\r\n  } else {\r\n    date_of_9 = Moment(UDFDate_9)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_9 \", date_of_9);\r\n  }\r\n\r\n  // select UDFDate_10 \r\n  let date_of_10 = \"\";\r\n  if (UDFDate_10 == \"\" || UDFDate_10 == null) {\r\n    date_of_10 = \"\";\r\n  } else {\r\n    date_of_10 = Moment(UDFDate_10)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n  //    console.log(\"UDFDate_10 \", date_of_10);\r\n  }\r\n\r\n  // select UDFDate_11 \r\n  let date_of_11 = \"\";\r\n  if (UDFDate_11 == \"\" || UDFDate_11 == null) {\r\n    date_of_11 = \"\";\r\n  } else {\r\n    date_of_11 = Moment(UDFDate_11)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_11 \", date_of_11);\r\n  }\r\n\r\n  // select UDFDate_12 \r\n  let date_of_12 = \"\";\r\n  if (UDFDate_12 == \"\" || UDFDate_12 == null) {\r\n    date_of_12 = \"\";\r\n  } else {\r\n    date_of_12 = Moment(UDFDate_12)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_12 \", date_of_12);\r\n  }\r\n\r\n  // select UDFDate_13 \r\n  let date_of_13 = \"\";\r\n  if (UDFDate_13 == \"\" || UDFDate_13 == null) {\r\n    date_of_13 = \"\";\r\n  } else {\r\n    date_of_13 = Moment(UDFDate_13)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_13 \", date_of_13);\r\n  }\r\n\r\n  // select UDFDate_14 \r\n  let date_of_14 = \"\";\r\n  if (UDFDate_14 == \"\" || UDFDate_14 == null) {\r\n    date_of_14 = \"\";\r\n  } else {\r\n    date_of_14 = Moment(UDFDate_14)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n    //  console.log(\"UDFDate_14 \", date_of_14);\r\n  }\r\n\r\n  // select UDFDate_15 \r\n  let date_of_15 = \"\";\r\n  if (UDFDate_15 == \"\" || UDFDate_15 == null) {\r\n    date_of_15 = \"\";\r\n  } else {\r\n    date_of_15 = Moment(UDFDate_15)\r\n      .format(\"yyyy-MM-DD HH:mm:ss\")\r\n      .trim();\r\n     // console.log(\"UDFDate_15 \", date_of_15);\r\n  }\r\n  //Check Img state\r\n  let setDbImgRowIdUpdate;\r\n  if (getDbImgRowId == \"\" || getDbImgRowId == null) {\r\n    setDbImgRowIdUpdate = \"\";\r\n  } else {\r\n    setDbImgRowIdUpdate = getDbImgRowId;\r\n  }\r\n\r\n    var json_AssetUpdate = {\r\n      site_cd: site_ID,\r\n      ast_mst_asset_no: AssetNo.trim(),\r\n      ast_mst_asset_status: setStatus.trim(),\r\n      ast_mst_asset_shortdesc: Short_Description ? Short_Description.trim() : Short_Description,\r\n      ast_mst_cri_factor: setAsset_Critical.trim(),\r\n      ast_mst_asset_longdesc:Long_Description ? Long_Description.trim() : Long_Description,\r\n      ast_mst_perm_id: Area_ID ? Area_ID.trim() : Area_ID,\r\n      ast_mst_asset_type: setAsset_Type.trim(),\r\n      ast_mst_work_area: setAsset_WorkArea.trim(),\r\n      ast_mst_asset_code: setAsset_Code.trim(),\r\n      ast_mst_asset_locn: setAsset_Location.trim(),\r\n      ast_mst_asset_grpcode: setAsset_GroupCode.trim(),\r\n      ast_mst_ast_lvl: setAsset_Level.trim(),\r\n      ast_mst_cost_center: setAsset_CostCenter.trim(),\r\n      ast_mst_wrk_grp: setAsset_WorkGroup.trim(),\r\n      ast_mst_parent_flag: setPermanentIDFlag.trim(),\r\n      ast_mst_parent_id: Permanent_ID ? Permanent_ID.trim() : Permanent_ID,\r\n      ast_mst_safety_rqmts: SafetyRequirement ? SafetyRequirement.trim() : SafetyRequirement,\r\n      ast_mst_print_count: BarcodeCount ? BarcodeCount.trim() : BarcodeCount,\r\n      ast_det_mfg_cd: ManufactureCode ? ManufactureCode.trim() : ManufactureCode,\r\n      ast_det_modelno: \"\",\r\n      ast_det_purchase_date: date_of_purchase,\r\n      ast_det_repl_cost: ResidualValue ? ResidualValue.trim() : \"0\",\r\n      ast_det_warranty_date: date_of_Warranty,\r\n      ast_det_depr_term: ExpectedLifeYear && typeof ExpectedLifeYear === 'string' ? ExpectedLifeYear.trim() : ExpectedLifeYear,\r\n      ast_det_cus_code: CustomerCode ? CustomerCode.trim() : CustomerCode,\r\n      ast_det_depr_method: \"\",\r\n      ast_det_depr_date: \"\",\r\n      ast_det_depr_by: \"\",\r\n      ast_det_acc_depr_cost: \"\",\r\n      ast_det_net_book_value: \"\",\r\n      ast_det_dispose_date: \"\",\r\n      ast_det_dispose_by: \"\",\r\n      ast_det_dispose_type: \"\",\r\n      ast_det_dispose_value: \"\",\r\n\r\n      ast_det_varchar1: UDFText_1 ? UDFText_1.trim() : UDFText_1,\r\n      ast_det_varchar2: UDFText_2 ? UDFText_2.trim() : UDFText_2,\r\n      ast_det_varchar3: UDFText_3 ? UDFText_3.trim() : UDFText_3,\r\n      ast_det_varchar4: UDFText_4 ? UDFText_4.trim() : UDFText_4,\r\n      ast_det_varchar5: UDFText_5 ? UDFText_5.trim() : UDFText_5,\r\n      ast_det_varchar6: UDFText_6 ? UDFText_6.trim() : UDFText_6,\r\n      ast_det_varchar7: UDFText_7 ? UDFText_7.trim() : UDFText_7,\r\n      ast_det_varchar8: UDFText_8 ? UDFText_8.trim() : UDFText_8,\r\n      ast_det_varchar9: UDFText_9 ? UDFText_9.trim() : UDFText_9,\r\n      ast_det_varchar10: UDFText_10 ? UDFText_10.trim() : UDFText_10,\r\n      ast_det_varchar11: UDFText_11 ? UDFText_11.trim() : UDFText_11,\r\n      ast_det_varchar12: UDFText_12 ? UDFText_12.trim() : UDFText_12,\r\n      ast_det_varchar13: UDFText_13 ? UDFText_13.trim() : UDFText_13,\r\n      ast_det_varchar14: UDFText_14 ? UDFText_14.trim() : UDFText_14,\r\n      ast_det_varchar15: UDFText_15 ? UDFText_15.trim() : UDFText_15,\r\n      ast_det_varchar16: UDFText_16 ? UDFText_16.trim() : UDFText_16,\r\n      ast_det_varchar17: UDFText_17 ? UDFText_17.trim() : UDFText_17,\r\n      ast_det_varchar18: UDFText_18 ? UDFText_18.trim() : UDFText_18,\r\n      ast_det_varchar19: UDFText_19 ? UDFText_19.trim() : UDFText_19,\r\n      ast_det_varchar20: UDFText_20 ? UDFText_20.trim() : UDFText_20,\r\n      ast_det_varchar21: UDFText_21 ? UDFText_21.trim() : UDFText_21,\r\n      ast_det_varchar22: UDFText_22 ? UDFText_22.trim() : UDFText_22,\r\n      ast_det_varchar23: UDFText_23 ? UDFText_23.trim() : UDFText_23,\r\n      ast_det_varchar24: UDFText_24 ? UDFText_24.trim() : UDFText_24,\r\n      ast_det_varchar25: UDFText_25 ? UDFText_25.trim() : UDFText_25,\r\n      ast_det_varchar26: UDFText_26 ? UDFText_26.trim() : UDFText_26,\r\n      ast_det_varchar27: UDFText_27 ? UDFText_27.trim() : UDFText_27,\r\n      ast_det_varchar28: UDFText_28 ? UDFText_28.trim() : UDFText_28,\r\n      ast_det_varchar29: UDFText_29 ? UDFText_29.trim() : UDFText_29,\r\n      ast_det_varchar30: UDFText_30 ? UDFText_30.trim() : UDFText_30,\r\n\r\n      ast_det_numeric1: \"0.00\",\r\n      ast_det_numeric2: \"0.00\",\r\n      ast_det_numeric3: \"0.00\",\r\n      ast_det_numeric4: \"0.00\",\r\n      ast_det_numeric5: \"0.00\",\r\n      ast_det_numeric6: \"0.00\",\r\n      ast_det_numeric7: \"0.00\",\r\n      ast_det_numeric8: \"0.00\",\r\n      ast_det_numeric9: \"0.00\",\r\n      ast_det_numeric10: \"0.00\",\r\n      ast_det_numeric11: \"0.00\",\r\n      ast_det_numeric12: \"0.00\",\r\n      ast_det_numeric13: \"0.00\",\r\n      ast_det_numeric14: \"0.00\",\r\n      ast_det_numeric15: \"0.00\",\r\n\r\n      ast_det_datetime1: date_of_1,\r\n      ast_det_datetime2: date_of_2,\r\n      ast_det_datetime3: date_of_3,\r\n      ast_det_datetime4: date_of_4,\r\n      ast_det_datetime5: date_of_5,\r\n      ast_det_datetime6: date_of_6,\r\n      ast_det_datetime7: date_of_7,\r\n      ast_det_datetime8: date_of_8,\r\n      ast_det_datetime9: date_of_9,\r\n      ast_det_datetime10: date_of_10,\r\n      ast_det_datetime11: date_of_11,\r\n      ast_det_datetime12: date_of_12,\r\n      ast_det_datetime13: date_of_13,\r\n      ast_det_datetime14: date_of_14,\r\n      ast_det_datetime15: date_of_15,\r\n\r\n      asset_type_ID: AutoNumring.trim(),\r\n\r\n      audit_user: emp_mst_login_id.trim(),\r\n      ast_mst_create_by: emp_mst_login_id.trim(),\r\n      ast_aud_originator: emp_mst_empl_id.trim(),\r\n      ast_mst_create_date: get_date,\r\n\r\n      ImgGetDbImgRowId: setDbImgRowIdUpdate,\r\n      ImgUpload: imageSelect,\r\n      SpecialOdrResult: SpecialOdrResult,\r\n\r\n      removedRefItems: removedRefItems,\r\n      RowID: RowID,\r\n    };\r\n  \r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/update_asset.php\",\r\n        JSON.stringify(json_AssetUpdate)\r\n      );\r\n     // console.log(\"response____update\",response);\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        if (selectedPdfFiles.length > 0) {\r\n          const formData = new FormData();\r\n          for (let i = 0; i < selectedPdfFiles.length; i++) {\r\n            formData.append(\"files[]\", selectedPdfFiles[i]);\r\n          }\r\n          formData.append(\"site_cd\", site_ID);\r\n          formData.append(\"RowID\", RowID);\r\n          formData.append(\"audit_user\", emp_mst_login_id.trim());\r\n        \r\n          try {\r\n          \r\n            const response = await httpCommon.post(\r\n              \"/AssetFormReferenceMultipalImgUpload.php\",\r\n              formData,\r\n              {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data' // Ensure proper content type\r\n                }\r\n            }\r\n            );\r\n          //  console.log(\"upload_mltipal____\",response);\r\n            if (response.data.status == \"SUCCESS\") {\r\n              Swal.close();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                customClass: {\r\n                  container: \"swalcontainercustom\",\r\n                },\r\n                title: response.data.status,\r\n                text: response.data.message,\r\n              }).then(() => {\r\n               // navigate(`/dashboard/work/order`);\r\n               navigate(`/dashboard/asset/list`, {\r\n                state: {\r\n                  currentPage,\r\n                  selectedOption,\r\n                },\r\n              });\r\n              });\r\n            }\r\n          } catch (error) {\r\n            console.log(\"error__\", error);\r\n            //Handle error  WorkOrderNo\r\n          }\r\n        } else {\r\n          Swal.close();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: response.data.status,\r\n            text: response.data.message,\r\n          }).then(() => {\r\n            if (response.data.status === \"SUCCESS\") {\r\n             // navigate(`/dashboard/work/order`);\r\n             navigate(`/dashboard/asset/list`, {\r\n              state: {\r\n                currentPage,\r\n                selectedOption,\r\n              },\r\n            });\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: \"Oops...\",\r\n          text: response.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        customClass: {\r\n          container: \"swalcontainercustom\",\r\n        },\r\n        title: \"Oops Data Not Updated...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Save button // update button click funcation\r\n  const onClickChange = (event) => {\r\n    event.preventDefault();\r\n    if (selected_Status == \"\" || selected_Status == null) {\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Status is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetStatusEmpty(true);\r\n    //  setIsAssetCriticalFactorEmpty(true);\r\n    }else if(selected_CriFactor == \"\" || selected_CriFactor == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Critical Factor is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetCriticalFactorEmpty(true);\r\n    }else if(Short_Description == \"\" || Short_Description == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Short Description is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetShortDescEmpty(true);\r\n    }else if(selected_AssetType == \"\" || selected_AssetType == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Asset Type is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetTypeEmpty(true);\r\n    }else if(selected_AssetCode == \"\" || selected_AssetCode == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Asset Code is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetCodeEmpty(true);\r\n    }else if(selected_AssetGroupCode == \"\" || selected_AssetGroupCode == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Asset Group Code is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetGroupCodeEmpty(true);\r\n     \r\n    }else if(selected_Work_Area == \"\" || selected_Work_Area == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Zone is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetWorkAreaEmpty(true);\r\n    }else if(selected_Asset_Location == \"\" || selected_Asset_Location == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Asset Location is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetLocation(true);\r\n    }else if(selected_Asset_Level == \"\" || selected_Asset_Level == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Leavel is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetLeavelEmpty(true);\r\n    }else if(selected_Charge_Cost_Center == \"\" || selected_Charge_Cost_Center == null){\r\n      MySwal.fire({\r\n        position: \"top\",\r\n        customClass: {\r\n          popup: \"top-center\",\r\n          container: \"swalcontainercustom erro\",\r\n        },\r\n        html: '<div style=\"display: block; color: #b71d18c7; font-size: 18px; font-weight: 600; line-height: 26px;\">Please fill the required field Cost Center is required </div>',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        backdrop: false,\r\n      });\r\n      setIsAssetCostCenterEmpty(true);\r\n      \r\n    } else {\r\n      if (Button_save === \"Save\") {\r\n        New_Asset();\r\n    \r\n      } else if (Button_save === \"Update\") {\r\n        Update_Asset();\r\n      }\r\n    }\r\n   \r\n  };\r\n\r\n  const onClickChangeComplete = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (selected_Status === \"\" || selected_Status === null) {\r\n      setIsFiledValueEmpty(true);\r\n    } else if (CorrectiveAction === \"\" || CorrectiveAction === null) {\r\n      setIsCorrectiveValueEmpty(true);\r\n    } else if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      setIsCauseCodeValueEmpty(true);\r\n    } else if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      setIsActionCodeValueEmpty(true);\r\n    } else {\r\n      if (Button_save === \"Completed\") {\r\n        console.log(\"Completed____btn\");\r\n       \r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickChangeClose = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (selected_Status === \"\" || selected_Status === null) {\r\n      setIsFiledValueEmpty(true);\r\n    } else if (CorrectiveAction === \"\" || CorrectiveAction === null) {\r\n      setIsCorrectiveValueEmpty(true);\r\n    } else if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      setIsCauseCodeValueEmpty(true);\r\n    } else if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      setIsActionCodeValueEmpty(true);\r\n    } else {\r\n      if (Button_save === \"Close Order\") {\r\n        console.log(\"close____btn\");\r\n       \r\n      }\r\n    }\r\n  };\r\n  const onClickCancel = () => {\r\n   \r\n   navigate(`/dashboard/PreventiveSetup/Maintenance`, {\r\n    state: {\r\n      currentPage,\r\n      selectedOption,\r\n    },\r\n  });\r\n  };\r\n\r\n  // Status Audit PopUp\r\n\r\n  const formatDuration = (duration) => {\r\n    // const seconds = Math.floor(duration % 60);\r\n    const minutes = Math.floor(duration % 60);\r\n    const hours = Math.floor((duration % 1440) / 60);\r\n    const days = Math.floor(duration / 1440);\r\n\r\n    if (days > 0) {\r\n      return `${days}d: ${hours}h: ${minutes}m`;\r\n    } else if (hours > 0) {\r\n      return `${hours}h: ${minutes}m`;\r\n    } else if (minutes > 0) {\r\n      return `${minutes}m`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n    // return `${days}d: ${hours}h: ${minutes}m`;\r\n  };\r\n  const getsteps = async () => {\r\n    // console.log(\"enter_getSteps___\");\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false , customClass: {\r\n      container: \"swalcontainercustom\",\r\n    }, });\r\n    Swal.showLoading();\r\n\r\n    try {\r\n\r\n      const responseJson = await httpCommon.get(\r\n        `/get_assetmaster_statusaudit.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n      // console.log(\"responseJson___audit\",responseJson);\r\n      if (responseJson.data.status === \"SUCCESS\") {\r\n        // console.log('get_workordermaster_statusaudit', responseJson.data.data)\r\n\r\n        let Status = responseJson.data.data.map((item, index) => ({\r\n          label: item.ast_sts_desc,\r\n          label1: item.ast_aud_status,\r\n          label2: item.emp_mst_name,\r\n          label3: item.audit_user,\r\n          label4: `${new Date(item.ast_aud_start_date.date).toLocaleString(\r\n            \"default\",\r\n            {\r\n              weekday: \"short\",\r\n              day: \"numeric\",\r\n              month: \"numeric\",\r\n              year: \"numeric\",\r\n              hour: \"numeric\",\r\n              minute: \"numeric\",\r\n              second: \"numeric\",\r\n            }\r\n          )}`,\r\n          label5: formatDuration(item.duration),\r\n          step: index + 1,\r\n        }));\r\n        setsteps(Status);\r\n\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: responseJson.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  const StatushandleShow = () => {\r\n    setStatusShow(true);\r\n    getsteps();\r\n  };\r\n\r\n  const handleImageChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        // const base64String = reader.result.split(',')[1];\r\n        const base64String2 = reader.result.split(\",\")[1];\r\n\r\n        const base64String = reader.result;\r\n\r\n        const fileName = file.name;\r\n        setImagePreview(base64String);\r\n        // Set the state with the base64 string and file name\r\n        setimageComment({\r\n          base64: base64String2,\r\n          fileName: fileName,\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmitCmmnt = async () => {\r\n    Swal.fire({ title: \"Loading.... !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_name = localStorage.getItem(\"emp_mst_name\");\r\n\r\n    const inputValue = messageRef.current.value;\r\n\r\n    const newComment = {\r\n      // Add other properties as needed\r\n      audit_user: emp_mst_login_id, // Replace with the actual user\r\n      audit_date: {\r\n        date: Moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        timezone_type: 3,\r\n        timezone: \"UTC\",\r\n      },\r\n      wko_ls11_sts_upd: inputValue,\r\n      attachment:\r\n        imageComment && imageComment.base64 ? imageComment.base64 : null,\r\n    };\r\n    setAllComment((prevComments) => [...prevComments, newComment]);\r\n\r\n    var json_workorder = {\r\n      site_cd: site_ID,\r\n      RowId: RowID,\r\n      commentMsg: inputValue,\r\n      Emp_name: emp_mst_name,\r\n      Emp_login_Name: emp_mst_login_id,\r\n      orderNo: WorkOrderNo,\r\n      ImgUpload: imageComment,\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_comment.php\",\r\n        JSON.stringify(json_workorder)\r\n      );\r\n      console.log(\"json_workordercommet Data\", response);\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        console.log(\"responseJson\", response.data.ROW_ID);\r\n        Swal.close();\r\n        //  setCommentShow(false);\r\n\r\n        if (messageRef.current) {\r\n          messageRef.current.value = \"\";\r\n        }\r\n        setImagePreview(\"\");\r\n        setimageComment(\"\");\r\n        scrollChatToBottom();\r\n\r\n      \r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_WorkOrder_select...\",\r\n        text: error,\r\n      });\r\n    }\r\n\r\n    imageComment(null);\r\n  };\r\n  const Refreshdatapopup = () => {\r\n  \r\n  };\r\n  const scrollChatToBottom = () => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop =\r\n        chatContainerRef.current.scrollHeight;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    scrollChatToBottom();\r\n  }, [AllCommnet]);\r\n  \r\n  const handleImageClick = (imageData) => {\r\n    setSelectedImageCommnt(imageData);\r\n  };\r\n  const handleImageClickSHow = () => {\r\n    setUploadImgShow(true);\r\n  };\r\n  const handleUploadCloseClick = () => {\r\n    setImagePreview(\"\");\r\n  };\r\n  const handleSelectedFaultCode = (selectedOption) => {\r\n    const newValue =\r\n      selectedOption && selectedOption.value ? selectedOption : null;\r\n   // setDescription(newValue ? newValue.value : null);\r\n  };\r\n\r\n  // OnChange to check error funcation\r\n  const handleStatusChange = (event, value) => {\r\n    setSelected_Status(value);\r\n    setIsAssetStatusEmpty(false);\r\n \r\n  };\r\n  const handleAssetStatusChange = (event, value) => {\r\n    setSelected_Asset_Status(value);\r\n    setIsAssetStatusEmpty(false);\r\n  };\r\n  const handlePlanPriorityChange = async (event, value) => {\r\n    const newValue = value === null ? null : value;\r\n    setSelected_Plan_Priority(newValue);\r\n    if (value && value.label) {\r\n      const labelParts = value.label.split(\":\");\r\n      const valueBeforeColon = labelParts[0].trim();\r\n\r\n      if (valueBeforeColon !== \"\") {\r\n        try {\r\n          const response = await httpCommon.get(\r\n            `GetDueDatePlanPriority.php?ID=${valueBeforeColon}&site_cd=${site_ID}`\r\n          );\r\n          if (response.data.status === \"SUCCESS\") {\r\n            const dueDateIncrement = response.data.data; // Assuming response.data.data contains the increment in milliseconds\r\n            if (!isNaN(dueDateIncrement)) {\r\n              //const dt = new Date();\r\n              const millisecondsToAdd = dueDateIncrement * 60 * 1000;\r\n              const newDate = new Date(\r\n                OriginationDate.getTime() + millisecondsToAdd\r\n              );\r\n              setDueDate(newDate);\r\n              Swal.close();\r\n              setLoading(false);\r\n            } else {\r\n              console.error(\"Invalid dueDateIncrement:\", response.data.data);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChargeCostChange = (event, value) => {\r\n    setSelected_Charge_Cost_Center(value);\r\n    setIsChargeCostEmpty(false);\r\n  };\r\n  const handleFaultCodeChange = (event, value) => {\r\n    const newValue = value === null ? null : value;\r\n\r\n    setSelected_Fault_Code(newValue);\r\n    handleSelectedFaultCode(newValue);\r\n    setIsFaultCodeEmpty(false);\r\n  };\r\n  const handleOriginalPeriorityChange = (event, value) => {\r\n    setSelected_Original_Periority(value);\r\n    setIsOriginalPeriorityEmpty(false);\r\n  };\r\n  const handleWorkTypeChange = (event, value) => {\r\n    setSelected_Work_Type(value);\r\n    setIsWorkTypeEmpty(false);\r\n  };\r\n  const handleWorkGroupChange = (event, value) => {\r\n    setSelected_Work_Group(value);\r\n    setIsWorkGroupEmpty(false);\r\n  };\r\n\r\n  const toggleDiv = () => {\r\n    setIsOpenWork(!isOpenWork);\r\n  };\r\n\r\n  const toggleDivAsset = () => {\r\n    setIsOpenAsset(!isOpenAsset);\r\n  };\r\n  const handleDataFromSecondComponent = (data) => {\r\n    console.log(\"data++++++++\", data);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleToggle = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n \r\n\r\n// New Funcation added 16-04-2024\r\nconst handleCheckboxChangeFlag = (event) => {\r\n    setIsCheckedFlag(event.target.checked); // Update the isChecked state based on the checked state of the checkbox\r\n  };\r\n  const handleCheckboxChangeLoop = (event) => {\r\n    setIsCheckedLoop(event.target.checked); // Update the isChecked state based on the checked state of the checkbox\r\n  };\r\n  const handleCheckboxChangePmDate = (event) => {\r\n    setIsCheckedPmDate(event.target.checked); // Update the isChecked state based on the checked state of the checkbox\r\n  };\r\n\r\n  // onclick funcation \r\n  const handleClickOriginator = async () => {\r\n    console.log(\"hhhhh____\");\r\n    try {\r\n        console.log(\"enter if contion____\");\r\n        const response = await httpCommon.get(\r\n            \"/get_asset_dropdownlist.php?site_cd=\" + site_ID + \"&type=Originator\"\r\n        );\r\n\r\n        console.log(\"response____get3333\",response);\r\n  \r\n    //   let Originator = response.data.data.WorkOriginator.map((item) => ({\r\n    //     label: item.emp_mst_empl_id + \" : \" + item.emp_mst_name,\r\n    //     value: item.emp_mst_empl_id,\r\n    //   }));\r\n    //   setOriginator(Originator);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {RowID\r\n            ? \"Update Asset\"\r\n            : completeRowID\r\n            ? \"Complete Work Order\"\r\n            : closeRowID\r\n            ? \"Close Asset\"\r\n            : \"Create New PM\"}\r\n        </title>\r\n        <meta name=\"description\" content=\"Create New PM\" />\r\n      </Helmet>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <div\r\n          className=\"CustomBreadAssetSave asset\"\r\n          style={{\r\n            position: \"-webkit-sticky\",\r\n            position: \"sticky\",\r\n            top: \"55px\",\r\n            backgroundColor: \"white\",\r\n            zIndex: 1000,\r\n            borderBottom: \"1px solid #00000021\",\r\n            height: \"60px !important\",\r\n          }}\r\n        >\r\n          <CustomBreadcrumbs\r\n            // heading=\"Create Work Order\"\r\n            heading={\r\n              RowID\r\n                ? `Update ${WorkOrderNo} PM`\r\n                : completeRowID\r\n                ? `Complete ${WorkOrderNo} Order`\r\n                : closeRowID\r\n                ? `Close ${WorkOrderNo} Asset`\r\n                : \"Create New PM\"\r\n            }\r\n            links={[\r\n              {\r\n                name: \"PM\",\r\n              },\r\n              { name: RowID ? \"Update\" : \"Create\" },\r\n            ]}\r\n            action={\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {(() => {\r\n                  if (\r\n                    completeRowID !== undefined &&\r\n                    completeRowID !== null &&\r\n                    completeRowID !== \"\"\r\n                  ) {\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickChangeComplete}\r\n                          variant=\"contained\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  } else {\r\n                    \r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickChange}\r\n                          variant=\"contained\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                          disabled={Status.some(\r\n                            (item) =>\r\n                              item.key ===\r\n                                (\r\n                                  selected_Status?.label?.split(\" : \")[2] ?? \"\"\r\n                                ).trim() && item.key === \"CLOSE\"\r\n                          )}\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })()}\r\n              </div>\r\n            }\r\n            sx={{ mb: { xs: 3, md: 5 } }}\r\n          />\r\n       \r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <p>Loading data...</p>\r\n          ) : (\r\n            <>\r\n              {/* toggle view strting from here */}\r\n              <div\r\n                className=\"MainOrderFromGd\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <Grid container spacing={0}>\r\n                  <Grid xs={12} md={12}>\r\n                    <Card sx={{ padding: \"10px 24px 15px 24px\" }}>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <button className=\"ToggleBttnIcon\" onClick={toggleDiv}>\r\n                          <Iconify\r\n                            icon=\"fluent-mdl2:pen-workspace\"\r\n                            style={{ marginRight: \"5px\", width: \"17px\" }}\r\n                          />{\" \"}\r\n                          PM Master\r\n                          {isOpenWork ? (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-up-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          ) : (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-down-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                      {isOpenWork && (\r\n                        <Grid container spacing={0}>\r\n                          <Grid xs={12} md={10}>\r\n                            {/* ************************************* img ******************************************* */}\r\n                            <div className=\"col-md-2 mobileImgversion\">\r\n                              <div className=\"row\">\r\n                                <div className=\"row ImgShowMobile\">\r\n                                  <div>\r\n                                    <label htmlFor=\"upload-button\">\r\n                                      {getDbImg && getDbImg.length > 0 ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={getDbImg[0].attachment}\r\n                                            className=\"imgCurPont\"\r\n                                            // width=\"200\"\r\n                                            // height=\"180\"\r\n                                            alt=\"Base64 Image\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                          <div className=\"col btnCenter\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn dlt\"\r\n                                              onClick={() =>\r\n                                                handleDeleteImgApi(\r\n                                                  getDbImg[0].RowID\r\n                                                )\r\n                                              }\r\n                                              style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n\r\n                                                justifyContent: \"center\",\r\n                                                marginTop: \"10px\",\r\n                                              }}\r\n                                            >\r\n                                              <Iconify\r\n                                                icon=\"fluent:delete-48-filled\"\r\n                                                style={{ fontSize: \"24px\" }}\r\n                                              />\r\n                                              Delete\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : image.preview ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={image.preview}\r\n                                            alt=\"dummy\"\r\n                                            // width=\"200\"\r\n                                            // height=\"180\"\r\n                                            className=\"imgCurPont\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                          <div className=\"col btnCenter\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn dlt\"\r\n                                              onClick={handleClearImg}\r\n                                              style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                              }}\r\n                                            >\r\n                                              <Iconify\r\n                                                icon=\"fluent:delete-48-filled\"\r\n                                                style={{ marginRight: \"5px\" }}\r\n                                              />\r\n                                              Delete\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <>\r\n                                          <span className=\"fa-stack fa-2x mb-2\">\r\n                                            <img\r\n                                              src={require(\"../../../assets/img/Add_Image_icon.png\")}\r\n                                              className=\"sliderimg2\"\r\n                                              onClick={handleImgChangeSingle2}\r\n                                              width=\"200\"\r\n                                              height=\"180\"\r\n                                              alt=\"\"\r\n                                            />\r\n                                          </span>\r\n                                        </>\r\n                                      )}\r\n                                    </label>\r\n                                    {getDbImg && getDbImg.length > 0 ? (\r\n                                      <div></div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <input\r\n                                          type=\"file\"\r\n                                          id=\"upload-button\"\r\n                                          disabled={disabledBtn}\r\n                                          style={{ display: \"none\" }}\r\n                                          onChange={handleImgChangeSingle}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                    <br />\r\n                                  </div>\r\n                                  <BootstrapDialog\r\n                                    onClose={handleClosedd2}\r\n                                    aria-labelledby=\"customized-dialog-title\"\r\n                                    open={showdd2}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"close\"\r\n                                      onClick={handleClosedd2}\r\n                                      sx={{\r\n                                        position: \"absolute\",\r\n                                        right: 8,\r\n                                        top: 8,\r\n                                        color: (theme) =>\r\n                                          theme.palette.grey[500],\r\n                                      }}\r\n                                    >\r\n                                      X\r\n                                    </IconButton>\r\n                                    <DialogContent\r\n                                      dividers\r\n                                      style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      {getDbImg && getDbImg.length > 0 ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={getDbImg[0].attachment}\r\n                                            alt=\"dummy\"\r\n                                            className=\"dummyImg\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                        </div>\r\n                                      ) : (\r\n                                        <img\r\n                                          src={image.preview}\r\n                                          alt=\"dummy\"\r\n                                          style={{\r\n                                            height: \"50%\",\r\n                                            width: \"50%\",\r\n                                          }}\r\n                                          onClick={openSaveImg}\r\n                                          className=\"dummyImg\"\r\n                                        />\r\n                                      )}\r\n                                    </DialogContent>\r\n                                  </BootstrapDialog>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                \r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_pm_no\") ||\r\n                                    \"PM ID\"}\r\n                                </Typography>\r\n                                <TextField\r\n                                  name=\"name\"\r\n                                  size=\"small\"\r\n                                  disabled\r\n                                  defaultValue={AssetNo}\r\n                                  className=\"ExtrasizeDisable\"\r\n                                />\r\n                              </Stack>\r\n                             \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                \r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_curr_wo\") ||\r\n                                      \"Current Work Order\"}\r\n                                  </Typography>\r\n                                  \r\n                                  <TextField\r\n                                  name=\"name\"\r\n                                  size=\"small\"\r\n                                  disabled\r\n                                  defaultValue=\"\"\r\n                                  className=\"ExtrasizeDisable\"\r\n                                />\r\n                                </Stack>\r\n\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                \r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_type\") ||\r\n                                    \"PM Type\"}\r\n                                </Typography>\r\n                                     \r\n                                <Autocomplete\r\n                                    options={Pm_type}\r\n                                    value={(selected_PmType?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                      onChange={(event, value) => {\r\n                                        setselected_PmType(value);\r\n                                        \r\n                                      }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className=\"Extrasize\"\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                              </Stack>\r\n                             \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                \r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_assetlocn\") ||\r\n                                      \"Asset Location\"}\r\n                                  </Typography>\r\n                                  \r\n                                  <TextField\r\n                                  name=\"name\"\r\n                                  size=\"small\"\r\n                                  disabled\r\n                                  defaultValue={AssetNo}\r\n                                  className=\"ExtrasizeDisable\"\r\n                                />\r\n                                </Stack>\r\n\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                              <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                            {findCustomizeLabel(\"prm_mst_assetno\") ||\r\n                             \"Asset No\"}\r\n                              <Iconify\r\n                                icon=\"mdi:required\"\r\n                                style={{\r\n                                  color: \"red\",\r\n                                  marginLeft: \"1px\",\r\n                                  height: \"12px\",\r\n                                  width: \"8px\",\r\n                                }}\r\n                              />\r\n                            </Typography>\r\n                            <div ref={assetNoAutocompleteRef}>\r\n                              <CustomTextField\r\n                                id=\"outlined-basic\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className={`ExtrasizeDisable ${\r\n                                  isAssetNoEmpty ? \"errorEmpty\" : \"\"\r\n                                }`}\r\n                                \r\n                                fullWidth\r\n                                value={Permanent_IDFlag || \"\"}\r\n                                disabled\r\n                                placeholder=\"Select...\"\r\n                                rightIcons={[\r\n                                  <Iconify\r\n                                    icon=\"material-symbols:close\"\r\n                                    onClick={handleCancelClick}\r\n                                  />,\r\n                                  <Iconify\r\n                                    icon=\"tabler:edit\"\r\n                                    onClick={handleEditClick}\r\n                                  />,\r\n                                ]}\r\n                              />\r\n                            </div>\r\n                          </Stack>\r\n                             \r\n                                \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                \r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_lpm_usg\") ||\r\n                                      \"LPM Usage\"}\r\n                                  </Typography>\r\n                                  \r\n                                  <TextField\r\n                                  name=\"name\"\r\n                                  size=\"small\"\r\n                                  disabled\r\n                                  defaultValue=\".00\"\r\n                                  className=\"ExtrasizeDisable\"\r\n                                />\r\n                                </Stack>\r\n\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_dflt_status\") ||\r\n                                    \"Default WO Status\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                    options={Status}\r\n                                    value={(selected_Status?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                      onChange={(event, value) => {\r\n                                        setSelected_Status(value);\r\n                                        setIsAssetStatusEmpty(false);\r\n                                        \r\n                                      }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isAssetStatusEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                              </Stack>\r\n                             \r\n                                \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                display=\"flex\"\r\n                                flexDirection=\"row\"\r\n                                justifyContent=\"space-between\"\r\n                                alignItems=\"center\"\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                >\r\n                                <Stack width=\"30%\" direction=\"column\">\r\n                                <Stack spacing={1}>\r\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                                    <Box>\r\n                                    <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_disable_flag\") || \"Disable Flag\"}\r\n                                    </Typography>\r\n                                    <Checkbox\r\n                                    checked={isCheckedFlag}\r\n                                    onChange={handleCheckboxChangeFlag}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                    </Box>\r\n                                    </Stack>\r\n                                    </Stack>\r\n                                </Stack>\r\n                                <Stack width=\"30%\" direction=\"column\">\r\n                                <Stack spacing={1}>\r\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                                    <Box>\r\n                                    <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_closed_loop\") ||\r\n                                      \"Closed Loop?\"}\r\n                                  </Typography>\r\n                                    <Checkbox\r\n                                    checked={isCheckedLoop}\r\n                                    onChange={handleCheckboxChangeLoop}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                    </Box>\r\n                                    </Stack>\r\n                                    </Stack>\r\n                                </Stack>\r\n                                <Stack width=\"30%\" direction=\"column\">\r\n                                <Stack spacing={1}>\r\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                                    <Box>\r\n                                    <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_cal_startdate\") ||\r\n                                      \"PM Schedule Date\"}\r\n                                  </Typography>\r\n                                    <Checkbox\r\n                                    checked={isCheckedPmDate}\r\n                                    onChange={handleCheckboxChangePmDate}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                    </Box>\r\n                                </Stack>\r\n                                </Stack>\r\n                                </Stack>\r\n                                </Box>\r\n\r\n\r\n\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              > \r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_freq_code\") ||\r\n                                    \"Frequency Code\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                    options={FrequencyCode}\r\n                                    value={(selected_FrequencyCode?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                      onChange={(event, value) => {\r\n                                        setSelected_FrequencyCode(value);\r\n                                        setIsAssetCriticalFactorEmpty(false);\r\n                                        \r\n                                      }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isAssetCriticalFactorEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                              </Stack>\r\n                             \r\n                                \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                \r\n                              >\r\n                                <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_plan_priority\") ||\r\n                                    \"Plan Priority\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                    options={PlanPriority}\r\n                                    value={(selected_PlanPriority?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                      onChange={(event, value) => {\r\n                                        setSelected_PlanPriority(value);\r\n                                        setIsAssetCriticalFactorEmpty(false);\r\n                                        \r\n                                      }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isAssetCriticalFactorEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                              </Stack>\r\n                              </Box>\r\n\r\n                              </Box>\r\n                            </Box>\r\n                          \r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_lead_day\") ||\r\n                                    \"Lead Day\"}\r\n                                </Typography>\r\n                                <TextField\r\n                                  name=\"name\"\r\n                                  size=\"small\"\r\n                                  type=\"number\" \r\n                                  defaultValue={LeadDay}\r\n                                  onChange={(e) => {\r\n                                    setLeadDay(e.target.value);\r\n                                   \r\n                                  }}\r\n                                 \r\n                                />\r\n                              </Stack>\r\n                             \r\n                                \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                                \r\n                              >\r\n                                \r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_shadow_grp\") ||\r\n                                      \"Shadow Group\"}\r\n                                  </Typography>\r\n                                  \r\n                                  <TextField\r\n                                  name=\"name\"\r\n                                  size=\"small\"\r\n                                  defaultValue={ShadowGroup}\r\n                                  onChange={(e) => {\r\n                                    setShadowGroup(e.target.value);\r\n                                   \r\n                                  }}\r\n                                  \r\n                                />\r\n                                </Stack>\r\n\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_meter_id\") ||\r\n                                    \"Meter ID\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                    options={Asset_CriFactor}\r\n                                    value={(selected_CriFactor?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                      onChange={(event, value) => {\r\n                                        setselected_CriFactor(value);\r\n                                        setIsAssetCriticalFactorEmpty(false);\r\n                                        \r\n                                      }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isAssetCriticalFactorEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                              </Stack>\r\n                             \r\n                                \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n\r\n                                    <Stack spacing={1}>\r\n                                   <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_lpm_date\") ||\r\n                                      \"LPM Date\"}\r\n                                  </Typography>\r\n                                  \r\n                                  <DateTimePicker\r\n                                    value={LPMDate}\r\n                                    format=\"dd/MM/yyyy HH:mm\"\r\n                                    className=\"Extrasize\"\r\n                                    onChange={(newDate) => {\r\n                                        setLPMDate(newDate); // Update your state with the new value\r\n                                    }}\r\n                                    slotProps={{\r\n                                        textField: {\r\n                                        fullWidth: true,\r\n                                        },\r\n                                    }}\r\n                                    />\r\n                                   </Stack>\r\n                                 \r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_lpm_uom\") ||\r\n                                    \"LPM UOM\"}\r\n                                </Typography>\r\n                                \r\n                                <Autocomplete\r\n                                    options={PmLPMUOM}\r\n                                    value={(selected_PmLPMUOM?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                      onChange={(event, value) => {\r\n                                        setselected_PmLPMUOM(value);\r\n                                        \r\n                                      }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isAssetCriticalFactorEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                              </Stack>\r\n                             \r\n                                \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                   <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_lpm_closed_date\") ||\r\n                                      \"LPM Closed Date\"}\r\n                                  </Typography>\r\n                                 \r\n                                  <DateTimePicker\r\n                                    value={LPMClosedDate}\r\n                                    format=\"dd/MM/yyyy HH:mm\"\r\n                                    className=\"Extrasize\"\r\n                                    onChange={(newDate) => {\r\n                                        setLPMClosedDate(newDate); // Update your state with the new value\r\n                                    }}\r\n                                    slotProps={{\r\n                                        textField: {\r\n                                        fullWidth: true,\r\n                                        },\r\n                                    }}\r\n                                    />\r\n                                   </Stack>\r\n                                 \r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_flt_code\") ||\r\n                                    \"Fault Code\"}\r\n                                </Typography>\r\n                                <Autocomplete\r\n                                    options={FaultCode}\r\n                                    value={(selected_FaultCode?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                      onChange={(event, value) => {\r\n                                        setselected_FaultCode(value);\r\n                                        \r\n                                      }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isAssetCriticalFactorEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                              </Stack>\r\n                             \r\n                                \r\n                              </Box>\r\n                              \r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n\r\n                                    <Stack spacing={1}>\r\n                                   <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_next_due\") ||\r\n                                      \"Next Due\"}\r\n                                  </Typography>\r\n                             \r\n                                  <DateTimePicker\r\n                                    value={NextDueSate}\r\n                                    format=\"dd/MM/yyyy HH:mm\"\r\n                                    className=\"Extrasize\"\r\n                                    onChange={(newDate) => {\r\n                                        setNextDueDate(newDate); // Update your state with the new value\r\n                                    }}\r\n                                    slotProps={{\r\n                                        textField: {\r\n                                        fullWidth: true,\r\n                                        },\r\n                                    }}\r\n                                    />\r\n                                   </Stack>\r\n                                 \r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                             <Stack spacing={1}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_mst_desc\") ||\r\n                                    \"Description\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  placeholder=\"Descriptions...\"\r\n                                  minRows={6.5}\r\n                                  value={Short_Description}\r\n                                  onChange={(e) => {\r\n                                    setShort_Description(e.target.value);\r\n                                    setIsAssetShortDescEmpty(false);\r\n                                  }}\r\n                                //  className=\"TxtAra\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetShortDescEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"TxtAra\"\r\n                                  }`}\r\n                                />\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={1}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                \r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                    {findCustomizeLabel(\"prm_mst_next_create\") ||\r\n                                      \"Next Create Date\"}\r\n                                  </Typography>\r\n                                  \r\n                                  <DateTimePicker\r\n                                    value={NextCreateDate}\r\n                                    format=\"dd/MM/yyyy HH:mm\"\r\n                                    className=\"Extrasize\"\r\n                                    onChange={(newDate) => {\r\n                                        setNextCreateDate(newDate); // Update your state with the new value\r\n                                    }}\r\n                                    slotProps={{\r\n                                        textField: {\r\n                                        fullWidth: true,\r\n                                        },\r\n                                    }}\r\n                                    />\r\n                               \r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n                          \r\n                          </Grid>\r\n                          <Grid xs={12} md={2} className=\"imgGird\">\r\n                            <Card sx={{ pt: 2, pb: 0, px: 3 }}>\r\n                              <Box\r\n                                sx={{\r\n                                  mb: 5,\r\n                                  display: \"flex\",\r\n                                  flexDirection: \"column\",\r\n                                  alignItems: \"center\",\r\n                                  justifyContent: \"center\",\r\n                                }}\r\n                              >\r\n                                {/* ************************************* img ******************************************* */}\r\n\r\n                                <div className=\"col-md-2\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"row ImgShowMobile\">\r\n                                      <div>\r\n                                        <label htmlFor=\"upload-button\">\r\n                                          {getDbImg && getDbImg.length > 0 ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={getDbImg[0].attachment}\r\n                                                className=\"imgCurPont\"\r\n                                                // width=\"200\"\r\n                                                // height=\"180\"\r\n                                                alt=\"Base64 Image\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                              <div className=\"col btnCenter\">\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"btn dlt\"\r\n                                                  onClick={() =>\r\n                                                    handleDeleteImgApi(\r\n                                                      getDbImg[0].RowID\r\n                                                    )\r\n                                                  }\r\n                                                  style={{\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n\r\n                                                    justifyContent: \"center\",\r\n                                                    marginTop: \"10px\",\r\n                                                  }}\r\n                                                >\r\n                                                  <Iconify\r\n                                                    icon=\"fluent:delete-48-filled\"\r\n                                                    style={{ fontSize: \"24px\" }}\r\n                                                  />\r\n                                                  Delete\r\n                                                </button>\r\n                                              </div>\r\n                                            </div>\r\n                                          ) : image.preview ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={image.preview}\r\n                                                alt=\"dummy\"\r\n                                                // width=\"200\"\r\n                                                // height=\"180\"\r\n                                                className=\"imgCurPont\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                              <div className=\"col btnCenter\">\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"btn dlt\"\r\n                                                  onClick={handleClearImg}\r\n                                                  style={{\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n                                                    justifyContent: \"center\",\r\n                                                  }}\r\n                                                >\r\n                                                  <Iconify\r\n                                                    icon=\"fluent:delete-48-filled\"\r\n                                                    style={{\r\n                                                      marginRight: \"5px\",\r\n                                                    }}\r\n                                                  />\r\n                                                  Delete\r\n                                                </button>\r\n                                              </div>\r\n                                            </div>\r\n                                          ) : (\r\n                                            <>\r\n                                              <span className=\"fa-stack fa-2x mb-2\">\r\n                                                <img\r\n                                                  src={require(\"../../../assets/img/Add_Image_icon.png\")}\r\n                                                  className=\"sliderimg2\"\r\n                                                  onClick={\r\n                                                    handleImgChangeSingle2\r\n                                                  }\r\n                                                  width=\"200\"\r\n                                                  height=\"180\"\r\n                                                  alt=\"\"\r\n                                                />\r\n                                              </span>\r\n                                            </>\r\n                                          )}\r\n                                        </label>\r\n                                        {getDbImg && getDbImg.length > 0 ? (\r\n                                          <div></div>\r\n                                        ) : (\r\n                                          <div>\r\n                                            <input\r\n                                              type=\"file\"\r\n                                              id=\"upload-button\"\r\n                                              disabled={disabledBtn}\r\n                                              style={{ display: \"none\" }}\r\n                                              onChange={handleImgChangeSingle}\r\n                                            />\r\n                                          </div>\r\n                                        )}\r\n                                        <br />\r\n                                      </div>\r\n                                      <BootstrapDialog\r\n                                        onClose={handleClosedd2}\r\n                                        aria-labelledby=\"customized-dialog-title\"\r\n                                        open={showdd2}\r\n                                      >\r\n                                        <IconButton\r\n                                          aria-label=\"close\"\r\n                                          onClick={handleClosedd2}\r\n                                          sx={{\r\n                                            position: \"absolute\",\r\n                                            right: 8,\r\n                                            top: 8,\r\n                                            color: (theme) =>\r\n                                              theme.palette.grey[500],\r\n                                          }}\r\n                                        >\r\n                                          X\r\n                                        </IconButton>\r\n                                        <DialogContent\r\n                                          dividers\r\n                                          style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                          }}\r\n                                        >\r\n                                          {getDbImg && getDbImg.length > 0 ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={getDbImg[0].attachment}\r\n                                                alt=\"dummy\"\r\n                                                className=\"dummyImg\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                            </div>\r\n                                          ) : (\r\n                                            <img\r\n                                              src={image.preview}\r\n                                              alt=\"dummy\"\r\n                                              style={{\r\n                                                height: \"50%\",\r\n                                                width: \"50%\",\r\n                                              }}\r\n                                              onClick={openSaveImg}\r\n                                              className=\"dummyImg\"\r\n                                            />\r\n                                          )}\r\n                                        </DialogContent>\r\n                                      </BootstrapDialog>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </Box>\r\n                            </Card>\r\n                          </Grid>\r\n                        </Grid>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              {/* toggle view End */}\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid xs={12} md={12}>\r\n                  <Card sx={{ p: 3 }}>\r\n                    <Tabs\r\n                      value={Tabvalue}\r\n                      onChange={handleChange}\r\n                      aria-label=\"Basic tabs\"\r\n                      defaultValue={0}\r\n                    >\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"akar-icons:info-fill\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Details\r\n                          </div>\r\n                        }\r\n                      />\r\n                     \r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"material-symbols:date-range-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            UDF1\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:planner-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Planning\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"guidance:time\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Time Card\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"codicon:references\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Reference\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </Tabs>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 0}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {/*Details*/}\r\n                      \r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_originator\") ||\r\n                                \"Originator\"}\r\n                            </Typography>\r\n                        \r\n                            <Autocomplete\r\n                              options={PmOriginator}\r\n                              getOptionLabel={(option) => option.label}\r\n                              value={selected_PmOriginator?.label ?? \"\"}\r\n                              onChange={(event, newValue) => {\r\n                                // This will be triggered when an option is selected\r\n                                handleClickOriginator();\r\n                              }}\r\n                             \r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  onClick={handleClickOriginator}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetTypeEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_approver\") ||\r\n                                \"Approver\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Code}\r\n                              value={selected_AssetCode?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setselectedAssetCode(value);\r\n                                setIsAssetCodeEmpty(false);\r\n                                \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetCodeEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_planner\") ||\r\n                                \"Planner\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Asset_Group_Code }\r\n                              value={selected_AssetGroupCode?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setselectedAssetGroupCode(value);\r\n                                setIsAssetGroupCodeEmpty(false);\r\n                                \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetGroupCodeEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_chg_costcenter\") ||\r\n                                \"Charge Cost Center\"}\r\n                            </Typography>\r\n                            <Autocomplete \r\n                              options={Charge_Cost_Center}\r\n                              value={selected_Charge_Cost_Center?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Charge_Cost_Center(value || null);\r\n                                setIsAssetCostCenterEmpty(false);\r\n                              \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetCostCenterEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_crd_costcenter\") ||\r\n                                \"Credit Cost Center\"}\r\n                            </Typography>\r\n                            <Autocomplete \r\n                              options={Charge_Cost_Center}\r\n                              value={selected_Charge_Cost_Center?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Charge_Cost_Center(value || null);\r\n                                setIsAssetCostCenterEmpty(false);\r\n                              \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetCostCenterEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_l_account\") ||\r\n                                \"Labor Account\"}\r\n                            </Typography>\r\n                            <Autocomplete \r\n                              options={Charge_Cost_Center}\r\n                              value={selected_Charge_Cost_Center?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Charge_Cost_Center(value || null);\r\n                                setIsAssetCostCenterEmpty(false);\r\n                              \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetCostCenterEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_m_account\") ||\r\n                                \"Material Account\"}\r\n                              <Iconify\r\n                                icon=\"mdi:required\"\r\n                                style={{\r\n                                  color: \"red\",\r\n                                  marginLeft: \"1px\",\r\n                                  height: \"12px\",\r\n                                  width: \"8px\",\r\n                                }}\r\n                              />\r\n                            </Typography>\r\n                            <div ref={assetNoAutocompleteRef}>\r\n                              <CustomTextField\r\n                                id=\"outlined-basic\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className={`ExtrasizeDisable ${\r\n                                  isAssetNoEmpty ? \"errorEmpty\" : \"\"\r\n                                }`}\r\n                                \r\n                                fullWidth\r\n                                value={Permanent_IDFlag || \"\"}\r\n                                disabled\r\n                                placeholder=\"Select...\"\r\n                                rightIcons={[\r\n                                  <Iconify\r\n                                    icon=\"material-symbols:close\"\r\n                                    onClick={handleCancelClick}\r\n                                  />,\r\n                                  <Iconify\r\n                                    icon=\"tabler:edit\"\r\n                                    onClick={handleEditClick}\r\n                                  />,\r\n                                ]}\r\n                              />\r\n                            </div>\r\n                          </Stack>\r\n                         \r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_c_account\") ||\r\n                                \"Contract Account\"}\r\n                              <Iconify\r\n                                icon=\"mdi:required\"\r\n                                style={{\r\n                                  color: \"red\",\r\n                                  marginLeft: \"1px\",\r\n                                  height: \"12px\",\r\n                                  width: \"8px\",\r\n                                }}\r\n                              />\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={Work_Area}\r\n                              value={selected_Work_Area?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Area(value || null);\r\n                                setIsAssetWorkAreaEmpty(false);\r\n                               \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetWorkAreaEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_project_id\") ||\r\n                                \"Project ID\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Asset_Location }\r\n                              value={selected_Asset_Location?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Asset_Location(value || null);\r\n                                setIsAssetLocation(false);\r\n                                \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetLocation ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_customer_cd\") ||\r\n                                \"Clinic Code\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Asset_Level}\r\n                              value={selected_Asset_Level?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Asset_Level(value || null);\r\n                                setIsAssetLeavelEmpty(false);\r\n                               \r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetLeavelEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_safety\") ||\r\n                                \"Safety\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Work_Group}\r\n                              value={selected_Work_Group?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Group(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isOriginalPeriorityEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_varchar20\") ||\r\n                                \"Varchar20\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Work_Group}\r\n                              value={selected_Work_Group?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Group(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isOriginalPeriorityEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_cause_code\") ||\r\n                                \"Cause Code\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Work_Group}\r\n                              value={selected_Work_Group?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Group(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isOriginalPeriorityEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_act_code\") ||\r\n                                \"Action Code\"}\r\n                            </Typography>\r\n\r\n                            <Autocomplete\r\n                              options={Work_Group}\r\n                              value={selected_Work_Group?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_Work_Group(value || null);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isOriginalPeriorityEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  ref={autocompleteRef}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          \r\n                          \r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_work_area\") ||\r\n                                \"Work Area\"}\r\n                                  \r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              value={SafetyRequirement}\r\n                              onChange={(e) => {\r\n                                setSafetyRequirement(e.target.value);\r\n                              }}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabel(\"prm_det_asset_level\") ||\r\n                                \"Asset Level\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              value={BarcodeCount}\r\n                              onChange={(e) => {\r\n                                setBarcodeCount(e.target.value);\r\n                              }}\r\n                              fullWidth\r\n                              placeholder=\"0\"\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_work_locn\") ||\r\n                                \"Work Location\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              value={ManufactureCode}\r\n                              onChange={(e) => {\r\n                                setManufactureCode(e.target.value);\r\n                              }}\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_work_grp\") ||\r\n                                \"Work Group\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                              \r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_work_type\") ||\r\n                                \"Work Type\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                              \r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_work_class\") ||\r\n                                \"Work Class\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                              \r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n                \r\n                    </Box>\r\n                   \r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 1}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                        <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_det_note1\") ||\r\n                                    \"Note1\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  placeholder=\"Descriptions...\"\r\n                                  minRows={6.5}\r\n                                  value={Short_Description}\r\n                                  onChange={(e) => {\r\n                                    setShort_Description(e.target.value);\r\n                                    setIsAssetShortDescEmpty(false);\r\n                                  }}\r\n                                //  className=\"TxtAra\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetShortDescEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"TxtAra\"\r\n                                  }`}\r\n                                />\r\n                              </Stack>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                             <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                  {findCustomizeLabel(\"prm_det_note2\") ||\r\n                                    \"Note2\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  placeholder=\"Descriptions...\"\r\n                                  minRows={6.5}\r\n                                  value={Short_Description}\r\n                                  onChange={(e) => {\r\n                                    setShort_Description(e.target.value);\r\n                                    setIsAssetShortDescEmpty(false);\r\n                                  }}\r\n                                //  className=\"TxtAra\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetShortDescEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"TxtAra\"\r\n                                  }`}\r\n                                />\r\n                              </Stack>\r\n                            </Grid>\r\n                        </Grid>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={3}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar1\") ||\r\n                                \"Varchar1\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_1}\r\n                              onChange={(e) => {\r\n                                setUDFText_1(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar2\") ||\r\n                                \"Varchar2\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_2}\r\n                              onChange={(e) => {\r\n                                setUDFText_2(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar3\") ||\r\n                                \"Varchar3\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_3}\r\n                              onChange={(e) => {\r\n                                setUDFText_3(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar4\") ||\r\n                                \"Varchar4\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_4}\r\n                              onChange={(e) => {\r\n                                setUDFText_4(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar5\") ||\r\n                                \"Varchar5\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_5}\r\n                              onChange={(e) => {\r\n                                setUDFText_5(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar6\") ||\r\n                                \"Varchar6\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_6}\r\n                              onChange={(e) => {\r\n                                setUDFText_6(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar7\") ||\r\n                                \"Varchar7\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_7}\r\n                              onChange={(e) => {\r\n                                setUDFText_7(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar8\") ||\r\n                                \"Varchar8\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_8}\r\n                              onChange={(e) => {\r\n                                setUDFText_8(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar9\") ||\r\n                                \"Varchar9\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_9}\r\n                              onChange={(e) => {\r\n                                setUDFText_9(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar10\") ||\r\n                                \"Varchar10\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_10}\r\n                              onChange={(e) => {\r\n                                setUDFText_10(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                         \r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n                        <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar11\") ||\r\n                                \"Varchar11\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_11}\r\n                              onChange={(e) => {\r\n                                setUDFText_11(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar12\") ||\r\n                                \"Varchar12\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_12}\r\n                              onChange={(e) => {\r\n                                setUDFText_12(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar13\") ||\r\n                                \"Varchar13\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_13}\r\n                              onChange={(e) => {\r\n                                setUDFText_13(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar14\") ||\r\n                                \"Varchar14\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_14}\r\n                              onChange={(e) => {\r\n                                setUDFText_14(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar15\") ||\r\n                                \"Varchar15\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_15}\r\n                              onChange={(e) => {\r\n                                setUDFText_15(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar16\") ||\r\n                                \"Varchar16\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_16}\r\n                              onChange={(e) => {\r\n                                setUDFText_16(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar17\") ||\r\n                                \"Varchar17\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_17}\r\n                              onChange={(e) => {\r\n                                setUDFText_17(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar18\") ||\r\n                                \"Varchar18\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_18}\r\n                              onChange={(e) => {\r\n                                setUDFText_18(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar19\") ||\r\n                                \"Varchar19\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_19}\r\n                              onChange={(e) => {\r\n                                setUDFText_19(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_varchar20\") ||\r\n                                \"Varchar20\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_20}\r\n                              onChange={(e) => {\r\n                                setUDFText_20(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n                        \r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric1\") ||\r\n                                \"Numeric1\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_1}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_1(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric2\") ||\r\n                                \"Numeric2\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_2}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_2(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric3\") ||\r\n                                \"Numeric3\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_3}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_3(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric4\") ||\r\n                                \"Numeric4\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_4}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_4(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric5\") ||\r\n                                \"Numeric5\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_5}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_5(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric6\") ||\r\n                                \"Numeric6\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_6}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_6(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric7\") ||\r\n                                \"Numeric7\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_7}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_7(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric8\") ||\r\n                                \"Numeric8\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_8}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_8(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric9\") ||\r\n                                \"Numeric9\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_9}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_9(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_numeric10\") ||\r\n                                \"Numeric10\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_10}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_10(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        \r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n                        \r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime1\") ||\r\n                                \"Date1\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_1} \r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_1(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime2\") ||\r\n                                \"Date2\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_2}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_2(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime3\") ||\r\n                                \"Date3\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_3}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_3(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime4\") ||\r\n                                \"Date4\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_4}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_4(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime5\") ||\r\n                                \"Date5\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_5}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_5(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime6\") ||\r\n                                \"Date6\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_6}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_6(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime7\") ||\r\n                                \"Date7\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_7}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_7(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime8\") ||\r\n                                \"Date8\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_8}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_8(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime1\") ||\r\n                                \"Date9\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_9}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_9(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"prm_det_datetime10\") ||\r\n                                \"Date10\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_10}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className=\"Extrasize\"\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_10(newDate); // Update your state with the new value\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          \r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      \r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 2}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {/* {RowID && (\r\n                        <WorkOrderSpecialOrder\r\n                          data={{\r\n                            RowID: RowID,\r\n                            WorkOrderNo: WorkOrderNo,\r\n                            Asset_No: Asset_No,\r\n                          }}\r\n                        />\r\n                      )} */}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 3}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {/* {RowID && (\r\n                        <WorkOrderTimeCard\r\n                          data={{\r\n                            RowID: RowID,\r\n                            WorkOrderNo: WorkOrderNo,\r\n                            Asset_No: Asset_No,\r\n                          }}\r\n                          onDataFromSecondComponent={\r\n                            handleDataFromSecondComponent\r\n                          }\r\n                        />\r\n                      )} */}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 4}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      <div>\r\n                        <div\r\n                          style={{\r\n                            paddingBottom: \"20px\",\r\n                            backgroundColor: \"white\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"template-demo\"\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <div style={{ marginRight: \"10px\" }}>\r\n                              <img\r\n                                src={refrencImg}\r\n                                style={{ width: \"60px\", height: \"60px\" }}\r\n                              />\r\n                            </div>\r\n                            <div\r\n                              className=\"template-demo\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                              }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  marginRight: \"10px\",\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                              >\r\n                                <form onSubmit={handleSubmit} className=\"row\">\r\n                                  <div className=\"col-sm-10 text-center\">\r\n                                    <input\r\n                                      type=\"file\"\r\n                                      ref={fileInputRef}\r\n                                      style={{ display: \"none\" }}\r\n                                      multiple\r\n                                      onChange={handleImageChange}\r\n                                      className=\"form-control form-control-lg\"\r\n                                      id=\"formFileMultiple\"\r\n                                    />\r\n                                    <button\r\n                                      onClick={handleButtonClick}\r\n                                      type=\"submit\"\r\n                                      className=\"btn Refbtl\"\r\n                                    >\r\n                                      + Add Attachment\r\n                                    </button>\r\n                                  </div>\r\n                                </form>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-hover mt-2 col-sm-12 astFimg\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>Image</th>\r\n                                <th>File Name</th>\r\n                                <th>Audit User</th>\r\n                                <th>Audit Date</th>\r\n                                <th>Action</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {RefImg !== \"\" &&\r\n                                RefImg !== null &&\r\n                                RefImg.map((item, index) => (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      {item.file_name\r\n                                        .toLowerCase()\r\n                                        .endsWith(\".pdf\") ? (\r\n                                        <FontAwesomeIcon\r\n                                          icon={faFilePdf}\r\n                                          onClick={() =>\r\n                                            openPDFInNewTab(item.attachment)\r\n                                          }\r\n                                          style={{\r\n                                            width: \"50px\",\r\n                                            height: \"50px\",\r\n                                          }}\r\n                                          className=\"fntpdf\"\r\n                                        />\r\n                                      ) : (\r\n                                        <img\r\n                                          key={index}\r\n                                          src={item.attachment}\r\n                                          style={{\r\n                                            width: \"60px\",\r\n                                            height: \"60px\",\r\n                                          }}\r\n                                          onClick={() => handleShowdata(item)}\r\n                                        />\r\n                                      )}\r\n                                    </td>\r\n\r\n                                    <td>{item.file_name}</td>\r\n                                    <td>{item.audit_user}</td>\r\n                                    <td>\r\n                                      {new Date(\r\n                                        item.audit_date.date\r\n                                      ).toLocaleString(\"en-US\", {\r\n                                        year: \"numeric\",\r\n                                        month: \"2-digit\",\r\n                                        day: \"2-digit\",\r\n                                        hour: \"2-digit\",\r\n                                        minute: \"2-digit\",\r\n                                        second: \"2-digit\",\r\n                                        // Show milliseconds with 3 digits\r\n                                      })}\r\n                                    </td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={() =>\r\n                                          handleDeleteReferenceApi(item.RowID)\r\n                                        }\r\n                                        className=\"btn multiplsimg\"\r\n                                      >\r\n                                        <Iconify\r\n                                          icon=\"fluent:delete-48-filled\"\r\n                                          style={{ fontSize: \"24px\" }}\r\n                                        />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                ))}\r\n\r\n                              {selectedImages.map((image, index) =>\r\n                                image && index === undefined ? (\r\n                                  <tr>\r\n                                    <td>\r\n                                      <img\r\n                                        src={RefImg[\"0\"].attachment}\r\n                                        style={{\r\n                                          width: \"60px\",\r\n                                          height: \"60px\",\r\n                                        }}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                ) : image.name\r\n                                    .toLowerCase()\r\n                                    .endsWith(\".pdf\") ? (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <FontAwesomeIcon\r\n                                        icon={faFilePdf}\r\n                                        style={{\r\n                                          width: \"50px\",\r\n                                          height: \"50px\",\r\n                                        }}\r\n                                      />\r\n                                    </td>\r\n                                    <td>{image.name}</td>\r\n                                    <td>Admin</td>\r\n                                    <td>{new Date().toLocaleString() + \"\"}</td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          handleDeleteImg(index);\r\n                                        }}\r\n                                      >\r\n                                        <Iconify icon=\"carbon:close-outline\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                ) : (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <img\r\n                                        key={index}\r\n                                        src={URL.createObjectURL(image)}\r\n                                        alt=\"Uploaded image\"\r\n                                        onClick={(e) => handleShowdd(e, image)}\r\n                                      />\r\n                                    </td>\r\n                                    <td>{image.name}</td>\r\n                                    <td>Admin</td>\r\n                                    <td>{new Date().toLocaleString() + \"\"}</td>\r\n\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          handleDeleteImg(index);\r\n                                        }}\r\n                                      >\r\n                                        <Iconify icon=\"carbon:close-outline\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                )\r\n                              )}\r\n                            </tbody>\r\n\r\n                            {isMyStateEmpty ? (\r\n                              <BootstrapDialog\r\n                                onClose={handleClosedd}\r\n                                aria-labelledby=\"customized-dialog-title\"\r\n                                open={showdd}\r\n                              >\r\n                                <IconButton\r\n                                  aria-label=\"close\"\r\n                                  onClick={handleClosedd}\r\n                                  sx={{\r\n                                    position: \"absolute\",\r\n                                    right: 8,\r\n                                    top: 8,\r\n                                    color: (theme) => theme.palette.grey[500],\r\n                                  }}\r\n                                >\r\n                                  <Iconify\r\n                                    icon=\"carbon:close-outline\"\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                  />\r\n                                </IconButton>\r\n                                <DialogContent dividers>\r\n                                  <Typography gutterBottom>\r\n                                    <img\r\n                                      src={selectedImage}\r\n                                      style={{ width: \"100%\", height: \"auto\" }}\r\n                                    />\r\n                                  </Typography>\r\n                                </DialogContent>\r\n                              </BootstrapDialog>\r\n                            ) : (\r\n                              <BootstrapDialog\r\n                                onClose={handleClosedd}\r\n                                aria-labelledby=\"customized-dialog-title\"\r\n                                open={showdd}\r\n                              >\r\n                                <IconButton\r\n                                  aria-label=\"close\"\r\n                                  onClick={handleClosedd}\r\n                                  sx={{\r\n                                    position: \"absolute\",\r\n                                    right: 8,\r\n                                    top: 8,\r\n                                    color: (theme) => theme.palette.grey[500],\r\n                                  }}\r\n                                >\r\n                                  <Iconify icon=\"carbon:close-outline\" />\r\n                                </IconButton>\r\n                                <DialogContent dividers>\r\n                                  <Typography gutterBottom>\r\n                                    <img\r\n                                      style={{ height: \"100%\", width: \"100%\" }}\r\n                                      src={URL.createObjectURL(handalImg)}\r\n                                      alt=\"Uploaded image\"\r\n                                    />\r\n                                  </Typography>\r\n                                </DialogContent>\r\n                              </BootstrapDialog>\r\n                            )}\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 5}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    ></Box>\r\n                    <Grid\r\n                      container\r\n                      xs={12}\r\n                      md={12}\r\n                      justifyContent=\"flex-end\"\r\n                      style={{ paddingRight: \"20px\", marginTop: \"20px\" }}\r\n                    >\r\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          // href={paths.dashboard.work.neworder}\r\n                          variant=\"contained\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                          onClick={onClickChange}\r\n                          disabled={\r\n                            (completeRowID !== undefined &&\r\n                              completeRowID !== \"\" &&\r\n                              completeRowID !== null) ||\r\n                            (selected_Status &&\r\n                              selected_Status.label === \"CLO : CLOSED\")\r\n                          }\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          onClick={onClickCancel}\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    </Grid>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n              {/* Asset Parent Flag model popup */}\r\n              <BootstrapDialog\r\n                onClose={handleCloseModal}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={modalOpenAsset}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Asset No\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleCloseModal}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div className=\"TblSelect\">\r\n                    <GetAssetList\r\n                      onRowClick={handleRowData2}\r\n                      onChangePage={handleRowDataPagechg}\r\n                      onSearchChange={handelRowSearch}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span class=\"TotlFont\">\r\n                      {TotalSearch\r\n                        ? // Content to render if condition1 is true\r\n                          TotalSearch\r\n                        : viewedTotlRows\r\n                        ? // Content to render if condition2 is true\r\n                          TotalAssetNo - viewedTotlRows\r\n                        : TotalAssetNo\r\n                        ? // Content to render if condition3 is true\r\n                          TotalAssetNo\r\n                        : // Content to render if none of the conditions are true\r\n                          0}\r\n                      &nbsp;Asset\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"mlauto\">\r\n                    <Button variant=\"primary\" onClick={handleCloseModal}>\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </BootstrapDialog>\r\n              {/* Asset model popup end*/}\r\n\r\n               {/* Asset Customer Code model popup */}\r\n               <BootstrapDialog\r\n                onClose={handleCloseModalCustomeCode}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={modalOpenAssetCustomerCode}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Customer Code\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleCloseModalCustomeCode}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div className=\"TblSelect\">\r\n                    {/* <AssetCustomerCodeList\r\n                      onRowClick={handleRowData3}\r\n                      onChangePage={handleRowDataPagechg}\r\n                      onSearchChange={handelRowSearch}\r\n                    /> */}\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span class=\"TotlFont\">\r\n                      {TotalSearch\r\n                        ? // Content to render if condition1 is true\r\n                          TotalSearch\r\n                        : viewedTotlRows\r\n                        ? // Content to render if condition2 is true\r\n                          TotalAssetNo - viewedTotlRows\r\n                        : TotalAssetNo\r\n                        ? // Content to render if condition3 is true\r\n                          TotalAssetNo\r\n                        : // Content to render if none of the conditions are true\r\n                          0}\r\n                      &nbsp;Total\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"mlauto\">\r\n                    <Button variant=\"primary\" onClick={handleCloseModalCustomeCode}>\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </BootstrapDialog>\r\n               {/* Asset customer code model popup end*/}\r\n\r\n              {/******************** Status Details ********************/}\r\n              <div>\r\n                <BootstrapDialog\r\n                  onClose={StatushandleClose}\r\n                  aria-labelledby=\"customized-dialog-title\"\r\n                  open={StatusShow}\r\n                  maxWidth=\"lg\"\r\n                  fullWidth\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2 }}\r\n                    id=\"customized-dialog-title\"\r\n                    className=\"dailogTitWork\"\r\n                  >\r\n                    Asset Status Audit\r\n                  </DialogTitle>\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={StatushandleClose}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      right: 8,\r\n                      top: 8,\r\n                      color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                  >\r\n                    <Iconify icon=\"material-symbols:close\" />\r\n                  </IconButton>\r\n                  <DialogContent dividers>\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        maxWidth: \"600px\",\r\n                        marginLeft: \"110px\",\r\n                        marginTop: \"-30px\",\r\n                      }}\r\n                    >\r\n                      <StepContainer>\r\n                        {steps.map(\r\n                          ({\r\n                            step,\r\n                            label,\r\n                            label1,\r\n                            label2,\r\n                            label3,\r\n                            label4,\r\n                            label5,\r\n                          }) => (\r\n                            <div\r\n                              key={step}\r\n                              style={{ position: \"relative\", zIndex: 1 }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  fontSize: \"11px\",\r\n                                  color: \"grey\",\r\n                                  position: \"absolute\",\r\n                                  left: \"-81px\",\r\n                                  top: \"45px\",\r\n                                  width: \"80px\",\r\n                                  height: \"20px\",\r\n                                  borderRadius: \"5%\",\r\n                                  textAlign: \"right\",\r\n                                }}\r\n                              >\r\n                                {label5}\r\n                              </div>\r\n                              <div\r\n                                step={step}\r\n                                style={{\r\n                                  width: \"30px\",\r\n                                  height: \"30px\",\r\n                                  borderRadius: \"50%\",\r\n                                  backgroundColor: \"#4694d1\",\r\n                                  border: `3px solid ${\r\n                                    step === \"completed\" ? \"#0080FF\" : \"#F3E7F3\"\r\n                                  }`,\r\n                                  transition: \"0.4s ease\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  style={{ fontSize: \"15px\", color: \"#f3e7f3\" }}\r\n                                >\r\n                                  {step}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"15px\", color: \"#4a154b\" }}\r\n                                >\r\n                                  {label} ({label1})\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"11px\", color: \"grey\" }}\r\n                                >\r\n                                  Status Update By: {label2} ({label3})\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"11px\", color: \"grey\" }}\r\n                                >\r\n                                  On Start Date: {label4}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                      </StepContainer>\r\n                    </div>\r\n                  </DialogContent>\r\n                </BootstrapDialog>\r\n              </div>\r\n              {/******************** Comments add Details ********************/}\r\n\r\n              {/* single Upload Img Show */}\r\n              <BootstrapDialog\r\n                onClose={UploadImghandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={uploadImgShow}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Selected Image\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={UploadImghandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={imagePreview}\r\n                      alt=\"upload_img\"\r\n                      style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n              {/******************** PM Setup ********************/}\r\n              <BootstrapDialog\r\n                onClose={PMSetuphandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={PMSetupShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                {/* <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  PM Setup\r\n                </DialogTitle> */}\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={PMSetuphandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                 \r\n                    {/* <PmSetup \r\n                    data={{\r\n                        RowID: RowID,\r\n                        WorkOrderNo: WorkOrderNo,\r\n                        Asset_No: AssetNo,\r\n                      }}\r\n                    /> */}\r\n                  \r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n              \r\n              {/******************** WO History ********************/}\r\n              <BootstrapDialog\r\n                onClose={WOHistoryhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={WOHistoryShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n            \r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={WOHistoryhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                 \r\n                    {/* <WoHistory \r\n                    data={{\r\n                        RowID: RowID,\r\n                        WorkOrderNo: WorkOrderNo,\r\n                        Asset_No: AssetNo,\r\n                      }}\r\n                    /> */}\r\n                  \r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n              {/******************** Relocation History ********************/}\r\n              <BootstrapDialog\r\n                onClose={RelocationHistoryhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={RelocationHistoryShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n            \r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={RelocationHistoryhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                    {/* <RelocationHistory \r\n                    data={{\r\n                        RowID: RowID,\r\n                        WorkOrderNo: WorkOrderNo,\r\n                        Asset_No: Asset_No,\r\n                      }}\r\n                    /> */}\r\n                  \r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n               {/******************** Check List ********************/}\r\n               <BootstrapDialog\r\n                onClose={CheckListhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={CheckListShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n            \r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={CheckListhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                    {/* <CheckList \r\n                    data={{\r\n                        RowID: RowID,\r\n                        WorkOrderNo: WorkOrderNo,\r\n                        Asset_No: AssetNo,\r\n                      }}\r\n                    /> */}\r\n                  \r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nCreateNewPmform.propTypes = {\r\n  currentUser: PropTypes.object,\r\n};\r\n"],"names":["_ref","onRowClick","onChangePage","onSearchChange","site_ID","localStorage","getItem","data","setData","useState","selectedRowKeys","setSelectedRowKeys","viewedRows","setViewedRows","window","performance","now","console","log","useEffect","Swal","title","allowOutsideClick","httpCommon","get","then","response","WorkAssetNo","length","catch","error","columns","field","render","rowData","renderIcon","width","ast_mst_asset_no","_jsxs","children","_jsx","Iconify","icon","style","marginRight","marginTop","float","fontSize","color","_Fragment","class","MaterialTable","options","search","paging","pageSize","pageSizeOptions","overflowY","paginationPosition","toolbarButtonAlignment","paginationType","rowStyle","backgroundColor","handleRowClick","event","ast_mst_asset_shortdesc","page","viewedRowsCount","searchText","filteredData","filter","item","toLowerCase","includes","ast_mst_asset_longdesc","ast_mst_work_area","ast_mst_asset_type","handleSearch","MySwal","withReactContent","BootstrapDialog","styled","Dialog","theme","padding","spacing","StepContainer","_templateObject","_taggedTemplateLiteral","_ref2","CreateNewPmform","_ref3","_selected_PmOriginato","_selected_AssetCode$l","_selected_AssetGroupC","_selected_Charge_Cost","_selected_Charge_Cost2","_selected_Charge_Cost3","_selected_Work_Area$l","_selected_Asset_Locat","_selected_Asset_Level","_selected_Work_Group$","_selected_Work_Group$2","_selected_Work_Group$3","_selected_Work_Group$4","currentUser","onPageChange","location","useLocation","state","RowID","PM_no","currentPage","selectedOption","completeRowID","closeRowID","loading","setLoading","PmMstLabel","setPmMstLabel","PmdetLabel","setPmdetLabel","navigate","useNavigate","fileInputRef","useRef","settings","useSettingsContext","currentDate","Date","selectedImages","setSelectedImages","toISOString","slice","selectedImages2","setSelectedImages2","selectedDate","setSelectedDate","selectedPdfFiles","setSelectedPdfFiles","RefImg","setRefImg","selectedImage","setSelectedImage","getDbImg","setDbImg","image","setImage","preview","raw","removedRefItems","setRemovedRefItems","disabledBtn","setDisabledBtn","imageSelect","setImageSelect","name","path","Tabvalue","setTabValue","showdd","setShowdd","handalImg","sethandalImg","handleClosedd","showdd2","setShowdd2","handleClosedd2","Asset_No","setAsset_No","TotalAssetNo","setTotalAssetNo","TotalSearch","setTotalSearch","viewedTotlRows","setViewedTotlRows","AssetNo","setAssetNo","Pm_type","setPm_type","label","value","selected_PmType","setselected_PmType","modalOpenAsset","setModalOpenAsset","modalOpenAssetCustomerCode","setModalOpenAssetCustomerCode","Status","setStatus","selected_Status","setSelected_Status","isCheckedFlag","setIsCheckedFlag","isCheckedLoop","setIsCheckedLoop","isCheckedPmDate","setIsCheckedPmDate","FrequencyCode","setFrequencyCode","selected_FrequencyCode","setSelected_FrequencyCode","PlanPriority","setPlanPriority","selected_PlanPriority","setSelected_PlanPriority","LeadDay","setLeadDay","ShadowGroup","setShadowGroup","PmLPMUOM","setPmLPMUOM","selected_PmLPMUOM","setselected_PmLPMUOM","LPMDate","setLPMDate","LPMClosedDate","setLPMClosedDate","FaultCode","setFaultCode","selected_FaultCode","setselected_FaultCode","NextDueSate","setNextDueDate","NextCreateDate","setNextCreateDate","Short_Description","setShort_Description","PmOriginator","setPmOriginator","selected_PmOriginator","setselected_PmOriginator","Asset_CriFactor","setAsset_CriFactor","selected_CriFactor","setselected_CriFactor","Long_Description","setLong_Description","Area_ID","setArea_ID","Asset_Type","setAsset_Type","selected_AssetType","setselectedAssetType","Asset_Code","setAsset_Code","selected_AssetCode","setselectedAssetCode","Asset_Group_Code","setAsset_Group_Code","selected_AssetGroupCode","setselectedAssetGroupCode","Charge_Cost_Center","setCharge_Cost_Center","selected_Charge_Cost_Center","setSelected_Charge_Cost_Center","Work_Area","setWork_Area","selected_Work_Area","setSelected_Work_Area","Asset_Location","setAsset_Location","selected_Asset_Location","setSelected_Asset_Location","Asset_Level","setAsset_Level","selected_Asset_Level","setSelected_Asset_Level","Work_Group","setWork_Group","selected_Work_Group","setSelected_Work_Group","Permanent_ID","setPermanent_ID","SafetyRequirement","setSafetyRequirement","BarcodeCount","setBarcodeCount","ManufactureCode","setManufactureCode","AssetCost","setAssetCost","ResidualValue","setResidualValue","Permanent_IDFlag","setPermanentIDFlag","CustomerCode","setCustomerCode","selected_Customer_Code","setSelected_Customer_Code","Contract_Account","setContract_Account","selected_Contract_Account","setSelected_Contract_Account","PurchaseDate","setPurchaseDate","Select_PurchaseDate","setSelectPurchaseDate","WarrantyDate","setWarrantyDate","Select_WarrantyDate","setSelectWarrantyDate","Labor_Account","setLabor_Account","selected_Labor_Account","setSelected_Labor_Account","ExpectedLifeYear","setExpectedLifeYear","Material_Account","setMaterial_Account","selected_Material_Account","setSelected_Material_Account","DepreciationMethod","setDepreciationMethod","selected_Depreciation_Method","setSelectedDepreciationMethod","UDFText_1","setUDFText_1","UDFText_2","setUDFText_2","UDFText_3","setUDFText_3","UDFText_4","setUDFText_4","UDFText_5","setUDFText_5","UDFText_6","setUDFText_6","UDFText_7","setUDFText_7","UDFText_8","setUDFText_8","UDFText_9","setUDFText_9","UDFText_10","setUDFText_10","UDFText_11","setUDFText_11","UDFText_12","setUDFText_12","UDFText_13","setUDFText_13","UDFText_14","setUDFText_14","UDFText_15","setUDFText_15","UDFText_16","setUDFText_16","UDFText_17","setUDFText_17","UDFText_18","setUDFText_18","UDFText_19","setUDFText_19","UDFText_20","setUDFText_20","UDFText_21","setUDFText_21","UDFText_22","setUDFText_22","UDFText_23","setUDFText_23","UDFText_24","setUDFText_24","UDFText_25","setUDFText_25","UDFText_26","setUDFText_26","UDFText_27","setUDFText_27","UDFText_28","setUDFText_28","UDFText_29","setUDFText_29","UDFText_30","setUDFText_30","UDFNumber_1","setUDFNumber_1","UDFNumber_2","setUDFNumber_2","UDFNumber_3","setUDFNumber_3","UDFNumber_4","setUDFNumber_4","UDFNumber_5","setUDFNumber_5","UDFNumber_6","setUDFNumber_6","UDFNumber_7","setUDFNumber_7","UDFNumber_8","setUDFNumber_8","UDFNumber_9","setUDFNumber_9","UDFNumber_10","setUDFNumber_10","UDFNumber_11","setUDFNumber_11","UDFNumber_12","setUDFNumber_12","UDFNumber_13","setUDFNumber_13","UDFNumber_14","setUDFNumber_14","UDFNumber_15","setUDFNumber_15","UDFDate_1","setUDFDate_1","UDFDate_2","setUDFDate_2","UDFDate_3","setUDFDate_3","UDFDate_4","setUDFDate_4","UDFDate_5","setUDFDate_5","UDFDate_6","setUDFDate_6","UDFDate_7","setUDFDate_7","UDFDate_8","setUDFDate_8","UDFDate_9","setUDFDate_9","UDFDate_10","setUDFDate_10","UDFDate_11","setUDFDate_11","UDFDate_12","setUDFDate_12","UDFDate_13","setUDFDate_13","UDFDate_14","setUDFDate_14","UDFDate_15","setUDFDate_15","isAssetStatusEmpty","setIsAssetStatusEmpty","isAssetCriticalFactorEmpty","setIsAssetCriticalFactorEmpty","isAssetShortDescEmpty","setIsAssetShortDescEmpty","isAssetTypeEmpty","setIsAssetTypeEmpty","isAssetCodeEmpty","setIsAssetCodeEmpty","isAssetGroupCodeEmpty","setIsAssetGroupCodeEmpty","isAssetWorkAreaEmpty","setIsAssetWorkAreaEmpty","isAssetLocation","setIsAssetLocation","isAssetLeavelEmpty","setIsAssetLeavelEmpty","isAssetCostCenterEmpty","setIsAssetCostCenterEmpty","Plan_Priority","setPlan_Priority","selected_Project_ID","setSelected_Project_ID","selected_Plan_Priority","setSelected_Plan_Priority","Fault_Code","setFault_Code","selected_Fault_Code","setSelected_Fault_Code","Asset_Status","setAsset_Status","Supervisor_ID","setSupervisor_ID","Asset_Laboraccount","setAsset_Laboraccount","Cause_Code","setCause_Code","Action_Code","setAction_Code","Delay_Code","setDelay_Code","Work_Type","setWork_Type","Work_Class","setWork_Class","Original_Periority","setOriginal_Periority","Originator","setOriginator","WorkOrderNo","setWorkOrderNo","selected_Asset_Status","setSelected_Asset_Status","selected_Asset_Group_Code","setSelected_Asset_Group_Code","selected_Originator","setSelected_Originator","Phone","setPhone","OriginationDate","setOriginationDate","DueDate","setDueDate","CorrectiveAction","setCorrectiveAction","selected_Original_Periority","setSelected_Original_Periority","selected_Cause_Code","setSelected_Cause_Code","ScheduleDate","setScheduleDate","selected_Action_Code","setSelected_Action_Code","ExceptionDate","setExceptionDate","selected_Delay_Code","setSelected_Delay_Code","StatusChangeDate","setStatusChangeDate","Project_ID","setProject_ID","selected_Work_Type","setSelected_Work_Type","CompletionDate","setCompletionDate","CompletionDate2","setCompletionDate2","selected_Work_Class","setSelected_Work_Class","CloseDate","setCloseDate","CloseDate2","setCloseDate2","selected_Supervisor_ID","setSelected_Supervisor_ID","Planner","setPlanner","selected_Planner","setSelected_Planner","Approver","setApprover","selected_Approver","setSelected_Approver","Assign_To","setAssign_To","selected_Assign_To","setSelected_Assign_To","Temporary_Asset","setTemporary_Asset","CheckBox_Temporary_Asset","setCheckBox_Temporary_Asset","Approved","setApproved","CheckBox_Approved","setCheckBox_Approved","Safety","setSafety","CheckBox_Safety","setCheckBox_Safety","Credit_Cost_Center","setCredit_Cost_Center","selected_Credit_Cost_Center","setSelected_Credit_Cost_Center","Miscellaneous_Account","setMiscellaneous_Account","selected_Miscellaneous_Account","setSelected_Miscellaneous_Account","Columns","setColumns","Data","AutoNumring","setAutoNumring","UDFNote1","setUDFNote1","Button_save","setButton_save","getDbImgRowId","setDbImgRowId","SpecialOdrResult","setSpecialOdrResult","steps","setsteps","StatushandleClose","setStatusShow","StatusShow","message","setMessage","imageComment","setimageComment","AllCommnet","setAllComment","imagePreview","setImagePreview","selectedImageCommnt","setSelectedImageCommnt","uploadImgShow","setUploadImgShow","UploadImghandleClose","chatContainerRef","isFiledValueEmpty","setIsFiledValueEmpty","isChargeCostEmpty","setIsChargeCostEmpty","isFaultCodeEmpty","setIsFaultCodeEmpty","isOriginalPeriorityEmpty","setIsOriginalPeriorityEmpty","isWorkTypeEmpty","setIsWorkTypeEmpty","isWorkGroupEmpty","setIsWorkGroupEmpty","isAssetNoEmpty","setIsAssetNoEmpty","isCorrectiveValueEmpty","setIsCorrectiveValueEmpty","isCauseCodeValueEmpty","setIsCauseCodeValueEmpty","isActionCodeValueEmpty","setIsActionCodeValueEmpty","isOpenWork","setIsOpenWork","isOpenAsset","setIsOpenAsset","autocompleteRef","assetNoAutocompleteRef","anchorEl","setAnchorEl","PMSetupShow","setPMSetupShow","PMSetuphandleClose","WOHistoryShow","setWOHistoryShow","WOHistoryhandleClose","RelocationHistoryShow","setRelocationHistoryShow","RelocationHistoryhandleClose","CheckListShow","setCheckListShow","CheckListhandleClose","async","get_assetmaster_selected","fetchStatusData","getPMFormLebel","fetchData","status","prm_mst","prm_det","json","post","JSON","stringify","ast_mst_asset_status","ast_sts_desc","ast_mst_cri_factor","ast_cri_desc","ast_mst_perm_id","ast_type_descs","ast_mst_asset_code","ast_cod_desc","ast_mst_asset_grpcode","ast_grp_desc","ast_mst_cost_center","descs","mst_war_desc","ast_mst_asset_locn","ast_loc_desc","ast_mst_ast_lvl","ast_lvl_desc","ast_mst_wrk_grp","wrk_grp_desc","ast_mst_parent_id","ast_mst_safety_rqmts","ast_mst_print_count","ast_det_mfg_cd","ast_det_asset_cost","ast_det_repl_cost","ast_det_depr_method","ast_det_c_account","ast_det_l_account","ast_det_m_account","ast_det_purchase_date","apiDate","date","formattedDate","Moment","toDate","ast_det_warranty_date","ast_det_depr_term","ast_det_cus_code","ast_det_varchar1","ast_det_varchar2","ast_det_varchar3","ast_det_varchar4","ast_det_varchar5","ast_det_varchar6","ast_det_varchar7","ast_det_varchar8","ast_det_varchar9","ast_det_varchar10","ast_det_varchar11","ast_det_varchar12","ast_det_varchar13","ast_det_varchar14","ast_det_varchar15","ast_det_varchar16","ast_det_varchar17","ast_det_varchar18","ast_det_varchar19","ast_det_varchar20","ast_det_varchar21","ast_det_varchar22","ast_det_varchar23","ast_det_varchar24","ast_det_varchar25","ast_det_varchar26","ast_det_varchar27","ast_det_varchar28","ast_det_varchar29","ast_det_varchar30","ast_det_numeric1","ast_det_numeric2","ast_det_numeric3","ast_det_numeric4","ast_det_numeric5","ast_det_numeric6","ast_det_numeric7","ast_det_numeric8","ast_det_numeric9","ast_det_numeric10","ast_det_numeric11","ast_det_numeric12","ast_det_numeric13","ast_det_numeric14","ast_det_numeric15","ast_det_datetime1","ast_det_datetime2","ast_det_datetime3","ast_det_datetime4","ast_det_datetime5","ast_det_datetime6","ast_det_datetime7","ast_det_datetime8","ast_det_datetime9","ast_det_datetime10","ast_det_datetime11","ast_det_datetime12","ast_det_datetime13","ast_det_datetime14","ast_det_datetime15","fetchImgData","text","AssetStatusList","map","ast_sts_status","key","AssetFrequencyCode","prm_fcd_freq_code","prm_fcd_desc","AssetPlanPriority","wrk_pri_pri_cd","wrk_pri_desc","AssetLPMUOM","uom_mst_uom","uom_mst_desc","AssetFaultCode","wrk_flt_fault_cd","wrk_flt_desc","AssetGroupCode","ast_grp_grp_cd","AssetZone","mst_war_work_area","Assetcostcenter","costcenter","Assetwrkgrp","wrk_grp_grp_cd","Assetleavel","ast_lvl_ast_lvl","Assetlocation","ast_loc_ast_loc","AssetType","ast_type_cd","AssetCode","ast_cod_ast_cd","Assetcriticalfactor","ast_cri_cri_factor","Asset_laboraccount","Assetlaboraccount","account","PlanPeriority","AssetStatus","AllImgGet","file_name","attachment","AllRef","openSaveImg","handleDeleteImgApi","ImgIDdlt","updatedImages","handleImgChangeSingle","e","target","files","URL","createObjectURL","file","reader","FileReader","onloadend","result","readAsDataURL","handleClearImg","preventDefault","handleImgChangeSingle2","handleDeleteImg","s","index","isMyStateEmpty","Object","keys","constructor","findCustomizeLabel","columnName","matchingColumn","find","column_name","customize_label","findCustomizeLabelDet","handleEditClick","handleCancelClick","handleCloseModal","handleCloseModalCustomeCode","CustomTextField","_ref4","rightIcons","props","TextField","InputProps","endAdornment","display","flexDirection","IconButton","onClickChange","fire","position","customClass","popup","container","html","showConfirmButton","timer","backdrop","utcOffset","format","PermanentIDFlag","Asset_Critical","setAsset_Critical","Asset_GroupCode","setAsset_GroupCode","Asset_CostCenter","setAsset_CostCenter","Asset_WorkArea","setAsset_WorkArea","Asset_WorkGroup","setAsset_WorkGroup","LaborAccountValue","MaterialAccountValue","ContractAccountValue","CustomerCodeValue","emp_mst_login_id","emp_mst_empl_id","split","trim","date_of_purchase","date_of_Warranty","date_of_1","date_of_2","date_of_3","date_of_4","date_of_5","date_of_6","date_of_7","date_of_8","date_of_9","date_of_10","date_of_11","date_of_12","date_of_13","date_of_14","date_of_15","json_AssetInsert","site_cd","ast_mst_parent_flag","ast_det_modelno","ast_det_depr_date","ast_det_depr_by","ast_det_acc_depr_cost","ast_det_net_book_value","ast_det_dispose_date","ast_det_dispose_by","ast_det_dispose_type","ast_det_dispose_value","asset_type_ID","ImgUpload","audit_user","ast_mst_create_by","ast_aud_originator","ROW_ID","New_Asset","get_date","setDbImgRowIdUpdate","json_AssetUpdate","ast_mst_create_date","ImgGetDbImgRowId","formData","FormData","i","append","headers","Update_Asset","onClickChangeComplete","onClickCancel","scrollChatToBottom","current","scrollTop","scrollHeight","handleClickOriginator","Helmet","content","Container","maxWidth","themeStretch","className","top","zIndex","borderBottom","height","CustomBreadcrumbs","heading","concat","links","action","alignItems","undefined","Button","component","RouterLink","onClick","variant","startIcon","disabled","some","_selected_Status$labe","_selected_Status$labe2","sx","mb","xs","md","Grid","Card","toggleDiv","marginLeft","htmlFor","src","alt","type","justifyContent","require","id","onChange","onClose","open","right","palette","grey","DialogContent","dividers","Box","rowGap","columnGap","gridTemplateColumns","sm","marginBottom","Stack","Typography","size","defaultValue","Autocomplete","join","disableAnimation","renderInput","params","placeholder","ref","pb","fullWidth","direction","Checkbox","checked","inputProps","DateTimePicker","newDate","slotProps","textField","TextareaAutosize","minRows","pt","px","p","Tabs","handleChange","newValue","Tab","role","hidden","getOptionLabel","option","paddingBottom","refrencImg","fontWeight","onSubmit","forEach","multiple","prevSelectedPdfFiles","selectedImagesArray","onload","imageData","base64","push","handleButtonClick","click","endsWith","FontAwesomeIcon","faFilePdf","fileName","binaryData","atob","byteArray","Uint8Array","charCodeAt","blob","Blob","url","openPDFInNewTab","handleShowdata","audit_date","toLocaleString","year","month","day","hour","minute","second","RefImgDlt","removedItem","updatedRefImg","prevRemovedRefItems","handleDeleteReferenceApi","gutterBottom","paddingRight","DialogTitle","m","GetAssetList","handleRowData2","dataLenth","dataa","dataSecond","pageCount","searchTotl","DialogActions","_ref5","step","label1","label2","label3","label4","label5","left","borderRadius","textAlign","border","transition","bottom","maxHeight"],"sourceRoot":""}