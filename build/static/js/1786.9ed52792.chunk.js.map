{"version":3,"file":"static/js/1786.9ed52792.chunk.js","mappings":"wQAiBA,MAEMA,EAFQ,CAAC,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAEtDC,KAAI,CAACC,EAAOC,KAAK,CACpCD,QACAE,IAAKC,EAAAA,GAAMC,MAAMC,MAAMJ,EAAQ,OAGlB,SAASK,IACtB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,GAAI,EACJC,QAAUC,GAAkC,UAAvBA,EAAMC,QAAQC,KAAmB,WAAa,YACnER,UAEFC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAAAT,UACRC,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAChBC,QAAQ,QACRC,MAAO,CACL,CACEC,KAAM,aACNC,KAAMC,EAAAA,EAAMC,YAEd,CAAEH,KAAM,iBAMhBZ,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACN,GAAI,CAAEc,GAAI,IAAKjB,UACxBF,EAAAA,EAAAA,MAACoB,EAAAA,EAAK,CAACC,QAAS,EAAEnB,SAAA,EAChBF,EAAAA,EAAAA,MAACsB,EAAAA,EAAI,CAAApB,SAAA,EACHC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,MAAM,UAClBrB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFqB,IAAK,EACLC,QAAQ,OACRC,oBAAqB,CACnBC,GAAI,iBACJC,GAAI,iBACJC,GAAI,kBAENzB,GAAI,CAAE0B,EAAG,GAAI7B,SAEZX,EAAOC,KAAKwC,IACX7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAAiBC,IAAKF,EAAIvC,MAAO0C,IAAKH,EAAIrC,IAAKU,GAAI,CAAE+B,aAAc,IAA7DJ,EAAIvC,eAKtBO,EAAAA,EAAAA,MAACsB,EAAAA,EAAI,CAAApB,SAAA,EACHC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,MAAM,kBAClBrB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFqB,IAAK,EACLC,QAAQ,OACRC,oBAAqB,CACnBC,GAAI,iBACJC,GAAI,iBACJC,GAAI,kBAENzB,GAAI,CAAE0B,EAAG,GAAI7B,SAEZX,EAAOC,KAAKwC,IACXhC,EAAAA,EAAAA,MAACoB,EAAAA,EAAK,CAAiBC,QAAS,EAAEnB,SAAA,EAChCC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACC,QAAQ,WAAWjC,GAAI,CAAEkC,MAAO,kBAAmBrC,SAC5D8B,EAAIvC,SAGPU,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,IAAKF,EAAIvC,MAAO0C,IAAKH,EAAIrC,IAAKF,MAAOuC,EAAIvC,MAAOY,GAAI,CAAE+B,aAAc,OALjEJ,EAAIvC,qBAchC,CCxFe,SAAS+C,IACtB,OACExC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACsC,EAAAA,GAAM,CAAAvC,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBAGTC,EAAAA,EAAAA,KAACJ,EAAS,MAGhB,C","sources":["sections/_examples/extra/image-view.js","pages/components/extra/image.js"],"sourcesContent":["// @mui\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\n// routes\nimport { paths } from 'src/routes/paths';\n// _mock\nimport { _mock } from 'src/_mock';\n// components\nimport Image from 'src/components/image';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nconst RATIO = ['4/3', '3/4', '6/4', '4/6', '16/9', '9/16', '21/9', '9/21', '1/1'];\n\nconst IMAGES = RATIO.map((ratio, index) => ({\n  ratio,\n  url: _mock.image.cover(index + 1),\n}));\n\nexport default function ImageView() {\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Image\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Image' },\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"List\" />\n            <Box\n              gap={3}\n              display=\"grid\"\n              gridTemplateColumns={{\n                xs: 'repeat(2, 1fr)',\n                sm: 'repeat(3, 1fr)',\n                md: 'repeat(4, 1fr)',\n              }}\n              sx={{ p: 3 }}\n            >\n              {IMAGES.map((img) => (\n                <Image key={img.ratio} alt={img.ratio} src={img.url} sx={{ borderRadius: 2 }} />\n              ))}\n            </Box>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Aspect Ratio\" />\n            <Box\n              gap={3}\n              display=\"grid\"\n              gridTemplateColumns={{\n                xs: 'repeat(2, 1fr)',\n                sm: 'repeat(3, 1fr)',\n                md: 'repeat(4, 1fr)',\n              }}\n              sx={{ p: 3 }}\n            >\n              {IMAGES.map((img) => (\n                <Stack key={img.ratio} spacing={1}>\n                  <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n                    {img.ratio}\n                  </Typography>\n\n                  <Image alt={img.ratio} src={img.url} ratio={img.ratio} sx={{ borderRadius: 2 }} />\n                </Stack>\n              ))}\n            </Box>\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport ImageView from 'src/sections/_examples/extra/image-view';\n\n// ----------------------------------------------------------------------\n\nexport default function ImagePage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra: Image</title>\n      </Helmet>\n\n      <ImageView />\n    </>\n  );\n}\n"],"names":["IMAGES","map","ratio","index","url","_mock","image","cover","ImageView","_jsxs","_Fragment","children","_jsx","Box","sx","py","bgcolor","theme","palette","mode","Container","CustomBreadcrumbs","heading","links","name","href","paths","components","my","Stack","spacing","Card","CardHeader","title","gap","display","gridTemplateColumns","xs","sm","md","p","img","Image","alt","src","borderRadius","Typography","variant","color","ImagePage","Helmet"],"sourceRoot":""}