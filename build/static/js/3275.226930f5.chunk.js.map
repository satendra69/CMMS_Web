{"version":3,"file":"static/js/3275.226930f5.chunk.js","mappings":"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","sources":["sections/Inventory/InventoryMaster/Table/InventoryMasterLocationListForm.js","sections/Inventory/InventoryMaster/Table/InventoryMasterTaxCodeListForm.js","sections/Inventory/InventoryMaster/Form/InventoryForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Swal from \"sweetalert2\";\r\nimport MaterialTable from \"material-table\";\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst InventoryMasterLocation = ({ onRowClick, onChangePage, onSearchChange }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [data, setData] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(null);\r\n  const [viewedRows, setViewedRows] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    httpCommon\r\n      .get(\"/get_inventoryMasterFormMasterLocation.php?site_cd=\" + site_ID)\r\n      .then((response) => {\r\n        Swal.close();\r\n        setData(response.data.data.MasterLocation);\r\n        onRowClick(response.data.data.MasterLocation.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //Table colums\r\n  const columns = [\r\n    {\r\n      title: \"Stock Location\",\r\n      field: \"loc_mst_stk_loc\",\r\n      render: (rowData) => renderIcon(rowData),\r\n    },\r\n    { title: \"Description\", field: \"loc_mst_desc\" },\r\n    { title: \"Master Location\", field: \"loc_mst_mst_loc_cd\",width: 40 },\r\n    { title: \"Area Code\", field: \"loc_mst_area_loc_cd\" },\r\n    { title: \"Bin ID\", field: \"loc_mst_bin_id\",width: 150 },\r\n  ];\r\n\r\n  const renderIcon = (rowData) => {\r\n    if (rowData.loc_mst_stk_loc === selectedRowKeys) {\r\n      return (\r\n        <div>\r\n          <Iconify\r\n            icon=\"mingcute:save-fill\"\r\n            style={{\r\n              marginRight: \"0px\",\r\n              marginTop: \"2px\",\r\n              float: \"left\",\r\n              fontSize: \"16px\",\r\n              color: \"#289e49\",\r\n            }}\r\n          />\r\n          {rowData.loc_mst_stk_loc}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{rowData.loc_mst_stk_loc}</div>;\r\n  };\r\n  const handleRowClick = (event, rowData) => {\r\n    if (selectedRowKeys && selectedRowKeys === rowData.loc_mst_stk_loc) {\r\n      onRowClick(data.length, rowData.loc_mst_stk_loc, 1);\r\n    }\r\n    setSelectedRowKeys(rowData.loc_mst_stk_loc);\r\n    onRowClick(data.length, rowData.loc_mst_stk_loc);\r\n  };\r\n  const handlePageChange = (page) => {\r\n    const pageSize = 10; // Assuming each page displays 10 rows\r\n    const viewedRowsCount = page * pageSize;\r\n    setViewedRows(viewedRowsCount);\r\n    onChangePage(viewedRowsCount);\r\n  };\r\n\r\n\r\nconst handleSearch = (searchText) => {\r\n    // Filter the data based on the search text\r\n    const filteredData = data.filter((item) => {\r\n      const searchTextLower = searchText.toLowerCase();\r\n  \r\n      return (\r\n        (item.loc_mst_stk_loc && item.loc_mst_stk_loc.toLowerCase().includes(searchTextLower)) ||\r\n        (item.loc_mst_desc && item.loc_mst_desc.toLowerCase().includes(searchTextLower)) ||\r\n        (item.loc_mst_mst_loc_cd && item.loc_mst_mst_loc_cd.toLowerCase().includes(searchTextLower)) ||\r\n        (item.loc_mst_area_loc_cd && item.loc_mst_area_loc_cd.toLowerCase().includes(searchTextLower)) ||\r\n        (item.loc_mst_bin_id && item.loc_mst_bin_id.toLowerCase().includes(searchTextLower))\r\n      );\r\n    });\r\n  \r\n    onSearchChange(filteredData.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"container Ordertbl\">\r\n          <MaterialTable\r\n            title=\"\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              pageSize: 10,\r\n              pageSizeOptions: false,\r\n              overflowY: \"auto\",\r\n              paginationPosition: \"top\",\r\n              toolbarButtonAlignment: \"right\",\r\n              paginationType: \"normal\",\r\n              rowStyle: (rowData) => ({\r\n                backgroundColor:\r\n                  rowData.loc_mst_stk_loc === selectedRowKeys\r\n                    ? \"#a9ebb9\"\r\n                    : \"#FFF\",\r\n                fontSize: \"12px !important\",\r\n              }),\r\n            }}\r\n            onRowClick={handleRowClick}\r\n            onChangePage={handlePageChange}\r\n            onSearchChange={(searchText) => handleSearch(searchText)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryMasterLocation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Swal from \"sweetalert2\";\r\nimport MaterialTable from \"material-table\";\r\nimport httpCommon from \"src/http-common\";\r\n\r\nconst InventoryMasterTaxCode = ({ onRowClick, onChangePage, onSearchChange }) => {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  const [data, setData] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState(null);\r\n  const [viewedRows, setViewedRows] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Swal.fire({ title: \"Please Wait !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n    httpCommon\r\n      .get(\"/get_inventoryMasterFormTaxCode.php?site_cd=\" + site_ID)\r\n      .then((response) => {\r\n        Swal.close();\r\n        setData(response.data.data.TaxCode);\r\n        onRowClick(response.data.data.TaxCode.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n       \r\n  //Table colums\r\n  const columns = [\r\n    {\r\n      title: \"Tax Code\",\r\n      field: \"tax_mst_tax_cd\",\r\n      render: (rowData) => renderIcon(rowData),\r\n      cellStyle: { width: 100 },\r\n      headerStyle: { width: 100 },\r\n    },\r\n    { title: \"Description\", field: \"tax_mst_desc\", cellStyle: { width: 200 }, },\r\n    { title: \"Tax Rate\", field: \"tax_mst_tax_rate\",width: 40 },\r\n   \r\n  ];\r\n\r\n  const renderIcon = (rowData) => {\r\n    if (rowData.tax_mst_tax_cd === selectedRowKeys) {\r\n      return (\r\n        <div>\r\n          <Iconify\r\n            icon=\"mingcute:save-fill\"\r\n            style={{\r\n              marginRight: \"0px\",\r\n              marginTop: \"2px\",\r\n              float: \"left\",\r\n              fontSize: \"16px\",\r\n              color: \"#289e49\",\r\n            }}\r\n          />\r\n          {rowData.tax_mst_tax_cd}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{rowData.tax_mst_tax_cd}</div>;\r\n  };\r\n  const handleRowClick = (event, rowData) => {\r\n    if (selectedRowKeys && selectedRowKeys === rowData.tax_mst_tax_cd) {\r\n      onRowClick(data.length, rowData.tax_mst_tax_cd, 1);\r\n    }\r\n    setSelectedRowKeys(rowData.tax_mst_tax_cd);\r\n    onRowClick(data.length, rowData.tax_mst_tax_cd);\r\n  };\r\n  const handlePageChange = (page) => {\r\n    const pageSize = 10; // Assuming each page displays 10 rows\r\n    const viewedRowsCount = page * pageSize;\r\n    setViewedRows(viewedRowsCount);\r\n    onChangePage(viewedRowsCount);\r\n  };\r\n\r\n\r\nconst handleSearch = (searchText) => {\r\n    // Filter the data based on the search text\r\n    const filteredData = data.filter((item) => {\r\n      const searchTextLower = searchText.toLowerCase();\r\n  \r\n      return (\r\n        (item.tax_mst_tax_cd && item.tax_mst_tax_cd.toLowerCase().includes(searchTextLower)) ||\r\n        (item.tax_mst_desc && item.tax_mst_desc.toLowerCase().includes(searchTextLower)) ||\r\n        (item.tax_mst_tax_rate && item.tax_mst_tax_rate.toLowerCase().includes(searchTextLower)) ||\r\n        (item.loc_mst_area_loc_cd && item.loc_mst_area_loc_cd.toLowerCase().includes(searchTextLower)) ||\r\n        (item.loc_mst_bin_id && item.loc_mst_bin_id.toLowerCase().includes(searchTextLower))\r\n      );\r\n    });\r\n  \r\n    onSearchChange(filteredData.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"container Ordertbl\">\r\n          <MaterialTable\r\n            title=\"\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              pageSize: 10,\r\n              pageSizeOptions: false,\r\n              overflowY: \"auto\",\r\n              paginationPosition: \"top\",\r\n              toolbarButtonAlignment: \"right\",\r\n              paginationType: \"normal\",\r\n              rowStyle: (rowData) => ({\r\n                backgroundColor:\r\n                  rowData.tax_mst_tax_cd === selectedRowKeys\r\n                    ? \"#a9ebb9\"\r\n                    : \"#FFF\",\r\n                fontSize: \"12px !important\",\r\n              }),\r\n            }}\r\n            onRowClick={handleRowClick}\r\n            onChangePage={handlePageChange}\r\n            onSearchChange={(searchText) => handleSearch(searchText)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryMasterTaxCode;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n// @mui\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Container from \"@mui/material/Container\";\r\n// @bootstrap\r\n\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\n\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Checkbox ,Radio} from \"@mui/material\";\r\n\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\n\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\n// utils\r\n\r\n// routes\r\nimport { RouterLink } from \"src/routes/components\";\r\n\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\nimport httpCommon from \"src/http-common\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\n// Toastfy\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport { ToastContainer, toast, Bounce } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// components\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport Iconify from \"src/components/iconify\";\r\n\r\n// import WorkOrderAssetNo from \"../WorkOrderAssetNo\";\r\n\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport AssetParentIdList from \"src/sections/Asset/AssetParentIdList\";\r\nimport InventoryMasterLocation from \"../Table/InventoryMasterLocationListForm\";\r\n\r\n\r\nimport PmSetup from \"src/sections/Asset/Asset_module/PmSetup\";\r\n//import WoHistory from \"../Asset_module/AssetWoHistory\";\r\nimport WoHistory from \"src/sections/Asset/Asset_module/AssetWoHistory\";\r\nimport RelocationHistory from \"src/sections/Asset/Asset_module/RelocationHistory\";\r\nimport CheckList from \"src/sections/Asset/Asset_module/AssetCheckList\";\r\nimport AssetSpares from \"src/sections/Asset/Asset_module/AssetSpares\";\r\nimport AssetUsage from \"src/sections/Asset/Asset_module/AssetUsage\";\r\nimport AssetSpecification from \"src/sections/Asset/Asset_module/AssetSpecification\";\r\nimport InventoryMasterTaxCode from \"../Table/InventoryMasterTaxCodeListForm\";\r\n\r\n//import WorkOrderSpecialOrder from \"../component_module/Planning/WorkOrderSpecialOrder\";\r\nconst MySwal = withReactContent(Swal);\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\nconst StepContainer = styled(\"div\")`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 40px;\r\n  position: relative;\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: #4694d1;\r\n    height: 90%;\r\n    width: 2px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: 15px;\r\n  }\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: #f3e7f3;\r\n    height: ${({ width }) => width};\r\n    width: 2px;\r\n    top: 45%;\r\n    transition: 0.4s ease;\r\n    transform: translateY(-50%);\r\n    left: 14px;\r\n  }\r\n`;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InventoryForm({ currentUser, onPageChange }) {\r\n  let site_ID = localStorage.getItem(\"site_ID\");\r\n  let emp_mst_name = localStorage.getItem(\"emp_mst_name\");\r\n  const location = useLocation();\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"error\");\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const state = location.state || {};\r\n  const {\r\n    RowID,\r\n    Ast_no,\r\n    DuplicatRowid,\r\n    DupRowID,\r\n    DupAst_no,\r\n    currentPage,\r\n    selectedOption,\r\n  } = state || {};\r\n  // console.log(\"RowID____update\",RowID);\r\n  const { completeRowID } = location.state || {};\r\n  const { closeRowID } = location.state || {};\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [itmMstLabel, setItmMstLabel] = useState([]);\r\n  const [itmdetLabel, setItmdetLabel] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const fileInputRef = useRef(null);\r\n  const settings = useSettingsContext();\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [selectedImages2, setSelectedImages2] = useState([]);\r\n\r\n  const [selectedPdfFiles, setSelectedPdfFiles] = useState([]);\r\n  const [RefImg, setRefImg] = useState([]);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [getDbImg, setDbImg] = useState();\r\n  const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n  const [removedRefItems, setRemovedRefItems] = useState([]);\r\n  const [disabledBtn, setDisabledBtn] = useState(false);\r\n  const [imageSelect, setImageSelect] = useState({ name: \"\", path: \"\" });\r\n  const [Tabvalue, setTabValue] = useState(0);\r\n\r\n  const [showdd, setShowdd] = useState(false);\r\n  const [handalImg, sethandalImg] = useState({});\r\n  const handleClosedd = () => setShowdd(false);\r\n  const [showdd2, setShowdd2] = useState(false);\r\n  const handleClosedd2 = () => setShowdd2(false);\r\n\r\n  const [Asset_No, setAsset_No] = useState(\"\");\r\n  const [TotalAssetNo, setTotalAssetNo] = useState(0);\r\n  const [TotalSearch, setTotalSearch] = useState(\"\");\r\n  const [viewedTotlRows, setViewedTotlRows] = useState(0);\r\n\r\n  // form filed state\r\n  const [AssetNo, setAssetNo] = useState(\"\");\r\n  const [Status, setStatus] = useState([]);\r\n  const [selected_Status, setSelected_Status] = useState([]);\r\n\r\n  const [Asset_CriFactor, setAsset_CriFactor] = useState([]);\r\n  const [selected_CriFactor, setselected_CriFactor] = useState([]);\r\n\r\n  const [Area_ID, setArea_ID] = useState(\"\");\r\n\r\n  const [Asset_Type, setAsset_Type] = useState([]);\r\n  const [selected_AssetType, setselectedAssetType] = useState([]);\r\n\r\n  const [Asset_Code, setAsset_Code] = useState([]);\r\n  const [selected_AssetCode, setselectedAssetCode] = useState([]);\r\n\r\n  const [Asset_Group_Code, setAsset_Group_Code] = useState([]);\r\n  const [selected_AssetGroupCode, setselectedAssetGroupCode] = useState([]);\r\n\r\n  const [Charge_Cost_Center, setCharge_Cost_Center] = useState([]);\r\n  const [selected_Charge_Cost_Center, setSelected_Charge_Cost_Center] =\r\n    useState([]);\r\n\r\n  const [Work_Area, setWork_Area] = useState([]);\r\n  const [selected_Work_Area, setSelected_Work_Area] = useState([]);\r\n\r\n  const [Asset_Location, setAsset_Location] = useState([]);\r\n  const [selected_Asset_Location, setSelected_Asset_Location] = useState([]);\r\n\r\n  const [Asset_Level, setAsset_Level] = useState([]);\r\n  const [selected_Asset_Level, setSelected_Asset_Level] = useState([]);\r\n\r\n  const [Work_Group, setWork_Group] = useState([]);\r\n  const [selected_Work_Group, setSelected_Work_Group] = useState([]);\r\n\r\n  const [Permanent_ID, setPermanent_ID] = useState(0);\r\n\r\n  const [SafetyRequirement, setSafetyRequirement] = useState(\"\");\r\n  const [BarcodeCount, setBarcodeCount] = useState(\"0\");\r\n  const [ManufactureCode, setManufactureCode] = useState(\"\");\r\n  const [AssetCost, setAssetCost] = useState(\"\");\r\n  const [ResidualValue, setResidualValue] = useState([]);\r\n  const [Permanent_IDFlag, setPermanentIDFlag] = useState([]);\r\n  const [CustomerCode, setCustomerCode] = useState(\"\");\r\n  const [selected_Customer_Code, setSelected_Customer_Code] = useState([]);\r\n\r\n  const [Contract_Account, setContract_Account] = useState([]);\r\n  const [selected_Contract_Account, setSelected_Contract_Account] = useState(\r\n    []\r\n  );\r\n  const [PurchaseDate, setPurchaseDate] = useState(new Date());\r\n  const [Select_PurchaseDate, setSelectPurchaseDate] = useState(\"\");\r\n\r\n  const [WarrantyDate, setWarrantyDate] = useState(new Date());\r\n  const [Select_WarrantyDate, setSelectWarrantyDate] = useState(\"\");\r\n\r\n  const [Labor_Account, setLabor_Account] = useState([]);\r\n  const [selected_Labor_Account, setSelected_Labor_Account] = useState([]);\r\n\r\n  const [ExpectedLifeYear, setExpectedLifeYear] = useState(\"\");\r\n\r\n  const [Material_Account, setMaterial_Account] = useState([]);\r\n  const [selected_Material_Account, setSelected_Material_Account] = useState(\r\n    []\r\n  );\r\n\r\n  const [DepreciationMethod, setDepreciationMethod] = useState([\r\n    { label: \"Straight-Line\", value: \"SL\" },\r\n    { label: \"Declining-Balance\", value: \"DB\" },\r\n    { label: \"Double-Declining\", value: \"DD\" },\r\n  ]);\r\n  const [selected_Depreciation_Method, setSelectedDepreciationMethod] =\r\n    useState([]);\r\n\r\n  const [UDFText_1, setUDFText_1] = useState(\"\");\r\n  const [UDFText_2, setUDFText_2] = useState(\"\");\r\n  \r\n  const [UDFText_11, setUDFText_11] = useState(\"\");\r\n  const [UDFText_12, setUDFText_12] = useState(\"\");\r\n  const [UDFText_13, setUDFText_13] = useState(\"\");\r\n  const [UDFText_14, setUDFText_14] = useState(\"\");\r\n  const [UDFText_15, setUDFText_15] = useState(\"\");\r\n  const [UDFText_16, setUDFText_16] = useState(\"\");\r\n  const [UDFText_17, setUDFText_17] = useState(\"\");\r\n  const [UDFText_18, setUDFText_18] = useState(\"\");\r\n  const [UDFText_19, setUDFText_19] = useState(\"\");\r\n  const [UDFText_20, setUDFText_20] = useState(\"\");\r\n  const [UDFText_21, setUDFText_21] = useState(\"\");\r\n  const [UDFText_22, setUDFText_22] = useState(\"\");\r\n  const [UDFText_23, setUDFText_23] = useState(\"\");\r\n  const [UDFText_24, setUDFText_24] = useState(\"\");\r\n  const [UDFText_25, setUDFText_25] = useState(\"\");\r\n  const [UDFText_26, setUDFText_26] = useState(\"\");\r\n  const [UDFText_27, setUDFText_27] = useState(\"\");\r\n  const [UDFText_28, setUDFText_28] = useState(\"\");\r\n  const [UDFText_29, setUDFText_29] = useState(\"\");\r\n  const [UDFText_30, setUDFText_30] = useState(\"\");\r\n\r\n  \r\n  const [UDFNumber_6, setUDFNumber_6] = useState(\"0.00\");\r\n  const [UDFNumber_7, setUDFNumber_7] = useState(\"0.00\");\r\n  const [UDFNumber_8, setUDFNumber_8] = useState(\"0.00\");\r\n  const [UDFNumber_9, setUDFNumber_9] = useState(\"0.00\");\r\n  const [UDFNumber_10, setUDFNumber_10] = useState(\"0.00\");\r\n  const [UDFNumber_11, setUDFNumber_11] = useState(\"0.00\");\r\n  const [UDFNumber_12, setUDFNumber_12] = useState(\"0.00\");\r\n  const [UDFNumber_13, setUDFNumber_13] = useState(\"0.00\");\r\n  const [UDFNumber_14, setUDFNumber_14] = useState(\"0.00\");\r\n  const [UDFNumber_15, setUDFNumber_15] = useState(\"0.00\");\r\n\r\n \r\n  const [UDFDate_6, setUDFDate_6] = useState(new Date());\r\n  const [UDFDate_7, setUDFDate_7] = useState(new Date());\r\n  const [UDFDate_8, setUDFDate_8] = useState(new Date());\r\n  const [UDFDate_9, setUDFDate_9] = useState(new Date());\r\n  const [UDFDate_10, setUDFDate_10] = useState(new Date());\r\n  const [UDFDate_11, setUDFDate_11] = useState(new Date());\r\n  const [UDFDate_12, setUDFDate_12] = useState(new Date());\r\n  const [UDFDate_13, setUDFDate_13] = useState(new Date());\r\n  const [UDFDate_14, setUDFDate_14] = useState(new Date());\r\n  const [UDFDate_15, setUDFDate_15] = useState(new Date());\r\n\r\n  const [isAssetStatusEmpty, setIsAssetStatusEmpty] = useState(false);\r\n  const [isAssetCriticalFactorEmpty, setIsAssetCriticalFactorEmpty] =\r\n    useState(false);\r\n  const [isAssetShortDescEmpty, setIsAssetShortDescEmpty] = useState(false);\r\n  const [isAssetTypeEmpty, setIsAssetTypeEmpty] = useState(false);\r\n  const [isAssetCodeEmpty, setIsAssetCodeEmpty] = useState(false);\r\n  const [isAssetGroupCodeEmpty, setIsAssetGroupCodeEmpty] = useState(false);\r\n  const [isAssetWorkAreaEmpty, setIsAssetWorkAreaEmpty] = useState(false);\r\n  const [isAssetLocation, setIsAssetLocation] = useState(false);\r\n  const [isAssetLeavelEmpty, setIsAssetLeavelEmpty] = useState(false);\r\n  const [isAssetCostCenterEmpty, setIsAssetCostCenterEmpty] = useState(false);\r\n\r\n  const [Plan_Priority, setPlan_Priority] = useState([]);\r\n  const [selected_Project_ID, setSelected_Project_ID] = useState([]);\r\n  const [selected_Plan_Priority, setSelected_Plan_Priority] = useState([]);\r\n\r\n  const [Fault_Code, setFault_Code] = useState([]);\r\n  const [selected_Fault_Code, setSelected_Fault_Code] = useState([]);\r\n  const [Asset_Status, setAsset_Status] = useState([]);\r\n\r\n  const [Supervisor_ID, setSupervisor_ID] = useState([]);\r\n\r\n  const [Asset_Laboraccount, setAsset_Laboraccount] = useState([]);\r\n\r\n  const [Cause_Code, setCause_Code] = useState([]);\r\n  const [Action_Code, setAction_Code] = useState([]);\r\n  const [Delay_Code, setDelay_Code] = useState([]);\r\n  const [Work_Type, setWork_Type] = useState([]);\r\n  const [Work_Class, setWork_Class] = useState([]);\r\n  const [Original_Periority, setOriginal_Periority] = useState([]);\r\n\r\n  const [Originator, setOriginator] = useState([]);\r\n  const [WorkOrderNo, setWorkOrderNo] = useState(\"\");\r\n\r\n  const [selected_Asset_Status, setSelected_Asset_Status] = useState([]);\r\n  const [selected_Asset_Group_Code, setSelected_Asset_Group_Code] = useState(\r\n    []\r\n  );\r\n\r\n  const [selected_Originator, setSelected_Originator] = useState([]);\r\n\r\n  const [Phone, setPhone] = useState(\"\");\r\n  const [OriginationDate, setOriginationDate] = useState(new Date());\r\n  const [DueDate, setDueDate] = useState(new Date());\r\n  const [CorrectiveAction, setCorrectiveAction] = useState(\"\");\r\n  const [selected_Original_Periority, setSelected_Original_Periority] =\r\n    useState([]);\r\n  const [selected_Cause_Code, setSelected_Cause_Code] = useState([]);\r\n  const [ScheduleDate, setScheduleDate] = useState();\r\n  const [selected_Action_Code, setSelected_Action_Code] = useState([]);\r\n  const [ExceptionDate, setExceptionDate] = useState();\r\n  const [selected_Delay_Code, setSelected_Delay_Code] = useState([]);\r\n  const [StatusChangeDate, setStatusChangeDate] = useState();\r\n  const [Project_ID, setProject_ID] = useState([]);\r\n\r\n  const [selected_Work_Type, setSelected_Work_Type] = useState([]);\r\n  const [CompletionDate, setCompletionDate] = useState();\r\n  const [CompletionDate2, setCompletionDate2] = useState(new Date());\r\n\r\n  const [selected_Work_Class, setSelected_Work_Class] = useState([]);\r\n  const [CloseDate, setCloseDate] = useState();\r\n  const [CloseDate2, setCloseDate2] = useState(new Date());\r\n  const [selected_Supervisor_ID, setSelected_Supervisor_ID] = useState([]);\r\n  const [Planner, setPlanner] = useState([]);\r\n  const [selected_Planner, setSelected_Planner] = useState([]);\r\n\r\n  const [Approver, setApprover] = useState([]);\r\n  const [selected_Approver, setSelected_Approver] = useState([]);\r\n\r\n  const [Assign_To, setAssign_To] = useState([]);\r\n  const [selected_Assign_To, setSelected_Assign_To] = useState([]);\r\n\r\n  const [Temporary_Asset, setTemporary_Asset] = useState(false);\r\n  const [CheckBox_Temporary_Asset, setCheckBox_Temporary_Asset] = useState(\"0\");\r\n\r\n  const [Approved, setApproved] = useState(false);\r\n  const [CheckBox_Approved, setCheckBox_Approved] = useState(\"0\");\r\n\r\n  const [Safety, setSafety] = useState(false);\r\n  const [CheckBox_Safety, setCheckBox_Safety] = useState(\"0\");\r\n\r\n  const [Credit_Cost_Center, setCredit_Cost_Center] = useState([]);\r\n  const [selected_Credit_Cost_Center, setSelected_Credit_Cost_Center] =\r\n    useState([]);\r\n\r\n  const [Miscellaneous_Account, setMiscellaneous_Account] = useState([]);\r\n  const [selected_Miscellaneous_Account, setSelected_Miscellaneous_Account] =\r\n    useState([]);\r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n  const [AutoNumring, setAutoNumring] = useState(\"\");\r\n\r\n  const [UDFNote1, setUDFNote1] = useState(\"\");\r\n\r\n  const [Button_save, setButton_save] = useState(\"\");\r\n  const [getDbImgRowId, setDbImgRowId] = useState(\"\");\r\n  const [SpecialOdrResult, setSpecialOdrResult] = useState([]);\r\n\r\n  const [steps, setsteps] = useState([]);\r\n  const StatushandleClose = () => setStatusShow(false);\r\n\r\n  const [StatusShow, setStatusShow] = useState(false);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [imageComment, setimageComment] = useState(null);\r\n  const messageRef = useRef(null);\r\n  const [AllCommnet, setAllComment] = useState([]);\r\n\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const fileInputRef2 = useRef(null);\r\n  const [selectedImageCommnt, setSelectedImageCommnt] = useState(null);\r\n\r\n  const [uploadImgShow, setUploadImgShow] = useState(false);\r\n  const UploadImghandleClose = () => setUploadImgShow(false);\r\n  const chatContainerRef = useRef(null);\r\n  const [isFiledValueEmpty, setIsFiledValueEmpty] = useState(false);\r\n\r\n  const [isChargeCostEmpty, setIsChargeCostEmpty] = useState(false);\r\n  const [isFaultCodeEmpty, setIsFaultCodeEmpty] = useState(false);\r\n  const [isOriginalPeriorityEmpty, setIsOriginalPeriorityEmpty] =\r\n    useState(false);\r\n  const [isWorkTypeEmpty, setIsWorkTypeEmpty] = useState(false);\r\n  const [isWorkGroupEmpty, setIsWorkGroupEmpty] = useState(false);\r\n  const [isAssetNoEmpty, setIsAssetNoEmpty] = useState(false);\r\n  const [isCorrectiveValueEmpty, setIsCorrectiveValueEmpty] = useState(false);\r\n  const [isCauseCodeValueEmpty, setIsCauseCodeValueEmpty] = useState(false);\r\n  const [isActionCodeValueEmpty, setIsActionCodeValueEmpty] = useState(false);\r\n  const [isOpenWork, setIsOpenWork] = useState(true);\r\n  const [isOpenAsset, setIsOpenAsset] = useState(true);\r\n\r\n  const autocompleteRef = useRef(null);\r\n  const assetNoAutocompleteRef = useRef(null);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [PMSetupShow, setPMSetupShow] = useState(false);\r\n  const PMSetuphandleClose = () => setPMSetupShow(false);\r\n  const PMSetuphandleShow = () => setPMSetupShow(true);\r\n\r\n  const [WOHistoryShow, setWOHistoryShow] = useState(false);\r\n  const WOHistoryhandleClose = () => setWOHistoryShow(false);\r\n  const WOHistoryhandleShow = () => setWOHistoryShow(true);\r\n\r\n  const [RelocationHistoryShow, setRelocationHistoryShow] = useState(false);\r\n  const RelocationHistoryhandleClose = () => setRelocationHistoryShow(false);\r\n  const RelocationHistoryhandleShow = () => setRelocationHistoryShow(true);\r\n\r\n  const [CheckListShow, setCheckListShow] = useState(false);\r\n  const CheckListhandleClose = () => setCheckListShow(false);\r\n  const CheckListhandleShow = () => setCheckListShow(true);\r\n\r\n  const[InventoryMandatoryFiled, setInventoryMandatoryFiled] = useState([]);\r\n  const [errorField, setErrorField] = useState(null);\r\n\r\n  // console.log(\"InventoryMandatoryFiled____\",InventoryMandatoryFiled);\r\n  /*   new state added by satya 24-5-2024 */\r\n\r\n  const [type, setType] = useState([\r\n    { label: \"Stock\", value: \"P\" },\r\n    { label: \"Tool\", value: \"T\" },\r\n    { label: \"Serialize\", value: \"S\" },\r\n    { label: \"Serialize With Asset\", value: \"Z\" },\r\n  ]);\r\n\r\n\r\n\r\n  const [selected_Type, setSelected_Type] = useState([]);\r\n\r\n  const [stockNo, setStockNo] = useState([]);\r\n  const [stockNoText, setStockNoText] = useState([]);\r\n\r\n  const [commodity, setCommodity] = useState([]);\r\n  const [selected_Commodity, setSelected_Commodity] = useState([]);\r\n\r\n  const [stockGroup, setStockGroup] = useState([]);\r\n  const [selected_stockGroup, setSelected_stockGroup] = useState([]);\r\n\r\n  const [orderRule, setOrderRule] = useState([]);\r\n  const [selected_orderRule, setSelected_orderRule] = useState([]);\r\n\r\n  const [costCenter, setCostCenter] = useState([]);\r\n  const [selected_costCenter, setSelected_costCenter] = useState([]);\r\n\r\n  const [account, setAccount] = useState([]);\r\n  const [selected_account, setSelected_account] = useState([]);\r\n\r\n  const [Short_Description, setShort_Description] = useState(\"\");\r\n  const [Long_Description, setLong_Description] = useState(\"\");\r\n\r\n  const [continuousadd, setcontinuousAdd] = useState(false);\r\n\r\n  const [partDeacStatus, setpartDeacStatus] = useState([]);\r\n  const [selected_partDeacStatus, setSelected_partDeacStatus] = useState([]);\r\n\r\n  const [issueUom, setIssueUom] = useState([]);\r\n  const [selected_issueUom, setSelected_IssueUom] = useState([]);\r\n\r\n  const [recivedUom, setRecivedUom] = useState([]);\r\n  const [selected_recivedUom, setSelected_RecivedUom] = useState([]);\r\n  \r\n  const [conversionFactor, setConversionFactor] = useState(\"1.0000\");\r\n  \r\n  const [storageType, setStorageType] = useState([]);\r\n  const [selected_storageType, setSelected_StorageType] = useState([]);\r\n\r\n  const [Cube, setCube] = useState(\"\");\r\n  const [shelfLife, setshelfLife] = useState(\"\");\r\n\r\n  const [eOQ, setEOQ] = useState(\"\");\r\n  const [countFrequency, setCountFrequency] = useState(\"\");\r\n  const [averageLeadTime, setAverageLeadTime] = useState(\"\");\r\n\r\n\r\n  const [autoSpare, setAutoSpare] = useState(0);\r\n  const [criticalSpare, setriticalSpare] = useState(0);\r\n  const [HazardousMaterial, setHazardousMaterial] = useState(0);\r\n\r\n  const [abcClass, setAbcClass] = useState(\"\");\r\n  const [orderPoint, setOrderPoint] = useState(\"\");\r\n  const [maximumInvtr, setMaximumInvtr] = useState(\"\");\r\n  \r\n\r\n  const [MasterLocationCode, setMasterLocationCode] = useState(\"\");\r\n  const MasterLocationCodeRef = useRef(null);\r\n\r\n  const [PartNo, setPartNo] = useState(\"\");\r\n\r\n \r\n  const [udfNote1, setUdfNote1] = useState(\"\");\r\n  const [assetNoSet, setAssetNoSet] = useState(\"\");\r\n  const [weightSet, setWeightSet] = useState(\"\");\r\n  const [UDFText_3, setUDFText_3] = useState(\"\");\r\n  const [UDFText_4, setUDFText_4] = useState(\"\");\r\n  const [UDFText_5, setUDFText_5] = useState(\"\");\r\n  const [UDFText_6, setUDFText_6] = useState(\"\");\r\n  const [UDFText_7, setUDFText_7] = useState(\"\");\r\n  const [UDFText_8, setUDFText_8] = useState(\"\");\r\n  const [UDFText_9, setUDFText_9] = useState(\"\");\r\n  const [UDFText_10, setUDFText_10] = useState(\"\");\r\n\r\n  const [UDFNumber_1, setUDFNumber_1] = useState(\"0.00\");\r\n  const [UDFNumber_2, setUDFNumber_2] = useState(\"0.00\");\r\n  const [UDFNumber_3, setUDFNumber_3] = useState(\"0.00\");\r\n  const [UDFNumber_4, setUDFNumber_4] = useState(\"0.00\");\r\n  const [UDFNumber_5, setUDFNumber_5] = useState(\"0.00\");\r\n\r\n  const [UDFDate_1, setUDFDate_1] = useState(new Date());\r\n  const [UDFDate_2, setUDFDate_2] = useState(new Date());\r\n  const [UDFDate_3, setUDFDate_3] = useState(new Date());\r\n  const [UDFDate_4, setUDFDate_4] = useState(new Date());\r\n  const [UDFDate_5, setUDFDate_5] = useState(new Date());\r\n\r\n  const [accountType, setAccountType] = useState([\r\n    { label: \"INVENTORY\", value: \"I\" },\r\n    { label: \"EXPENSE\", value: \"E\" },\r\n    \r\n  ]);\r\n\r\n  const [selected_AccountType, setSelected_AccountType] = useState([]);\r\n  const [taxCode, setTaxCode] = useState(\"\");\r\n \r\n  const [ytdUsage, setYtdUsage] = useState(\"0.0000\");\r\n  const [ytdTurns, setYtdTurns] = useState(\"0.0000\");\r\n  const [ytdStockouts, setYtdStockouts] = useState(\"0.0000\");\r\n  const [lastyrUsage, setLastyrUsage] = useState(\"0.0000\");\r\n  const [lastyrTurns, setLastyrTurns] = useState(\"0.0000\");\r\n  const [lastyrStkouts, setLastyrStkouts] = useState(\"0.0000\");\r\n \r\n  const ccyFormat = (num) => `${num.toFixed(2)}`;\r\n  \r\n  const rowsddd = [\r\n\r\n  { id: 1, code:'AVG', costingRule: 'Average', itemCost: '', totalOnHand: 0, totalRepairLocation: 0, value: 0 },\r\n  { id: 2, code:'STD', costingRule: 'Standard', itemCost: '', totalOnHand: 0, totalRepairLocation: 0, value: 0 },\r\n  { id: 3, code:'LST', costingRule: 'Last', itemCost: '', totalOnHand: 0, totalRepairLocation: 0, value: 0 },\r\n  { id: 4, code:'FIFO', costingRule: 'FIFO', itemCost: '', totalOnHand: 0, totalRepairLocation: 0, value: 0 },\r\n    ];\r\n\r\n  const [selectedRowd, setSelectedRowd] = useState(null);\r\n  const [costingValue, setcostingValue] = useState(\"\");\r\n  const [inputValues, setInputValues] = useState({});\r\n  \r\n // console.log(\"costingValue___\",costingValue);\r\n  const handleRadioChange = (rowId,value) => {\r\n    setSelectedRowd(rowId);\r\n    setcostingValue(value);\r\n  \r\n    if (!inputValues[rowId]) {\r\n      setInputValues(prevValues => ({\r\n        ...prevValues,\r\n        [rowId]: { itemCost: '' }\r\n      }));\r\n    }\r\n    // setInputValues(prevValues => ({\r\n    //   ...Object.keys(prevValues).reduce((acc, key) => {\r\n    //     acc[key] = { itemCost: key == rowId ? prevValues[key]?.itemCost : '' };\r\n    //     return acc;\r\n    //   }, {}),\r\n    //   [rowId]: { itemCost: prevValues[rowId]?.itemCost || '' }\r\n    // }));\r\n  };\r\n\r\n  const handleInputChange = (rowId, value) => {\r\n    setInputValues(prevValues => ({\r\n      ...prevValues,\r\n      [rowId]: { ...prevValues[rowId], itemCost: value }\r\n    }));\r\n  };\r\n  const [getissuePrice, setissuePrice] = useState(\"\");\r\n  const selectedRowData = rowsddd.find(row => row.id === selectedRowd);\r\n  const itemCost = parseFloat(inputValues[selectedRowd]?.itemCost || 0);\r\n  const issuePrice = parseFloat(inputValues[selectedRowd]?.itemCost || 0);\r\n\r\n// Error State \r\nconst [isTypeEmpty, setIsTypeEmpty] = useState(false);\r\nconst [isCommodityCodeEmpty,setIsCommodityCodeEmpty] = useState(false);\r\nconst [isStockNo,setIsStockNo] = useState(false);\r\nconst [isMasterLocationEmpty, setIsMasterLocationEmpty] = useState(false);\r\nconst [isOrderRuleEmpty, setIsOrderRuleEmpty] = useState(false);\r\nconst [isCostCenterEmpty,setIsCostCenterEmpty] = useState(false);\r\nconst [isAccountEmpty,setIsAccountEmpty] = useState(false);\r\nconst [isDescEmpty,setIsDescEmpty] = useState(false);\r\nconst [isPartDeacEmpty,setIsPartDeacEmpty] = useState(false);\r\nconst [isIssueUomEmpty,setIsIssueUomEmpty] = useState(false);\r\nconst [isReciveUomEmpty,setIsReciveUomEmpty] = useState(false);\r\n \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (typeof RowID !== \"undefined\" && RowID !== null && RowID !== \"\") {\r\n        setButton_save(\"Update\");\r\n        console.log(\"Edit_______page___\");\r\n        await get_inventory_master_form_data();\r\n        await fetchStatusData();\r\n        await getInventoryFromLebel();\r\n        await getInventoryMandatoryfiled();\r\n      } else if (\r\n        typeof DuplicatRowid !== \"undefined\" &&\r\n        DuplicatRowid !== null &&\r\n        DuplicatRowid !== \"\"\r\n      ) {\r\n        setButton_save(\"Duplicate\");\r\n        await get_inventory_master_form_data();\r\n        await fetchStatusData();\r\n        await getInventoryFromLebel();\r\n        await getInventoryMandatoryfiled();\r\n      } else {\r\n        await getInventoryFromLebel();\r\n        await fetchStatusData();\r\n        await getInventoryMandatoryfiled();\r\n        //  await fetchStusPriortyData();\r\n        setButton_save(\"Save\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // test funcation\r\n\r\n  // Get All Filed label Name\r\n  const getInventoryFromLebel = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_InventoryMasterFormLebal.php\"\r\n      );\r\n      //console.log(\"response____getLabel\",response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        setItmMstLabel(response.data.data.itm_mst);\r\n        setItmdetLabel(response.data.data.itm_det);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // Get All Filed label Name\r\n  const getInventoryMandatoryfiled = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\"/get_inventoryMasterMandatoryFiled.php\");\r\n      if (response.data.data.MandatoryField.length > 0) {\r\n        setInventoryMandatoryFiled(response.data.data.MandatoryField);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const get_inventory_master_form_data = async () => {\r\n    var json = {\r\n      site_cd: site_ID,\r\n      RowId:\r\n        DuplicatRowid !== undefined && DuplicatRowid !== \"\" ? DupRowID : RowID,\r\n    };\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/get_inventory_Edit_formData.php\",\r\n        JSON.stringify(json)\r\n      );\r\n       console.log(\"Get_inventory Data\", response);\r\n      if (response.data.status === \"SUCCESS\") {\r\n        const data = response.data.data[0];\r\n        \r\n        if (RowID !== undefined && RowID !== \"\") {\r\n         // setStockNoText(data.itm_mst_stockno);\r\n          setStockNoText(data.itm_mst_stockno);\r\n          setissuePrice(data.itm_det_issue_price);\r\n          setAbcClass(data.itm_det_abc_class);\r\n        }\r\n\r\n        setShort_Description(data.itm_mst_desc);\r\n        setLong_Description(data.itm_mst_ext_desc);\r\n\r\n        if (data.itm_mst_type === \"P\") {\r\n          setSelected_Type({ label: \"Stock\" });\r\n        } else if (data.itm_mst_type === \"T\") {\r\n          setSelected_Type({ label: \"Tool\" });\r\n        } else if (data.itm_mst_type === \"S\") {\r\n          setSelected_Type({ label: \"Serialize\" });\r\n        } else if (data.itm_mst_type === \"Z\") {\r\n          setSelected_Type({ label: \"Serialize With Asset\" });\r\n        }\r\n        \r\n        if (data.itm_mst_mstr_locn !== undefined && data.itm_mst_mstr_locn !== null) {\r\n          setMasterLocationCode(data.itm_mst_mstr_locn);\r\n        }\r\n        setSelected_orderRule({\r\n          label:\r\n            data.itm_mst_order_rule +\r\n            \" : \" +\r\n            data.odr_mst_desc,\r\n        });\r\n        setSelected_costCenter({\r\n          label:\r\n            data.itm_mst_costcenter +\r\n            \" : \" +\r\n            data.cost_center_desc,\r\n        });\r\n        setSelected_account({\r\n          label:\r\n            data.itm_mst_account +\r\n            \" : \" +\r\n            data.account_desc,\r\n        });\r\n\r\n        const labelCommodity = (data.itm_mst_com_code === null && data.com_mst_desc === null) \r\n          ? \"\" \r\n          : `${data.itm_mst_com_code || \"\"} : ${data.com_mst_desc || \"\"}`;\r\n        setSelected_Commodity({ labelCommodity });\r\n\r\n        const labelstockGroup = (data.itm_mst_itm_grp === null && data.itm_group_desc === null) \r\n          ? \"\" \r\n          : `${data.itm_mst_itm_grp || \"\"} : ${data.itm_group_desc || \"\"}`;\r\n          setSelected_stockGroup({ labelstockGroup });\r\n\r\n\r\n        setSelected_partDeacStatus({\r\n          label:\r\n            data.itm_det_part_deac_status +\r\n            \" : \" +\r\n            data.part_deac_desc,\r\n        });\r\n        setSelected_IssueUom({\r\n          label:\r\n             data.itm_det_issue_uom +\r\n            \" : \" +\r\n             data.issue_uom_desc,\r\n        });\r\n\r\n        setSelected_RecivedUom({\r\n          label:\r\n             data.itm_det_rcv_uom +\r\n            \" : \" +\r\n             data.issue_uom_desc,\r\n        });\r\n\r\n        const labelStorageType = (data.itm_det_storage_type === null && data.storage_desc === null) \r\n          ? \"\" \r\n          : `${data.itm_det_storage_type || \"\"} : ${data.storage_desc || \"\"}`;\r\n          setSelected_StorageType({ labelStorageType });\r\n\r\n        setPartNo(data.itm_mst_partno);\r\n        setCube(data.itm_det_cube);\r\n        setshelfLife(data.itm_det_shelf_life);\r\n        setAutoSpare(data.itm_det_auto_spare);\r\n        setriticalSpare(data.itm_det_critical_spare);\r\n        setHazardousMaterial(data.itm_det_hzd_mtl);\r\n        \r\n        setOrderPoint(data.itm_det_order_pt);\r\n        setMaximumInvtr(data.itm_det_maximum);\r\n        setUdfNote1(data.itm_det_note1);\r\n        setAssetNoSet(data.itm_det_varchar1);\r\n        setWeightSet(data.itm_det_varchar2);\r\n        setUDFText_3(data.itm_det_varchar3);\r\n        setUDFText_4(data.itm_det_varchar4);\r\n        setUDFText_5(data.itm_det_varchar5);\r\n        setUDFText_6(data.itm_det_varchar6);\r\n        setUDFText_7(data.itm_det_varchar7);\r\n        setUDFText_8(data.itm_det_varchar8);\r\n        setUDFText_9(data.itm_det_varchar9);\r\n        setUDFText_10(data.itm_det_varchar10);\r\n\r\n        setUDFNumber_1(data.itm_det_numeric1);\r\n        setUDFNumber_2(data.itm_det_numeric2);\r\n        setUDFNumber_3(data.itm_det_numeric3);\r\n        setUDFNumber_4(data.itm_det_numeric4);\r\n        setUDFNumber_5(data.itm_det_numeric5);\r\n\r\n        if (data.itm_det_datetime1 == null) {\r\n          setUDFDate_1(\"\");\r\n        } else {\r\n          const apiDate = data.itm_det_datetime1.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_1(formattedDate);\r\n        }\r\n\r\n        if (data.itm_det_datetime2 == null) {\r\n          setUDFDate_2(\"\");\r\n        } else {\r\n          const apiDate = data.itm_det_datetime2.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_2(formattedDate);\r\n        }\r\n\r\n        if (data.itm_det_datetime3 == null) {\r\n          setUDFDate_3(\"\");\r\n        } else {\r\n          const apiDate = data.itm_det_datetime3.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_3(formattedDate);\r\n        }\r\n\r\n        if (data.itm_det_datetime4 == null) {\r\n          setUDFDate_4(\"\");\r\n        } else {\r\n          const apiDate = data.itm_det_datetime4.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_4(formattedDate);\r\n        }\r\n\r\n        if (data.itm_det_datetime5 == null) {\r\n          setUDFDate_5(\"\");\r\n        } else {\r\n          const apiDate = data.itm_det_datetime5.date;\r\n          const formattedDate = Moment(\r\n            apiDate,\r\n            \"YYYY-MM-DD HH:mm:ss.SSSSSS\"\r\n          ).toDate();\r\n          setUDFDate_5(formattedDate);\r\n        }\r\n\r\n        if (data.itm_det_acct_type === \"I\") {\r\n          setSelected_AccountType({ label: \"INVENTORY\" });\r\n        } else if (data.itm_det_acct_type === \"E\") {\r\n          setSelected_AccountType({ label: \"EXPENSE\" });\r\n        }\r\n        \r\n        setTaxCode(data.itm_det_tax_cd);  //  itm_det_cr_code\r\n        setcostingValue(data.itm_det_cr_code);\r\n       \r\n\r\n        if (RowID !== undefined && RowID !== \"\") {\r\n          const matchedRow = rowsddd.find(row => row.code === data.itm_det_cr_code);\r\n          if (matchedRow) {\r\n            setSelectedRowd(matchedRow.id);\r\n            setInputValues(prevValues => ({\r\n              ...prevValues,\r\n              [matchedRow.id]: { itemCost: data.itm_det_issue_price }\r\n            }));\r\n          }\r\n        }\r\n       \r\n       \r\n        if (DuplicatRowid == null) {\r\n          fetchImgData();\r\n        }\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops select Inventory Not Found...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Second Api call fetch all dropdowwn data\r\n  const fetchStatusData = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_InventoryMasterFormDropdown.php?site_cd=\" + site_ID\r\n      );\r\n       //console.log(\"response____status__111\", response);\r\n      let Commodity = response.data.data.CommodityCode.map((item) => ({\r\n        label: item.com_mst_com_code + \" : \" + item.com_mst_desc,\r\n        value: item.com_mst_desc,\r\n        key: item.com_mst_com_code,\r\n      }));\r\n\r\n      setCommodity(Commodity);\r\n\r\n      let StockGroup = response.data.data.StockGroup.map((item) => ({\r\n        label: item.itm_grp_cd + \" : \" + item.itm_grp_desc,\r\n        value: item.itm_grp_desc,\r\n      }));\r\n      setStockGroup(StockGroup);\r\n\r\n      let Order_Rule = response.data.data.OrderRule.map((item) => ({\r\n        label: item.odr_mst_odr + \" : \" + item.odr_mst_desc,\r\n        value: item.odr_mst_desc,\r\n      }));\r\n      setOrderRule(Order_Rule);\r\n\r\n      let Charge_Cost_Center = response.data.data.CostCenter.map((item) => ({\r\n        label: item.costcenter + \" : \" + item.descs,\r\n        value: item.descs,\r\n      }));\r\n      setCostCenter(Charge_Cost_Center);\r\n\r\n      let Accoun_t = response.data.data.Account.map((item) => ({\r\n        label: item.account + \" : \" + item.descs,\r\n        value: item.descs,\r\n      }));\r\n      setAccount(Accoun_t);\r\n\r\n      let partDeacStatus = response.data.data.PartDeac.map((item) => ({\r\n        label: item.itm_sts_status + \" : \" + item.itm_sts_desc,\r\n        value: item.itm_sts_desc,\r\n      }));\r\n      setpartDeacStatus(partDeacStatus);\r\n\r\n      let IssueUom = response.data.data.IssueUoM.map((item) => ({\r\n        label: item.uom_mst_uom + \" : \" + item.uom_mst_desc,\r\n        value: item.uom_mst_desc,\r\n      }));\r\n      setIssueUom(IssueUom);\r\n\r\n      let RecivedUom = response.data.data.IssueUoM.map((item) => ({\r\n        label: item.uom_mst_uom + \" : \" + item.uom_mst_desc,\r\n        value: item.uom_mst_desc,\r\n      }));\r\n      setRecivedUom(RecivedUom);\r\n\r\n      let Storage_type = response.data.data.StorageType.map((item) => ({\r\n        label: item.stt_mst_stt + \" : \" + item.stt_mst_desc,\r\n        value: item.stt_mst_desc,\r\n      }));\r\n      setStorageType(Storage_type);\r\n\r\n      let Storage_no = response.data.data.StockNO.map((item) => ({\r\n        label: item.ast_grp_grp_cd + \" : \" + item.ast_grp_desc,\r\n        value: item.ast_grp_desc,\r\n      }));\r\n      setStockNo(Storage_no);\r\n\r\n      /*   end */\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Thired Api Call\r\n  const fetchImgData = async () => {\r\n    try {\r\n      const response = await httpCommon.get(\r\n        \"/get_inventory_Edit_form_img.php?RowID=\" + RowID\r\n      );\r\n\r\n      //  console.log(\"response____img____\",response);\r\n      if (response.data.data) {\r\n        // Check if AllImgGet exists and has items\r\n\r\n        if (\r\n          response.data.data.AllImgGet &&\r\n          response.data.data.AllImgGet.length > 0\r\n        ) {\r\n          setDbImg(response.data.data.AllImgGet);\r\n          setDbImgRowId(response.data.data.AllImgGet[0].RowID);\r\n          setImageSelect({\r\n            name: response.data.data.AllImgGet[0].file_name,\r\n            path: response.data.data.AllImgGet[0].attachment,\r\n          });\r\n        }\r\n\r\n        // Check if AllRef exists and has items\r\n        if (response.data.data.AllRef && response.data.data.AllRef.length > 0) {\r\n          setRefImg(response.data.data.AllRef);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n  const openSaveImg = () => {\r\n    setShowdd2(true);\r\n  };\r\n  // First main Img funcation\r\n  const handleDeleteImgApi = (ImgIDdlt) => {\r\n    const updatedImages = getDbImg.filter((image) => image.RowID !== ImgIDdlt);\r\n\r\n    // Update the state with the new array of images after the deletion\r\n    setDbImg(updatedImages);\r\n    setDisabledBtn(true);\r\n    setImageSelect({ name: \"\", path: \"\" });\r\n  };\r\n  const handleImgChangeSingle = (e) => {\r\n    if (e.target.files.length) {\r\n      setImage({\r\n        preview: URL.createObjectURL(e.target.files[0]),\r\n        raw: e.target.files[0],\r\n      });\r\n      setDisabledBtn(true);\r\n    }\r\n    // Img set for data api\r\n    if (getDbImg != \"\") {\r\n      setDbImg(\"\");\r\n    }\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImageSelect({ name: file.name, path: reader.result });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n  const clearDataImg = () => {\r\n    setImage(\"\");\r\n  };\r\n  const handleClearImg = (event) => {\r\n    event.preventDefault();\r\n    clearDataImg();\r\n    setDisabledBtn(false);\r\n  };\r\n  const handleImgChangeSingle2 = (e) => {\r\n    setDisabledBtn(false);\r\n  };\r\n  // Refrence Imge funcation\r\n  const handleButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleDeleteImg = (e) => {\r\n    const s = selectedImages.filter((item, index) => index !== e);\r\n    setSelectedImages(s);\r\n  };\r\n  const handleShowdata = (item) => {\r\n    setSelectedImage(item.attachment);\r\n    setShowdd(true);\r\n  };\r\n  const openPDFInNewTab = (fileName) => {\r\n    const binaryData = atob(fileName);\r\n\r\n    const byteArray = new Uint8Array(binaryData.length);\r\n    for (let i = 0; i < binaryData.length; i++) {\r\n      byteArray[i] = binaryData.charCodeAt(i);\r\n    }\r\n\r\n    // Step 3: Create a Blob from the typed array\r\n    const blob = new Blob([byteArray], { type: \"application/pdf\" });\r\n\r\n    // Step 4: Generate a URL for the blob\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Step 5: Open the URL in a new tab\r\n    window.open(url, \"_blank\");\r\n  };\r\n  const handleDeleteReferenceApi = (RefImgDlt) => {\r\n    const removedItem = RefImg.find((item) => item.RowID === RefImgDlt);\r\n    const updatedRefImg = RefImg.filter((item) => item.RowID !== RefImgDlt);\r\n    setRefImg(updatedRefImg);\r\n    setRemovedRefItems((prevRemovedRefItems) => [\r\n      ...prevRemovedRefItems,\r\n      removedItem,\r\n    ]);\r\n  };\r\n  const handleShowdd = (e, rowData) => {\r\n    sethandalImg(rowData);\r\n    setShowdd(true);\r\n  };\r\n  const isMyStateEmpty =\r\n    Object.keys(handalImg).length === 0 && handalImg.constructor === Object;\r\n  function handleImageChange(event) {\r\n    const files = event.target.files;\r\n\r\n    setSelectedPdfFiles((prevSelectedPdfFiles) => [\r\n      ...prevSelectedPdfFiles,\r\n      ...files,\r\n    ]);\r\n    const selectedImagesArray = [...selectedImages2];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event) => {\r\n        const imageData = {\r\n          name: files[i].name,\r\n          type: files[i].type,\r\n          base64: event.target.result,\r\n        };\r\n        selectedImagesArray.push(imageData);\r\n        if (selectedImagesArray.length === files.length) {\r\n          setSelectedImages2(selectedImagesArray);\r\n          //setImageSelect({ name: file.name, path: reader.result });\r\n        }\r\n      };\r\n      reader.readAsDataURL(files[i]);\r\n    }\r\n    setSelectedImages([...selectedImages, ...files]);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    selectedImages.forEach((file) => {\r\n      formData.append(\"files[]\", file);\r\n    });\r\n  };\r\n  const findCustomizeLabel = (columnName) => {\r\n    const matchingColumn = itmMstLabel.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n  };\r\n  // WorkReq Label Details table\r\n  const findCustomizeLabelDet = (columnName) => {\r\n    const matchingColumn = itmdetLabel.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    return matchingColumn ? matchingColumn.customize_label : \"\";\r\n  };\r\n\r\n  const findCustomizerequiredLabel = (columnName) => {\r\n    const foundItem = InventoryMandatoryFiled.find(\r\n      (item) => item.column_name === columnName\r\n    );\r\n    if (foundItem && foundItem.cf_label_required === \"1\") {\r\n      return \"Requiredlabel\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  // staya added today\r\n\r\n    const [modalOpenMasterLocation, setOpenMasterLocation] = useState(false);\r\n    const [modalOpenInventoryMasteLocation, setModalOpenInventoryMasteLocation] =\r\n    useState(false);\r\n\r\n    const [modalOpenInventoryTaxCode, setModalOpenInventoryTaxCode] = useState(false);\r\n\r\n  //get Asset Parent Flag data onther component\r\n  const handleEditClick = () => {\r\n    setOpenMasterLocation(true);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setPermanentIDFlag(\"\");\r\n  };\r\n\r\n  function handleCloseModal() {\r\n    setOpenMasterLocation(false);\r\n  }\r\n\r\n  const handleCancelMasterLocation = () => {\r\n    setMasterLocationCode(\"\");\r\n  };\r\n  const handleEditClickMasterLocation = () => {\r\n    setModalOpenInventoryMasteLocation(true);\r\n    setIsMasterLocationEmpty(false);\r\n  };\r\n  function handleCloseModalMasterLocation() {\r\n    setModalOpenInventoryMasteLocation(false);\r\n  }\r\n\r\n  const handleCancelTaxCode = () => {\r\n    setTaxCode(\"\");\r\n  };\r\n\r\n  const handleEditClickTaxCode = () => {\r\n    setModalOpenInventoryTaxCode(true);\r\n  };\r\n  function handleCloseModalMasterTaxCode() {\r\n    setModalOpenInventoryTaxCode(false);\r\n  }\r\n  const get_assetmaster_select = async (selected_asset) => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    const parts = selected_asset.split(\":\");\r\n    const valueBeforeColon = parts[0].trim();\r\n\r\n    if (selected_asset != \"\") {\r\n      try {\r\n        const response = await httpCommon.get(\r\n          \"/get_workOrderAssetmaster_select.php?site_cd=\" +\r\n            site_ID +\r\n            \"&ast_mst_asset_no=\" +\r\n            valueBeforeColon +\r\n            \"&asset_shortdesc=\" +\r\n            \"\" +\r\n            \"&cost_center=\" +\r\n            \"\" +\r\n            \"&asset_status=\" +\r\n            \"\" +\r\n            \"&asset_type=\" +\r\n            \"\" +\r\n            \"&asset_grpcode=\" +\r\n            \"\" +\r\n            \"&work_area=\" +\r\n            \"\" +\r\n            \"&asset_locn=\" +\r\n            \"\" +\r\n            \"&asset_code=\" +\r\n            \"\" +\r\n            \"&ast_lvl=\" +\r\n            \"\" +\r\n            \"&ast_sts_typ_cd=\" +\r\n            \"\" +\r\n            \"&createby=\" +\r\n            \"\" +\r\n            \"&service_type=\" +\r\n            \"\" +\r\n            \"&block=\" +\r\n            \"\" +\r\n            \"&floor=\" +\r\n            \"\"\r\n        );\r\n\r\n        if (response.data.status === \"SUCCESS\") {\r\n          setSelected_Asset_Status({\r\n            label: response.data.data[\"0\"].ast_mst_asset_status,\r\n          });\r\n          setSelected_Asset_Status({\r\n            label: response.data.data[\"0\"].ast_mst_asset_status,\r\n          });\r\n          setSelected_Asset_Group_Code({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_asset_grpcode +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_grp_desc,\r\n          });\r\n          setSelected_Charge_Cost_Center({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_cost_center +\r\n              \" : \" +\r\n              response.data.data[\"0\"].descs,\r\n          });\r\n          setSelected_Work_Area({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_work_area +\r\n              \" : \" +\r\n              response.data.data[\"0\"].mst_war_desc,\r\n          });\r\n          setSelected_Asset_Level({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_ast_lvl +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_lvl_desc,\r\n          });\r\n          setSelected_Asset_Location({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_asset_locn +\r\n              \" : \" +\r\n              response.data.data[\"0\"].ast_loc_desc,\r\n          });\r\n          setSelected_Work_Group({\r\n            label:\r\n              response.data.data[\"0\"].ast_mst_wrk_grp +\r\n              \" : \" +\r\n              response.data.data[\"0\"].wrk_grp_desc,\r\n          });\r\n\r\n          Swal.close();\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: response.data,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops get_assetmaster_select...\",\r\n          text: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectedAssetNo = (dataa) => {\r\n    get_assetmaster_select(dataa);\r\n  };\r\n\r\n  const handleRowData2 = (dataLenth, dataa, dataSecond) => {\r\n    // Use the row data in the second component\r\n    setPermanentIDFlag(dataa);\r\n\r\n    if (dataLenth !== undefined && dataLenth !== null) {\r\n      setTotalAssetNo(dataLenth);\r\n    }\r\n    // if (dataa !== undefined && dataa !== null) {\r\n    //   handleSelectedAssetNo(dataa);\r\n    // }\r\n    if (dataSecond == \"1\") {\r\n      setOpenMasterLocation(false);\r\n      setTotalSearch(\"\");\r\n    }\r\n  };\r\n\r\n  const handleRowData3 = (dataLenth, dataa, dataSecond) => {\r\n    // Use the row data in the second component\r\n    setMasterLocationCode(dataa);\r\n\r\n    if (dataLenth !== undefined && dataLenth !== null) {\r\n      setTotalAssetNo(dataLenth);\r\n    }\r\n    // if (dataa !== undefined && dataa !== null) {\r\n    //   handleSelectedAssetNo(dataa);\r\n    // }\r\n    if (dataSecond == \"1\") {\r\n      setModalOpenInventoryMasteLocation(false);\r\n      setTotalSearch(\"\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleRowDataPagechg = (pageCount) => {\r\n    setViewedTotlRows(pageCount);\r\n  };\r\n\r\n  const handelRowSearch = (searchTotl) => {\r\n    setTotalSearch(searchTotl);\r\n  };\r\n\r\n  const handleRowDataTaxCode = (dataLenth, dataa, dataSecond) => {\r\n    // Use the row data in the second component\r\n    setTaxCode(dataa);\r\n\r\n    if (dataLenth !== undefined && dataLenth !== null) {\r\n      setTotalAssetNo(dataLenth);\r\n    }\r\n    // if (dataa !== undefined && dataa !== null) {\r\n    //   handleSelectedAssetNo(dataa);\r\n    // }\r\n    if (dataSecond == \"1\") {\r\n      setModalOpenInventoryTaxCode(false);\r\n      setTotalSearch(\"\");\r\n    }\r\n  };\r\n  const handleRowDataPagechgTaxCode = (pageCount) => {\r\n    setViewedTotlRows(pageCount);\r\n  };\r\n\r\n  const handelRowSearchTaxCode = (searchTotl) => {\r\n    setTotalSearch(searchTotl);\r\n  };\r\n\r\n  function CustomTextField({ rightIcons, ...props }) {\r\n    return (\r\n      <TextField\r\n        {...props}\r\n        InputProps={{\r\n          endAdornment: rightIcons && (\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              {rightIcons.map((icon, index) => (\r\n                <IconButton key={index} onClick={icon.props.onClick}>\r\n                  {icon}\r\n                </IconButton>\r\n              ))}\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n//console.log(\"selected_Type______\",selected_Type);\r\n  /*   add new asset code by stay */\r\n  const New_Inventory = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n\r\n     // Swal.showLoading();\r\n    let get_date = Moment().utcOffset(\"+08:00\").format(\"yyyy-MM-DD HH:mm:ss\");\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n   //let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n    console.log(\"emp_mst_login_id____\",emp_mst_login_id);\r\n\r\n     let TotalOH = \"0.0000\";\r\n     let IssuePrice = \"0.00\";\r\n     let SerializeCounter = \"100001\";\r\n\r\n   // selected_Commodity\r\n     let Commodity, setCommodity;\r\n     if (selected_Commodity.label == \"\" || selected_Commodity.label == null) {\r\n      setCommodity = \"\";\r\n     } else {\r\n      Commodity = selected_Commodity.label.split(\":\");\r\n       setCommodity = Commodity[0];\r\n      // console.log(\"Commodity: \", Commodity[0])\r\n     }\r\n\r\n    //selected_StockNo stockNoText\r\n     let selectedStockNo, setselectedStockNo;\r\n     if (stockNoText.label == \"\" || stockNoText.label == null) {\r\n      setselectedStockNo = stockNoText;\r\n     } else {\r\n      selectedStockNo = stockNoText.label.split(\":\");\r\n       setselectedStockNo = selectedStockNo[0];\r\n      // console.log(\"selectedStockNo: \", selectedStockNo[0])\r\n     }\r\n\r\n    //selected_stockGroup\r\n    let selectedstockGroup, setselectedstockGroup;\r\n     if (selected_stockGroup.label == \"\" || selected_stockGroup.label == null) {\r\n      setselectedstockGroup = \"\";\r\n     } else {\r\n      selectedstockGroup = selected_stockGroup.label.split(\":\");\r\n      setselectedstockGroup = selectedstockGroup[0];\r\n       //console.log(\"selectedstockGroup: \", selectedstockGroup[0])\r\n     } \r\n\r\n     //selected_orderRule\r\n     let selectedorderRule, setselectedorderRule;\r\n     if (selected_orderRule.label == \"\" || selected_orderRule.label == null) {\r\n      setselectedorderRule = \"\";\r\n     } else {\r\n      selectedorderRule = selected_orderRule.label.split(\":\");\r\n      setselectedorderRule = selectedorderRule[0];\r\n       //console.log(\"selectedstockGroup: \", selectedorderRule[0])\r\n     } \r\n     //selected_costCenter\r\n     let selectedcostCenter, setselectedcostCenter;\r\n     if (selected_costCenter.label == \"\" || selected_costCenter.label == null) {\r\n      setselectedcostCenter = \"\";\r\n     } else {\r\n      selectedcostCenter = selected_costCenter.label.split(\":\");\r\n      setselectedcostCenter = selectedcostCenter[0];\r\n       //console.log(\"selectedstockGroup: \", selectedcostCenter[0])\r\n     } \r\n     //selected_account\r\n     let selectedaccount, setselectedaccount;\r\n     if (selected_account.label == \"\" || selected_account.label == null) {\r\n      setselectedaccount = \"\";\r\n     } else {\r\n      selectedaccount = selected_account.label.split(\":\");\r\n      setselectedaccount = selectedaccount[0];\r\n       //console.log(\"selectedstockGroup: \", selectedaccount[0])\r\n     } \r\n     //selected_partDeacStatus,\r\n     let selectedpartDeacStatus, setselectedpartDeacStatus;\r\n     if (selected_partDeacStatus.label == \"\" || selected_partDeacStatus.label == null) {\r\n      setselectedpartDeacStatus = \"\";\r\n     } else {\r\n      selectedpartDeacStatus = selected_partDeacStatus.label.split(\":\");\r\n      setselectedpartDeacStatus = selectedpartDeacStatus[0];\r\n       //console.log(\"selectedstockGroup: \", selectedpartDeacStatus[0])\r\n     } \r\n     //selected_issueUom,\r\n     let selectedissueUom, setselectedissueUom;\r\n     if (selected_issueUom.label == \"\" || selected_issueUom.label == null) {\r\n      setselectedissueUom = \"\";\r\n     } else {\r\n      selectedissueUom = selected_issueUom.label.split(\":\");\r\n      setselectedissueUom = selectedissueUom[0];\r\n       //console.log(\"selectedstockGroup: \", selectedissueUom[0])\r\n     }\r\n     //selected_recivedUom,\r\n     let selectedrecivedUom, setselectedrecivedUom;\r\n     if (selected_recivedUom.label == \"\" || selected_recivedUom.label == null) {\r\n      setselectedrecivedUom = \"\";\r\n     } else {\r\n      selectedrecivedUom = selected_recivedUom.label.split(\":\");\r\n      setselectedrecivedUom = selectedrecivedUom[0];\r\n       //console.log(\"selectedstockGroup: \", selectedrecivedUom[0])\r\n     }\r\n     //selected_storageType\r\n     let selectedstorageType, setselectedstorageType;\r\n     if (selected_storageType.label == \"\" || selected_storageType.label == null) {\r\n      setselectedstorageType = \"\";\r\n     } else {\r\n      selectedstorageType = selected_storageType.label.split(\":\");\r\n      setselectedstorageType = selectedstorageType[0];\r\n      // console.log(\"selectedstockGroup: \", selectedstorageType[0])\r\n     }\r\n   \r\n      // select UDFDate_1 \r\n      let date_of_1 = \"\";\r\n      if (UDFDate_1 == \"\" || UDFDate_1 == null) {\r\n        date_of_1 = \"\";\r\n      } else {\r\n        date_of_1 = Moment(UDFDate_1)\r\n          .format(\"yyyy-MM-DD HH:mm:ss\")\r\n          .trim();\r\n      }\r\n      // select UDFDate_2\r\n      let date_of_2 = \"\";\r\n      if (UDFDate_2 == \"\" || UDFDate_2 == null) {\r\n        date_of_2 = \"\";\r\n      } else {\r\n        date_of_2 = Moment(UDFDate_2)\r\n          .format(\"yyyy-MM-DD HH:mm:ss\")\r\n          .trim();\r\n      }\r\n      // select UDFDate_3\r\n      let date_of_3 = \"\";\r\n      if (UDFDate_3 == \"\" || UDFDate_3 == null) {\r\n        date_of_3 = \"\";\r\n      } else {\r\n        date_of_3 = Moment(UDFDate_3)\r\n          .format(\"yyyy-MM-DD HH:mm:ss\")\r\n          .trim();\r\n      }\r\n      // select UDFDate_4\r\n      let date_of_4 = \"\";\r\n      if (UDFDate_4 == \"\" || UDFDate_4 == null) {\r\n        date_of_4 = \"\";\r\n      } else {\r\n        date_of_4 = Moment(UDFDate_4)\r\n          .format(\"yyyy-MM-DD HH:mm:ss\")\r\n          .trim();\r\n      }\r\n\r\n      // select UDFDate_5\r\n      let date_of_5 = \"\";\r\n      if (UDFDate_5 == \"\" || UDFDate_5 == null) {\r\n        date_of_5 = \"\";\r\n      } else {\r\n        date_of_5 = Moment(UDFDate_5)\r\n          .format(\"yyyy-MM-DD HH:mm:ss\")\r\n          .trim();\r\n      }\r\n      let itmmsttype = \"\";\r\n\r\n      if (selected_Type) {\r\n        switch (selected_Type.label) {\r\n          case \"Stock\":\r\n            itmmsttype = \"P\";\r\n            break;\r\n          case \"Tool\":\r\n            itmmsttype = \"T\";\r\n            break;\r\n          case \"Serialize\":\r\n            itmmsttype = \"S\";\r\n            break;\r\n          case \"Serialize With Asset\":\r\n            itmmsttype = \"Z\";\r\n            break;\r\n          default:\r\n            itmmsttype = \"\";\r\n            break;\r\n        }\r\n      }\r\n\r\n    // selected_AccountType\r\n    let selectedAccountType, setselectedAccountType;\r\n     if (selected_AccountType.label == \"\" || selected_AccountType.label == null) {\r\n      setselectedAccountType = \"\";\r\n     } else {\r\n      selectedAccountType = selected_AccountType.label;\r\n      setselectedAccountType = selectedAccountType;\r\n       //console.log(\"selectedstockGroup: \", selectedAccountType[0])\r\n     }\r\n\r\n    let missingFields = [];\r\n\r\n    var json_AssetInsert = {\r\n      site_cd: site_ID,\r\n      itm_mst_stockno: setselectedStockNo ? setselectedStockNo.trim() : stockNoText,\r\n      itm_mst_partno: PartNo.trim(),\r\n      itm_mst_desc: Short_Description.trim(),\r\n      itm_mst_issue_price: IssuePrice.trim(),\r\n      itm_mst_ttl_oh: TotalOH.trim(),\r\n      itm_mst_issue_uom: setselectedissueUom.trim(),\r\n      itm_mst_com_code: setCommodity.trim(),\r\n      itm_mst_mstr_locn: MasterLocationCode.trim(),\r\n      itm_mst_non_stk_flg: \"0\",\r\n      itm_mst_tool_flg: \"0\",\r\n      itm_mst_order_rule: setselectedorderRule.trim(),\r\n      itm_mst_costcenter: setselectedcostCenter.trim(),\r\n      itm_mst_account: setselectedaccount.trim(),\r\n      itm_mst_rec_supplier:\"NULL\",\r\n      itm_mst_ext_desc: Long_Description.trim(),\r\n      itm_mst_serialize_flg: \"1\",\r\n      itm_mst_auto_serialize_flg: \"1\",\r\n      itm_mst_serialize_counter: SerializeCounter.trim(),\r\n      itm_mst_type: itmmsttype,\r\n      itm_mst_itm_grp: setselectedstockGroup,\r\n      itm_det_issue_uom:setselectedissueUom.trim(),\r\n      itm_det_rcv_uom:setselectedrecivedUom.trim(),\r\n      itm_det_auto_spare:autoSpare,   \r\n      itm_det_critical_spare:criticalSpare,\r\n      itm_det_hzd_mtl:HazardousMaterial,\r\n      itm_det_storage_type:setselectedstorageType,\r\n      itm_det_cube:Cube,\r\n      itm_det_cr_code:costingValue ? costingValue : \"\",\r\n      itm_det_abc_class:abcClass,\r\n      itm_det_shelf_life:shelfLife,\r\n      itm_det_order_pt:orderPoint,\r\n      itm_det_maximum:maximumInvtr,\r\n      itm_det_part_deac_status:setselectedpartDeacStatus.trim(),\r\n      itm_det_acct_type: selectedAccountType !== \"\" ? (selectedAccountType === \"INVENTORY\" ? \"I\" : \"E\") : \"\",\r\n      itm_det_avg_cost:issuePrice,\r\n      itm_det_tax_cd:taxCode,  \r\n      itm_det_varchar1:assetNoSet ? assetNoSet.trim() : assetNoSet,\r\n      itm_det_varchar2:weightSet ? weightSet.trim() : weightSet,\r\n      itm_det_varchar3:UDFText_3 ? UDFText_3.trim() : UDFText_3,\r\n      itm_det_varchar4:UDFText_4 ? UDFText_4.trim() : UDFText_4,\r\n      itm_det_varchar5:UDFText_5 ? UDFText_5.trim() : UDFText_5,\r\n      itm_det_varchar6:UDFText_6 ? UDFText_6.trim() : UDFText_6,\r\n      itm_det_varchar7:UDFText_7 ? UDFText_7.trim() : UDFText_7,\r\n      itm_det_varchar8:UDFText_8 ? UDFText_8.trim() : UDFText_8,\r\n      itm_det_varchar9:UDFText_9 ? UDFText_9.trim() : UDFText_9,\r\n      itm_det_varchar10:UDFText_10 ? UDFText_10.trim() : UDFText_10,\r\n      itm_det_numeric1:UDFNumber_1 ? UDFNumber_1.trim() : \"0.0000\",\r\n      itm_det_numeric2:UDFNumber_2 ? UDFNumber_2.trim() : \"0.0000\",\r\n      itm_det_numeric3:UDFNumber_3 ? UDFNumber_3.trim() : \"0.0000\",\r\n      itm_det_numeric4:UDFNumber_4 ? UDFNumber_4.trim() : \"0.0000\",\r\n      itm_det_numeric5:UDFNumber_5 ? UDFNumber_5.trim() : \"0.0000\",\r\n      itm_det_datetime1:date_of_1 ? date_of_1.trim() : date_of_1,\r\n      itm_det_datetime2:date_of_2 ? date_of_2.trim() : date_of_2,\r\n      itm_det_datetime3:date_of_3 ? date_of_3.trim() : date_of_3,\r\n      itm_det_datetime4:date_of_4 ? date_of_4.trim() : date_of_4,\r\n      itm_det_datetime5:date_of_5 ? date_of_5.trim() : date_of_5,\r\n      itm_det_note1:udfNote1,\r\n      audit_user:emp_mst_login_id.trim(),\r\n      itm_mst_create_by:emp_mst_login_id.trim(),\r\n      ImgUpload: imageSelect,\r\n    };\r\n\r\n    console.log(\"json_AssetInsert___\",json_AssetInsert);\r\n    for (let i = 0; i < InventoryMandatoryFiled.length; i++) {\r\n      const item = InventoryMandatoryFiled[i];\r\n      const fieldValue = json_AssetInsert[item.column_name];\r\n      if (fieldValue !== null && fieldValue.trim() === \"\") {\r\n        missingFields = item.customize_label;\r\n        setErrorField(item.column_name);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // If any fields are missing, display an error message\r\n    if (Button_save !== \"Duplicate\" && missingFields.length > 0) {\r\n      Swal.close();\r\n\r\n      const errorMessage = `Please fill the required field: ${missingFields}`;\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else {\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/insert_new_inventroyMaster.php\",\r\n          JSON.stringify(json_AssetInsert)\r\n        );\r\n        console.log(\"json_Master Data\", response);\r\n\r\n        if (response.data.status === \"SUCCESS\") {\r\n          // console.log(\"responseJson\", response.data.ROW_ID);\r\n          Swal.close();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: response.data.status,\r\n            text: response.data.message,\r\n          }).then(() => {\r\n            navigate(`/dashboard/InventoryMaster/list`);\r\n          });\r\n        } else {\r\n          Swal.close();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: response.data,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops Somthing is wrong...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const Update_Inventory = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n\r\n    let get_date = Moment().utcOffset(\"+08:00\").format(\"yyyy-MM-DD HH:mm:ss\");\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    // let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n    let TotalOH = \"0.0000\";\r\n    let IssuePrice = \"0.00\";\r\n    let SerializeCounter = \"100001\";\r\n\r\n  // selected_Commodity\r\n    let Commodity, setCommodity;\r\n    if (selected_Commodity.label == \"\" || selected_Commodity.label == null) {\r\n     setCommodity = \"\";\r\n    } else {\r\n     Commodity = selected_Commodity.label.split(\":\");\r\n      setCommodity = Commodity[0];\r\n     // console.log(\"Commodity: \", Commodity[0])\r\n    }\r\n\r\n   //selected_StockNo stockNoText\r\n    let selectedStockNo, setselectedStockNo;\r\n    if (stockNoText.label == \"\" || stockNoText.label == null) {\r\n     setselectedStockNo = stockNoText;\r\n    } else {\r\n     selectedStockNo = stockNoText.label.split(\":\");\r\n      setselectedStockNo = selectedStockNo[0];\r\n     // console.log(\"selectedStockNo: \", selectedStockNo[0])\r\n    }\r\n\r\n   //selected_stockGroup\r\n   let selectedstockGroup, setselectedstockGroup;\r\n    if (selected_stockGroup.label == \"\" || selected_stockGroup.label == null) {\r\n     setselectedstockGroup = \"\";\r\n    } else {\r\n     selectedstockGroup = selected_stockGroup.label.split(\":\");\r\n     setselectedstockGroup = selectedstockGroup[0];\r\n      //console.log(\"selectedstockGroup: \", selectedstockGroup[0])\r\n    } \r\n\r\n    //selected_orderRule\r\n    let selectedorderRule, setselectedorderRule;\r\n    if (selected_orderRule.label == \"\" || selected_orderRule.label == null) {\r\n     setselectedorderRule = \"\";\r\n    } else {\r\n     selectedorderRule = selected_orderRule.label.split(\":\");\r\n     setselectedorderRule = selectedorderRule[0];\r\n      //console.log(\"selectedstockGroup: \", selectedorderRule[0])\r\n    } \r\n    //selected_costCenter\r\n    let selectedcostCenter, setselectedcostCenter;\r\n    if (selected_costCenter.label == \"\" || selected_costCenter.label == null) {\r\n     setselectedcostCenter = \"\";\r\n    } else {\r\n     selectedcostCenter = selected_costCenter.label.split(\":\");\r\n     setselectedcostCenter = selectedcostCenter[0];\r\n      //console.log(\"selectedstockGroup: \", selectedcostCenter[0])\r\n    } \r\n    //selected_account\r\n    let selectedaccount, setselectedaccount;\r\n    if (selected_account.label == \"\" || selected_account.label == null) {\r\n     setselectedaccount = \"\";\r\n    } else {\r\n     selectedaccount = selected_account.label.split(\":\");\r\n     setselectedaccount = selectedaccount[0];\r\n      //console.log(\"selectedstockGroup: \", selectedaccount[0])\r\n    } \r\n    //selected_partDeacStatus,\r\n    let selectedpartDeacStatus, setselectedpartDeacStatus;\r\n    if (selected_partDeacStatus.label == \"\" || selected_partDeacStatus.label == null) {\r\n     setselectedpartDeacStatus = \"\";\r\n    } else {\r\n     selectedpartDeacStatus = selected_partDeacStatus.label.split(\":\");\r\n     setselectedpartDeacStatus = selectedpartDeacStatus[0];\r\n      //console.log(\"selectedstockGroup: \", selectedpartDeacStatus[0])\r\n    } \r\n    //selected_issueUom,\r\n    let selectedissueUom, setselectedissueUom;\r\n    if (selected_issueUom.label == \"\" || selected_issueUom.label == null) {\r\n     setselectedissueUom = \"\";\r\n    } else {\r\n     selectedissueUom = selected_issueUom.label.split(\":\");\r\n     setselectedissueUom = selectedissueUom[0];\r\n      //console.log(\"selectedstockGroup: \", selectedissueUom[0])\r\n    }\r\n    //selected_recivedUom,\r\n    let selectedrecivedUom, setselectedrecivedUom;\r\n    if (selected_recivedUom.label == \"\" || selected_recivedUom.label == null) {\r\n     setselectedrecivedUom = \"\";\r\n    } else {\r\n     selectedrecivedUom = selected_recivedUom.label.split(\":\");\r\n     setselectedrecivedUom = selectedrecivedUom[0];\r\n      //console.log(\"selectedstockGroup: \", selectedrecivedUom[0])\r\n    }\r\n    //selected_storageType\r\n    let selectedstorageType, setselectedstorageType;\r\n    if (selected_storageType.label == \"\" || selected_storageType.label == null) {\r\n     setselectedstorageType = \"\";\r\n    } else {\r\n     selectedstorageType = selected_storageType.label.split(\":\");\r\n     setselectedstorageType = selectedstorageType[0];\r\n     // console.log(\"selectedstockGroup: \", selectedstorageType[0])\r\n    }\r\n  \r\n     // select UDFDate_1 \r\n     let date_of_1 = \"\";\r\n     if (UDFDate_1 == \"\" || UDFDate_1 == null) {\r\n       date_of_1 = \"\";\r\n     } else {\r\n       date_of_1 = Moment(UDFDate_1)\r\n         .format(\"yyyy-MM-DD HH:mm:ss\")\r\n         .trim();\r\n     }\r\n     // select UDFDate_2\r\n     let date_of_2 = \"\";\r\n     if (UDFDate_2 == \"\" || UDFDate_2 == null) {\r\n       date_of_2 = \"\";\r\n     } else {\r\n       date_of_2 = Moment(UDFDate_2)\r\n         .format(\"yyyy-MM-DD HH:mm:ss\")\r\n         .trim();\r\n     }\r\n     // select UDFDate_3\r\n     let date_of_3 = \"\";\r\n     if (UDFDate_3 == \"\" || UDFDate_3 == null) {\r\n       date_of_3 = \"\";\r\n     } else {\r\n       date_of_3 = Moment(UDFDate_3)\r\n         .format(\"yyyy-MM-DD HH:mm:ss\")\r\n         .trim();\r\n     }\r\n     // select UDFDate_4\r\n     let date_of_4 = \"\";\r\n     if (UDFDate_4 == \"\" || UDFDate_4 == null) {\r\n       date_of_4 = \"\";\r\n     } else {\r\n       date_of_4 = Moment(UDFDate_4)\r\n         .format(\"yyyy-MM-DD HH:mm:ss\")\r\n         .trim();\r\n     }\r\n\r\n     // select UDFDate_5\r\n     let date_of_5 = \"\";\r\n     if (UDFDate_5 == \"\" || UDFDate_5 == null) {\r\n       date_of_5 = \"\";\r\n     } else {\r\n       date_of_5 = Moment(UDFDate_5)\r\n         .format(\"yyyy-MM-DD HH:mm:ss\")\r\n         .trim();\r\n     }\r\n   // selected_AccountType\r\n   let selectedAccountType, setselectedAccountType;\r\n    if (selected_AccountType.label == \"\" || selected_AccountType.label == null) {\r\n     setselectedAccountType = \"\";\r\n    } else {\r\n     selectedAccountType = selected_AccountType.label;\r\n     setselectedAccountType = selectedAccountType;\r\n      //console.log(\"selectedstockGroup: \", selectedAccountType)\r\n    }\r\n\r\n    //Check Img state\r\n    let setDbImgRowIdUpdate;\r\n    if (getDbImgRowId == \"\" || getDbImgRowId == null) {\r\n      setDbImgRowIdUpdate = \"\";\r\n    } else {\r\n      setDbImgRowIdUpdate = getDbImgRowId;\r\n    }\r\n    let missingFields = [];\r\n\r\n    var json_AssetUpdate = {\r\n      site_cd: site_ID,\r\n      itm_mst_stockno: setselectedStockNo ? setselectedStockNo.trim() : stockNoText,\r\n      itm_mst_partno: PartNo ? PartNo.trim() : \"\",\r\n      itm_mst_desc: Short_Description.trim(),\r\n      itm_mst_issue_price: IssuePrice.trim(),\r\n      itm_mst_ttl_oh: TotalOH.trim(),\r\n      itm_mst_issue_uom: setselectedissueUom.trim(),\r\n      itm_mst_com_code: setCommodity.trim(),\r\n      itm_mst_mstr_locn: MasterLocationCode.trim(),\r\n      itm_mst_non_stk_flg: \"0\",\r\n      itm_mst_tool_flg: \"0\",\r\n      itm_mst_order_rule: setselectedorderRule.trim(),\r\n      itm_mst_costcenter: setselectedcostCenter.trim(),\r\n      itm_mst_account: setselectedaccount.trim(),\r\n      itm_mst_rec_supplier:\"NULL\",\r\n      itm_mst_ext_desc: Long_Description ? Long_Description.trim() : \"\",\r\n      itm_mst_serialize_flg: \"1\",\r\n      itm_mst_auto_serialize_flg: \"1\",\r\n      itm_mst_serialize_counter: SerializeCounter.trim(),\r\n      itm_mst_type: selected_Type.label,\r\n      itm_mst_itm_grp: setselectedstockGroup,\r\n      itm_det_issue_uom:setselectedissueUom.trim(),\r\n      itm_det_rcv_uom:setselectedrecivedUom.trim(),\r\n      itm_det_auto_spare:autoSpare,   \r\n      itm_det_critical_spare:criticalSpare,\r\n      itm_det_hzd_mtl:HazardousMaterial,\r\n      itm_det_storage_type:setselectedstorageType,\r\n      itm_det_cube:Cube,\r\n      itm_det_cr_code:costingValue ? costingValue : \"\",\r\n      itm_det_abc_class:abcClass,\r\n      itm_det_shelf_life:shelfLife,\r\n      itm_det_order_pt:orderPoint,\r\n      itm_det_maximum:maximumInvtr,\r\n      itm_det_part_deac_status:setselectedpartDeacStatus.trim(),\r\n      itm_det_acct_type: selectedAccountType !== \"\" ? (selectedAccountType === \"INVENTORY\" ? \"I\" : \"E\") : \"\",\r\n      itm_det_avg_cost:issuePrice,\r\n      itm_det_tax_cd:taxCode,  \r\n      itm_det_varchar1:assetNoSet ? assetNoSet.trim() : assetNoSet,\r\n      itm_det_varchar2:weightSet ? weightSet.trim() : weightSet,\r\n      itm_det_varchar3:UDFText_3 ? UDFText_3.trim() : UDFText_3,\r\n      itm_det_varchar4:UDFText_4 ? UDFText_4.trim() : UDFText_4,\r\n      itm_det_varchar5:UDFText_5 ? UDFText_5.trim() : UDFText_5,\r\n      itm_det_varchar6:UDFText_6 ? UDFText_6.trim() : UDFText_6,\r\n      itm_det_varchar7:UDFText_7 ? UDFText_7.trim() : UDFText_7,\r\n      itm_det_varchar8:UDFText_8 ? UDFText_8.trim() : UDFText_8,\r\n      itm_det_varchar9:UDFText_9 ? UDFText_9.trim() : UDFText_9,\r\n      itm_det_varchar10:UDFText_10 ? UDFText_10.trim() : UDFText_10,\r\n      itm_det_numeric1:UDFNumber_1 ? UDFNumber_1.trim() : \"0.0000\",\r\n      itm_det_numeric2:UDFNumber_2 ? UDFNumber_2.trim() : \"0.0000\",\r\n      itm_det_numeric3:UDFNumber_3 ? UDFNumber_3.trim() : \"0.0000\",\r\n      itm_det_numeric4:UDFNumber_4 ? UDFNumber_4.trim() : \"0.0000\",\r\n      itm_det_numeric5:UDFNumber_5 ? UDFNumber_5.trim() : \"0.0000\",\r\n      itm_det_datetime1:date_of_1 ? date_of_1.trim() : date_of_1,\r\n      itm_det_datetime2:date_of_2 ? date_of_2.trim() : date_of_2,\r\n      itm_det_datetime3:date_of_3 ? date_of_3.trim() : date_of_3,\r\n      itm_det_datetime4:date_of_4 ? date_of_4.trim() : date_of_4,\r\n      itm_det_datetime5:date_of_5 ? date_of_5.trim() : date_of_5,\r\n      itm_det_note1:udfNote1,\r\n\r\n      audit_user: emp_mst_login_id.trim(),\r\n      itm_mst_create_by: emp_mst_login_id.trim(),\r\n      itm_aud_originator: emp_mst_login_id.trim(),\r\n      itm_mst_create_date: get_date,\r\n\r\n      ImgGetDbImgRowId: setDbImgRowIdUpdate,\r\n      ImgUpload: imageSelect,\r\n      SpecialOdrResult: SpecialOdrResult,\r\n\r\n      removedRefItems: removedRefItems,\r\n      RowID: RowID,\r\n    };\r\n    console.log(\"json_AssetUpdate____\", json_AssetUpdate);\r\n    for (let i = 0; i < InventoryMandatoryFiled.length; i++) {\r\n      const item = InventoryMandatoryFiled[i];\r\n      const fieldValue = json_AssetUpdate[item.column_name];\r\n      if (fieldValue !== null && fieldValue.trim() === \"\") {\r\n        missingFields = item.customize_label;\r\n        setErrorField(item.column_name);\r\n        break; // Stop loop as soon as a missing field is found\r\n      }\r\n    }\r\n    console.log(\"Code block executed\");\r\n    // If any fields are missing, display an error message\r\n    if (missingFields.length > 0) {\r\n      Swal.close();\r\n\r\n      const errorMessage = `Please fill the required field: ${missingFields}`;\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else {\r\n      try {\r\n        const response = await httpCommon.post(\r\n          \"/update_inventory_master.php\", \r\n          JSON.stringify(json_AssetUpdate)\r\n        );\r\n        console.log(\"response_____\", response);\r\n        if (response.data.status === \"SUCCESS\") {\r\n          // if (selectedPdfFiles.length > 0) {\r\n          //   const formData = new FormData();\r\n          //   for (let i = 0; i < selectedPdfFiles.length; i++) {\r\n          //     formData.append(\"files[]\", selectedPdfFiles[i]);\r\n          //   }\r\n          //   formData.append(\"site_cd\", site_ID);\r\n          //   formData.append(\"RowID\", RowID);\r\n          //   formData.append(\"audit_user\", emp_mst_login_id.trim());\r\n\r\n          //   try {\r\n          //     const response = await httpCommon.post(\r\n          //       \"/AssetFormReferenceMultipalImgUpload.php\",\r\n          //       formData,\r\n          //       {\r\n          //         headers: {\r\n          //           \"Content-Type\": \"multipart/form-data\", // Ensure proper content type\r\n          //         },\r\n          //       }\r\n          //     );\r\n          //     //  console.log(\"upload_mltipal____\",response);\r\n          //     if (response.data.status == \"SUCCESS\") {\r\n          //       Swal.close();\r\n          //       Swal.fire({\r\n          //         icon: \"success\",\r\n          //         customClass: {\r\n          //           container: \"swalcontainercustom\",\r\n          //         },\r\n          //         title: response.data.status,\r\n          //         text: response.data.message,\r\n          //       }).then(() => {\r\n          //         // navigate(`/dashboard/work/order`);\r\n          //         navigate(`/dashboard/asset/list`, {\r\n          //           state: {\r\n          //             currentPage,\r\n          //             selectedOption,\r\n          //           },\r\n          //         });\r\n          //       });\r\n          //     }\r\n          //   } catch (error) {\r\n          //     console.log(\"error__\", error);\r\n          //     //Handle error  WorkOrderNo\r\n          //   }\r\n          // } else {\r\n          //   Swal.close();\r\n          //   Swal.fire({\r\n          //     icon: \"success\",\r\n          //     customClass: {\r\n          //       container: \"swalcontainercustom\",\r\n          //     },\r\n          //     title: response.data.status,\r\n          //     text: response.data.message,\r\n          //   }).then(() => {\r\n          //     if (response.data.status === \"SUCCESS\") {\r\n          //       // navigate(`/dashboard/work/order`);\r\n          //       navigate(`/dashboard/asset/list`, {\r\n          //         state: {\r\n          //           currentPage,\r\n          //           selectedOption,\r\n          //         },\r\n          //       });\r\n          //     }\r\n          //   });\r\n          // }\r\n          Swal.close();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              customClass: {\r\n                container: \"swalcontainercustom\",\r\n              },\r\n              title: response.data.status,\r\n              text: response.data.message,\r\n            }).then(() => {\r\n              if (response.data.status === \"SUCCESS\") {\r\n                // navigate(`/dashboard/work/order`);\r\n                navigate(`/dashboard/InventoryMaster/list`, {\r\n                  state: {\r\n                    currentPage,\r\n                    selectedOption,\r\n                  },\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          Swal.close();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            customClass: {\r\n              container: \"swalcontainercustom\",\r\n            },\r\n            title: \"Oops...\",\r\n            text: response.data,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        Swal.close();\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: \"Oops Data Not Updated...\",\r\n          text: error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n  // Save button // update button click funcation\r\n \r\n  const onClickChange = (event) => {  \r\n    event.preventDefault();\r\n    if (selected_Type == \"\" || selected_Type == null) {\r\n      setIsTypeEmpty(true);\r\n      const errorMessage = \"Please fill the required field Type is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    }  else if (stockNoText == \"\" || stockNoText == null) {\r\n      setIsStockNo(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Stock No is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (MasterLocationCode == \"\" || MasterLocationCode == null) {\r\n      setIsMasterLocationEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Master Location is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (selected_orderRule == \"\" || selected_orderRule == null) {\r\n      setIsOrderRuleEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Order Rule is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (\r\n      selected_costCenter == \"\" ||\r\n      selected_costCenter == null\r\n    ) {\r\n      setIsCostCenterEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Cost Center is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (selected_account == \"\" || selected_account == null) {\r\n      setIsAccountEmpty(true);\r\n      const errorMessage = \"Please fill the required field Account is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (\r\n      Short_Description == \"\" ||\r\n      Short_Description == null\r\n    ) {\r\n      setIsDescEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Description is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (selected_partDeacStatus == \"\" || selected_partDeacStatus == null) {\r\n      setIsPartDeacEmpty(true);\r\n      const errorMessage = \"Please fill the required field Part Deac Status is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else if (\r\n      selected_issueUom == \"\" ||\r\n      selected_issueUom == null\r\n    ) {\r\n      setIsIssueUomEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Issue UOM is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    }else if (\r\n      selected_recivedUom == \"\" ||\r\n      selected_recivedUom == null\r\n    ) {\r\n      setIsReciveUomEmpty(true);\r\n      const errorMessage =\r\n        \"Please fill the required field Recive UOM is required!\";\r\n      setSnackbarOpen(true);\r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarSeverity(\"error\");\r\n    } else {\r\n      if (Button_save === \"Save\") {\r\n        New_Inventory();\r\n      } else if (Button_save === \"Update\") {\r\n        Update_Inventory();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (snackbarOpen) {\r\n      timer = setInterval(() => {\r\n        setProgress((oldProgress) => {\r\n          if (oldProgress === 100) {\r\n            clearInterval(timer);\r\n            setSnackbarOpen(false);\r\n            return 0;\r\n          }\r\n          const diff = Math.random() * 10;\r\n          return Math.min(oldProgress + diff, 100);\r\n        });\r\n      }, 400);\r\n    } else {\r\n      setProgress(0);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [snackbarOpen]);\r\n\r\n  const onClickDuplicate = (event) => {\r\n    event.preventDefault();\r\n    if (Button_save === \"Duplicate\") {\r\n      // console.log(\"claing Api to duplicate key \");\r\n      New_Inventory();\r\n    }\r\n  };\r\n\r\n  const onClickChangeComplete = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (selected_Status === \"\" || selected_Status === null) {\r\n      setIsFiledValueEmpty(true);\r\n    } else if (CorrectiveAction === \"\" || CorrectiveAction === null) {\r\n      setIsCorrectiveValueEmpty(true);\r\n    } else if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      setIsCauseCodeValueEmpty(true);\r\n    } else if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      setIsActionCodeValueEmpty(true);\r\n    } else {\r\n      if (Button_save === \"Completed\") {\r\n        // console.log(\"Completed____btn\");\r\n        Update_complete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickChangeClose = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (selected_Status === \"\" || selected_Status === null) {\r\n      setIsFiledValueEmpty(true);\r\n    } else if (CorrectiveAction === \"\" || CorrectiveAction === null) {\r\n      setIsCorrectiveValueEmpty(true);\r\n    } else if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      setIsCauseCodeValueEmpty(true);\r\n    } else if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      setIsActionCodeValueEmpty(true);\r\n    } else {\r\n      if (Button_save === \"Close Order\") {\r\n        // console.log(\"close____btn\");\r\n        Update_closeOrder();\r\n      }\r\n    }\r\n  };\r\n  const onClickCancel = () => {\r\n    navigate(`/dashboard/InventoryMaster/list`, {\r\n      state: {\r\n        currentPage,\r\n        selectedOption,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Complete button click api\r\n  const Update_complete = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n    const formattedDate = CompletionDate2\r\n      ? Moment(CompletionDate2).format(\"YYYY-MM-DD HH:mm:ss.SSS\")\r\n      : \"\";\r\n    let CompleteStatus;\r\n    if (selected_Status.label === \"\" || selected_Status.label === null) {\r\n      CompleteStatus = \"\";\r\n    } else {\r\n      const Status2 = selected_Status.label.split(\":\");\r\n      CompleteStatus = Status2[0];\r\n      ////console.log(\"Status: \", Status[0])\r\n    }\r\n\r\n    let selectedActionCode;\r\n    if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      selectedActionCode(\"\");\r\n    } else {\r\n      const ActionCode = selected_Action_Code.label.split(\":\");\r\n      selectedActionCode = ActionCode[0];\r\n    }\r\n\r\n    let selectedCauseCode;\r\n    if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      selectedCauseCode(\"\");\r\n    } else {\r\n      const CauseCode2 = selected_Cause_Code.label.split(\":\");\r\n      selectedCauseCode = CauseCode2[0];\r\n    }\r\n    var json_workorder = {\r\n      site_cd: site_ID,\r\n      wko_mst_status: CompleteStatus,\r\n      audit_user: emp_mst_name.trim(),\r\n      wko_det_cmpl_date: formattedDate,\r\n      wko_det_corr_action: CorrectiveAction,\r\n      wko_sts_wo_no: WorkOrderNo,\r\n      mst_RowID: completeRowID,\r\n      wko_det_act_code: selectedActionCode,\r\n      wko_det_cause_code: selectedCauseCode,\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/complete_workorder.php\",\r\n        JSON.stringify(json_workorder)\r\n      );\r\n      console.log(\"res\", response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: response.data.status,\r\n          text: response.data.message,\r\n        }).then(() => {\r\n          navigate(`/dashboard/work/order`);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops somthing is wrong...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Close button click Api\r\n  const Update_closeOrder = async () => {\r\n    Swal.fire({\r\n      title: \"Loading.... !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    // Swal.showLoading();\r\n    const formattedDate = CloseDate2\r\n      ? Moment(CloseDate2).format(\"YYYY-MM-DD HH:mm:ss.SSS\")\r\n      : \"\";\r\n    let CloseStatus;\r\n    if (selected_Status.label === \"\" || selected_Status.label === null) {\r\n      CloseStatus = \"\";\r\n    } else {\r\n      const Status2 = selected_Status.label.split(\":\");\r\n      CloseStatus = Status2[0];\r\n      ////console.log(\"Status: \", Status[0])\r\n    }\r\n\r\n    let selectedActionCode;\r\n    if (\r\n      selected_Action_Code.label === \"\" ||\r\n      selected_Action_Code.label === null\r\n    ) {\r\n      selectedActionCode(\"\");\r\n    } else {\r\n      const ActionCode = selected_Action_Code.label.split(\":\");\r\n      selectedActionCode = ActionCode[0];\r\n    }\r\n\r\n    let selectedCauseCode;\r\n    if (\r\n      selected_Cause_Code.label === \"\" ||\r\n      selected_Cause_Code.label === null\r\n    ) {\r\n      selectedCauseCode(\"\");\r\n    } else {\r\n      const CauseCode2 = selected_Cause_Code.label.split(\":\");\r\n      selectedCauseCode = CauseCode2[0];\r\n    }\r\n    var json_workorder = {\r\n      site_cd: site_ID,\r\n      wko_mst_status: CloseStatus,\r\n      audit_user: emp_mst_name.trim(),\r\n      wko_det_close_date: formattedDate,\r\n      wko_det_corr_action: CorrectiveAction,\r\n      wko_sts_wo_no: WorkOrderNo,\r\n      mst_RowID: closeRowID,\r\n      wko_det_act_code: selectedActionCode,\r\n      wko_det_cause_code: selectedCauseCode,\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/Close_workorder.php\",\r\n        JSON.stringify(json_workorder)\r\n      );\r\n      console.log(\"res\", response);\r\n      if (response.data.status == \"SUCCESS\") {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          customClass: {\r\n            container: \"swalcontainercustom\",\r\n          },\r\n          title: response.data.status,\r\n          text: response.data.message,\r\n        }).then(() => {\r\n          navigate(`/dashboard/work/order`);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops somthing is wrong...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Status Audit PopUp\r\n\r\n  const formatDuration = (duration) => {\r\n    // const seconds = Math.floor(duration % 60);\r\n    const minutes = Math.floor(duration % 60);\r\n    const hours = Math.floor((duration % 1440) / 60);\r\n    const days = Math.floor(duration / 1440);\r\n\r\n    if (days > 0) {\r\n      return `${days}d: ${hours}h: ${minutes}m`;\r\n    } else if (hours > 0) {\r\n      return `${hours}h: ${minutes}m`;\r\n    } else if (minutes > 0) {\r\n      return `${minutes}m`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n    // return `${days}d: ${hours}h: ${minutes}m`;\r\n  };\r\n  const getsteps = async () => {\r\n    // console.log(\"enter_getSteps___\");\r\n    Swal.fire({\r\n      title: \"Please Wait !\",\r\n      allowOutsideClick: false,\r\n      customClass: {\r\n        container: \"swalcontainercustom\",\r\n      },\r\n    });\r\n    Swal.showLoading();\r\n\r\n    try {\r\n      const responseJson = await httpCommon.get(\r\n        `/get_assetmaster_statusaudit.php?site_cd=${site_ID}&RowID=${RowID}`\r\n      );\r\n      // console.log(\"responseJson___audit\",responseJson);\r\n      if (responseJson.data.status === \"SUCCESS\") {\r\n        // console.log('get_workordermaster_statusaudit', responseJson.data.data)\r\n\r\n        let Status = responseJson.data.data.map((item, index) => ({\r\n          label: item.ast_sts_desc,\r\n          label1: item.ast_aud_status,\r\n          label2: item.emp_mst_name,\r\n          label3: item.audit_user,\r\n          label4: `${new Date(item.ast_aud_start_date.date).toLocaleString(\r\n            \"default\",\r\n            {\r\n              weekday: \"short\",\r\n              day: \"numeric\",\r\n              month: \"numeric\",\r\n              year: \"numeric\",\r\n              hour: \"numeric\",\r\n              minute: \"numeric\",\r\n              second: \"numeric\",\r\n            }\r\n          )}`,\r\n          label5: formatDuration(item.duration),\r\n          step: index + 1,\r\n        }));\r\n        setsteps(Status);\r\n\r\n        Swal.close();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: responseJson.data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_sitecode...\",\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n  const StatushandleShow = () => {\r\n    setStatusShow(true);\r\n    getsteps();\r\n  };\r\n\r\n  const handleImageChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        // const base64String = reader.result.split(',')[1];\r\n        const base64String2 = reader.result.split(\",\")[1];\r\n\r\n        const base64String = reader.result;\r\n\r\n        const fileName = file.name;\r\n        setImagePreview(base64String);\r\n        // Set the state with the base64 string and file name\r\n        setimageComment({\r\n          base64: base64String2,\r\n          fileName: fileName,\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmitCmmnt = async () => {\r\n    Swal.fire({ title: \"Loading.... !\", allowOutsideClick: false });\r\n    Swal.showLoading();\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_name = localStorage.getItem(\"emp_mst_name\");\r\n\r\n    const inputValue = messageRef.current.value;\r\n\r\n    const newComment = {\r\n      // Add other properties as needed\r\n      audit_user: emp_mst_login_id, // Replace with the actual user\r\n      audit_date: {\r\n        date: Moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        timezone_type: 3,\r\n        timezone: \"UTC\",\r\n      },\r\n      wko_ls11_sts_upd: inputValue,\r\n      attachment:\r\n        imageComment && imageComment.base64 ? imageComment.base64 : null,\r\n    };\r\n    setAllComment((prevComments) => [...prevComments, newComment]);\r\n\r\n    var json_workorder = {\r\n      site_cd: site_ID,\r\n      RowId: RowID,\r\n      commentMsg: inputValue,\r\n      Emp_name: emp_mst_name,\r\n      Emp_login_Name: emp_mst_login_id,\r\n      orderNo: WorkOrderNo,\r\n      ImgUpload: imageComment,\r\n    };\r\n\r\n    try {\r\n      const response = await httpCommon.post(\r\n        \"/insert_comment.php\",\r\n        JSON.stringify(json_workorder)\r\n      );\r\n      console.log(\"json_workordercommet Data\", response);\r\n\r\n      if (response.data.status === \"SUCCESS\") {\r\n        console.log(\"responseJson\", response.data.ROW_ID);\r\n        Swal.close();\r\n        //  setCommentShow(false);\r\n\r\n        if (messageRef.current) {\r\n          messageRef.current.value = \"\";\r\n        }\r\n        setImagePreview(\"\");\r\n        setimageComment(\"\");\r\n        // scrollChatToBottom();\r\n      } else {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: response.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.close();\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops get_WorkOrder_select...\",\r\n        text: error,\r\n      });\r\n    }\r\n\r\n    imageComment(null);\r\n  };\r\n\r\n  const handleImageClick = (imageData) => {\r\n    setSelectedImageCommnt(imageData);\r\n  };\r\n  const handleImageClickSHow = () => {\r\n    setUploadImgShow(true);\r\n  };\r\n  const handleUploadCloseClick = () => {\r\n    setImagePreview(\"\");\r\n  };\r\n  const handleSelectedFaultCode = (selectedOption) => {\r\n    const newValue =\r\n      selectedOption && selectedOption.value ? selectedOption : null;\r\n    // setDescription(newValue ? newValue.value : null);\r\n  };\r\n\r\n  // OnChange to check error funcation\r\n  const handleStatusChange = (event, value) => {\r\n    setSelected_Commodity(value);\r\n    setIsAssetStatusEmpty(false);\r\n  };\r\n  const handleAssetStatusChange = (event, value) => {\r\n    setSelected_Asset_Status(value);\r\n    setIsAssetStatusEmpty(false);\r\n  };\r\n  const handlePlanPriorityChange = async (event, value) => {\r\n    const newValue = value === null ? null : value;\r\n    setSelected_Plan_Priority(newValue);\r\n    if (value && value.label) {\r\n      const labelParts = value.label.split(\":\");\r\n      const valueBeforeColon = labelParts[0].trim();\r\n\r\n      if (valueBeforeColon !== \"\") {\r\n        try {\r\n          const response = await httpCommon.get(\r\n            `GetDueDatePlanPriority.php?ID=${valueBeforeColon}&site_cd=${site_ID}`\r\n          );\r\n          if (response.data.status === \"SUCCESS\") {\r\n            const dueDateIncrement = response.data.data; // Assuming response.data.data contains the increment in milliseconds\r\n            if (!isNaN(dueDateIncrement)) {\r\n              //const dt = new Date();\r\n              const millisecondsToAdd = dueDateIncrement * 60 * 1000;\r\n              const newDate = new Date(\r\n                OriginationDate.getTime() + millisecondsToAdd\r\n              );\r\n              setDueDate(newDate);\r\n              Swal.close();\r\n              setLoading(false);\r\n            } else {\r\n              console.error(\"Invalid dueDateIncrement:\", response.data.data);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChargeCostChange = (event, value) => {\r\n    setSelected_Charge_Cost_Center(value);\r\n    setIsChargeCostEmpty(false);\r\n  };\r\n  const handleFaultCodeChange = (event, value) => {\r\n    const newValue = value === null ? null : value;\r\n\r\n    setSelected_Fault_Code(newValue);\r\n    handleSelectedFaultCode(newValue);\r\n    setIsFaultCodeEmpty(false);\r\n  };\r\n  const handleOriginalPeriorityChange = (event, value) => {\r\n    setSelected_Original_Periority(value);\r\n    setIsOriginalPeriorityEmpty(false);\r\n  };\r\n  const handleWorkTypeChange = (event, value) => {\r\n    setSelected_Work_Type(value);\r\n    setIsWorkTypeEmpty(false);\r\n  };\r\n  const handleWorkGroupChange = (event, value) => {\r\n    setSelected_Work_Group(value);\r\n    setIsWorkGroupEmpty(false);\r\n  };\r\n\r\n  const toggleDiv = () => {\r\n    setIsOpenWork(!isOpenWork);\r\n  };\r\n\r\n  const toggleDivAsset = () => {\r\n    setIsOpenAsset(!isOpenAsset);\r\n  };\r\n  const handleDataFromSecondComponent = (data) => {\r\n    console.log(\"data++++++++\", data);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleToggle = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleContinueCheckboxChange = (event) => {\r\n\r\n    setcontinuousAdd(event.target.checked);\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {RowID\r\n            ? \"Update Inventory\"\r\n            : DuplicatRowid\r\n            ? \"Duplicate Inventory\"\r\n            : \"Create New Inventory\"}\r\n        </title>\r\n        <meta name=\"description\" content=\"Create New Inventory\" />\r\n      </Helmet>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <div\r\n          className=\"CustomBreadAssetSave asset\"\r\n          style={{\r\n            position: \"-webkit-sticky\",\r\n            position: \"sticky\",\r\n            top: \"55px\",\r\n            backgroundColor: \"white\",\r\n            zIndex: 1000,\r\n            borderBottom: \"1px solid #00000021\",\r\n            height: \"60px !important\",\r\n          }}\r\n        >\r\n          <CustomBreadcrumbs\r\n            // heading=\"Create Work Order\"\r\n            heading={\r\n              RowID\r\n                ? `Update ${WorkOrderNo} Inventory`\r\n                : DuplicatRowid\r\n                ? \"Duplicate Inventory\"\r\n                : \"Create New Inventory\"\r\n            }\r\n            links={[\r\n              {\r\n                name: \"Inventory\",\r\n              },\r\n              { name: RowID ? \"Update\" : \"Create\" },\r\n            ]}\r\n            action={\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {(() => {\r\n                  if (\r\n                    DuplicatRowid !== undefined &&\r\n                    DuplicatRowid !== null &&\r\n                    DuplicatRowid !== \"\"\r\n                  ) {\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickDuplicate}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                        >\r\n                          {Button_save === \"Duplicate\" ? \"Save\" : Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          className=\"CloseButton\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          onClick={onClickChange}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                          disabled={Status.some(\r\n                            (item) =>\r\n                              item.key ===\r\n                                (\r\n                                  selected_Status?.label?.split(\" : \")[2] ?? \"\"\r\n                                ).trim() && item.key === \"CLOSE\"\r\n                          )}\r\n                        >\r\n                          {Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          className=\"CloseButton\"\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                          onClick={onClickCancel}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })()}\r\n              </div>\r\n            }\r\n            sx={{ mb: { xs: 3, md: 5 } }}\r\n          />\r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <p>Loading data...</p>\r\n          ) : (\r\n            <>\r\n              {/* toggle view strting from here */}\r\n              <div\r\n                className=\"MainOrderFromGd\"\r\n                style={{ backgroundColor: \"white\" }}\r\n              >\r\n                <Grid container spacing={0}>\r\n                  <Grid xs={12} md={12}>\r\n                    <Card sx={{ padding: \"10px 24px 15px 24px\" }}>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <button className=\"ToggleBttnIcon\" onClick={toggleDiv}>\r\n                          <Iconify\r\n                            icon=\"fluent-mdl2:pen-workspace\"\r\n                            style={{ marginRight: \"5px\", width: \"17px\" }}\r\n                          />{\" \"}\r\n                          Inventory Master\r\n                          {isOpenWork ? (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-up-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          ) : (\r\n                            <Iconify\r\n                              icon=\"ep:arrow-down-bold\"\r\n                              style={{ marginLeft: \"4px\", width: \"12px\" }}\r\n                            />\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                      {isOpenWork && (\r\n                        <Grid container spacing={0}>\r\n                          <Grid xs={12} md={10}>\r\n                            {/* ************************************* img ******************************************* */}\r\n                            <div className=\"col-md-2 mobileImgversion\">\r\n                              <div className=\"row\">\r\n                                <div className=\"row ImgShowMobile\">\r\n                                  <div>\r\n                                    <label htmlFor=\"upload-button\">\r\n                                      {getDbImg && getDbImg.length > 0 ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={getDbImg[0].attachment}\r\n                                            className=\"imgCurPont\"\r\n                                            // width=\"200\"\r\n                                            // height=\"180\"\r\n                                            alt=\"Base64 Image\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                          <div className=\"col btnCenter\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn dlt\"\r\n                                              onClick={() =>\r\n                                                handleDeleteImgApi(\r\n                                                  getDbImg[0].RowID\r\n                                                )\r\n                                              }\r\n                                              style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n\r\n                                                justifyContent: \"center\",\r\n                                                marginTop: \"10px\",\r\n                                              }}\r\n                                            >\r\n                                              <Iconify\r\n                                                icon=\"fluent:delete-48-filled\"\r\n                                                style={{ fontSize: \"24px\" }}\r\n                                              />\r\n                                              Delete\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : image.preview ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={image.preview}\r\n                                            alt=\"dummy\"\r\n                                            // width=\"200\"\r\n                                            // height=\"180\"\r\n                                            className=\"imgCurPont\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                          <div className=\"col btnCenter\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn dlt\"\r\n                                              onClick={handleClearImg}\r\n                                              style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                              }}\r\n                                            >\r\n                                              <Iconify\r\n                                                icon=\"fluent:delete-48-filled\"\r\n                                                style={{ marginRight: \"5px\" }}\r\n                                              />\r\n                                              Delete\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <>\r\n                                          <span className=\"fa-stack fa-2x mb-2\">\r\n                                            <img\r\n                                              src={require(\"../../../../assets/img/Add_Image_icon.png\")}\r\n                                              className=\"sliderimg2\"\r\n                                              onClick={handleImgChangeSingle2}\r\n                                              width=\"200\"\r\n                                              height=\"180\"\r\n                                              alt=\"\"\r\n                                            />\r\n                                          </span>\r\n                                        </>\r\n                                      )}\r\n                                    </label>\r\n                                    {getDbImg && getDbImg.length > 0 ? (\r\n                                      <div></div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <input\r\n                                          type=\"file\"\r\n                                          id=\"upload-button\"\r\n                                          disabled={disabledBtn}\r\n                                          style={{ display: \"none\" }}\r\n                                          onChange={handleImgChangeSingle}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                    <br />\r\n                                  </div>\r\n                                  <BootstrapDialog\r\n                                    onClose={handleClosedd2}\r\n                                    aria-labelledby=\"customized-dialog-title\"\r\n                                    open={showdd2}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"close\"\r\n                                      onClick={handleClosedd2}\r\n                                      sx={{\r\n                                        position: \"absolute\",\r\n                                        right: 8,\r\n                                        top: 8,\r\n                                        color: (theme) =>\r\n                                          theme.palette.grey[500],\r\n                                      }}\r\n                                    >\r\n                                      X\r\n                                    </IconButton>\r\n                                    <DialogContent\r\n                                      dividers\r\n                                      style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      {getDbImg && getDbImg.length > 0 ? (\r\n                                        <div>\r\n                                          <img\r\n                                            src={getDbImg[0].attachment}\r\n                                            alt=\"dummy\"\r\n                                            className=\"dummyImg\"\r\n                                            onClick={openSaveImg}\r\n                                          />\r\n                                        </div>\r\n                                      ) : (\r\n                                        <img\r\n                                          src={image.preview}\r\n                                          alt=\"dummy\"\r\n                                          style={{\r\n                                            height: \"50%\",\r\n                                            width: \"50%\",\r\n                                          }}\r\n                                          onClick={openSaveImg}\r\n                                          className=\"dummyImg\"\r\n                                        />\r\n                                      )}\r\n                                    </DialogContent>\r\n                                  </BootstrapDialog>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              width=\"100%\"\r\n                              marginBottom={1.5}\r\n                            >\r\n                              <Box\r\n                                display=\"flex\"\r\n                                alignItems=\"center\"\r\n                                width=\"100%\"\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                              >\r\n                                <Stack flexGrow={1} spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    className=\"Requiredlabel\"\r\n                                  >\r\n                                    \r\n                                    {findCustomizeLabel(\"itm_mst_type\") ||\r\n                                      \"Type\"}\r\n                                  </Typography>\r\n                                \r\n                                  <Autocomplete\r\n                                    options={type}\r\n                                    value={(selected_Type?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                    onChange={(event, value) => {\r\n                                      setSelected_Type(value);\r\n                                      setIsTypeEmpty(false);\r\n\r\n                                    }}\r\n                                \r\n                                    disableAnimation\r\n                                    disabled={RowID !== \"\" && RowID !== null && RowID !== undefined}\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isTypeEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                                </Stack>\r\n                              </Box>\r\n\r\n                              <Box\r\n                                rowGap={2}\r\n                                columnGap={1}\r\n                                display=\"flex\"\r\n                                alignItems=\"center\"\r\n                                width=\"100%\"\r\n                              >\r\n                                <Stack flexGrow={1} spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    className=\"\"\r\n                                  >\r\n                                    {findCustomizeLabel(\"itm_mst_com_code\") ||\r\n                                      \"Commodity Code\"}\r\n                                  </Typography>\r\n\r\n                                  <Autocomplete\r\n                                    options={commodity}\r\n                                    value={(selected_Commodity?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                    onChange={handleStatusChange}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                     \r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isCommodityCodeEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                                </Stack>\r\n                               \r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className=\"Requiredlabel\"\r\n                                >\r\n                                  {findCustomizeLabel(\"itm_mst_stockno\") ||\r\n                                    \"Stock No\"}\r\n                                </Typography>\r\n                            \r\n                                {selected_Type.label &&\r\n                                selected_Type.label ===\r\n                                  \"Serialize With Asset\" ? (\r\n                                  <Autocomplete\r\n                                    options={stockNo}\r\n                                    value = {stockNoText}\r\n                                    // value={(stockNoText? stockNoText.label == stockNoText : \"\")\r\n                                    //   .split(\" : \")\r\n                                    //   .slice(0, 2)\r\n                                    //   .join(\" : \")}\r\n                                    onChange={(event, value) => {\r\n                                      setStockNoText(value);\r\n                                      setIsStockNo(false);\r\n                                    }}\r\n                                    disableAnimation\r\n                                    disabled={RowID !== \"\" && RowID !== null && RowID !== undefined}\r\n                                    renderInput={(params) => (\r\n                                     \r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isStockNo\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                                ) : (\r\n                                  <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    value={(stockNoText ? stockNoText : \"\")}\r\n                                    onChange={(e) => {\r\n                                      setStockNoText(e.target.value);\r\n                                      setIsStockNo(false);\r\n                                     \r\n                                    }}\r\n                                    disabled={RowID !== \"\" && RowID !== null && RowID !== undefined}\r\n                                    className={`Extrasize ${\r\n                                      isStockNo\r\n                                        ? \"errorEmpty\"\r\n                                        : \"\"\r\n                                    }`}\r\n                                    fullWidth\r\n                                  />\r\n                                )}\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={1}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    \r\n                                  >\r\n                                    {findCustomizeLabel(\"itm_mst_itm_grp\") ||\r\n                                      \"Stock Group\"}\r\n                                  </Typography>\r\n\r\n                                  <Autocomplete\r\n                                    options={stockGroup}\r\n                                    value={(selected_stockGroup?.label || \"\")\r\n                                      .split(\" : \")\r\n                                      .slice(0, 2)\r\n                                      .join(\" : \")}\r\n                                    onChange={(event, value) => {\r\n                                      setSelected_stockGroup(value);\r\n                                      setIsAssetCriticalFactorEmpty(false);\r\n                                    }}\r\n                                    disableAnimation\r\n                                    renderInput={(params) => (\r\n                                      <div>\r\n                                        <TextField\r\n                                          {...params}\r\n                                          placeholder=\"Select...\"\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          className={`Extrasize ${\r\n                                            isAssetCriticalFactorEmpty\r\n                                              ? \"errorEmpty\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          style={{ width: \"100%\" }}\r\n                                          ref={autocompleteRef}\r\n                                        />\r\n                                      </div>\r\n                                    )}\r\n                                  />\r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                              <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                                  <Typography variant=\"subtitle2\" className=\"Requiredlabel\" >\r\n                                  {findCustomizeLabel(\"itm_mst_mstr_locn\") ||\r\n                                    \"Master Location\"}\r\n                                    \r\n                                  </Typography>\r\n                                  <div ref={MasterLocationCodeRef}>\r\n                                    <CustomTextField\r\n                                      id=\"outlined-basic\"\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      className={`Extrasize ${\r\n                                        isMasterLocationEmpty\r\n                                          ? \"errorEmpty\"\r\n                                          : \"\"\r\n                                      }`}\r\n                                      \r\n                                      fullWidth\r\n                                      value={MasterLocationCode || \"\"}\r\n                                      disabled={RowID !== \"\" && RowID !== null && RowID !== undefined}\r\n                                      placeholder=\"Select...\"\r\n                                      rightIcons={[\r\n                                        <Iconify\r\n                                          icon=\"material-symbols:close\"\r\n                                          onClick={handleCancelMasterLocation}\r\n                                        />,\r\n                                        <Iconify\r\n                                          icon=\"tabler:edit\"\r\n                                          onClick={handleEditClickMasterLocation}\r\n                                        />,\r\n                                      ]}\r\n                                    />\r\n                                  </div>\r\n                                </Stack>\r\n                              <Box\r\n                                rowGap={1}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    className={findCustomizerequiredLabel(\r\n                                      \"itm_mst_partno\"\r\n                                    )}\r\n                                  >\r\n                                    {findCustomizeLabel(\"itm_mst_partno\") ||\r\n                                      \"Part No\"}\r\n                                  </Typography>\r\n                                  <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    value={PartNo}\r\n                                    onChange={(e) => {\r\n                                      setPartNo(e.target.value);\r\n                                     \r\n                                    }}\r\n                                    \r\n                                    className={\r\n                                      errorField === \"itm_mst_stockno\"\r\n                                        ? \"erroBorderadd\"\r\n                                        : \"\"\r\n                                    }\r\n                                    fullWidth\r\n                                  />\r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className=\"Requiredlabel\"\r\n                                >\r\n                                  {findCustomizeLabel(\"itm_mst_order_rule\") ||\r\n                                    \"Order Rule\"}\r\n                                </Typography>\r\n\r\n                                <Autocomplete\r\n                                  options={orderRule}\r\n                                  value={(selected_orderRule?.label || \"\")\r\n                                    .split(\" : \")\r\n                                    .slice(0, 2)\r\n                                    .join(\" : \")}\r\n                                  onChange={(event, value) => {\r\n                                    setSelected_orderRule(value);\r\n                                    setIsOrderRuleEmpty(false);\r\n                                  }}\r\n                                  disableAnimation\r\n                                  renderInput={(params) => (\r\n                                    <div>\r\n                                      <TextField\r\n                                        {...params}\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        \r\n                                        className={`Extrasize ${\r\n                                          isOrderRuleEmpty\r\n                                            ? \"errorEmpty\"\r\n                                            : \"\"\r\n                                        }`}\r\n                                        style={{ width: \"100%\" }}\r\n                                        ref={autocompleteRef}\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                />\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={1}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    className={findCustomizerequiredLabel(\r\n                                      \"itm_mst_ttl_oh\"\r\n                                    )}\r\n                                  >\r\n                                    {findCustomizeLabel(\"itm_mst_ttl_oh\") ||\r\n                                      \"Total OH\"}\r\n                                  </Typography>\r\n                                  <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    size=\"small\"\r\n                                    disabled\r\n                                    variant=\"outlined\"\r\n                                    value=\"0.0000\"\r\n                                   \r\n                                    className={\r\n                                      errorField === \"itm_mst_stockno\"\r\n                                        ? \"erroBorderadd\"\r\n                                        : \"\"\r\n                                    }\r\n                                    fullWidth\r\n                                  />\r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className=\"Requiredlabel\"\r\n                                >\r\n                                  {findCustomizeLabel(\"itm_mst_costcenter\") ||\r\n                                    \"Cost Center\"}\r\n                                </Typography>\r\n\r\n                                <Autocomplete\r\n                                  options={costCenter}\r\n                                  value={(selected_costCenter?.label || \"\")\r\n                                    .split(\" : \")\r\n                                    .slice(0, 2)\r\n                                    .join(\" : \")}\r\n                                  onChange={(event, value) => {\r\n                                    setSelected_costCenter(value);\r\n                                    setIsCostCenterEmpty(false);\r\n                                  }}\r\n                                  disableAnimation\r\n                                  renderInput={(params) => (\r\n                                    <div>\r\n                                      <TextField\r\n                                        {...params}\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        className={`Extrasize ${\r\n                                          isCostCenterEmpty\r\n                                            ? \"errorEmpty\"\r\n                                            : \"\"\r\n                                        }`}\r\n                                        style={{ width: \"100%\" }}\r\n                                        ref={autocompleteRef}\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                />\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={1}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    className={findCustomizerequiredLabel(\r\n                                      \"itm_mst_issue_price\"\r\n                                    )}\r\n                                  >\r\n                                    {findCustomizeLabel(\r\n                                      \"itm_mst_issue_price\"\r\n                                    ) || \"Issue Price\"}\r\n                                  </Typography>\r\n                                  <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    size=\"small\"\r\n                                    disabled\r\n                                    variant=\"outlined\"\r\n                                    value={getissuePrice ? getissuePrice :\"0.0000\"}\r\n                                   \r\n                                    className={\r\n                                      errorField === \"itm_mst_stockno\"\r\n                                        ? \"erroBorderadd\"\r\n                                        : \"\"\r\n                                    }\r\n                                    fullWidth\r\n                                  />\r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className=\"Requiredlabel\"\r\n                                >\r\n                                  {findCustomizeLabel(\"itm_mst_account\") ||\r\n                                    \"Account\"}\r\n                                </Typography>\r\n\r\n                                <Autocomplete\r\n                                  options={account}\r\n                                  value={(selected_account?.label || \"\")\r\n                                    .split(\" : \")\r\n                                    .slice(0, 2)\r\n                                    .join(\" : \")}\r\n                                  onChange={(event, value) => {\r\n                                    setSelected_account(value);\r\n                                    setIsAccountEmpty(false);\r\n                                  }}\r\n                                  disableAnimation\r\n                                  renderInput={(params) => (\r\n                                    <div>\r\n                                      <TextField\r\n                                        {...params}\r\n                                        placeholder=\"Select...\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        className={`Extrasize ${\r\n                                          isAccountEmpty\r\n                                            ? \"errorEmpty\"\r\n                                            : \"\"\r\n                                        }`}\r\n                                        style={{ width: \"100%\" }}\r\n                                        ref={autocompleteRef}\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                />\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={1}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    className={findCustomizerequiredLabel(\r\n                                      \"itm_mst_partnoss\"\r\n                                    )}\r\n                                  >\r\n                                    {findCustomizeLabel(\"itm_mst_partnoss\") ||\r\n                                      \"Serialize Counter:\"}\r\n                                  </Typography>\r\n                                  <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    size=\"small\"\r\n                                    disabled\r\n                                    variant=\"outlined\"\r\n                                    value=\"100001\"\r\n                                   \r\n                                    className={\r\n                                      errorField === \"itm_mst_stockno\"\r\n                                        ? \"erroBorderadd\"\r\n                                        : \"\"\r\n                                    }\r\n                                    fullWidth\r\n                                  />\r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box\r\n                              rowGap={2}\r\n                              columnGap={2}\r\n                              display=\"grid\"\r\n                              gridTemplateColumns={{\r\n                                xs: \"repeat(1, 1fr)\",\r\n                                sm: \"repeat(2, 1fr)\",\r\n                              }}\r\n                              marginBottom={0}\r\n                            >\r\n                              <Stack spacing={1}>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className=\"Requiredlabel\"\r\n                                >\r\n                                  {findCustomizeLabel(\"itm_mst_desc\") ||\r\n                                    \"Description\"}\r\n                                </Typography>\r\n                                <TextareaAutosize\r\n                                  aria-label=\"empty textarea\"\r\n                                  placeholder=\"Description...\"\r\n                                  minRows={6.5}\r\n                                  value={Short_Description}\r\n                                  onChange={(e) => {\r\n                                    setShort_Description(e.target.value);\r\n                                    setIsDescEmpty(false);\r\n                                  }}\r\n                                  //  className=\"TxtAra\"\r\n                                  className={`Extrasize ${\r\n                                    isDescEmpty\r\n                                      ? \"errorEmpty\"\r\n                                      : \"TxtAra\"\r\n                                  }`}\r\n                                />\r\n                              </Stack>\r\n                              <Box\r\n                                rowGap={1}\r\n                                columnGap={1}\r\n                                display=\"grid\"\r\n                                marginBottom={1}\r\n                              >\r\n                                <Stack spacing={1}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    className={findCustomizerequiredLabel(\r\n                                      \"itm_mst_ext_desc\"\r\n                                    )}\r\n                                  >\r\n                                    {findCustomizeLabel(\"itm_mst_ext_desc\") ||\r\n                                      \"Extended Description\"}\r\n                                  </Typography>\r\n                                  <TextareaAutosize\r\n                                    aria-label=\"empty textarea\"\r\n                                    placeholder=\"Extended Description...\"\r\n                                    minRows={6.5}\r\n                                    value={Long_Description}\r\n                                    onChange={(e) => {\r\n                                      setErrorField(null);\r\n                                      setLong_Description(e.target.value);\r\n                                    }}\r\n                                    className={\r\n                                      errorField === \"ast_mst_asset_longdesc\"\r\n                                        ? \"erroBorderadd\"\r\n                                        : \"TxtAra\"\r\n                                    }\r\n                                  />\r\n                                </Stack>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box rowGap={1} columnGap={1} display=\"grid\" marginBottom={1}>\r\n                              <Stack direction=\"row\" spacing={1} sx={{ pb: 1.5 }} alignItems=\"center\">\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  className={findCustomizerequiredLabel(\"itm_det_auto_spare\")}\r\n                                >\r\n                                  {findCustomizeLabel(\"continuous_add\") || \"Continuous Add\"}\r\n                                 \r\n                                </Typography>\r\n                                <Checkbox className=\"customeCheckBox\"\r\n                                  checked={continuousadd}\r\n                                  onChange={handleContinueCheckboxChange} />\r\n                              </Stack>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid xs={12} md={2} className=\"imgGird\">\r\n                            <Card sx={{ pt: 2, pb: 0, px: 3 }}>\r\n                              <Box\r\n                                sx={{\r\n                                  mb: 5,\r\n                                  display: \"flex\",\r\n                                  flexDirection: \"column\",\r\n                                  alignItems: \"center\",\r\n                                  justifyContent: \"center\",\r\n                                }}\r\n                              >\r\n                                {/* ************************************* img ******************************************* */}\r\n\r\n                                <div className=\"col-md-2\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"row ImgShowMobile\">\r\n                                      <div>\r\n                                        <label htmlFor=\"upload-button\">\r\n                                          {getDbImg && getDbImg.length > 0 ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={getDbImg[0].attachment}\r\n                                                className=\"imgCurPont\"\r\n                                                // width=\"200\"\r\n                                                // height=\"180\"\r\n                                                alt=\"Base64 Image\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                              <div className=\"col btnCenter\">\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"btn dlt\"\r\n                                                  onClick={() =>\r\n                                                    handleDeleteImgApi(\r\n                                                      getDbImg[0].RowID\r\n                                                    )\r\n                                                  }\r\n                                                  style={{\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n\r\n                                                    justifyContent: \"center\",\r\n                                                    marginTop: \"10px\",\r\n                                                  }}\r\n                                                >\r\n                                                  <Iconify\r\n                                                    icon=\"fluent:delete-48-filled\"\r\n                                                    style={{ fontSize: \"24px\" }}\r\n                                                  />\r\n                                                  Delete\r\n                                                </button>\r\n                                              </div>\r\n                                            </div>\r\n                                          ) : image.preview ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={image.preview}\r\n                                                alt=\"dummy\"\r\n                                                // width=\"200\"\r\n                                                // height=\"180\"\r\n                                                className=\"imgCurPont\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                              <div className=\"col btnCenter\">\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"btn dlt\"\r\n                                                  onClick={handleClearImg}\r\n                                                  style={{\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n                                                    justifyContent: \"center\",\r\n                                                  }}\r\n                                                >\r\n                                                  <Iconify\r\n                                                    icon=\"fluent:delete-48-filled\"\r\n                                                    style={{\r\n                                                      marginRight: \"5px\",\r\n                                                    }}\r\n                                                  />\r\n                                                  Delete\r\n                                                </button>\r\n                                              </div>\r\n                                            </div>\r\n                                          ) : (\r\n                                            <>\r\n                                              <span className=\"fa-stack fa-2x mb-2\">\r\n                                                <img\r\n                                                  src={require(\"../../../../assets/img/Add_Image_icon.png\")}\r\n                                                  className=\"sliderimg2\"\r\n                                                  onClick={\r\n                                                    handleImgChangeSingle2\r\n                                                  }\r\n                                                  width=\"200\"\r\n                                                  height=\"180\"\r\n                                                  alt=\"\"\r\n                                                />\r\n                                              </span>\r\n                                            </>\r\n                                          )}\r\n                                        </label>\r\n                                        {getDbImg && getDbImg.length > 0 ? (\r\n                                          <div></div>\r\n                                        ) : (\r\n                                          <div>\r\n                                            <input\r\n                                              type=\"file\"\r\n                                              id=\"upload-button\"\r\n                                              disabled={disabledBtn}\r\n                                              style={{ display: \"none\" }}\r\n                                              onChange={handleImgChangeSingle}\r\n                                            />\r\n                                          </div>\r\n                                        )}\r\n                                        <br />\r\n                                      </div>\r\n                                      <BootstrapDialog\r\n                                        onClose={handleClosedd2}\r\n                                        aria-labelledby=\"customized-dialog-title\"\r\n                                        open={showdd2}\r\n                                      >\r\n                                        <IconButton\r\n                                          aria-label=\"close\"\r\n                                          onClick={handleClosedd2}\r\n                                          sx={{\r\n                                            position: \"absolute\",\r\n                                            right: 8,\r\n                                            top: 8,\r\n                                            color: (theme) =>\r\n                                              theme.palette.grey[500],\r\n                                          }}\r\n                                        >\r\n                                          X\r\n                                        </IconButton>\r\n                                        <DialogContent\r\n                                          dividers\r\n                                          style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                          }}\r\n                                        >\r\n                                          {getDbImg && getDbImg.length > 0 ? (\r\n                                            <div>\r\n                                              <img\r\n                                                src={getDbImg[0].attachment}\r\n                                                alt=\"dummy\"\r\n                                                className=\"dummyImg\"\r\n                                                onClick={openSaveImg}\r\n                                              />\r\n                                            </div>\r\n                                          ) : (\r\n                                            <img\r\n                                              src={image.preview}\r\n                                              alt=\"dummy\"\r\n                                              style={{\r\n                                                height: \"50%\",\r\n                                                width: \"50%\",\r\n                                              }}\r\n                                              onClick={openSaveImg}\r\n                                              className=\"dummyImg\"\r\n                                            />\r\n                                          )}\r\n                                        </DialogContent>\r\n                                      </BootstrapDialog>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </Box>\r\n                            </Card>\r\n                          </Grid>\r\n                        </Grid>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              {/* toggle view End */}\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid xs={12} md={12}>\r\n                  <Card sx={{ p: 3 }}>\r\n                    <Tabs\r\n                      value={Tabvalue}\r\n                      onChange={handleChange}\r\n                      aria-label=\"Basic tabs\"\r\n                      defaultValue={0}\r\n                    >\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:information-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Details\r\n                          </div>\r\n                        }\r\n                      />\r\n\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:finance\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Financial\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:shop-location-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Location\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"mdi:axis-arrow-info\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Supplier\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <Tab\r\n                        label={\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Iconify\r\n                              icon=\"codicon:references\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                            Reference\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </Tabs>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 0}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {/*Details*/}\r\n\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className=\"Requiredlabel\"\r\n                            >\r\n                              {findCustomizeLabelDet(\r\n                                \"itm_det_part_deac_status\"\r\n                              ) || \"Part Deac Status\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={partDeacStatus}\r\n                              value={selected_partDeacStatus?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_partDeacStatus(value);\r\n                                setIsPartDeacEmpty(false);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  //  onClick={handleClickProjectID}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isPartDeacEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className=\"Requiredlabel\"\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_issue_uom\") ||\r\n                                \"Issue UOM\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={issueUom}\r\n                              value={selected_issueUom?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_IssueUom(value);\r\n                                setIsIssueUomEmpty(false);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isIssueUomEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className=\"Requiredlabel\"\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_rcv_uom\") ||\r\n                                \"Receive UOM\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                             \r\n                              options={recivedUom}\r\n                              value={selected_recivedUom?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_RecivedUom(value);\r\n                                setIsReciveUomEmpty(false);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={`Extrasize ${\r\n                                    isReciveUomEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"itm_det_rcv_uom_\") ||\r\n                                \"Conversion Factor:\"}\r\n                            </Typography>\r\n                           \r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={conversionFactor}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_storage_type\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_storage_type\") ||\r\n                                \"Storage Type\"}\r\n                            </Typography>\r\n                            <Autocomplete\r\n                              options={storageType}\r\n                              value={selected_storageType?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_StorageType(value);\r\n                                setIsAssetGroupCodeEmpty(false);\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  variant=\"outlined\"\r\n                                  className={`Extrasize ${\r\n                                    isAssetGroupCodeEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                  fullWidth // Make it full-width\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_cube\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_cube\") || \"Cube\"}\r\n                            </Typography>\r\n                          \r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              variant=\"outlined\"\r\n                              value={Cube}\r\n                              onChange={(e) => {\r\n                                setCube(e.target.value);\r\n                                \r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_mst_stockno\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_shelf_life\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_shelf_life\") ||\r\n                                \"Shelf Life\"}\r\n                              \r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              value={shelfLife}\r\n                              onChange={(e) => {\r\n                                setshelfLife(e.target.value);\r\n                                \r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_mst_stockno\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              \r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_eoq\") || \"EOQ\"}\r\n                            </Typography>\r\n                          \r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              placeholder=\"0\"\r\n                              disabled\r\n                              value={eOQ}\r\n                              onChange={(e) => {\r\n                                setEOQ(e.target.value);\r\n                              }}\r\n                               \r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              \r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_eoqqq\") ||\r\n                                \"Count Frequency:\"}\r\n                            </Typography>\r\n                             \r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={countFrequency}\r\n                              onChange= {(e) => {\r\n                                  setCountFrequency(e.target.value);\r\n                                }}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                          \r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                             \r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_eoqqq\") ||\r\n                                \"Average Lead Time:\"}\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={averageLeadTime}\r\n                              onChange= {(e) => {\r\n                                setAverageLeadTime(e.target.value);\r\n                              }}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_auto_spare\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"itm_det_auto_spare\") ||\r\n                                \"Auto Spare\"}\r\n                            </Typography>\r\n                           \r\n                            <Checkbox className=\"customeCheckBox\"\r\n                                  checked={autoSpare === 1}\r\n                                  onChange={(e) => {\r\n                                    setAutoSpare(e.target.checked ? 1 : 0);\r\n                                  }} />\r\n                                  \r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_critical_spare\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"itm_det_critical_spare\") ||\r\n                                \"Critical Spare\"}\r\n                            </Typography> \r\n                            <Checkbox className=\"customeCheckBox\"\r\n                                  checked={criticalSpare === 1}\r\n                                  onChange={(e) => {\r\n                                    setriticalSpare(e.target.checked ? 1 : 0);\r\n                                  }} />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_hzd_mtl\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"itm_det_hzd_mtl\") ||\r\n                                \"Hazardous Material\"}\r\n                              \r\n                            </Typography>\r\n                            <Checkbox className=\"customeCheckBox\"\r\n                                  checked={HazardousMaterial === 1}\r\n                                  onChange={(e) => {\r\n                                    setHazardousMaterial(e.target.checked ? 1 : 0);\r\n                                  }} />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_abc_class\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"itm_det_abc_class\") ||\r\n                                \"ABC Class\"}\r\n                            </Typography>\r\n                        \r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              value={abcClass}\r\n                              onChange={(e) => {\r\n                                setAbcClass(e.target.value.toUpperCase().slice(0, 1));\r\n                              }}\r\n                              className={\r\n                                errorField === \"ast_mst_safety_rqmts\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"TxtAra\"\r\n                              }\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              inputProps={{ maxLength: 1, style: { textTransform: 'uppercase' } }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_order_pt\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabel(\"itm_det_order_pt\") ||\r\n                                \"Order Point\"}\r\n                            </Typography>\r\n                            \r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              value={orderPoint}\r\n                              onChange={(e) => {\r\n                                setOrderPoint(e.target.value);\r\n                              }}\r\n                              fullWidth\r\n                              placeholder=\".0000\"\r\n                              \r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_maximum\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_maximum\") ||\r\n                                \"Maximum\"}\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              value={maximumInvtr}\r\n                              onChange={(e) => {\r\n                                setMaximumInvtr(e.target.value);\r\n                              }}\r\n                              className={\r\n                                errorField === \"ast_det_mfg_cd\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                              fullWidth\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_lastactdate\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_lastactdate\") ||\r\n                                \"Last Activity Date\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_lastcntdate\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_lastcntdate\") ||\r\n                                \"Last Count Date\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_next_cnt_date\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_next_cnt_date\") ||\r\n                                \"Next Count Date\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              disabled\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Box sx={{ marginTop: \"8px\",mb:1 }}>\r\n                        <div\r\n                          style={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"auto 1fr\",\r\n                            alignItems: \"center\",\r\n                            borderBottom: \"1px solid #cfcfcf\",\r\n                            paddingBottom: \"10px\",\r\n                            fontWeight: \"500\",\r\n                          }}\r\n                        >\r\n                          <Iconify\r\n                          className=\"IconCss\"\r\n                              icon=\"mdi:folder-information-outline\"\r\n                              style={{ marginRight: \"4px\" }}\r\n                            />\r\n                           UDF\r\n                        </div>\r\n                      </Box>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                          <Box\r\n                            rowGap={0}\r\n                            columnGap={0}\r\n                            display=\"grid\"\r\n                            marginBottom={1}\r\n                          >\r\n                            <Stack spacing={1}>\r\n                              <Typography\r\n                                variant=\"subtitle2\"\r\n                                className={findCustomizerequiredLabel(\r\n                                  \"itm_det_note1\"\r\n                                )}\r\n                              >\r\n                                {findCustomizeLabelDet(\"itm_det_note1\") ||\r\n                                  \"UDF Note1\"}\r\n                              </Typography>\r\n                            \r\n                              <TextareaAutosize\r\n                                aria-label=\"empty textarea\"\r\n                                placeholder=\"Note...\"\r\n                                minRows={6.5}\r\n                                value={udfNote1}\r\n                                onChange={(e) => {\r\n                                 // setErrorField(null);\r\n                                  setUdfNote1(e.target.value);\r\n                                }}\r\n                                className={\r\n                                  errorField === \"ast_mst_asset_longdesc\"\r\n                                    ? \"erroBorderadd\"\r\n                                    : \"TxtAra\"\r\n                                }\r\n                              />\r\n                            </Stack>\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar1\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar1\") ||\r\n                                \"Asset No\"}\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={assetNoSet}\r\n                              onChange={(e) => {\r\n                                setAssetNoSet(e.target.value);\r\n                               // setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"ast_det_varchar1\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar2\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar2\") ||\r\n                                \"Weight\"}\r\n                            </Typography>\r\n                           \r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={weightSet}\r\n                              onChange={(e) => {\r\n                                setWeightSet(e.target.value);\r\n                                //setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"ast_det_varchar2\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar3\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar3\") ||\r\n                                \"UDF Text3\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_3}\r\n                              onChange={(e) => {\r\n                                setUDFText_3(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"ast_det_varchar3\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar4\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar4\") ||\r\n                                \"UDF Text4\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_4}\r\n                              onChange={(e) => {\r\n                                setUDFText_4(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_varchar4\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar5\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar5\") ||\r\n                                \"UDF Text5\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_5}\r\n                              onChange={(e) => {\r\n                                setUDFText_5(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_varchar5\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar6\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar6\") ||\r\n                                \"UDF Text6\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_6}\r\n                              onChange={(e) => {\r\n                                setUDFText_6(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_varchar6\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar7\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar7\") ||\r\n                                \"UDF Text7\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_7}\r\n                              onChange={(e) => {\r\n                                setUDFText_7(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_varchar7\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar8\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar8\") ||\r\n                                \"UDF Text8\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_8}\r\n                              onChange={(e) => {\r\n                                setUDFText_8(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_varchar8\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar9\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar9\") ||\r\n                                \"Manufacturer\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_9}\r\n                              onChange={(e) => {\r\n                                setUDFText_9(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_varchar9\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_varchar10\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_varchar10\") ||\r\n                                \"Made In\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFText_10}\r\n                              onChange={(e) => {\r\n                                setUDFText_10(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"ast_det_varchar23\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_numeric1\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_numeric1\") ||\r\n                                \"Billable Cost\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_1}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_1(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"ast_det_varchar24\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_numeric2\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_numeric2\") ||\r\n                                \"UDF Numeric2\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_2}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_2(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_numeric2\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_numeric3\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_numeric3\") ||\r\n                                \"UDF Numeric3\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_3}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_3(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_numeric3\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_numeric4\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_numeric4\") ||\r\n                                \"UDF Numeric4\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_4}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_4(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_numeric4\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_numeric5\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_numeric5\") ||\r\n                                \"UDF Numeric5\"}\r\n                            </Typography>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\".0000\"\r\n                              fullWidth\r\n                              defaultValue={UDFNumber_5}\r\n                              onChange={(e) => {\r\n                                setUDFNumber_5(e.target.value);\r\n                                setErrorField(null);\r\n                              }}\r\n                              className={\r\n                                errorField === \"itm_det_numeric5\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Stack>\r\n\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_datetime1\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_datetime1\") ||\r\n                                \"UDF Date1\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_1}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"itm_det_datetime1\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_1(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_datetime2\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_datetime2\") ||\r\n                                \"UDF Date2\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_2}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"itm_det_datetime2\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_2(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_datetime3\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_datetime3\") ||\r\n                                \"UDF Date3\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_3}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"itm_det_datetime3\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_3(newDate);\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_datetime4\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_datetime4\") ||\r\n                                \"UDF Date4\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_4}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"itm_det_datetime4\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_4(newDate);\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              className={findCustomizerequiredLabel(\r\n                                \"itm_det_datetime5\"\r\n                              )}\r\n                            >\r\n                              {findCustomizeLabelDet(\"itm_det_datetime5\") ||\r\n                                \"UDF Date5\"}\r\n                            </Typography>\r\n                            <DateTimePicker\r\n                              value={UDFDate_5}\r\n                              format=\"dd/MM/yyyy HH:mm\"\r\n                              className={\r\n                                errorField === \"itm_det_datetime5\"\r\n                                  ? \"erroBorderadd\"\r\n                                  : \"Extrasize\"\r\n                              }\r\n                              onChange={(newDate) => {\r\n                                setUDFDate_5(newDate); // Update your state with the new value\r\n                                setErrorField(null);\r\n                              }}\r\n                              slotProps={{\r\n                                textField: {\r\n                                  fullWidth: true,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Box sx={{ marginTop: \"8px\" }}>\r\n                        <div\r\n                          style={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"auto 1fr\",\r\n                            alignItems: \"center\",\r\n                            borderBottom: \"1px solid #cfcfcf\",\r\n                            paddingBottom: \"10px\",\r\n                            fontWeight: \"500\",\r\n                          }}\r\n                        >\r\n                          <Iconify\r\n                            className=\"IconCss\"\r\n                            icon=\"tdesign:calculation-1\"\r\n                            style={{ marginRight: \"4px\" }}\r\n                          />\r\n                          Reorder Calculation\r\n                        </div>\r\n                      </Box>\r\n                      <Grid container spacing={2} sx={{ mt: 1.5, mb: 2.5 }}>\r\n                        <TableContainer\r\n                          component={Paper}\r\n                          sx={{ border: 1, borderColor: \"grey.400\" }}\r\n                        >\r\n                          <Table\r\n                            sx={{ minWidth: 700, borderCollapse: \"collapse\" }}\r\n                            aria-label=\"spanning table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  align=\"left\"\r\n                                  colSpan={1}\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  Details\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"right\"\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  Price\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  Total On-Hand:\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"right\"\r\n                                  sx={{\r\n                                    borderBottom: \"1px solid #00000017\",\r\n                                    paddingRight: \"32px\",\r\n                                  }}\r\n                                >\r\n                                  1\r\n                                </TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  Reserved:\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"right\"\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  1 (-){\" \"}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  Shortage:\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"right\"\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  1 (-){\" \"}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  Quantity Available:\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"right\"\r\n                                  sx={{\r\n                                    borderBottom: \"1px solid #00000017\",\r\n                                    paddingRight: \"32px\",\r\n                                  }}\r\n                                >\r\n                                  0\r\n                                </TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  PR Outstanding:\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"right\"\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  0 (+){\" \"}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  PO Outstanding:\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"right\"\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  0 (+){\" \"}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  colSpan={1}\r\n                                  align=\"center\"\r\n                                  sx={{ borderBottom: \"1px solid #00000017\" }}\r\n                                >\r\n                                  Reorder SubTotal:\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"right\"\r\n                                  sx={{\r\n                                    borderBottom: \"1px solid #00000017\",\r\n                                    paddingRight: \"20px\",\r\n                                  }}\r\n                                >\r\n                                  20\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Grid>\r\n                    </Box>\r\n\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 1}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                        <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              //className=\"Requiredlabel\"\r\n                            >\r\n                              {findCustomizeLabelDet(\r\n                                \"itm_det_acct_type\"\r\n                              ) || \"Account Type\"}\r\n                            </Typography>\r\n                            <Autocomplete   \r\n                              options={accountType}\r\n                              value={selected_AccountType?.label ?? \"\"}\r\n                              onChange={(event, value) => {\r\n                                setSelected_AccountType(value);\r\n                               // setIsAssetTypeEmpty(false);\r\n                              }}\r\n                              disabled={RowID !== \"\" && RowID !== null && RowID !== undefined}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  size=\"small\"\r\n                                  placeholder=\"Select...\"\r\n                                  //  onClick={handleClickProjectID}\r\n                                  variant=\"outlined\"\r\n                                  fullWidth // Make it full-width\r\n                                  className={`Extrasize ${\r\n                                    isAssetTypeEmpty ? \"errorEmpty\" : \"\"\r\n                                  }`}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"itm_det_ytd_usage\") ||\r\n                                \"YTD Usage:\"}\r\n                            </Typography>\r\n                          \r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={ytdUsage}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"itm_det_ytd_turns\") ||\r\n                                \"YTD Turns:\"}\r\n                            </Typography>\r\n                            \r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={ytdTurns}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"itm_det_ytd_stockouts\") ||\r\n                                \"YTD Stockouts:\"}\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={ytdStockouts}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                        \r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                        <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\" className={findCustomizerequiredLabel(\"ast_det_cus_code\")}>\r\n                            {findCustomizeLabelDet(\"itm_det_tax_cd\") ||\r\n                              \"Tax Code\"}\r\n                            </Typography>\r\n                            <div ref={MasterLocationCodeRef}>\r\n                              <CustomTextField\r\n                                id=\"outlined-basic\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                className={`ExtrasizeDisable ${\r\n                                  isAssetNoEmpty ? \"errorEmpty\" : \"\"\r\n                                }`}\r\n                                \r\n                                fullWidth\r\n                                value={taxCode || \"\"}\r\n                                disabled\r\n                                placeholder=\"Select...\"\r\n                                rightIcons={[\r\n                                  <Iconify\r\n                                    icon=\"material-symbols:close\"\r\n                                    onClick={handleCancelTaxCode}\r\n                                  />,\r\n                                  <Iconify\r\n                                    icon=\"tabler:edit\"\r\n                                    onClick={handleEditClickTaxCode}\r\n                                  />,\r\n                                ]}\r\n                              />\r\n                            </div>\r\n                                </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"itm_det_lastyr_usage\") ||\r\n                                \"Last Year Usage:\"}\r\n                            </Typography>\r\n                        \r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={lastyrUsage}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"itm_det_lastyr_turns\") ||\r\n                                \"Last Year Turns:\"}\r\n                            </Typography>\r\n                       \r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={lastyrTurns}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                          <Stack spacing={1} sx={{ pb: 1.5 }}>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {findCustomizeLabelDet(\"itm_det_lastyr_stkouts\") ||\r\n                                \"Last Year Stockouts:\"}\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              name=\"name\"\r\n                              size=\"small\"\r\n                              disabled\r\n                              value={lastyrStkouts}\r\n                              className=\"ExtrasizeDisable\"\r\n                            />\r\n                          </Stack>\r\n                      \r\n                        </Grid>\r\n                        </Grid>\r\n                       <TableContainer component={Paper}>\r\n                          <Table sx={{ minWidth: 700,mt:2 }} aria-label=\"spanning table\">\r\n                            <TableHead>\r\n                              \r\n                              <TableRow>\r\n                                <TableCell>Costing Rule</TableCell>\r\n                                <TableCell align=\"center\">Item Cost (A)</TableCell>\r\n                                <TableCell align=\"center\">Total On Hand (B)</TableCell>\r\n                                <TableCell align=\"center\">Total Repair Location (C)</TableCell>\r\n                                <TableCell align=\"center\">Value A*(B-C)</TableCell>\r\n                              \r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowsddd.map((row) => (\r\n                                <TableRow key={row.id}>\r\n                                  <TableCell>\r\n                                    <Radio\r\n                                      checked={selectedRowd === row.id}\r\n                                      onChange={() => handleRadioChange(row.id,row.code)}\r\n                                      value={row.id}\r\n                                      name=\"costing-rule-radio\"\r\n                                      inputProps={{ 'aria-label': row.costingRule }}\r\n                                    />\r\n                                    {row.costingRule}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                     // defaultValue={row.itemCost}\r\n                                      value={inputValues[row.id]?.itemCost || row.itemCost}\r\n                                      onChange={(e) => handleInputChange(row.id, e.target.value)}\r\n                                      type=\"number\"\r\n                                      disabled={selectedRowd !== row.id}\r\n                                    />\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      defaultValue={row.totalOnHand}\r\n                                      type=\"number\"\r\n                                      disabled\r\n                                    />\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      defaultValue={row.totalRepairLocation}\r\n                                      type=\"number\"\r\n                                      disabled\r\n                                    />\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      defaultValue={row.value}\r\n                                      type=\"number\"\r\n                                      disabled\r\n                                    />\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                              {selectedRowData && (\r\n                                <>\r\n                                  <TableRow>\r\n                                  <TableCell rowSpan={3} />\r\n                                    <TableCell colSpan={3}>Surcharge</TableCell>\r\n                                    <TableCell align=\"right\">Surcharge Value</TableCell>\r\n                                  </TableRow>\r\n                                  <TableRow>\r\n                                    <TableCell colSpan={3}>0%</TableCell>\r\n                                    <TableCell align=\"right\">0.00</TableCell>\r\n                                  </TableRow>\r\n                                  <TableRow>\r\n                                    <TableCell colSpan={3}>Item Cost:</TableCell>\r\n                                    <TableCell align=\"right\">{ccyFormat(itemCost)}</TableCell>\r\n                                  </TableRow>\r\n                                  <TableRow>\r\n                                  <TableCell rowSpan={3} />\r\n                                    <TableCell colSpan={3}>Issue Price:</TableCell>\r\n                                    <TableCell align=\"right\">{ccyFormat(issuePrice)}</TableCell>\r\n                                  </TableRow>\r\n                                </>\r\n                              )}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 2}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {RowID && (\r\n                        <AssetUsage\r\n                          data={{\r\n                            RowID: RowID,\r\n                          }}\r\n                          onDataFromSecondComponent={\r\n                            handleDataFromSecondComponent\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 3}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {RowID && (\r\n                        <AssetSpecification\r\n                          data={{\r\n                            RowID: RowID,\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    <Box\r\n                      role=\"tabpanel\"\r\n                      hidden={Tabvalue !== 4}\r\n                      sx={{ marginTop: \"16px\" }}\r\n                    >\r\n                      {RowID && (\r\n                        <div>\r\n                          <div\r\n                            style={{\r\n                              paddingBottom: \"20px\",\r\n                              backgroundColor: \"white\",\r\n                            }}\r\n                          >\r\n                            <div\r\n                              className=\"template-demo\"\r\n                              style={{ display: \"flex\", alignItems: \"center\" }}\r\n                            >\r\n                              <div style={{ marginRight: \"0px\" }}>\r\n                                <Iconify\r\n                                  icon=\"codicon:references\"\r\n                                  style={{\r\n                                    marginRight: \"4px\",\r\n                                    width: \"30px\",\r\n                                    height: \"30px\",\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className=\"template-demo\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  flexDirection: \"column\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  style={{\r\n                                    marginRight: \"10px\",\r\n                                    fontWeight: \"bold\",\r\n                                  }}\r\n                                >\r\n                                  Reference\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"table-responsive\">\r\n                            <table className=\"table table-hover mt-2 col-sm-12 astFimg\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Image</th>\r\n                                  <th>File Name</th>\r\n                                  <th>Audit User</th>\r\n                                  <th>Audit Date</th>\r\n                                  <th>Action</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {RefImg !== \"\" &&\r\n                                  RefImg !== null &&\r\n                                  RefImg.map((item, index) => (\r\n                                    <tr\r\n                                      key={index}\r\n                                      className=\"tableRow_Attachment_hover\"\r\n                                    >\r\n                                      <td>\r\n                                        {item.file_name\r\n                                          .toLowerCase()\r\n                                          .endsWith(\".pdf\") ? (\r\n                                          <FontAwesomeIcon\r\n                                            icon={faFilePdf}\r\n                                            onClick={() =>\r\n                                              openPDFInNewTab(item.attachment)\r\n                                            }\r\n                                            style={{\r\n                                              width: \"50px\",\r\n                                              height: \"50px\",\r\n                                            }}\r\n                                            className=\"fntpdf\"\r\n                                          />\r\n                                        ) : (\r\n                                          <img\r\n                                            key={index}\r\n                                            src={item.attachment}\r\n                                            style={{\r\n                                              width: \"60px\",\r\n                                              height: \"60px\",\r\n                                            }}\r\n                                            onClick={() => handleShowdata(item)}\r\n                                          />\r\n                                        )}\r\n                                      </td>\r\n\r\n                                      <td>{item.file_name}</td>\r\n                                      <td>{item.audit_user}</td>\r\n                                      <td>\r\n                                        {new Date(\r\n                                          item.audit_date.date\r\n                                        ).toLocaleString(\"en-US\", {\r\n                                          year: \"numeric\",\r\n                                          month: \"2-digit\",\r\n                                          day: \"2-digit\",\r\n                                          hour: \"2-digit\",\r\n                                          minute: \"2-digit\",\r\n                                          second: \"2-digit\",\r\n                                          // Show milliseconds with 3 digits\r\n                                        })}\r\n                                      </td>\r\n                                      <td>\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          onClick={() =>\r\n                                            handleDeleteReferenceApi(item.RowID)\r\n                                          }\r\n                                          className=\"btn multiplsimg\"\r\n                                        >\r\n                                          <Iconify icon=\"carbon:close-outline\" />\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  ))}\r\n\r\n                                {selectedImages.map((image, index) =>\r\n                                  image && index === undefined ? (\r\n                                    <tr>\r\n                                      <td>\r\n                                        <img\r\n                                          src={RefImg[\"0\"].attachment}\r\n                                          style={{\r\n                                            width: \"60px\",\r\n                                            height: \"60px\",\r\n                                          }}\r\n                                        />\r\n                                      </td>\r\n                                    </tr>\r\n                                  ) : image.name\r\n                                      .toLowerCase()\r\n                                      .endsWith(\".pdf\") ? (\r\n                                    <tr key={index}>\r\n                                      <td>\r\n                                        <FontAwesomeIcon\r\n                                          icon={faFilePdf}\r\n                                          style={{\r\n                                            width: \"50px\",\r\n                                            height: \"50px\",\r\n                                          }}\r\n                                        />\r\n                                      </td>\r\n                                      <td>{image.name}</td>\r\n                                      <td>Admin</td>\r\n                                      <td>\r\n                                        {new Date().toLocaleString() + \"\"}\r\n                                      </td>\r\n                                      <td>\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn\"\r\n                                          onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            handleDeleteImg(index);\r\n                                          }}\r\n                                        >\r\n                                          <Iconify icon=\"carbon:close-outline\" />\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  ) : (\r\n                                    <tr key={index}>\r\n                                      <td>\r\n                                        <img\r\n                                          key={index}\r\n                                          src={URL.createObjectURL(image)}\r\n                                          alt=\"Uploaded image\"\r\n                                          onClick={(e) =>\r\n                                            handleShowdd(e, image)\r\n                                          }\r\n                                        />\r\n                                      </td>\r\n                                      <td>{image.name}</td>\r\n                                      <td>Admin</td>\r\n                                      <td>\r\n                                        {new Date().toLocaleString() + \"\"}\r\n                                      </td>\r\n\r\n                                      <td>\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className=\"btn\"\r\n                                          onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            handleDeleteImg(index);\r\n                                          }}\r\n                                        >\r\n                                          <Iconify icon=\"carbon:close-outline\" />\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  )\r\n                                )}\r\n                              </tbody>\r\n\r\n                              {isMyStateEmpty ? (\r\n                                <BootstrapDialog\r\n                                  onClose={handleClosedd}\r\n                                  aria-labelledby=\"customized-dialog-title\"\r\n                                  open={showdd}\r\n                                >\r\n                                  <IconButton\r\n                                    aria-label=\"close\"\r\n                                    onClick={handleClosedd}\r\n                                    sx={{\r\n                                      position: \"absolute\",\r\n                                      right: 8,\r\n                                      top: 8,\r\n                                      color: (theme) => theme.palette.grey[500],\r\n                                    }}\r\n                                  >\r\n                                    <Iconify\r\n                                      icon=\"carbon:close-outline\"\r\n                                      style={{ marginRight: \"4px\" }}\r\n                                    />\r\n                                  </IconButton>\r\n                                  <DialogContent dividers>\r\n                                    <Typography gutterBottom>\r\n                                      <img\r\n                                        src={selectedImage}\r\n                                        style={{\r\n                                          width: \"100%\",\r\n                                          height: \"auto\",\r\n                                        }}\r\n                                      />\r\n                                    </Typography>\r\n                                  </DialogContent>\r\n                                </BootstrapDialog>\r\n                              ) : (\r\n                                <BootstrapDialog\r\n                                  onClose={handleClosedd}\r\n                                  aria-labelledby=\"customized-dialog-title\"\r\n                                  open={showdd}\r\n                                >\r\n                                  <IconButton\r\n                                    aria-label=\"close\"\r\n                                    onClick={handleClosedd}\r\n                                    sx={{\r\n                                      position: \"absolute\",\r\n                                      right: 8,\r\n                                      top: 8,\r\n                                      color: (theme) => theme.palette.grey[500],\r\n                                    }}\r\n                                  >\r\n                                    <Iconify icon=\"carbon:close-outline\" />\r\n                                  </IconButton>\r\n                                  <DialogContent dividers>\r\n                                    <Typography gutterBottom>\r\n                                      <img\r\n                                        style={{\r\n                                          height: \"100%\",\r\n                                          width: \"100%\",\r\n                                        }}\r\n                                        src={URL.createObjectURL(handalImg)}\r\n                                        alt=\"Uploaded image\"\r\n                                      />\r\n                                    </Typography>\r\n                                  </DialogContent>\r\n                                </BootstrapDialog>\r\n                              )}\r\n                            </table>\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              marginTop: \"20px\",\r\n                            }}\r\n                          >\r\n                            <form onSubmit={handleSubmit} className=\"row\">\r\n                              <div className=\"col-sm-10 text-center\">\r\n                                <input\r\n                                  type=\"file\"\r\n                                  ref={fileInputRef}\r\n                                  style={{ display: \"none\" }}\r\n                                  multiple\r\n                                  onChange={handleImageChange}\r\n                                  className=\"form-control form-control-lg\"\r\n                                  id=\"formFileMultiple\"\r\n                                />\r\n                                <Button\r\n                                  onClick={handleButtonClick}\r\n                                  type=\"submit\"\r\n                                  // className=\"btn Refbtl\"\r\n                                  className=\"tabAddButton\"\r\n                                >\r\n                                  + Add Attachment\r\n                                </Button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Box>\r\n                    <Grid\r\n                      container\r\n                      xs={12}\r\n                      md={12}\r\n                      justifyContent=\"flex-end\"\r\n                      style={{ paddingRight: \"20px\", marginTop: \"20px\" }}\r\n                    >\r\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <Button\r\n                          component={RouterLink}\r\n                          // href={paths.dashboard.work.neworder}\r\n                          variant=\"contained\"\r\n                          className=\"SaveButton\"\r\n                          startIcon={<Iconify icon=\"mingcute:save-fill\" />}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            marginRight: \"10px\",\r\n                          }}\r\n                          onClick={onClickChange}\r\n                          disabled={\r\n                            (completeRowID !== undefined &&\r\n                              completeRowID !== \"\" &&\r\n                              completeRowID !== null) ||\r\n                            (selected_Status &&\r\n                              selected_Status.label === \"CLO : CLOSED\")\r\n                          }\r\n                        >\r\n                          {Button_save === \"Duplicate\" ? \"Save\" : Button_save}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"soft\"\r\n                          color=\"error\"\r\n                          className=\"CloseButton\"\r\n                          onClick={onClickCancel}\r\n                          startIcon={<Iconify icon=\"jam:close\" />}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                      </div>\r\n                    </Grid>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n              {/* Asset Parent Flag model popup */}\r\n              <BootstrapDialog\r\n                onClose={handleCloseModal}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={modalOpenMasterLocation}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Parent ID\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleCloseModal}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div className=\"TblSelect\">\r\n                    <AssetParentIdList\r\n                      onRowClick={handleRowData2}\r\n                      onChangePage={handleRowDataPagechg}\r\n                      onSearchChange={handelRowSearch}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span class=\"TotlFont\">\r\n                      {TotalSearch\r\n                        ? // Content to render if condition1 is true\r\n                          TotalSearch\r\n                        : viewedTotlRows\r\n                        ? // Content to render if condition2 is true\r\n                          TotalAssetNo - viewedTotlRows\r\n                        : TotalAssetNo\r\n                        ? // Content to render if condition3 is true\r\n                          TotalAssetNo\r\n                        : // Content to render if none of the conditions are true\r\n                          0}\r\n                      &nbsp;Asset\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"mlauto\">\r\n                    <Button variant=\"primary\" onClick={handleCloseModal}>\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </BootstrapDialog>\r\n              {/* Asset model popup end*/}\r\n\r\n              {/* Inventory Master Location model popup */}\r\n              <BootstrapDialog\r\n                onClose={handleCloseModalMasterLocation}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={modalOpenInventoryMasteLocation}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                 Master Location\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleCloseModalMasterLocation}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div className=\"TblSelect\">\r\n                    <InventoryMasterLocation\r\n                      onRowClick={handleRowData3}\r\n                      onChangePage={handleRowDataPagechg}\r\n                      onSearchChange={handelRowSearch}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span class=\"TotlFont\">\r\n                      {TotalSearch\r\n                        ? // Content to render if condition1 is true\r\n                          TotalSearch\r\n                        : viewedTotlRows\r\n                        ? // Content to render if condition2 is true\r\n                          TotalAssetNo - viewedTotlRows\r\n                        : TotalAssetNo\r\n                        ? // Content to render if condition3 is true\r\n                          TotalAssetNo\r\n                        : // Content to render if none of the conditions are true\r\n                          0}\r\n                      &nbsp;Total\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"mlauto\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={handleCloseModalMasterLocation}\r\n                    >\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </BootstrapDialog>\r\n              {/* Inventory Master Tax Code model popup end*/}\r\n\r\n                  {/* Inventory Master Location model popup */}\r\n              <BootstrapDialog\r\n                onClose={handleCloseModalMasterLocation}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={modalOpenInventoryTaxCode}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                 Tax Code\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={handleCloseModalMasterTaxCode}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div className=\"TblSelect\">\r\n                    <InventoryMasterTaxCode\r\n                      onRowClick={handleRowDataTaxCode}\r\n                      onChangePage={handleRowDataPagechgTaxCode}\r\n                      onSearchChange={handelRowSearchTaxCode}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span class=\"TotlFont\">\r\n                      {TotalSearch\r\n                        ? // Content to render if condition1 is true\r\n                          TotalSearch\r\n                        : viewedTotlRows\r\n                        ? // Content to render if condition2 is true\r\n                          TotalAssetNo - viewedTotlRows\r\n                        : TotalAssetNo\r\n                        ? // Content to render if condition3 is true\r\n                          TotalAssetNo\r\n                        : // Content to render if none of the conditions are true\r\n                          0}\r\n                      &nbsp;Total\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"mlauto\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={handleCloseModalMasterTaxCode}\r\n                    >\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                </DialogActions>\r\n              </BootstrapDialog>\r\n              {/* Inventory Master Tax Code model popup end*/}\r\n\r\n              {/******************** Status Details ********************/}\r\n              <div>\r\n                <BootstrapDialog\r\n                  onClose={StatushandleClose}\r\n                  aria-labelledby=\"customized-dialog-title\"\r\n                  open={StatusShow}\r\n                  maxWidth=\"lg\"\r\n                  fullWidth\r\n                >\r\n                  <DialogTitle\r\n                    sx={{ m: 0, p: 2 }}\r\n                    id=\"customized-dialog-title\"\r\n                    className=\"dailogTitWork\"\r\n                  >\r\n                    Asset Status Audit\r\n                  </DialogTitle>\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={StatushandleClose}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      right: 8,\r\n                      top: 8,\r\n                      color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                  >\r\n                    <Iconify icon=\"material-symbols:close\" />\r\n                  </IconButton>\r\n                  <DialogContent dividers>\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        maxWidth: \"600px\",\r\n                        marginLeft: \"110px\",\r\n                        marginTop: \"-30px\",\r\n                      }}\r\n                    >\r\n                      <StepContainer>\r\n                        {steps.map(\r\n                          ({\r\n                            step,\r\n                            label,\r\n                            label1,\r\n                            label2,\r\n                            label3,\r\n                            label4,\r\n                            label5,\r\n                          }) => (\r\n                            <div\r\n                              key={step}\r\n                              style={{ position: \"relative\", zIndex: 1 }}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  fontSize: \"11px\",\r\n                                  color: \"grey\",\r\n                                  position: \"absolute\",\r\n                                  left: \"-81px\",\r\n                                  top: \"45px\",\r\n                                  width: \"80px\",\r\n                                  height: \"20px\",\r\n                                  borderRadius: \"5%\",\r\n                                  textAlign: \"right\",\r\n                                }}\r\n                              >\r\n                                {label5}\r\n                              </div>\r\n                              <div\r\n                                step={step}\r\n                                style={{\r\n                                  width: \"30px\",\r\n                                  height: \"30px\",\r\n                                  borderRadius: \"50%\",\r\n                                  backgroundColor: \"#4694d1\",\r\n                                  border: `3px solid ${\r\n                                    step === \"completed\" ? \"#0080FF\" : \"#F3E7F3\"\r\n                                  }`,\r\n                                  transition: \"0.4s ease\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  style={{ fontSize: \"15px\", color: \"#f3e7f3\" }}\r\n                                >\r\n                                  {step}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"15px\", color: \"#4a154b\" }}\r\n                                >\r\n                                  {label} ({label1})\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"11px\", color: \"grey\" }}\r\n                                >\r\n                                  Status Update By: {label2} ({label3})\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div\r\n                                style={{\r\n                                  position: \"relative\",\r\n                                  bottom: \"30px\",\r\n                                  textAlign: \"left\",\r\n                                  left: \"50px\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  key={step}\r\n                                  style={{ fontSize: \"11px\", color: \"grey\" }}\r\n                                >\r\n                                  On Start Date: {label4}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                      </StepContainer>\r\n                    </div>\r\n                  </DialogContent>\r\n                </BootstrapDialog>\r\n              </div>\r\n              {/******************** Comments add Details ********************/}\r\n\r\n              {/* single Upload Img Show */}\r\n              <BootstrapDialog\r\n                onClose={UploadImghandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={uploadImgShow}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n              >\r\n                <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  Selected Image\r\n                </DialogTitle>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={UploadImghandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={imagePreview}\r\n                      alt=\"upload_img\"\r\n                      style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                    />\r\n                  </div>\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n              {/******************** PM Setup ********************/}\r\n              <BootstrapDialog\r\n                onClose={PMSetuphandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={PMSetupShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                {/* <DialogTitle\r\n                  sx={{ m: 0, p: 2 }}\r\n                  id=\"customized-dialog-title\"\r\n                  className=\"dailogTitWork\"\r\n                >\r\n                  PM Setup\r\n                </DialogTitle> */}\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={PMSetuphandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <PmSetup\r\n                    data={{\r\n                      RowID: RowID,\r\n                      WorkOrderNo: WorkOrderNo,\r\n                      Asset_No: AssetNo,\r\n                    }}\r\n                  />\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n              {/******************** WO History ********************/}\r\n              <BootstrapDialog\r\n                onClose={WOHistoryhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={WOHistoryShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={WOHistoryhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <WoHistory\r\n                    data={{\r\n                      RowID: RowID,\r\n                      WorkOrderNo: WorkOrderNo,\r\n                      Asset_No: AssetNo,\r\n                    }}\r\n                  />\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n              {/******************** Relocation History ********************/}\r\n              <BootstrapDialog\r\n                onClose={RelocationHistoryhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={RelocationHistoryShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={RelocationHistoryhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n\r\n                <DialogContent dividers>\r\n                  <RelocationHistory\r\n                    data={{\r\n                      RowID: RowID,\r\n                      WorkOrderNo: WorkOrderNo,\r\n                      Asset_No: AssetNo,\r\n                    }}\r\n                  />\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n\r\n              {/******************** Check List ********************/}\r\n              <BootstrapDialog\r\n                onClose={CheckListhandleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={CheckListShow}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n              >\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={CheckListhandleClose}\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"material-symbols:close\" />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                  <CheckList\r\n                    data={{\r\n                      RowID: RowID,\r\n                      WorkOrderNo: WorkOrderNo,\r\n                      Asset_No: AssetNo,\r\n                    }}\r\n                  />\r\n                </DialogContent>\r\n              </BootstrapDialog>\r\n              <div className=\"AssetFromSnackbar\">\r\n                <Snackbar\r\n                  open={snackbarOpen}\r\n                  autoHideDuration={null}\r\n                  onClose={handleCloseSnackbar}\r\n                  anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                  // sx={{\r\n                  //   boxShadow: '0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05)'\r\n                  // }}\r\n                  sx={{\r\n                    boxShadow:\r\n                      \"0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05)\",\r\n                    \"& .MuiAlert-filledError\": {\r\n                      backgroundColor: \"#fff\",\r\n                      color: \"#000\",\r\n                      fontWeight: \"600\",\r\n                      position: \"relative\",\r\n                      animation: snackbarOpen\r\n                        ? \"bounce-in 0.5s ease-out\"\r\n                        : \"none\", // Apply bouncing animation conditionally\r\n                    },\r\n                  }}\r\n                >\r\n                  <Alert\r\n                    onClose={handleCloseSnackbar}\r\n                    severity=\"error\"\r\n                    variant=\"filled\"\r\n                    // sx={{ backgroundColor: '#fff', color: '#000', fontWeight: '600', position: 'relative' }}\r\n                    sx={{\r\n                      \"@keyframes bounce-in\": {\r\n                        \"0%\": { transform: \"scale(0.9)\" },\r\n                        \"50%\": { transform: \"scale(1.05)\" },\r\n                        \"100%\": { transform: \"scale(1)\" },\r\n                      },\r\n                    }}\r\n                  >\r\n                    {snackbarMessage}\r\n\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={snackbarOpen ? 100 - progress : 0}\r\n                      style={{\r\n                        width: \"99%\",\r\n                        position: \"absolute\",\r\n                        bottom: \"0\",\r\n                        marginLeft: \"-50px\",\r\n                      }}\r\n                      sx={{\r\n                        \"& .MuiLinearProgress-bar\": {\r\n                          backgroundColor: \"green\", // Change the color here\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Alert>\r\n                </Snackbar>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Container>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nInventoryForm.propTypes = {\r\n  currentUser: PropTypes.object,\r\n};\r\n"],"names":["_ref","onRowClick","onChangePage","onSearchChange","site_ID","localStorage","getItem","data","setData","useState","selectedRowKeys","setSelectedRowKeys","viewedRows","setViewedRows","useEffect","Swal","title","allowOutsideClick","httpCommon","get","then","response","MasterLocation","length","catch","error","console","log","columns","field","render","rowData","renderIcon","width","loc_mst_stk_loc","_jsxs","children","_jsx","Iconify","icon","style","marginRight","marginTop","float","fontSize","color","_Fragment","class","MaterialTable","options","search","paging","pageSize","pageSizeOptions","overflowY","paginationPosition","toolbarButtonAlignment","paginationType","rowStyle","backgroundColor","handleRowClick","event","page","viewedRowsCount","searchText","filteredData","filter","item","searchTextLower","toLowerCase","includes","loc_mst_desc","loc_mst_mst_loc_cd","loc_mst_area_loc_cd","loc_mst_bin_id","handleSearch","TaxCode","cellStyle","headerStyle","tax_mst_tax_cd","tax_mst_desc","tax_mst_tax_rate","withReactContent","BootstrapDialog","styled","Dialog","theme","padding","spacing","StepContainer","_templateObject","_taggedTemplateLiteral","_ref2","InventoryForm","_ref3","_inputValues$selected","_inputValues$selected2","_selected_partDeacSta","_selected_issueUom$la","_selected_recivedUom$","_selected_storageType","_selected_AccountType","currentUser","onPageChange","location","useLocation","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","progress","setProgress","state","RowID","Ast_no","DuplicatRowid","DupRowID","DupAst_no","currentPage","selectedOption","completeRowID","closeRowID","loading","setLoading","itmMstLabel","setItmMstLabel","itmdetLabel","setItmdetLabel","navigate","useNavigate","fileInputRef","useRef","settings","useSettingsContext","selectedImages","setSelectedImages","selectedImages2","setSelectedImages2","selectedPdfFiles","setSelectedPdfFiles","RefImg","setRefImg","selectedImage","setSelectedImage","getDbImg","setDbImg","image","setImage","preview","raw","removedRefItems","setRemovedRefItems","disabledBtn","setDisabledBtn","imageSelect","setImageSelect","name","path","Tabvalue","setTabValue","showdd","setShowdd","handalImg","sethandalImg","handleClosedd","showdd2","setShowdd2","handleClosedd2","Asset_No","setAsset_No","TotalAssetNo","setTotalAssetNo","TotalSearch","setTotalSearch","viewedTotlRows","setViewedTotlRows","AssetNo","setAssetNo","Status","setStatus","selected_Status","setSelected_Status","Asset_CriFactor","setAsset_CriFactor","selected_CriFactor","setselected_CriFactor","Area_ID","setArea_ID","Asset_Type","setAsset_Type","selected_AssetType","setselectedAssetType","Asset_Code","setAsset_Code","selected_AssetCode","setselectedAssetCode","Asset_Group_Code","setAsset_Group_Code","selected_AssetGroupCode","setselectedAssetGroupCode","Charge_Cost_Center","setCharge_Cost_Center","selected_Charge_Cost_Center","setSelected_Charge_Cost_Center","Work_Area","setWork_Area","selected_Work_Area","setSelected_Work_Area","Asset_Location","setAsset_Location","selected_Asset_Location","setSelected_Asset_Location","Asset_Level","setAsset_Level","selected_Asset_Level","setSelected_Asset_Level","Work_Group","setWork_Group","selected_Work_Group","setSelected_Work_Group","Permanent_ID","setPermanent_ID","SafetyRequirement","setSafetyRequirement","BarcodeCount","setBarcodeCount","ManufactureCode","setManufactureCode","AssetCost","setAssetCost","ResidualValue","setResidualValue","Permanent_IDFlag","setPermanentIDFlag","CustomerCode","setCustomerCode","selected_Customer_Code","setSelected_Customer_Code","Contract_Account","setContract_Account","selected_Contract_Account","setSelected_Contract_Account","PurchaseDate","setPurchaseDate","Date","Select_PurchaseDate","setSelectPurchaseDate","WarrantyDate","setWarrantyDate","Select_WarrantyDate","setSelectWarrantyDate","Labor_Account","setLabor_Account","selected_Labor_Account","setSelected_Labor_Account","ExpectedLifeYear","setExpectedLifeYear","Material_Account","setMaterial_Account","selected_Material_Account","setSelected_Material_Account","DepreciationMethod","setDepreciationMethod","label","value","selected_Depreciation_Method","setSelectedDepreciationMethod","UDFText_1","setUDFText_1","UDFText_2","setUDFText_2","UDFText_11","setUDFText_11","UDFText_12","setUDFText_12","UDFText_13","setUDFText_13","UDFText_14","setUDFText_14","UDFText_15","setUDFText_15","UDFText_16","setUDFText_16","UDFText_17","setUDFText_17","UDFText_18","setUDFText_18","UDFText_19","setUDFText_19","UDFText_20","setUDFText_20","UDFText_21","setUDFText_21","UDFText_22","setUDFText_22","UDFText_23","setUDFText_23","UDFText_24","setUDFText_24","UDFText_25","setUDFText_25","UDFText_26","setUDFText_26","UDFText_27","setUDFText_27","UDFText_28","setUDFText_28","UDFText_29","setUDFText_29","UDFText_30","setUDFText_30","UDFNumber_6","setUDFNumber_6","UDFNumber_7","setUDFNumber_7","UDFNumber_8","setUDFNumber_8","UDFNumber_9","setUDFNumber_9","UDFNumber_10","setUDFNumber_10","UDFNumber_11","setUDFNumber_11","UDFNumber_12","setUDFNumber_12","UDFNumber_13","setUDFNumber_13","UDFNumber_14","setUDFNumber_14","UDFNumber_15","setUDFNumber_15","UDFDate_6","setUDFDate_6","UDFDate_7","setUDFDate_7","UDFDate_8","setUDFDate_8","UDFDate_9","setUDFDate_9","UDFDate_10","setUDFDate_10","UDFDate_11","setUDFDate_11","UDFDate_12","setUDFDate_12","UDFDate_13","setUDFDate_13","UDFDate_14","setUDFDate_14","UDFDate_15","setUDFDate_15","isAssetStatusEmpty","setIsAssetStatusEmpty","isAssetCriticalFactorEmpty","setIsAssetCriticalFactorEmpty","isAssetShortDescEmpty","setIsAssetShortDescEmpty","isAssetTypeEmpty","setIsAssetTypeEmpty","isAssetCodeEmpty","setIsAssetCodeEmpty","isAssetGroupCodeEmpty","setIsAssetGroupCodeEmpty","isAssetWorkAreaEmpty","setIsAssetWorkAreaEmpty","isAssetLocation","setIsAssetLocation","isAssetLeavelEmpty","setIsAssetLeavelEmpty","isAssetCostCenterEmpty","setIsAssetCostCenterEmpty","Plan_Priority","setPlan_Priority","selected_Project_ID","setSelected_Project_ID","selected_Plan_Priority","setSelected_Plan_Priority","Fault_Code","setFault_Code","selected_Fault_Code","setSelected_Fault_Code","Asset_Status","setAsset_Status","Supervisor_ID","setSupervisor_ID","Asset_Laboraccount","setAsset_Laboraccount","Cause_Code","setCause_Code","Action_Code","setAction_Code","Delay_Code","setDelay_Code","Work_Type","setWork_Type","Work_Class","setWork_Class","Original_Periority","setOriginal_Periority","Originator","setOriginator","WorkOrderNo","setWorkOrderNo","selected_Asset_Status","setSelected_Asset_Status","selected_Asset_Group_Code","setSelected_Asset_Group_Code","selected_Originator","setSelected_Originator","Phone","setPhone","OriginationDate","setOriginationDate","DueDate","setDueDate","CorrectiveAction","setCorrectiveAction","selected_Original_Periority","setSelected_Original_Periority","selected_Cause_Code","setSelected_Cause_Code","ScheduleDate","setScheduleDate","selected_Action_Code","setSelected_Action_Code","ExceptionDate","setExceptionDate","selected_Delay_Code","setSelected_Delay_Code","StatusChangeDate","setStatusChangeDate","Project_ID","setProject_ID","selected_Work_Type","setSelected_Work_Type","CompletionDate","setCompletionDate","CompletionDate2","setCompletionDate2","selected_Work_Class","setSelected_Work_Class","CloseDate","setCloseDate","CloseDate2","setCloseDate2","selected_Supervisor_ID","setSelected_Supervisor_ID","Planner","setPlanner","selected_Planner","setSelected_Planner","Approver","setApprover","selected_Approver","setSelected_Approver","Assign_To","setAssign_To","selected_Assign_To","setSelected_Assign_To","Temporary_Asset","setTemporary_Asset","CheckBox_Temporary_Asset","setCheckBox_Temporary_Asset","Approved","setApproved","CheckBox_Approved","setCheckBox_Approved","Safety","setSafety","CheckBox_Safety","setCheckBox_Safety","Credit_Cost_Center","setCredit_Cost_Center","selected_Credit_Cost_Center","setSelected_Credit_Cost_Center","Miscellaneous_Account","setMiscellaneous_Account","selected_Miscellaneous_Account","setSelected_Miscellaneous_Account","Columns","setColumns","Data","AutoNumring","setAutoNumring","UDFNote1","setUDFNote1","Button_save","setButton_save","getDbImgRowId","setDbImgRowId","SpecialOdrResult","setSpecialOdrResult","steps","setsteps","StatushandleClose","setStatusShow","StatusShow","message","setMessage","imageComment","setimageComment","AllCommnet","setAllComment","imagePreview","setImagePreview","selectedImageCommnt","setSelectedImageCommnt","uploadImgShow","setUploadImgShow","UploadImghandleClose","isFiledValueEmpty","setIsFiledValueEmpty","isChargeCostEmpty","setIsChargeCostEmpty","isFaultCodeEmpty","setIsFaultCodeEmpty","isOriginalPeriorityEmpty","setIsOriginalPeriorityEmpty","isWorkTypeEmpty","setIsWorkTypeEmpty","isWorkGroupEmpty","setIsWorkGroupEmpty","isAssetNoEmpty","setIsAssetNoEmpty","isCorrectiveValueEmpty","setIsCorrectiveValueEmpty","isCauseCodeValueEmpty","setIsCauseCodeValueEmpty","isActionCodeValueEmpty","setIsActionCodeValueEmpty","isOpenWork","setIsOpenWork","isOpenAsset","setIsOpenAsset","autocompleteRef","anchorEl","setAnchorEl","PMSetupShow","setPMSetupShow","PMSetuphandleClose","WOHistoryShow","setWOHistoryShow","WOHistoryhandleClose","RelocationHistoryShow","setRelocationHistoryShow","RelocationHistoryhandleClose","CheckListShow","setCheckListShow","CheckListhandleClose","InventoryMandatoryFiled","setInventoryMandatoryFiled","errorField","setErrorField","type","setType","selected_Type","setSelected_Type","stockNo","setStockNo","stockNoText","setStockNoText","commodity","setCommodity","selected_Commodity","setSelected_Commodity","stockGroup","setStockGroup","selected_stockGroup","setSelected_stockGroup","orderRule","setOrderRule","selected_orderRule","setSelected_orderRule","costCenter","setCostCenter","selected_costCenter","setSelected_costCenter","account","setAccount","selected_account","setSelected_account","Short_Description","setShort_Description","Long_Description","setLong_Description","continuousadd","setcontinuousAdd","partDeacStatus","setpartDeacStatus","selected_partDeacStatus","setSelected_partDeacStatus","issueUom","setIssueUom","selected_issueUom","setSelected_IssueUom","recivedUom","setRecivedUom","selected_recivedUom","setSelected_RecivedUom","conversionFactor","setConversionFactor","storageType","setStorageType","selected_storageType","setSelected_StorageType","Cube","setCube","shelfLife","setshelfLife","eOQ","setEOQ","countFrequency","setCountFrequency","averageLeadTime","setAverageLeadTime","autoSpare","setAutoSpare","criticalSpare","setriticalSpare","HazardousMaterial","setHazardousMaterial","abcClass","setAbcClass","orderPoint","setOrderPoint","maximumInvtr","setMaximumInvtr","MasterLocationCode","setMasterLocationCode","MasterLocationCodeRef","PartNo","setPartNo","udfNote1","setUdfNote1","assetNoSet","setAssetNoSet","weightSet","setWeightSet","UDFText_3","setUDFText_3","UDFText_4","setUDFText_4","UDFText_5","setUDFText_5","UDFText_6","setUDFText_6","UDFText_7","setUDFText_7","UDFText_8","setUDFText_8","UDFText_9","setUDFText_9","UDFText_10","setUDFText_10","UDFNumber_1","setUDFNumber_1","UDFNumber_2","setUDFNumber_2","UDFNumber_3","setUDFNumber_3","UDFNumber_4","setUDFNumber_4","UDFNumber_5","setUDFNumber_5","UDFDate_1","setUDFDate_1","UDFDate_2","setUDFDate_2","UDFDate_3","setUDFDate_3","UDFDate_4","setUDFDate_4","UDFDate_5","setUDFDate_5","accountType","setAccountType","selected_AccountType","setSelected_AccountType","taxCode","setTaxCode","ytdUsage","setYtdUsage","ytdTurns","setYtdTurns","ytdStockouts","setYtdStockouts","lastyrUsage","setLastyrUsage","lastyrTurns","setLastyrTurns","lastyrStkouts","setLastyrStkouts","ccyFormat","num","concat","toFixed","rowsddd","id","code","costingRule","itemCost","totalOnHand","totalRepairLocation","selectedRowd","setSelectedRowd","costingValue","setcostingValue","inputValues","setInputValues","getissuePrice","setissuePrice","selectedRowData","find","row","parseFloat","issuePrice","isTypeEmpty","setIsTypeEmpty","isCommodityCodeEmpty","setIsCommodityCodeEmpty","isStockNo","setIsStockNo","isMasterLocationEmpty","setIsMasterLocationEmpty","isOrderRuleEmpty","setIsOrderRuleEmpty","isCostCenterEmpty","setIsCostCenterEmpty","isAccountEmpty","setIsAccountEmpty","isDescEmpty","setIsDescEmpty","isPartDeacEmpty","setIsPartDeacEmpty","isIssueUomEmpty","setIsIssueUomEmpty","isReciveUomEmpty","setIsReciveUomEmpty","async","get_inventory_master_form_data","fetchStatusData","getInventoryFromLebel","getInventoryMandatoryfiled","fetchData","status","itm_mst","itm_det","MandatoryField","json","site_cd","RowId","undefined","post","JSON","stringify","itm_mst_stockno","itm_det_issue_price","itm_det_abc_class","itm_mst_desc","itm_mst_ext_desc","itm_mst_type","itm_mst_mstr_locn","itm_mst_order_rule","odr_mst_desc","itm_mst_costcenter","cost_center_desc","itm_mst_account","account_desc","labelCommodity","itm_mst_com_code","com_mst_desc","labelstockGroup","itm_mst_itm_grp","itm_group_desc","itm_det_part_deac_status","part_deac_desc","itm_det_issue_uom","issue_uom_desc","itm_det_rcv_uom","labelStorageType","itm_det_storage_type","storage_desc","itm_mst_partno","itm_det_cube","itm_det_shelf_life","itm_det_auto_spare","itm_det_critical_spare","itm_det_hzd_mtl","itm_det_order_pt","itm_det_maximum","itm_det_note1","itm_det_varchar1","itm_det_varchar2","itm_det_varchar3","itm_det_varchar4","itm_det_varchar5","itm_det_varchar6","itm_det_varchar7","itm_det_varchar8","itm_det_varchar9","itm_det_varchar10","itm_det_numeric1","itm_det_numeric2","itm_det_numeric3","itm_det_numeric4","itm_det_numeric5","itm_det_datetime1","apiDate","date","formattedDate","Moment","toDate","itm_det_datetime2","itm_det_datetime3","itm_det_datetime4","itm_det_datetime5","itm_det_acct_type","itm_det_tax_cd","itm_det_cr_code","matchedRow","prevValues","fetchImgData","text","Commodity","CommodityCode","map","com_mst_com_code","key","StockGroup","itm_grp_cd","itm_grp_desc","Order_Rule","OrderRule","odr_mst_odr","CostCenter","costcenter","descs","Accoun_t","Account","PartDeac","itm_sts_status","itm_sts_desc","IssueUom","IssueUoM","uom_mst_uom","uom_mst_desc","RecivedUom","Storage_type","StorageType","stt_mst_stt","stt_mst_desc","Storage_no","StockNO","ast_grp_grp_cd","ast_grp_desc","AllImgGet","file_name","attachment","AllRef","openSaveImg","handleDeleteImgApi","ImgIDdlt","updatedImages","handleImgChangeSingle","e","target","files","URL","createObjectURL","file","reader","FileReader","onloadend","result","readAsDataURL","handleClearImg","preventDefault","handleImgChangeSingle2","handleDeleteImg","s","index","isMyStateEmpty","Object","keys","constructor","findCustomizeLabel","columnName","matchingColumn","column_name","customize_label","findCustomizeLabelDet","findCustomizerequiredLabel","foundItem","cf_label_required","modalOpenMasterLocation","setOpenMasterLocation","modalOpenInventoryMasteLocation","setModalOpenInventoryMasteLocation","modalOpenInventoryTaxCode","setModalOpenInventoryTaxCode","handleCloseModal","handleCloseModalMasterLocation","handleCloseModalMasterTaxCode","handleRowDataPagechg","pageCount","handelRowSearch","searchTotl","CustomTextField","_ref4","rightIcons","props","TextField","InputProps","endAdornment","display","flexDirection","IconButton","onClick","New_Inventory","customClass","container","utcOffset","format","emp_mst_login_id","selectedStockNo","setselectedStockNo","selectedstockGroup","setselectedstockGroup","selectedorderRule","setselectedorderRule","selectedcostCenter","setselectedcostCenter","selectedaccount","setselectedaccount","selectedpartDeacStatus","setselectedpartDeacStatus","selectedissueUom","setselectedissueUom","selectedrecivedUom","setselectedrecivedUom","selectedstorageType","setselectedstorageType","split","date_of_1","trim","date_of_2","date_of_3","date_of_4","date_of_5","selectedAccountType","setselectedAccountType","itmmsttype","missingFields","json_AssetInsert","itm_mst_issue_price","itm_mst_ttl_oh","itm_mst_issue_uom","itm_mst_non_stk_flg","itm_mst_tool_flg","itm_mst_rec_supplier","itm_mst_serialize_flg","itm_mst_auto_serialize_flg","itm_mst_serialize_counter","itm_det_avg_cost","audit_user","itm_mst_create_by","ImgUpload","i","fieldValue","errorMessage","handleCloseSnackbar","onClickChange","get_date","setDbImgRowIdUpdate","json_AssetUpdate","itm_aud_originator","itm_mst_create_date","ImgGetDbImgRowId","Update_Inventory","timer","setInterval","oldProgress","clearInterval","diff","Math","random","min","onClickDuplicate","onClickCancel","Helmet","content","Container","maxWidth","themeStretch","className","position","top","zIndex","borderBottom","height","CustomBreadcrumbs","heading","links","action","alignItems","Button","component","RouterLink","variant","startIcon","disabled","some","_selected_Status$labe","_selected_Status$labe2","sx","mb","xs","md","Grid","Card","toggleDiv","marginLeft","htmlFor","src","alt","justifyContent","require","onChange","onClose","open","right","palette","grey","DialogContent","dividers","Box","rowGap","columnGap","gridTemplateColumns","sm","marginBottom","Stack","flexGrow","Typography","Autocomplete","slice","join","disableAnimation","renderInput","params","placeholder","size","ref","handleStatusChange","fullWidth","pb","handleCancelMasterLocation","handleEditClickMasterLocation","TextareaAutosize","minRows","direction","Checkbox","checked","pt","px","p","Tabs","handleChange","newValue","defaultValue","Tab","role","hidden","toUpperCase","inputProps","maxLength","textTransform","paddingBottom","fontWeight","DateTimePicker","newDate","slotProps","textField","mt","TableContainer","Paper","border","borderColor","Table","minWidth","borderCollapse","TableHead","TableRow","TableCell","align","colSpan","TableBody","paddingRight","handleCancelTaxCode","handleEditClickTaxCode","_inputValues$row$id","Radio","handleRadioChange","rowId","handleInputChange","rowSpan","AssetUsage","onDataFromSecondComponent","window","reload","AssetSpecification","endsWith","FontAwesomeIcon","faFilePdf","fileName","binaryData","atob","byteArray","Uint8Array","charCodeAt","blob","Blob","url","openPDFInNewTab","handleShowdata","audit_date","toLocaleString","year","month","day","hour","minute","second","RefImgDlt","removedItem","updatedRefImg","prevRemovedRefItems","handleDeleteReferenceApi","gutterBottom","onSubmit","formData","FormData","forEach","append","multiple","prevSelectedPdfFiles","selectedImagesArray","onload","imageData","base64","push","handleButtonClick","current","click","DialogTitle","m","AssetParentIdList","handleRowData2","dataLenth","dataa","dataSecond","DialogActions","InventoryMasterLocation","handleRowData3","InventoryMasterTaxCode","handleRowDataTaxCode","_ref5","step","label1","label2","label3","label4","label5","left","borderRadius","textAlign","transition","bottom","maxHeight","PmSetup","WoHistory","RelocationHistory","CheckList","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","boxShadow","animation","Alert","severity","transform","LinearProgress","ToastContainer"],"sourceRoot":""}